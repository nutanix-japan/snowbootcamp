<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2021-05-11 05:58:04">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<application_name>Nutanix Calm</application_name>
<application_scope>x_nuta2_nutanix_ca</application_scope>
<application_version>1.4.6</application_version>
<collisions/>
<commit_date/>
<deleted/>
<description>This release includes the following features.
1) CALM-21851 Nutanix Calm version 3.1.1 compatibility support Calm Plug-in version 1.4.2 now supports Nutanix Calm version 3.1.1 that has IAM v2 enabled.
2) CALM-21802 ServiceNow Calm Plug-in support for Calm on Public Cloud Along with Calm on-premise, ServiceNow Calm Plug-in also supports Calm on Public Cloud (Calm SaaS).
3) CALM-21699 ServiceNow Calm Plug-in support for the Calm multi-environment feature The ServiceNow Calm Plug-in supports the multi-environment feature introduced in Calm version 3.2.0 only at the time of catalog launch in the current release. The Plug-in will support this feature at the time of catalog creation in the upcoming release.</description>
<inserted/>
<name>Nutanix Calm v1.4.4 </name>
<origin_sys_id/>
<parent display_value=""/>
<release_date/>
<remote_base_update_set display_value=""/>
<remote_parent_id/>
<remote_sys_id>527a7c6adbf3a4103e3c6a5b8a9619d8</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_class_name>sys_remote_update_set</sys_class_name>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4958cb25dbcc7c103e3c6a5b8a961999</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_45011fe1db503300bfa82a9a48961935</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Delete_Inventory&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Delete_Inventory&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Delete_Inventory = Class.create();
Delete_Inventory.prototype = {
	initialize: function() {
		this.logger = new Nutanix_Calm_Logger();
		this.utils = new Nutanix_Calm_Utils();
	},
	
	deleteInventory: function() {
		
		this.manageIncidents();
		
		var table_name = ["x_nuta2_nutanix_ca_nutanix_catalog_items","x_nuta2_nutanix_ca_nutanix_calm_run_book","x_nuta2_nutanix_ca_nutanix_staging_cloud_providers","x_nuta2_nutanix_ca_restore_points","x_nuta2_nutanix_ca_nutanix_cloud_providers","x_nuta2_nutanix_ca_generic_table_for_dropdown","x_nuta2_nutanix_ca_nutanix_staging_application", "x_nuta2_nutanix_ca_nutanix_calm_action", "x_nuta2_nutanix_ca_nutanix_calm_application", "x_nuta2_nutanix_ca_app_action_workflow_trigger", "x_nuta2_nutanix_ca_application_deployment", "x_nuta2_nutanix_ca_nutanix_blueprint", "x_nuta2_nutanix_ca_nutanix_project", "x_nuta2_nutanix_ca_nutanix_staging_project", "x_nuta2_nutanix_ca_nutanix_staging_blueprints", "x_nuta2_nutanix_ca_nutanix_process_queue", "x_nuta2_nutanix_ca_application_profile", "x_nuta2_nutanix_ca_nutanix_staging_marketplace_items", "x_nuta2_nutanix_ca_catalog_item_and_application_profile_relation", "x_nuta2_nutanix_ca_catalog_variables_properties", "x_nuta2_nutanix_ca_nutanix_calm_projects_blueprints_relationship", "x_nuta2_nutanix_ca_nutanix_calm_credential", "x_nuta2_nutanix_ca_nutanix_calm_app_runlogs", "x_nuta2_nutanix_ca_nutanix_staging_environment", "x_nuta2_nutanix_ca_nutanix_runtime_configuration",  "x_nuta2_nutanix_ca_subnet","x_nuta2_nutanix_ca_nutanix_environment","x_nuta2_nutanix_ca_nutanix_marketplaceitems","x_nuta2_nutanix_ca_disk_list","x_nuta2_nutanix_ca_service","x_nuta2_nutanix_ca_pod","x_nuta2_nutanix_ca_container"];
		for (var i = 0; i &lt; table_name.length; i++) {
			this.logger.info("Cleaning table: " + table_name[i]);
			var k = new GlideRecord(table_name[i] + '');
			k.deleteMultiple();
		}
		
		var grGroup=new GlideRecord('sys_user_group');
		grGroup.addEncodedQuery('x_nuta2_nutanix_ca_nutanix_group_uuidISNOTEMPTY');
		grGroup.query();
		while(grGroup.next()) {
			grGroup.x_nuta2_nutanix_ca_nutanix_group_uuid = '';
			grGroup.update();
		}
		this.logger.info('User groups Nutanix UUID has been cleaned');
		
		var grUser=new GlideRecord('sys_user');
		grUser.addEncodedQuery('x_nuta2_nutanix_ca_nutanix_uuidISNOTEMPTY');
		grUser.query();
		while(grUser.next()) {
			grUser.x_nuta2_nutanix_ca_nutanix_uuid = '';
			grUser.update();
		}
		this.logger.info('Users Nutanix UUID has been cleaned');
		
		var grProp = new GlideRecord('x_nuta2_nutanix_ca_calm_plugin_configuration');
		grProp.addQuery('sys_id', gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id'));
		grProp.query();
		if(grProp.next()) {
			grProp.calm_instance = '';
			grProp.calm_version = '';
			grProp.calm_admin_username = '';
			grProp.calm_admin_password = '';
			grProp.credential = "";
			grProp.mid_application = "";
			grProp.mid_server = "";
			grProp.calm_saas_and_servicenow = false;
			grProp.datadelflag = 'no';
			grProp.update();
		}
		gs.setProperty('x_nuta2_nutanix_ca.check.authentication', 'false');
		this.utils.showHideSyncUiAction('false');
		this.logger.info('Application properties page has been cleaned');
		
	},
	
	manageIncidents: function() {
		
		try{
			this.logger.info("Resolving orphaned incidents.");
			
			var incGr = new GlideRecord('incident');
			incGr.addEncodedQuery('x_nuta2_nutanix_ca_catalog_item!=NULL^state=6');   //update
			incGr.query();
			
			while(incGr.next()){
				
				incGr.incident_state = 7;
				incGr.state = 7;
				incGr.comments = 'Auto closed all the resolved incidents as inventory was cleaned.';
				incGr.update();
			}
			
			// 			incGr.incident_state = 7;
			// 			incGr.state = 7;
			// 			incGr.comments = 'Auto closed all the resolved incidents as inventory was cleaned.';
			// 			incGr.updateMultiple();
			
			
			var incGr = new GlideRecord('incident');
			incGr.addEncodedQuery('x_nuta2_nutanix_ca_catalog_item!=NULL^incident_state!=8^incident_state!=7');   //update
			incGr.query();
			
			while(incGr.next()){
				
				incGr.incident_state = 8;
				incGr.state = 8;
				incGr.comments = 'Auto cancelled all the open incidents as inventory was cleaned.';
				
				incGr.close_code = 'Closed/Resolved by Caller';
				incGr.close_notes = 'Auto cancelled all the open incidents as inventory was cleaned.';
				
				incGr.update();
			}
			
			// 			incGr.incident_state = 8;
			// 			incGr.state = 8;
			// 			incGr.comments = 'Auto cancelled all the open incidents as inventory was cleaned.';
			// 			incGr.close_code = 'Closed/Resolved by Caller';
			// 			incGr.close_notes = 'Auto cancelled all the open incidents as inventory was cleaned.';
			// 			incGr.updateMultiple();
			
		} catch(e) {
			this.logger.error('Exception caught in updating incidents: '+e);
		}
	},
	
	type: 'Delete_Inventory'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Bharat&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-03-20 08:19:39&lt;/sys_created_on&gt;&lt;sys_id&gt;45011fe1db503300bfa82a9a48961935&lt;/sys_id&gt;&lt;sys_mod_count&gt;41&lt;/sys_mod_count&gt;&lt;sys_name&gt;Delete_Inventory&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_45011fe1db503300bfa82a9a48961935&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-04 13:40:59&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>1906231624</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>015887e5dbcc7c103e3c6a5b8a961955</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d080000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Delete_Inventory</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>12a9d63ac086e4109d0e8311108f5a34</update_guid>
<update_guid_history>12a9d63ac086e4109d0e8311108f5a34:1906231624,29d640da5a7dd4108de22cb422c746f9:1974247670,5a96849af47dd4107a6d3530cab3313f:678768724,82abb70e39f9d410937d0f44ee7867a9:678768724,f878cb5ecf5b001058f5b325f7fea460:-1427804539,559cf2053613401022163212cccadf22:-513215515,357c3a0590134010d5d14dc0c968fe84:57060016,90ddf0652b474010dd99d833b0a7fa31:1128504530,c47cd0425f733300c6ddf31bbeb58d52:631284351,4949d7299b733300d4847d446540563c:1495938269,1f217aaa89d7b3000758d28afec4b5e3:1128063356,27017eaa35d7b300f0af3db5cb9b50eb:39899906,4f75eba1d25333009848c63ac8bf0f47:986094864,3c7ccfe1ecd333001fe34c68f5e3f0f7:-800179717,93b3b98f48913300c154a42fc49c7170:-922364270,8a93bd8f929133002519ad0c7ac8e461:1315734468,0c33398f87913300992bca4525b3ae90:-1734552711,f2d2b58fde91330020eb2e5596998ddc:-1540970848,9741fd0fa591330069b5094f93f9991b:1561888253,8d21790ffc9133007225551673db33ed:1084065277,dedfe58726913300d1804d334f0e648b:809203485,fb991fcc6bb43300c855c324a20decc5:-1068277532,f0d6f64c86b03300e148f8e89c669c7e:-2072802855,29092684dab03300f336d4a534364a07:-668449332,a4e66a80f3b0330084f7eab03d51198a:654653370,af44e24076b03300e0ff842da4b7cdff:610269365,a150a2e4bfec730087bd864bb9ecd572:-1148840969,7d4bfd20b36c730056ba7928a3564363:-956632959,5fe9f9aca32c7300f1dec37a32b76418:-878086685,c0885777809033005c1fddf84191bae2:-1991695452,a47083ef8d143300792346ac2822044f:-184992236,e644fae3d8143300cc39ee8e606e660b:292766950,97243ae39c143300c3f4b973768fa6cd:1979628957,b8d8f5eb96103300796bdac686376fa8:-1582777843,8ef920df1d1033007067fbc50a69fe00:654420273,c9e8ac5f8b1033008b002ce54791f1da:-1850304498,31c7e09f30103300f50598b7ff9ab3c3:-373099527,dcf2ac1b2e103300dcf5429f6e194e55:327731312,f76554f1f4543300f6b5224d3e075e22:564936578,c263dcb1e0543300c3d36a560c81e34a:351978604,65001cfdb01433002088645ea1ce7911:-985108340,548af36d61d033004f1bd0c6e65a75ab:1874040898,5fa1f32523d033004afc89ba06007a71:592173411,d550fb61ffd03300ccf463a761d3051b:-2068273517,2238d3a1559033008e21d5a2a0cdeecc:121862291,1a841bed26503300d3cf2d647df8a5ac:1668645695,c1e3176da0503300ab364aa84b472f91:-349778611</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_9342931e37152300d27b8cf6c3990e64</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;nutanix_sync&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;true&lt;/client&gt;&lt;client_script_v2&gt;&lt;![CDATA[function onClick(g_form) {

}]]&gt;&lt;/client_script_v2&gt;&lt;comments/&gt;&lt;condition&gt;gs.getProperty('x_nuta2_nutanix_ca.calm_version')!=''&amp;amp;&amp;amp;(new Nutanix_ClientServerScriptBridge().checkQueue())&amp;amp;&amp;amp;gs.getProperty('x_nuta2_nutanix_ca.check.authentication')=='true'&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;true&lt;/form_context_menu&gt;&lt;form_link&gt;true&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint/&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;messages/&gt;&lt;name&gt;Sync Now&lt;/name&gt;&lt;onclick&gt;syncConfirmation()&lt;/onclick&gt;&lt;order&gt;100&lt;/order&gt;&lt;script&gt;&lt;![CDATA[//Client-side 'onclick' function
function syncConfirmation() { 
	var delConfirm = confirm("This will sync the complete inventory of Calm entities in ServiceNow. Launching Blueprints, Catalog and performing Day 2 actions will not be possible during this process. Do you really want to continue?");
	if(delConfirm) {
		importApp();
	}
	else
		return false;
} //function for pop up message
function importApp(){
	var href = parent.location.toString();
	if(href.indexOf("nav_to.do?uri=%2F") &gt;= 0){
		parent.location = "/nav_to.do?uri=%2Fx_nuta2_nutanix_ca_nutanix_process_queue_list.do%3Fsysparm_userpref_module%3D91e0175a37152300d27b8cf6c3990e07%26sysparm_query%3Dstate!%3Dcomplete%5EEQ%26sysparm_clear_stack%3Dtrue";
		
	} else{
		parent.location = "/x_nuta2_nutanix_ca_nutanix_process_queue_list.do?sysparm_userpref_module=91e0175a37152300d27b8cf6c3990e07&amp;sysparm_query=state!=complete^EQ&amp;sysparm_clear_stack=true";
		
	}
	gsftSubmit(null, g_form.getFormElement(), 'nutanix_sync');
}


if(typeof window == 'undefined')
	runScriptIncludeCode();


function runScriptIncludeCode(){
	updateCalmVersion();
	if(new x_nuta2_nutanix_ca.Migration_Script().isCatalogItemsAvailable()){
		var appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('startMigration_1_4_4', '', '', '', 'Migrating to v1.4.4', 'This process is migrating v1.4 to v1.4.4');
	}
	if(new x_nuta2_nutanix_ca.Migration_Script().isMigrationNeeded()){
		var appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('startMigration', '', '', '', 'Migrating to v1.4', 'This process is migrating v1.3 to v1.4.');
	}
	if(gs.getProperty('x_nuta2_nutanix_ca.1_4_3') == 0){
		var appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('start1_4_3_Migration', '', '', '', 'Migrating to v1.4', 'This process is migrating v1.3 to v1.4.');	
	}
	else{
		var appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('startInventorySync', '', '', '', 'Start inventory sync', 'This process is invoking the import of all the inventories.');
	}
	
}
function updateCalmVersion(){
	var previous_calm_vesrsion = parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version'));
	var new_calm_version ;
	gs.setProperty('x_nuta2_nutanix_ca.calm_version', '');
	var logger = new Nutanix_Calm_Logger();
    var utils = new Nutanix_Calm_Utils();

    var authResp = utils.makeCalmApiCall("post", "/projects/list", '{"kind" : "project"}');
    var statusCode = authResp.getStatusCode();
   
    if (authResp.getStatusCode() == '200' || authResp.getStatusCode() == '201') {

        var verResp = utils.makeCalmApiVersionCall("get", "/apps/version", '');
        if (verResp.getStatusCode() == '200' || verResp.getStatusCode() == '201') {
            var response = verResp.getBody();
			
				new_calm_version = parseFloat(response.split('.')[0] + '.' + response.split('.')[1]);
			    if((parseFloat(new_calm_version) == parseFloat("3.2")) &amp;&amp; (parseFloat(new_calm_version) &gt; parseFloat(previous_calm_vesrsion))){
					   gs.setProperty('x_nuta2_nutanix_ca.1_4_4', '0');
				}
			
            current.calm_version = response.split('.')[0] + '.' + response.split('.')[1];
            gs.setProperty('x_nuta2_nutanix_ca.calm_version', current.calm_version);    
            current.update();
			logger.info('Sync Now Calm Version updated-&gt;' + current.calm_version);
        } else {
            current.calm_version = '';
            current.update();

            gs.addErrorMessage('Nutanix Calm Version cannot be detected.Please check the logs and retry saving properties.');
            logger.error('Calm Version cannot be detected. Error-&gt;' + verResp.getBody());
        }
}
}
]]&gt;&lt;/script&gt;&lt;show_insert&gt;true&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;mumtaz.ansari&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-24 13:00:55&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;9342931e37152300d27b8cf6c3990e64&lt;/sys_id&gt;&lt;sys_mod_count&gt;445&lt;/sys_mod_count&gt;&lt;sys_name&gt;Sync Now&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_9342931e37152300d27b8cf6c3990e64&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-05 09:52:36&lt;/sys_updated_on&gt;&lt;table&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/table&gt;&lt;ui11_compatible&gt;true&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1553726957</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>015887e5dbcc7c103e3c6a5b8a961958</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98ec00000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Sync Now</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>fdc4ea42905328505bc20d67b3301b6f</update_guid>
<update_guid_history>fdc4ea42905328505bc20d67b3301b6f:-1553726957,ea37130616032c10670fca5e75c219f0:-1779884368,b0559b8231032c10af5e18bc3bd3f9e3:-1914797187,790c556191832810c8fd00ec48239bc4:-1779884368,b9ba15213f832810bca47c39f4d7f63b:-1914797187,45cd6d8c08cbe01083fc0b81b83495f3:-2085355847,da4f1d04ffcbe01019c30320d6928914:-2081461940,ec8576ef49fe6010f288100cedc4df98:-2085355847,0d453eaf44fe60107f1e3e65b5f0a093:-2081461940,481df9dbf5b22010079a9247172aadbb:-2085355847,b0d2fdd3cbb220104a0faabaa21ecb9b:-2081461940,7662955b343220108b468af7a4230b54:-2085355847,98a1591bb4322010035ba2f0befdfb47:-2081461940,5762239ef2be6450815f03ef2a43d583:-2085355847,05af179a9ebe6450eb71186fd4b77f3b:-2081461940,1e6af61a22ba6450f18c4a6edd8fc6f5:-2085355847,07cbaa9e927a64504df8fa89013e49ea:-2081461940,6cb33d06257a24503eb36f4dbc90e2a3:-2085355847,9bca654ebf3a2450f40150113e54fe79:-2081461940,f17694f9e1faa050bc825fef0101dce7:-2085355847,aeea44b111faa05083ffcd9d19e1a544:-2081461940,1eea80b1f6faa05065fbe85609255bbd:-2085355847,116a8c716efaa0506587c72d7e7788a2:-2081461940,d1881fd1b6fa6050c248c7395aa5863c:-2085355847,043817d130fa6050eddb085109e864d4:-2081461940,7bca83513e3a6050b9887f87e83ce650:-2085355847,38f9c711e83a6050aafa60bb9efc324d:-2081461940,88e94711bd3a60503855a0104a616427:-2085355847,1ed10b9912f66050da1305bcb15f2967:-2081461940,757bf219cfb66050e0d21c4ad9e53297:-2085355847,6b93ba9129b660505a4140b27fcb161e:-2081461940,3c07924505b6205023c665c804bd8448:-2085355847,86661a05c8b620502a1d861e6716320e:-2081461940,07e1d2c51e7620501380406c4efcaf96:-2085355847,fdfdc281573620502b6534dc687a481c:-2081461940,7387fd09a9beec10d8624eb62cccedfe:-2085355847,2f27f50932beec1094428ca4844e59ef:-2081461940,133d24b0e33eac10428426e36f65bd25:-2085355847,749c68705a3eac1078167dda1b95a297:-2081461940,cd1e9c60257e6c10ad36c02136aea606:-2085355847,6e41d4e4d33e6c1008c8d9fe6be3055b:-2081461940,d36561b77faae810619d1a9a6a356445:-2085355847,ccf42977adaae81060c16ab2726dd3ac:-2081461940,1aac2caf902ea81061daeaa6b10e09bf:-2085355847,359bc85fb622a8106b69a2c053d47d69:-2081461940,3c97ae8b4322681044e08a048d989de7:-2085355847,dd472a8b272268100a6def77e830eb73:-2081461940,123c677e23262810e9692fa1fa56fe8d:-2085355847,d19aeffaec2628104f413e4e12bac3e1:-2081461940,19e5d6fecee2e410bc87932e60bd1285:-2085355847,22de8aba04e2e410644b0457ac020eaa:-2081461940,4ca129fe582ea410116e9b8fb57d2ccd:-2085355847,395125fe602ea410d8a325d14b5aac51:-2081461940,30a3330e482e2410dc3e6f4f17670828:-2085355847,3471f30ec42e24101bbba605840cb064:-2081461940,2e90a6658ea22010aaa5a5b9a43d5793:-2085355847,6e40ee2550a2201018bc37bd9aefbe95:-2081461940,d3c352ecd04fa410a263030ea6cfd31e:-1779884368,9843d2ec0b4fa410af7f964f15aa4954:-1923024751,52c51614f783a41023254827a70c4021:-1779884368,a0702d58d80f6410e02fabfd0c526d99:-2085355847,ffbdd594c10f64107850056dab06d1bb:-2081461940,b6a5b890e7476410ede021f8ad338ffd:-2085355847,2ee4bc5043476410dd05b2743a11edd6:-2081461940,4733b810f14764102786ead6130f43f6:-2085355847,8be27410924764104de1c61b968143ac:-2081461940,b7c2f010fb4764101f6cd7dde216c403:-2085355847,93823cdce407641073b573f992ee82a9:-2081461940,ec32f4dc79076410b2089ed578c6b35c:-2085355847,33d1fc9cad0764108f7c56ff6c0fda53:-2081461940,178e641c71076410baf051265ec349da:-2085355847,959e9c1022076410c4547d692ad20667:-2081461940,93a56e80fb032410355b213bcd92e032:-2085355847,3d55a6809e03241062b877617daf4be0:-2081461940,b38616cc13c7e010bab43cabfb8e9912:-2085355847,e8265e8ccfc7e010b2599a4153e807ac:-2081461940,6fe51a8c68c7e010669e7a9f919e67f8:-2085355847,6f65128c50c7e010e60cc0c70e557e22:-2081461940,9d359a4cedc7e0100e149e0e3eb0f6b1:-2085355847,88f4964c6ec7e010d1983a99c4020875:-2081461940,aa14160c4bc7e0101d7ff1047c5e01ba:-2085355847,4b1bc244e3c7e0107ebf88c90e360cd2:-2081461940,efa7cd04004fa010122cd754611cad8c:-2085355847,385705045d4fa010414558f762c49e04:-2081461940,434ee71c8a96e810270f3bc19b78dc8c:448599724,2e67a6f236c6e41074a97ad64fdf5b96:927579386,883666b2d0c6e41053074ff217794063:-778390707,52779ef2ec86e4101d3a96c01232cae0:927579386,a0b59ab26686e410f572181be83980dc:-778390707,5f7de9f6d706e4105db9289cd6d3bf1c:927579386,09ed45fedf82e4105bbde8f902c78c60:-2013979218,bb8d01fe2582e41072302ae34819fa54:-1772394215,8e7d8dbea482e410152c7e54dcd27a15:-2013979218,ad0b817ee982e41076dd053269d6754c:-901214150,56dacd3e0c82e4103ca6bc6fdb97046a:-1636415475,db29c9fadd82e410aec9de239130da73:-901214150,09d885fae882e4109566421fbe6d1397:-1636415475,cdf2347e4442e410c70eac018052bdc0:-901214150,9012783e8c42e410f5ff9e720fdd807e:-1636415475,14cfacba7d42e4107120114ce254034c:-901214150,ebae20ba1442e410b7da172bdfccf981:-1636415475,b340dc9a8fca641047979e528077fad3:-901214150,60409c9a6dca6410b6df5c4c3c20b8f5:-1636415475,54409c9a3bca64108d569b74e4dce0c0:-901214150,72205c9a1eca6410cf4f9b89b8b9a1e2:-1636415475,ae205c9adbca64106902ef4e39227e9d:-901214150,f58b04d6c3ca641015b11ee62fcb9e4c:-1636415475,3fc99f42ff4a64109e1ad0661420dc46:-901214150,64d94bc22b0a6410728b1dd315f16205:-1636415475,d5ffb28603466410a2a0f20ce3654ca0:-901214150,f5efbe46e746641071c6f89b4964c653:-1636415475,6def7e466f4664108352fed0de071b56:-901214150,ad3bbece95c2641062a152f30d76a960:-1636415475,2031865b3e4d60100bba99b8b9ee298f:-2027390131,954a85d38c81601016cf914bbd6b6297:-1458023348,8cbba636e4852010cc4c629ea1b17ecf:443524632,7119161334812010643957c0c7e2f6e3:1271541381,3a00179bd94d20106b22734218437e4c:443524632,84972a0ff6c9ec50e1e51f508741dad5:774654541,bed4268bb4c9ec50fa4a5908e34d5434:-665457203,7502260b6ec9ec50a18c9abecd7911c0:11459980,6db982b26909ac50f594a5b875055d35:774654541,020906725509ac50a68611b427abb439:-1816305126,ac968d3a79cd6c50012f12902470f679:774654541,055405f6facd6c50f1be151aedaf9c3e:-1816305126,ae3a64fe4b4d6c50a3cdabf7cfc51e42:774654541,b80823aa81496c50ec289afbdb0189a5:1603526084,7827e76a62496c50193074c6ff467619:-1816289647,a7e9bc6223816c50ed489076f611a49f:1603526084,f62d6026b5416c503df2cbd98c6978ff:-708314117,dbacace2d9416c505abcf6c2dca78998:-708303736,de5f42dad4492c50805d58a8d3735fe4:-708314117,d5c8c696d3492c50e2bee26dd969ba26:-708303736,761c62025d89e8507c98a731ce38e5c5:-708314117,3830260a9149e8508a911b4da927e985:-708303736,74bf3d4a0685e850cef0e6b064023ae7:-708314117,defbf1c65b85e85088ea7397a5853714:-708303736,fed661e9a145685094dcab1b18a4e92e:-708314117,5cf4a969f7456850437b9e97fc8ec682:-708303736,ad1ed755c709285068326d59c6472ab3:-708314117,f19d135562092850278673b5b86074ae:-708303736,a31cce453049e4501dde87e41ae85d8c:-708314117,7e0b464d0109e450e758cee70d9bd8e2:-708303736,9002977c37cda45014f4440fd8ed5d8b:-708314117,25819f3c13cda450045fd9ef95e985cc:-708303736,35fd83f0db8da450c8b70d72e2c32589:-708314117,d77d0fb0548da450ec10fed3b323e116:-708303736,d0b9cbf4eb0da4509c2cca0e8458a3c4:-708314117,34d747b4c10da450fbbbe63f2a7022f4:-708303736,b0713537b97ce050652c5abb3ea63cf0:-708314117,c1cb12f21bb46050185ed8454a08dae7:-708303736,30ef6db236b060500f52dd69eea202fd:-708314117,0175eea241b8205098d2a1aa657c0892:-708303736,e7f322a2b9b820509a2d209ab888fb6a:-708314117,ef932a622fb820508e3253312bde2b83:-708303736,f45d5266ed38205054f268bea2b4a87d:-708314117,642c522632382050b7c899c4d5cce5ee:-708303736,d63c79ee96b42050f4bf0ded63640cbe:-708314117,99bbb1eee7b42050ac893ac57a931d09:-708303736,dad3ec9a6fb4ec1072a36cd61c82e816:-708314117,6833249a8eb4ec109918c7dfb47cd5cd:-708303736,970ddc5e3334ec10ab7b1a4a5386abee:-708314117,60b0d8563e34ec10c9e2c682fdfa7952:-708303736,5f6c6af9b6b0ac106eec7c66e346ce76:-708314117,9679e6799bb0ac109ef40e26abef1eb6:-708303736,ca4152757130ac10e19587901286cfd3:-708314117,91e01e356130ac10113d71719cc3d21e:-708303736,d933be1a36ac2410d3e6b341f55bc507:-708314117,b742721a4bac2410bdbecdbb0bdbbce8:-708303736,eaf462da0a2c241016ce27dbc75e14e2:-708314117,31b46e9a852c241052c00b7d9784bf01:-708303736,15485a9e80a82410e1cb1c1056749889:-708314117,3c08169ec0a82410d2998c909e872847:-708303736,f8231e9670682410c9b6dc9d8279edd2:-708314117,21525296c9682410c1a0b117c8c62ea6:-708303736,ecb5c29ad3e4241024718d8976609f44:-708314117,da550e5a1ee42410e0cc561ba193b3f7:-708303736,496c351ed3642410ebaae988096cceed:-708314117,6d0cfdda2d64241015689432c6e6c4a0:-708303736,bd137206952ce01062b72fc2fee752ce:-708314117,9e1442863ba8e010f3557b707c157164:-708303736,1604a8b7d794e4100f6c20b0674b3f68:-708314117,dc3f54f32794e4101f1602a65937fe2b:-708303736,b79c88b7e114e4108b71c805f0f2d4e1:-708314117,e0f90c37cf14e410bb7361bc6453f5a1:-708303736,8ab3e16b775ca4108aaedaa805caf5b5:-708314117,d2389d63df5ca41066f63833cd912d33:-708303736,f7b4116f3a1ca4100ccfdc9983e1b371:-708314117,ff44192f471ca410f8be2e4ac89f70ef:-708303736,fdcf4da7971ca41012a548687b33bc85:-708314117,8e9f49a7e71ca4102809a07889e8f8fe:-708303736,d57b4163a51ca410b78860fc13a8ae0f:-708314117,ad2bc923311ca41032b947b7b1ad0837:-708303736,d989c92ff6d8a4101bb92234cd226541:-708314117,1049452f23d8a410595f9bb54f53c0e3:-708303736,3feee06b2698a410fd3741bac47593d5:-708314117,c5beec2bd598a41005120fa533a6b3b8:-708303736,6e2628aff958a410f48fc496ba2eb932:-708314117,e25068abd658a410233edc6a3275b925:-708303736,b07e1ca7c658a4103367e4e7f8e443de:-708314117,1b0e94a74f58a410af3f54285c8bee3b:-708303736,c80c7b5f48d4a410da07d064bc283672:-708314117,99bbf35f66d4a410d47553af95ee50d3:-708303736,35461b532c94a410b781fc196ad6d89b:-708314117,aaf517530594a410a30ecc83c2ed7b28:-708303736,996cc31bf454a410d024c811941fe36b:-708314117,0d1c8fd7bf54a410eee18d26b1b4705e:-708303736,e70a4fd3d654a4101cdfd10c1dd7b5a6:-708314117,e19987d35054a410910e615b06c017f8:-708303736,68160b9fe114a410b51c0eabddc4db90:-708314117,3675039f2d14a410c47083aff8c97041:-708303736,d368fe53f714a410b1966661624f49fb:-708314117,48c3430b43986410d8312625d01b49c7:-708303736,b45f92cb601864103ee36ee65f5f25d2:-708314117,068956c71d1864105e0b07e220eacd5b:-708303736,0cdd874d909420106c981e1793d110a2:-708314117,d09d434d4c9420105e73a9fe3d9ad9de:-708303736,8196edcd11d350106258c75c9d81a638:-708314117,7c4e5c050e135010b844def08d4a7897:1646977599,8ad4c270071b1010a849c2358242f40c:1271541381,f0d3f93c37d3101034de07c551da5ea2:980671885,b9b3b93cf9d310103178c8006943f903:2038853953,69b3793cd4d31010caaa6d1f6531afab:980671885,65518e803b9f54d082e20effd62e3c9a:-467769775,7e2e5ab3c44754d066465a81bd8a44e5:-1784174370,85af9ffe620b90d04191c4282da1b590:-467769775,6daa7f9e194750d078584e3a53b81eb1:-1784174370,cadcc519d0c39c90591b426b471d2ea7:-467769775,b1925af06e835c90faf52505606df0fe:-1784174370,6712d260d0031c903aad89914b6e66e9:-467769775,7f1c8a2ceccfd890833d84cbf1443004:-1784174370,918df8acd5fe1c50dedb97d9d3dae57b:-467769775,9b3408a0277e1c5076409bf8eb46ba27:-1784174370,992f2ed4837a1c500fd1d9b79a737caa:-467769775,174a0fc4f9321c502e0a48ada7d2b7ee:-1784174370,378c58bb366a985052acdb231c732b19:-467769775,9c1b947b6f6a9850059b2d8f5d004699:-1784174370,96839c730a6a98506a2315778a07ded6:-467769775,71f110731c6a9850da55ae104156bdd3:-1784174370,6951b793592a58504696ecd910025a43:-467769775,77d5ab9b43e65850ff1617394df35e31:-1784174370,21c7135bb4a258501195e7a3bbf6f1bb:-467769775,fad6531b41a25850e03288f37e119dd0:-1784174370,bc941b17aaa25850f1d072a9fc7cec43:-467769775,b093dbd373a25850a151fcfc2fd8d016:-1784174370,606b4bdb8b625850455f97ec04e6419a:-467769775,548c201ba6ea1850f43b3632ef6d9c3f:-1784174370,289ccd6eaea694506e4a71a77a96ec27:-467769775,6cabcd2e7ea694504e96bf9c4714a214:-1784174370,2a494d2a01a694503ead5781206bca74:-467769775,81d78de686a6945087c40cf3aa344acf:-1784174370,08a201a233a6945090786731b2dc8990:-467769775,58100522a5a69450a7f4fc653d2f3d3b:-1784174370,74b854ee54ee5450299eaa994c131da2:-467769775,75b5f4127fe6545029138e0e29f71c04:-1784174370,ef21d416ee625450726b8cc138033076:-467769775,5df944de1f225450bf440fa669a741d9:-1784174370,9640f6062e2a1450815fd4cb46f41cc2:-467769775,bf5feac2ae2a1450128d64f8bf2c2d9c:-1784174370,6bd80dad5d6e90509725c85184f86a77:-467769775,8ce389a92b6e905021201da3e082ac81:-1784174370,7479dfddada6905008fdffb2b1fda8d4:-467769775,93f6a9191aa290502b28f7d985cf1636:-1784174370,6150904d88ee1050fa33891c079a110d:-467769775,09b68c8598ee105004f5db5882a32f24:-1784174370,f80ca8d480ae9c10a6a6be9dd0a2c502:-467769775,e15aa4947bae9c1052528fea5ca3f122:-1784174370,983d50c8176e5c104e4e97c5efd6e3bb:-467769775,0b9c5888e56e5c10e36ad6af7c657745:-1784174370,c2bc000ce5aa5c10083301055bd78304:-467769775,a5fb04c8f6aa5c103bcad0018ba2d1ef:-1784174370,ad0bf73f8b1a5c10fe76888b2be65be8:-467769775,57a62f7bc1565c1082f1dc99e9895e45:-2103075343,abd6d7ff42165c105069915cd13ba486:-1295507522,cc2017b7d8d25c10ed3f8785952f0a88:-2103075343,758f4b7727d25c1018e843b646779e32:-1295507522,b8f0e63b789e1c100795b4a4bd03730b:-2103075343,b36062b7889e1c107584ede5e0f7073d:-1295507522,4939f2ebc4521c10a401ed76d7981461:-2103075343,3b9732ab43521c10e059e8b3a253766a:-1295507522,afaad99fc6de981035a424595cf9b59d:-2103075343,1faf09d7cbde9810ab27a35e980ca78b:-1295507522,d639cd1fdb5e981040737df589103a05:-2103075343,e14478df071e9810f610c62317d72333:-1295507522,30d113bd1b16d4109437d942c35ad698:-2103075343,4d5545b548de941020786a8de05ef971:-1295507522,3040087d841e5410a73b07adc1492613:-2103075343,21a1bfe1ec1e54105b4d6bcd5b5d12f4:-1295507522,3c2b854c6cd21010ab54152d5be96b49:-2103075343,d9aacd0c96d21010b681db87340fdb8e:-1295507522,1fb14ea4e90a1010b9c2c3362cd53948:-2103075343,10cc356c3ec610109c9c30277cac33e1:-687824871,da0c3d2c82c61010fa9e02ea55507944:-976423484,fae9f1a034c610105c85a1da64afc5bf:2025208838,d1367d6c118610103c2a013c55b95ecb:1515512998,c1637d6c1e8610102d93ae66ace30c26:963336326,e17dad68d78610105fe0f7e78d89093b:1425056729,a53b25a435861010d0bf55cf0b85683e:963336326,aafa2964bb8610108e7c7a49060c81be:-1208593942,99f9296456861010fadc6993c0479ec8:2120431144,8b486924b18610107e673ac3d4f16341:-1208593942,1618a5246286101021290cb46bd9c488:1230900458,dd27ada08f861010472bc7f248b42723:2087597464,62e5edec81461010c86b6d153c81f2bb:900627373,7111c1e0f906101034266d427d0479fc:1271541381,f8d0cda07c061010b53987580c1b2b89:975999704,dd9ff86c6cc2101058dd2fed235dc242:1271541381,d05ff46c12c210103456b6f1f0930e4b:975999704,9bacbc64cac21010b120e19fd47f6097:1271541381,2eba9ca46c4210100b4c0bbf2eec28d4:975999704,e100985267f118103cd90447b939fc49:1271541381,1abe0812d3f11810c59ee6ccc9a70e40:975999704,9b0817475f041010b0455a103e52cfae:1271541381,b714a08e44d78010e4620406a0d97494:975999704,7bc1bf81bcd340100efb6ce5120254d0:1271541381,ee01f3814fd340108d53146e3f987525:975999704,b5e56f852793401039109cd98af0d4b1:1271541381,c6c5ab854d934010e2de9dec94e6d13e:975999704,7ca5a7854c934010a0cb7eee76ed5b35:1271541381,eb55ef459f934010163924b704f4d35a:975999704,4c8f7ec58413401076c133b45f63d283:1271541381,c83e3a856913401048565abcacb96619:975999704,969dbe45a213401095ac915259d4469c:1271541381,0c0d364532134010f4492284fbec7225:975999704,a6cc7e05581340108534b8007ad1fc96:1271541381,2f457e8de8df0010d31c2fa5eccd8efa:975999704,eb4f2e85be9f00100e3b1a8a4a2cc393:1271541381,24f8a6458a1f001036c8bffe79fd967b:1990093829,87182e450c1f0010de83422730a20ea1:-267174851,e3036641771f0010782105c4716564fe:2052147412,1102eecd35db0010a6e7d0fc3151bd5e:1560078981,a8716a8d16db001080b65a037424232a:-1849389703,490126cd25db0010b85f093b8852dc0e:591380689,6e706a8de7db0010745291a78af207e0:-783699060,2a10a28d2adb001033b8b1b2ec9a4dc8:591380689,faed920d17db0010913c40e933299bf5:-783699060,b5bb91e53cc74010a517c9d5b9c3dd48:591380689,564bd5a56fc74010e33cc0d0d8dae58d:-128407402,03949d6d80874010f2da3523ecd47d4b:2019096243,3f64d96d738740101b0af604f95193db:-1491246676,47349961b2874010402bbd2fa69b0b47:-220654354,142411e1b3874010ac072c229e479e23:-2008962947,9c14516dd0874010695819b82a6400e4:-1286085155,4b1e4161ed8740104c03d979ce8cbcbd:2038242813,0bbd89ad38474010430423865e480cc2:754528827,c3965059bac7001093abf081d6d8e786:1492362791,ddce3385ff87001053a61e1f68b215ae:-600000013,22fa97890d830010fa0492a5d79220c1:1492362791,6cad03415783001039f40c87a61911ea:-600000013,e15da472cb11001039b9ae68bafe3578:1492362791,2d548e37d8a000103476e266d9d0caa5:-1010824337,2134ca3796a000101a688208bfc90b11:-70679749,c36e21631ae00010226b334552333733:-1010824337,226eed238be0001042650d7a3d35a538:-70679749,ecfda523e5e0001045552c584e57b9dc:-1010824337,14fd652371e00010892d94411d9aee18:-70679749,fe9d2123bde000104c0da7cbd1c6d364:-1010824337,269d2123fae000106f7ddc72ccb8dc13:-70679749,cf8c61efe5a00010ef834256f1812f3c:-1010824337,57ab65afcaa0001089c79a73819a16d0:-70679749,294bad6fb8a0001098dc5ec641697e02:-1010824337,3ada296f95a0001031145024ca590f8e:-1258394346,72da296f0ba0001086272f634f4b2361:-1762257118,fc9a256f2ea000108682de2972e1bf70:-1258394346,3c9a256fdea00010122637d59998464b:-1762257118,127a216f53a00010d07d8763c7b7e76b:-1258394346,8209612f06a00010f211196957a5e336:496574537,7109612f8aa000109f50d858d9b72e0f:1135659413,d2c86deb8fa00010c582bf21616657ff:496574537,16e625ab48a00010e98bd5e24bb2a3dc:1135659413,2c766d6bf2a0001017786b5665c61c6d:496574537,cda32de77da000108194a21a0e3b1603:1135659413,c11e59e367a00010cb41d91c5cdf7f55:496574537,7c1e19e356a00010f5f2c7cdddcd618b:1135659413,9e0cd963fea00010602e7fe132d36f09:496574537,18e3112f18600010ea51e727556237ba:1135659413,333e21229720401075a3e849a18b29e1:496574537,d3bde1ee0aec001059c037f6be2219d7:1135659413,d75ce1aeaaec00100c54e8c768b01d52:496574537,1ccb296e6dec00106dda4c9762bc7d98:1135659413,d2623c568c6000109d5f07a028c27eef:496574537,0d427856146000104c3f4f0ed2fa6b20:1135659413,11bcce078d1b00101f87eb0ea90e60a3:980671885,ce6c86ecc3d90810e41dce6031e1c0d4:2038853953,687b06ecf6d90810bda09aa5bf6faa22:980671885,a45b0e2892d90810f9daf23e39ce8649:2038853953,39d0026c2059081089ffc92a7706b8f7:980671885,40a04a2c8e590810215c91bd145f51d6:2038853953,84cbf5a8a6190810f8182a50f7ab5fad:980671885,24bb75a8301908101fb3b131acc584ba:2038853953,1a9bf1a88d1908101dc341ca6426096b:980671885,cc9bfd28d8190810523dc745da8eda4f:2038853953,fb009aedfac10010e93ebfbf4af2934a:496574537,33bf86edd0c1001083607e8ea737aa25:1135659413,e3bf42ed1ec100107ba951cc05208011:496574537,ed5ec2adaac10010402f939c82b25009:1135659413,555e4e2950c10010667142c8ff46a424:496574537,854e42adc0c1001029ce797ed0c7cbb7:1135659413,0d4e822df2c100109febf35fe66e1497:496574537,b70ec22d95c10010bba37c01fe1c92fa:1135659413,e30e0ae974c1001008e3099b4bde195d:496574537,62fdc2e94ec10010017f4dad362973a9:1135659413,8c15d0fadc33f30081c32d819ce9bad0:496574537,235df666203fb3001ee5804c73fd43bb:331251442,ea51da08713373007390913f0aeb32a1:-667355002,6c005ec40d33730068440fcc924881f2:-2091137646,8ab7613bcb273300b54293d87175aa6b:-667355002,0ee5fcfb8fa33300ad47a3240af86eb1:-2091137646,dd351f8df5237300a085ef1fad163e27:-667355002,a1d4978da6237300c9ffc26a7a86a0ef:-2091137646,b482f58d90eb33008487bcf13ad3ff33:-667355002,c422718d86eb3300900525021b5a6094:-2091137646,0d5db950e2973300632d5f35a32490d1:-667355002,4f1db55046973300c2a2f302accdb99f:-2091137646,745b6c645b833300d38e350fc074083e:-667355002,6ce528a077833300d92f47cc589aa1ee:-2091137646,bcf406db9ec233005dc3533f72b2efcb:-667355002,0282b8264fbb330059dfcf348ac5e6e6:741104852,ec430a239cdf3300324eb8b25cf56591:-667355002,723d716f9b9f3300eac64e5539fd9cfe:-2091137646,185a26a2575333005a63cae2ae17e36a:-667355002,afc866621453330008b11155348dd210:-2091137646,53c1407c4b937300798fe200de324f3e:-667355002,73bf73ac779373002e7e0c65972e0826:-2091137646,dcddeb90bcd733003196cba807b0e5a5:-667355002,99fcef1430d73300f548df38e83dbc14:-2091137646,c5f14b93e38337001011d62c9225b177:-667355002,ba700b53188337009a046424588cb68a:-2091137646,106e2ad33d0337004280f25b90c7905e:-667355002,b0cce693ac0337005e65ea8d30dbff60:-2091137646,86456fcffec7f300f9f6088239fd2d5c:-667355002,f4d467cfeac7f3002e3dee6cfa32becd:-2091137646,eceeaa4f9543f3005c5a197cbdddc37f:-667355002,ab8e664fa743f3002a90f5e8d64c736a:-2091137646,461a2e4fc103f30027bb9a9c07b7f833:-667355002,c1e9e64f7703f3000f9cdf4065a7a9d7:-2091137646,c762668b2fcfb3003a76d8446e2dda26:-667355002,f0e16ecbebcfb300edac5523427560e5:-2091137646,c71e1ecff38fb3003bdc26277be9bae9:-667355002,84ddd6cf348fb30079ab108084a88fee:-2091137646,3066c1837b4bb3007c3c11863e2f85d9:-667355002,1936cd43314bb300ed473a1165e8d9be:-2091137646,d58adf561ccf3300a2ae05c5912cc98a:-667355002,8a89db5681cf3300d824e2176eff1460:-2091137646,21d43a41dc037300ad2d157fd6dd104c:-667355002,6506c9f453433300f27815c666ad9c82:-2091137646,15181d6c96473300571493f7a088bf84:-667355002,12c7d56c2547330009f2b54bf6f09341:-2091137646,0b93112c4b0733006eee681b363a812b:-667355002,4c6199a806073300ff48b285970db65a:-2091137646,afa7df08df43330090de91953d3e9367:-667355002,216797c89343330069870d1d892e675e:-2091137646,d5530fb665fa7300b7865aa0fbaa6694:-667355002,db22cffe63fa73005b5d6d1d2101de7f:-2091137646,acbba7712ff2330077e9714719240b42:-667355002,8d6a6b31a7f23300d4d1507c12fffd35:-2091137646,3568addb1e26b300d87f0c8c11a8336d:-667355002,9aa5e19b7426b3007b2a4aa37d03e858:-2091137646,367d6d8a78ae33004f356e514e54362d:-667355002,e8d6a986bdae33004a3c7cc9328f26d7:-2091137646,a57dee7525d633008c0161b54911381c:-667355002,13fe70cf89823300037158f9bfb56898:-2091137646,acae77aa89063300703a054c3cfd141d:-667355002,f55efbaa52063300c0c0031b9f5430d8:-298244386,0034072a584233001d3acebabe38e4cd:853431433,df9e83b8c9f133002371a76926a956de:-904254251,699d0b78b4f1330093e5aef9f49d044a:853431433,7e4b07f4dff13300aaf834aad8a145df:-904254251,52f18f70ecf13300c6e7637407210711:853431433,07a1c77057f133007274f422134d87d3:-904254251,4ca143fc8ab133007bb3e18f49b0457a:853431433,82e42eb882713300b1b2aa0f638b401c:-298244386,f3f32eb8b47133001deed51dfc87d726:436846058,5a9bdef8b73133005fca848bfa8d72af:-298244386,564b5af8b931330053864e751806dc61:436846058,6c8a5ab8b73133005d473cefe1a26365:-298244386,648a5678503133002f76ed76d78c7e0b:436846058,a3581eb47f313300ca73bfee3ef79f14:-298244386,9548dab4023133001b96ad9a8d6c363d:436846058,5548dab4e63133006ca21cd0bc602a22:-298244386,610856b418313300ba4dde318c40aa03:436846058,79d752b4dd3133008ecd860f8882e1ed:-298244386,e2c752b434313300c3ba8cacd0e17711:436846058,22c712b4e1313300292fc268e982bbee:-298244386,9a8a0e36e6e03300161e6ab5a40b1404:912385486,a7a0986e3a20730078a9d39a8225d41e:-1327932070,0b80d46e3320730081586a7006954d54:912385486,31bf8caa1c207300e51782e7f0739f24:-1327932070,60af88ea78207300e0866dd5deeeafd6:912385486,89dac866ee20730016c293471a77cd88:-1327932070,01ca8c663d2073007f7fb4bc40b10fd0:912385486,130880ee63ec3300cda0ab83928f023f:-1327932070,1fd78cae37ec330010ab9b2efda45d4c:912385486,b564cce6e9ec33001afe63651c37a4bd:-1327932070,5f448ce650ec33000994687207921db8:912385486,b15533d2f1ac3300317ea53b5176ea57:-1327932070,da45bf9224ac3300597ba0d034d830b5:912385486,3ab47b927fac3300cf7bbf2560acd31f:-1327932070,f7a4f792fdac33002604be4037311760:912385486,29729bce212033004b07111f050680ab:-1327932070,4c22178eeb20330004ad993c603367ce:912385486</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_d75443572fbe6810da242f2ef699b6b6</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="DELETE"><cleared>false</cleared><disabled>ignore</disabled><field>mid_server</field><mandatory>false</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-15 12:52:06</sys_created_on><sys_id>d75443572fbe6810da242f2ef699b6b6</sys_id><sys_mod_count>0</sys_mod_count><sys_name>mid_server</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_d75443572fbe6810da242f2ef699b6b6</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-15 12:52:06</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Calm SaaS compatibility test without MID server">aeeb29a72ff12010152959ab2799b6af</ui_policy><visible>false</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>924595791</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>015887e5dbcc7c103e3c6a5b8a96195b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e160000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>mid_server</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>a3d2168867c7e0100f87da783c4ebe9e</update_guid>
<update_guid_history>a3d2168867c7e0100f87da783c4ebe9e:924595791,2a74c39b537e68109e4e231757cf3236:-669294269</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_calm_admin_password</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="calm_admin_password" table="x_nuta2_nutanix_ca_calm_plugin_configuration"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes&gt;edge_encryption_enabled=true&lt;/attributes&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;Calm Admin Password&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;calm_admin_password&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value=""&gt;password2&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;255&lt;/max_length&gt;&lt;name&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-16 10:19:26&lt;/sys_created_on&gt;&lt;sys_id&gt;1990841e4fc5630065e48020a310c78d&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Calm Admin Password&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_calm_admin_password&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-15 11:20:17&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>2070649191</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0158cb25dbcc7c103e3c6a5b8a96199b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98db80000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Plugin Configuration.Calm Admin Password</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>697f625786ba68100241d80e373c38bb</update_guid>
<update_guid_history>697f625786ba68100241d80e373c38bb:2070649191,6ce0217b18812300ec61c778a215f6c1:-1098712619,46c0617b41812300a7b87cb6f9f78685:1053833607,80b8635b4d412300dbe1b8dc80b8468d:-1098712619,7598ef1b6a412300342efbc330ec5694:1053833607,9a36f8de24496300589424c15f027e82:1377250771,3c810c5e27c563004eceedaff5a6385f:1890413780</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_scope_privilege_72ac7cd01b0b64107f2a8515ec4bcbc7</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_scope_privilege"><sys_scope_privilege action="INSERT_OR_UPDATE"><operation>execute</operation><source_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</source_scope><status>allowed</status><sys_class_name>sys_scope_privilege</sys_class_name><sys_created_by>system</sys_created_by><sys_created_on>2021-03-18 05:32:40</sys_created_on><sys_id>72ac7cd01b0b64107f2a8515ec4bcbc7</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CatalogClientScriptJS.setAttributes</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_scope_privilege_72ac7cd01b0b64107f2a8515ec4bcbc7</sys_update_name><sys_updated_by>system</sys_updated_by><sys_updated_on>2021-03-18 05:32:40</sys_updated_on><target_name>CatalogClientScriptJS.setAttributes</target_name><target_scope display_value="Global">global</target_scope><target_type>scriptable</target_type></sys_scope_privilege></record_update>]]></payload>
<payload_hash>1102915519</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0158cb25dbcc7c103e3c6a5b8a96199e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e400000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>CatalogClientScriptJS.setAttributes</target_name>
<type>Cross scope privilege</type>
<update_domain>global</update_domain>
<update_guid>3eac7cd0fb0b64103c650e3cdf60dbc7</update_guid>
<update_guid_history>3eac7cd0fb0b64103c650e3cdf60dbc7:1102915519</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_transform_script_a1d1a21b2fdee010962a877cf699b6bd</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_transform_script"&gt;&lt;sys_transform_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;map display_value="Nutanix Transform MarketPlaceItems"&gt;5228bcc3db91230084249235ca961967&lt;/map&gt;&lt;order&gt;100&lt;/order&gt;&lt;script&gt;&lt;![CDATA[(function runTransformScript(source, map, log, target /*undefined onStart*/ ) 
{
	if(source.type + '' == 'runbook')
		{
			if (action == 'insert')
				  ignore = true;
		}
	
})(source, map, log, target);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_transform_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-02-18 13:51:05&lt;/sys_created_on&gt;&lt;sys_id&gt;a1d1a21b2fdee010962a877cf699b6bd&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;onBefore&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_transform_script_a1d1a21b2fdee010962a877cf699b6bd&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-18 13:55:54&lt;/sys_updated_on&gt;&lt;when&gt;onBefore&lt;/when&gt;&lt;/sys_transform_script&gt;&lt;/record_update&gt;</payload>
<payload_hash>260705629</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>055887e5dbcc7c103e3c6a5b8a961957</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d360000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>onBefore</target_name>
<type>Transform Script</type>
<update_domain>global</update_domain>
<update_guid>0553aa9ba9dee01098973c3bf78bd77c</update_guid>
<update_guid_history>0553aa9ba9dee01098973c3bf78bd77c:260705629,22326ad7f1dee010b74e2494da0afadb:-732865344</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_88a35ec81bc7e0107f2a8515ec4bcbc2</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="INSERT_OR_UPDATE"><cleared>false</cleared><disabled>ignore</disabled><field>mid_server</field><mandatory>true</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-17 17:14:19</sys_created_on><sys_id>88a35ec81bc7e0107f2a8515ec4bcbc2</sys_id><sys_mod_count>0</sys_mod_count><sys_name>mid_server</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_88a35ec81bc7e0107f2a8515ec4bcbc2</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-17 17:14:19</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Handle Mid Server Field on Application property">044316881bc7e0107f2a8515ec4bcb75</ui_policy><visible>true</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>-1558798291</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>055887e5dbcc7c103e3c6a5b8a96195a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e300000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>mid_server</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>dfa31ac8c8c7e010b1c99f033db0e4d3</update_guid>
<update_guid_history>dfa31ac8c8c7e010b1c99f033db0e4d3:-1558798291</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_properties_1a3959c3dbf03300bd097dda8c961914</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>List of variables that need to be disabled from plugin.</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>x_nuta2_nutanix_ca.disabled.fields</name><read_roles>x_nuta2_nutanix_ca.calm_admin</read_roles><suffix>disabled.fields</suffix><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2019-04-18 11:48:55</sys_created_on><sys_id>1a3959c3dbf03300bd097dda8c961914</sys_id><sys_mod_count>15</sys_mod_count><sys_name>x_nuta2_nutanix_ca.disabled.fields</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_properties_1a3959c3dbf03300bd097dda8c961914</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-25 14:55:23</sys_updated_on><type>string</type><value>,machineType,image_id,vpc_id,security_group_list,host,template,datastore,instance_type,region,availability_zone,key_name,subnet_id,resource_group,availability_set_id,location,zone,security_groups,instance_profile_name,connection_type,connection_protocol,address,storage_type,network_tags,scopes,predefined_guest_customization,install_type,type,cluster,storage_pod,drs_mode,</value><write_roles>x_nuta2_nutanix_ca.calm_admin</write_roles></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=1a3959c3dbf03300bd097dda8c961914"/></record_update>]]></payload>
<payload_hash>-1967862769</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0558cb25dbcc7c103e3c6a5b8a96199d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e980000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>x_nuta2_nutanix_ca.disabled.fields</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>62904fe667cbac10a8b20c3a1a946fc2</update_guid>
<update_guid_history>62904fe667cbac10a8b20c3a1a946fc2:-1967862769,19a3b682c963f300afc457db563d1bb0:-276273764,4f0953cdc2637300c4312904a5ef8a29:-1797768859,8ee5215938697300bfc736ddeaf63070:2067364610,17c5a559ad6973000bc6ff2a8060e318:-952357924,c178b488091d3300d3d96e9a1a46c5e8:210637414,3e5f17f772c53300988d96fa65e3541b:1612141393,8f2f5777d0c533000f86a45d05f99d53:632252402,81ee9377a2c533006f53729922bbee0c:70142780,98a99f3ffd8533001128391bfa8d3e72:1134212062,8f657d6ef78133004044edcc101a6894:-2038202545,d649b2659a097300585199f9b0de0581:-175743493,41d72ae92045730016af53d930fb1a92:-1353527878,a0571221604573009bb5265c0ed20154:-1456013246,03ea990788f03300061e95fbae494e9c:1056928346,e5e9ddc373f033000f4912cf901f8578:-1547434850</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_d018c57f37112300fdfc097973990e26</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;true&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Nutanix_ClientServerScriptBridge&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Nutanix_ClientServerScriptBridge = Class.create();
Nutanix_ClientServerScriptBridge.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    fetchDataFromRequestedItem: function() {
        var gr = new GlideRecord("sc_req_item");
        if (gr.get(this.getParameter("sysparm_sysID"))) {
            return gr;
        }
    },

    fieldValidation: function() {

        var utils = new Nutanix_Calm_Utils();
        var logger = new Nutanix_Calm_Logger();

        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fieldValidation.");

            var catSysId = this.getParameter('sysparm_catSysId');
            var fieldValueMap = this.getParameter('sysparm_fieldValueMap');
            var configureScript = new Nutanix_FetchConfigureSettingDropdown();

            return configureScript.fieldValidation(catSysId, fieldValueMap);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fieldValidation. Error:- " + e);
        }

    },

    fetchLaunchVars: function() {
        var utils = new Nutanix_Calm_Utils();
        var logger = new Nutanix_Calm_Logger();

        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchLaunchVars.");
            var catSysID = this.getParameter('sysparm_catsysid') + "";
            var profile = this.getParameter('sysparm_profile') + "";
            var configScript = new Nutanix_FetchConfigureSettingDropdown();

            return configScript.fetchLaunchVars(catSysID, profile);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchLaunchVars. Error:- " + e);
        }
    },

    variableArrayParser: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.variableArrayParser");

            var type = this.getParameter('sysparm_type');
            var parent_uuid = this.getParameter('sysparm_parentUuid');
            var var_array = this.getParameter('sysparm_varJson');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.variableArrayParser(type, parent_uuid, var_array);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.variableArrayParser. Error:- " + e);
        }
    },

    hideAccessLocalGroupOption: function() {
        var utils = new Nutanix_Calm_Utils();
        var logger = new Nutanix_Calm_Logger();

        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.hideAccessLocalGroupOption.");
            var localGroupOption = new Nutanix_FetchConfigureSettingDropdown();
            return localGroupOption.hideAccessLocalGroupOption(); //returns the value that is present on the form
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.hideAccessLocalGroupOption. Error:- " + e);
        }
    },

    supportStatusMPI: function() {
        var utils = new Nutanix_Calm_Utils();
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.supportStatusMPI.");
            var bpSysID = this.getParameter('sysparm_blueprint') + "";
            var supportStatus = new Nutanix_FetchConfigureSettingDropdown();
            return supportStatus.supportStatusMPI(bpSysID); //returns the value.
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.supportStatusMPI. Error:- " + e);
        }
    },

    advanceVariableDynamicOptions: function() {

        var utils = new Nutanix_Calm_Utils();
        var logger = new Nutanix_Calm_Logger();

        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getHttpValues.");

            var catSysId = this.getParameter('sysparm_catSysID');
            // 			var fieldValueMap = this.getParameter('sysparm_fieldValueMap');
            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.advanceVariableDynamicOptions(catSysId);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getHttpValues. Error:- " + e);
        }

    },

    getHttpValues: function() {

        var utils = new Nutanix_Calm_Utils();
        var logger = new Nutanix_Calm_Logger();

        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getHttpValues.");

            var type = this.getParameter('sysparm_type');
            var parent_uuid = this.getParameter('sysparm_parentUuid');
            var pre_map = this.getParameter('sysparm_preMap');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.getHttpValues(type, parent_uuid, pre_map);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getHttpValues. Error:- " + e);
        }
    },


    mpiPatching: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.mpiPatching.");
            var project = this.getParameter('sysparm_project');
            var blueprint = this.getParameter('sysparm_blueprint');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.mpiPatching(project, blueprint);

        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.mpiPatching. Error:- " + e);
        }
    },

    getSubnet: function() {

        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("***Inside Nutanix_ClientServerScriptBridge.getSubnet. catalog sys_id" + this.getParameter('sysparm_catSysID') + " projectUuid " + projectUuid);
            var catalog = this.getParameter('sysparm_catSysID');
            var projectUuid = this.getParameter('sysparm_ProjectUuid');
            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.getProjectSubnet(catalog, projectUuid);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getSubnet. Error:- " + e);
        }

    },

    checkQueue: function() {
        var logger = new Nutanix_Calm_Logger();
        var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_process_queue');
        //gr.addEncodedQuery('state!=complete^topic!=startInventoryDelete^topic!=processImportedApp^topic!=importApplications');
        gr.addEncodedQuery('state!=complete^state!=error^topic!=startInventoryDelete^topic!=processImportedApp^topic!=importRecoveryPoints^topic!=processRecoveryPoints');
        gr.query();
        if (gr.next()) {
            //gs.addErrorMessage('Inventory is currently being synced. Please wait for this operation to finish.');
            //logger.error("Inside Nutanix_ClientServerScriptBridge.checkQueue: Inventory is being synced.");
            return false;
        } else if (gs.getProperty('x_nuta2_nutanix_ca.Delete_Flag') == '1') {
            //gs.addErrorMessage('Inventory is currently being deleted. Please wait for this operation to finish.');
            //logger.error("Inside Nutanix_ClientServerScriptBridge.checkQueue: Inventory is being deleted.");
            return false;
        } else
            return true;
    },

    deleteFlagState: function() {
        if (gs.getProperty('x_nuta2_nutanix_ca.Delete_Flag') == 1) {
            return 'deleting';
        } else {
            var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_process_queue');
            gr.addEncodedQuery('state!=complete^state!=error^topic!=startInventoryDelete^topic!=processImportedApp^topic!=importRecoveryPoints^topic!=processRecoveryPoints');
            gr.query();
            if (gr.next()) {
                return 'syncing';
            }
        }
    },

    appFlag: function() {
        var utils = new Nutanix_Calm_Utils();
        var grAction = new GlideRecord(utils.configuration.table.NutanixCalmAction);
        if (grAction.get(this.getParameter('sysparm_actId'))) {
            var appUUID = grAction.parent_uuid;
            var gr = new GlideRecord(utils.configuration.table.NutanixCalmApplication);
            gr.addQuery('uuid', appUUID);
            gr.query();
            gr.next();

            if (gr.action_flag == '1') {
                return '1';
            } else
                return '0';
        }
    },

    getVariablesProperty: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            var varProp = gs.getProperty('x_nuta2_nutanix_ca.aws_display_vars');
            return varProp;
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getVariablesProperty. Error:- " + e);
        }
    },

    cleanInstance: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_process_queue');
            gr.addEncodedQuery('state!=complete^topic!=startInventoryDelete');
            gr.query();
            logger.debug("Inside Nutanix_ClientServerScriptBridge.cleanInstance.");
            if (gr.next() || gs.getProperty('x_nuta2_nutanix_ca.Delete_Flag') == '1') {
                logger.error('A sync or a delete process is currently in progress. Please wait for them to finish');
            } else {
                gs.setProperty('x_nuta2_nutanix_ca.Delete_Flag', '1');
                var grDel = new Nutanix_Calm_Utils();
                grDel.insertIntoQueue('startInventoryDelete', '', '', '', 'Starts Inventory deletion', 'This process deletes the calm snow data.');
                logger.info('Inventory cleanup has started.');
            }
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.cleanInstance. Error:- " + e);
        }
    },

    fetchBlueprints: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchBlueprints.");
            var project = this.getParameter('sysparm_project');
            var blueprintType = this.getParameter('sysparm_blueprintType');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.fetchBlueprints(project, blueprintType);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchBlueprints. Error:- " + e);
        }
    },

    fetchApplicationProfiles: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            var blueprint = this.getParameter('sysparm_blueprint');
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchApplicationProfiles. Blueprint :" + blueprint);

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.fetchApplicationProfiles(blueprint);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchApplicationProfiles. Error:- " + e);
        }
    },

    fetchProviderIcons: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchProviderIcons.");
            var catSysId = this.getParameter('sysparm_catId');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.fetchProviderIcons(catSysId);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchProviderIcons. Error:- " + e);
        }
    },

    fetchActionVariables: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchActionVariables.");
            var JSONstr = '';
            var actSysId = this.getParameter('sysparm_actSysId');
            var grAction = new GlideRecord('x_nuta2_nutanix_ca_nutanix_calm_action');
            if (grAction.get(actSysId)) {
                var actName = grAction.action_name + '';
                var trueName = grAction.name + '';
                var actionType = grAction.type + '';
                var varStr = grAction.action_variables + '';
            }
            if (varStr != '') {
                JSONstr = {
                    "name": actName,
                    "true_name": trueName,
                    "type": actionType,
                    "vars": varStr
                };
            } else
                JSONstr = {
                    "name": actName,
                    "true_name": trueName,
                    "type": actionType
                };
            return JSON.stringify(JSONstr);

        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchActionVariables. Error:- " + e);
        }
    },

    getProfileVariableDetails: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getProfileVariableDetails.");
            var project = this.getParameter('sysparm_project');
            var blueprint = this.getParameter('sysparm_blueprint');
            var application_profile = this.getParameter('sysparm_application_profile');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            var response = configureScript.getProfileVariableDetails(project, blueprint, application_profile);

            return response;
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getProfileVariableDetails. Error:- " + e);
        }
    },
    getMultipleProfileVariableDetails: function() { //multi-profile- project function
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getMultipleProfileVariableDetails.");
            var project = this.getParameter('sysparm_project');
            var blueprint = this.getParameter('sysparm_blueprint');
            var application_profile = this.getParameter('sysparm_application_profile');
            var cat_item = this.getParameter('sysparm_cat_item');
            var delta_profile = this.getParameter('sysparm_delta_profiles');
            var type = this.getParameter('sysparm_type');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            var response = configureScript.getMultipleProfileVariableDetails(project, blueprint, application_profile, cat_item, delta_profile, type);

            return response;
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getMultipleProfileVariableDetails. Error:- " + e);
        }
    },

    getServiceVariableDetails: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getServiceVariableDetails.");
            var project = this.getParameter('sysparm_project');
            var blueprint = this.getParameter('sysparm_blueprint');
            var application_profile = this.getParameter('sysparm_application_profile');
            var type = this.getParameter('sysparm_type');
            var bpType = this.getParameter('sysparm_bpType');
            var cat_item = this.getParameter('sysparm_cat_item');
            var delta_profiles = this.getParameter('sysparm_delta_profiles');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.getMultipleServiceVariableDetails(project, blueprint, application_profile, type, bpType, cat_item, delta_profiles);

        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getProfileVariableDetails. Error:- " + e);
        }
    },

    getCrendentialsDetails: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getCrendentialsDetails.");
            var project = this.getParameter('sysparm_project');
            var blueprint = this.getParameter('sysparm_blueprint');
            var application_profile = this.getParameter('sysparm_application_profile');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            var response = configureScript.getCrendentialsDetails(project, blueprint, application_profile);

            return response;
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getCrendentialsDetails. Error:- " + e);
        }
    },

    mappedCredentials: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.mappedCredentials.");
            var projects = this.getParameter('sysparm_project');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.mappedCredentials(projects);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.mappedCredentials. Error:- " + e);
        }
    },

    fetchEnvironmentCredentials: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchEnvironmentCredentials.");
            var credSysId = this.getParameter('sysparm_credentialSydID');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.fetchEnvironmentCredentials(credSysId);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchEnvironmentCredentials. Error:- " + e);
        }
    },

    getCatalogInfo: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getCatalogInfo.");
            var catalogItemSysID = this.getParameter('sysparm_catalogItemSysID');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.getCatalogInfo(catalogItemSysID);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getCatalogInfo. Error:- " + e);
        }
    },

    getRealtedCatalogItems: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getRealtedCatalogItems.");
            var blueprint = this.getParameter('sysparm_blueprint');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.getRealtedCatalogItems(blueprint);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getRealtedCatalogItems. Error:- " + e);
        }
    },

    getBlueprintInfo: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getBlueprintInfo.");
            var blueprint = this.getParameter('sysparm_blueprint');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.getBlueprintInfo(blueprint);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getBlueprintInfo. Error:- " + e);
        }
    },

    fetchRuntimeVariablesValue: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchRuntimeVariablesValue.");
            var sysId = this.getParameter('sysparm_sysId');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.fetchRuntimeVariablesValue(sysId);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchRuntimeVariablesValue. Error:- " + e);
        }
    },

    fetchProjectAndProfileList: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchProjectAndProfileList.");
            var catSysID = this.getParameter('sysparm_catSysID');

            var configureScript = new Nutanix_CatalogFormScripts();
            return configureScript.fetchMultipleProjectAndProfileList(catSysID);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchProjectAndProfileList. Error:- " + e);
        }
    },

    fetchOrderFormData: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchOrderFormData.");
            var profile = this.getParameter('sysparm_profile');
            var catSysID = this.getParameter('sysparm_catSysID');

            var configureScript = new Nutanix_CatalogFormScripts();
            return configureScript.fetchOrderFormData(profile, catSysID);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchOrderFormData. Error:- " + e);
        }
    },

    fetchCredentialsList: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchCredentialsList.");
            var catSysID = this.getParameter('sysparm_catSysID');

            var configureScript = new Nutanix_ImportCredentials();
            return configureScript.fetchCredentialsList(catSysID);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchCredentialsList. Error:- " + e);
        }
    },

    fetchMappedCredentialsDetails: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchMappedCredentialsDetails.");
            var catSysID = this.getParameter('sysparm_catSysID');

            var configureScript = new Nutanix_ImportCredentials();
            return configureScript.fetchMappedCredentialsDetails(catSysID);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchMappedCredentialsDetails. Error:- " + e);
        }
    },

    checkDuplicate: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.checkDuplicate.");
            var catName = this.getParameter('sysparm_catName');
            var catSysId = this.getParameter('sysparm_catSysId');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.checkDuplicate(catName, catSysId);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.checkDuplicate. Error:- " + e);
        }
    },

    checkCatalogValidity: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.checkCatalogValidity.");
            var blueprintType = this.getParameter('blueprintType');
            var blueprintUUID = this.getParameter('blueprintUUID');

            var profileSysIds = this.getParameter('profileSysId').split(',');
            var projectSysId = this.getParameter('projectUUID');
            var profileName = this.getParameter('profileName');
            var profileSysId = '';

            for (var i = 0; i &lt; profileSysIds.length; i++) {
                var profile = new GlideRecord('x_nuta2_nutanix_ca_application_profile');
                profile.get(profileSysIds[i]);
                logger.debug("***True/false: profile_name : " + profile.name + ' profileName : ' + profileName + '');
                if (profile.name + '' == profileName + '') {
                    profileSysId = profileSysIds[i] + '';
                    break;
                } else {
                    continue;
                }
            }

            var configureScript = new Nutanix_CheckCatalogItemValidity();
            return configureScript.checkCatalogValidity(blueprintType, blueprintUUID, profileSysId, projectSysId);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.checkCatalogValidity. Error:- " + e);
        }
    },

    getUserEmail: function() {
        var gr = new GlideRecord('sys_user');

        if (gr.get(gs.getUserID())) {
            return gr.email + '';
        }
    },
    fetchMultipleBlueprints: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            var blueprintType = this.getParameter('sysparm_blueprintType');
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchMultipleBlueprints. blueprintType " + blueprintType);

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.fetchMultipleBlueprints(blueprintType);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchMultipleBlueprints. Error:- " + e);
        }
    },
    fetchMultipleProjects: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            var blueprint = this.getParameter('sysparm_blueprint');
            var blueprintType = this.getParameter('sysparm_blueprintType');
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchMultipleProjects. Blueprint " + blueprint + " BlueprintType " + blueprintType);

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.fetchMultipleProjects(blueprint, blueprintType);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchMultipleProjects. Error:- " + e);
        }
    },
    getMultipleServiceVariableDetails: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getMultipleServiceVariableDetails.");
            var project = this.getParameter('sysparm_project');
            var blueprint = this.getParameter('sysparm_blueprint');
            var application_profile = this.getParameter('sysparm_application_profile');;
            var type = this.getParameter('sysparm_type');
            var bpType = this.getParameter('sysparm_bpType');
            var project1 = project.split(',');
            var profile1 = application_profile.split(',');
            var answer = [];
            for (var i in profile1) {
                var configureScript = new Nutanix_FetchConfigureSettingDropdown();
                var response = JSON.parse(configureScript.getServiceVariableDetails(project1[0], blueprint, profile1[i], type, bpType));
                var res = {
                    "profile": profile1[i],
                    "response": response.service_configuration
                };
                answer.push(res);
            }
            logger.debug("End Nutanix_ClientServerScriptBridge.getMultipleServiceVariableDetails." + JSON.stringify(answer));
            return JSON.stringify(answer);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.toyota1_getServiceVariableDetails. Error:- " + e);
        }
    },

    getProject: function(blueprint, blueprintType) {
        var logger = new Nutanix_Calm_Logger();
        logger.debug("Inside Nutanix_ClientServerScriptBridge.getProject.");
        try {
            logger.debug("Inside global Business Rule.getProject.blueprint : " + blueprint + 'blueprintType : ' + blueprintType);

            var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_calm_projects_blueprints_relationship');
            gr.addQuery('catalog_item', blueprint);
            if (blueprintType == 'unpublished')
                gr.addQuery('catalog_item.category', gs.getProperty('x_nuta2_nutanix_ca.nutanix_unpublishedBP_sysId'));
            else
                gr.addQuery('catalog_item.category', gs.getProperty('x_nuta2_nutanix_ca.nutanix_category_sysId'));
            gr.orderBy('catalog_item.name');
            gr.query();
            var query = 'state=COMPLETE^sys_idIN';
            var pro = [];
            while (gr.next()) {
                if ((blueprintType == 'unpublished' &amp;&amp; gr.catalog_item.state + '' == 'ACTIVE') || (blueprintType != 'unpublished' &amp;&amp; gr.catalog_item.state + '' == 'active')) {
                    query += gr.projects + ',';
                }
            }
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getProject. Query return " + query);
            return query;
        } catch (e) {
            logger.debug("Exception Nutanix_ClientServerScriptBridge.getProject. Error:- " + e);
        }
    },
    getProfile: function(blueprintSysId) {
        var logger = new Nutanix_Calm_Logger();
        logger.debug("Inside Nutanix_ClientServerScriptBridge.getProfile.");
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getProfile.blueprint : " + blueprint);

            var blueprint = new GlideRecord('x_nuta2_nutanix_ca_nutanix_blueprint');
            blueprint.get(blueprintSysId);
            var gr = new GlideRecord('x_nuta2_nutanix_ca_catalog_item_and_application_profile_relation');
            gr.addQuery('catalog_item', blueprintSysId);
            gr.addQuery('state', 'active');
            //gr.addEncodedQuery('providersNOT LIKEaws^providersNOT LIKEazure^providersNOT LIKEgcp');
            gr.orderBy('application_profile.name');
            gr.query();

            var query = 'sys_idIN';

            while (gr.next()) {
                query += gr.application_profile + ',';
            }
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getProfile. Query return " + query);
            return query;
        } catch (e) {
            logger.debug("Exception Nutanix_ClientServerScriptBridge.getProfile. Error:- " + e);
        }
    },
    noProfileVariableDetails: function() { //multi-profile- project function
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.noProfileVariableDetails.");
            var project = this.getParameter('sysparm_project');
            var blueprint = this.getParameter('sysparm_blueprint');
            var application_profile = this.getParameter('sysparm_application_profile');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            var response = configureScript.noProfileVariableDetails(project, blueprint, application_profile);

            return response;
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.noProfileVariableDetails. Error:- " + e);
        }
    },


    getSubnetDetails: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getServiceVariableDetails.");
            var project = this.getParameter('sysparm_project');
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getSubnetDetails. Project : " + project);

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.getNutanixSubnetList(project);

        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getProfileVariableDetails. Error:- " + e);
        }
    },

    getDeltaProject: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getDeltaProject.");
            var project_sysId = this.getParameter('sysparm_project').split(',');
            var catalog_sysId = this.getParameter('sysparm_catItem');
            var deltaProject = [];

            var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
            gr.addEncodedQuery('item_name.sys_id=' + catalog_sysId);
            gr.query();

            while (gr.next()) {
                var projects = gr.getValue('multiple_projects') + '';
                for (var i in project_sysId) {
                    if (projects.includes(project_sysId[i]))
                        continue;
                    else
                        deltaProject.push(project_sysId[i]);
                }
            }

            return JSON.stringify(deltaProject);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getDeltaProject. Error:- " + e);
        }
    },

    getDeltaProfile: function() {
        var logger = new Nutanix_Calm_Logger();
        var utils = new Nutanix_Calm_Utils();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.getDeltaProject.");
            var profile_sysId = this.getParameter('sysparm_profile').split(',');
            var catalog_sysId = this.getParameter('sysparm_catItem');
            var deltaProfile = [];


            var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
            gr.addEncodedQuery('item_name.sys_id=' + catalog_sysId);
            gr.query();

            while (gr.next()) {
                var profile = gr.getValue('multiple_application_profile') + '';
                for (var i in profile_sysId) {
                    if (profile.includes(profile_sysId[i])) {
                        continue;
                    } else {
                        var gr1 = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
                        gr1.addQuery('application_profile', profile_sysId[i]);
                        gr1.addQuery('catalog_item', catalog_sysId);
                        //			gr1.addQuery('isprofilevariable', false);
                        gr1.query();
                        if (gr1.next()) {
                            continue;
                        } else {
                            deltaProfile.push(profile_sysId[i]);
                        }
                    }
                }
            }

            return JSON.stringify(deltaProfile);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.getDeltaProject. Error:- " + e);
        }
    },
    fetchBlueprintName: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchBlueprintName.");
            var BlueprintsysId = this.getParameter('sysparm_BlueprintsysId');

            var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_calm_projects_blueprints_relationship');
            gr.addQuery('catalog_item', BlueprintsysId);
            gr.query();
            if (gr.next())
                return gr.catalog_item.name + '' + " " + gr.version + '';
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchBlueprintName. Error:- " + e);
        }
    },
    getProjectCount: function() {
        var blueprint = this.getParameter('sysparm_blueprint');
        var gr = new GlideAggregate('x_nuta2_nutanix_ca_nutanix_calm_projects_blueprints_relationship');
        gr.addQuery('catalog_item', blueprint);
        gr.addAggregate('COUNT');
        gr.query();
        var count = 0;
        if (gr.next()) {
            count = gr.getAggregate('COUNT');
        }
        return count;
    },
    getProfileCount: function() {
        var blueprint = this.getParameter('sysparm_blueprint');
        var profile = new GlideAggregate('x_nuta2_nutanix_ca_catalog_item_and_application_profile_relation');
        profile.addQuery('catalog_item', blueprint);
        profile.addQuery('state', 'active');
        profile.addAggregate('COUNT');
        profile.query();
        var count = 0;
        if (profile.next()) {
            count = profile.getAggregate('COUNT');
        }
        return count;
    },
    getProfilesysIdNameJSON: function() {
        var profile = this.getParameter('sysparm_profile');
        var array_profile = profile.split(',');
        var profile_JSON = {};
        for (var n = 0; n &lt; array_profile.length; n++) {
            var profile_gr = new GlideRecord('x_nuta2_nutanix_ca_application_profile');
            profile_gr.get(array_profile[n]);
            profile_JSON[profile_gr.sys_id] = {
                "name": profile_gr.name + ''
            };
        }
        return JSON.stringify(profile_JSON);
    },
    getSecretVaraiable: function() {
        var profile = this.getParameter('sysparm_profile');
        var array_profile = profile.split(',');
        var blueprint = this.getParameter('sysparm_blueprint');
        var answer = [];
        for (var n = 0; n &lt; array_profile.length; n++) {
            var gr_variable = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
            gr_variable.addEncodedQuery('isprofilevariable=true^data_type=SECRET^catalog_item=' + blueprint + '^application_profile=' + array_profile[n]);
            gr_variable.query();
            while (gr_variable.next()) {
                answer.push(gr_variable.variable.name);
            }
        }
        return answer.toString();
    },
    /*	migration_1_4 : function(){
    		var answer = '';
    		if(gs.getProperty('x_nuta2_nutanix_ca.Version1_4_3_migration_needed') == '0')
    		{
    		    var utils = new Nutanix_Calm_Utils();
    			
    			var blueprint = new GlideRecord('x_nuta2_nutanix_ca_nutanix_blueprint');
    			blueprint.addQuery('state', 'ACTIVE');
    			blueprint.query();
    			while(blueprint.next()){
    				var final_var_list = [];
    				var response = utils.makeCalmApiCall("get", '/blueprints/'+blueprint.uuid, "");
    				if(response.getStatusCode() == '200' || response.getStatusCode() == '201'){
    				   var app_profile_list = JSON.parse(response.getBody()).spec.resources.app_profile_list;
    					if(app_profile_list.length &lt;1)
    						   continue;

    				   for(var i  in app_profile_list){

    					   var variable_list =  app_profile_list[i].variable_list;
    						 if(variable_list.length &lt;1)
    								 continue;
    						  for(var j in variable_list){						  
    	// 						var var_index = final_var_list.indexOf(variable_list[j].name);
    	// 				        var_index === -1 ? final_var_list.push(variable_list[j].name) :( answer.inludes(blueprint.name)? '' : answer += " "+blueprint.name);
    							var variable_prop = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
    							variable_prop.addQuery('uuid', variable_list[j].uuid);
    							variable_prop.query();
    							if(variable_prop.next()){
    								continue;
    							}
    							else{ 
    							  answer += " "+blueprint.name;	
    							}
    					   }
    				   }
    				}
    			}
    		}
    		if(blueprint.getRowCount() == 0 || answer == ''){
    			gs.setProperty('x_nuta2_nutanix_ca.Version1_4_3_migration_needed', '1');
    		}
    			
    		return answer+"";
    	},*/
    credentialList: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.fetchOrderFormData.");
            var catSysID = this.getParameter('sysparm_catSysID');

            var configureScript = new Nutanix_CatalogFormScripts();
            return configureScript.credentialList(catSysID);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fetchOrderFormData. Error:- " + e);
        }
    },


    fetchProfilesBasisOnEnvironment: function() {
        var logger = new Nutanix_Calm_Logger();
        try {

            var body = new Object();
            var profile = [];
            body["api_version"] = "3.0";
            var metadata = {};
            var api_info;
            if (this.getParameter('sysparm_type') + "" == "x_nuta2_nutanix_ca_nutanix_marketplaceitems") {
                metadata.kind = "marketplace_item";
                api_info = "calm_marketplace_items";
            } else {
                metadata.kind = "blueprint";
                api_info = "blueprints";
            }
            metadata["categories"] = {};
            //sysparm_blueprint
            var project_reference = {};
            project_reference["kind"] = "project";
            project_reference["name"] = this.getParameter("sysparm_pro") + "";
            project_reference["uuid"] = this.getParameter("sysparm_proValue") + "";
            metadata["project_reference"] = project_reference;

            body["metadata"] = metadata;
            var specs = {};
            var environment_profile_pairs = [];
            var environment = {};
            environment["uuid"] = this.getParameter("sysparm_env") + "";
            var app_profile = this.getParameter("sysparm_profile");
            app_profile = app_profile.split(",");
            for (var i = 0; i &lt; app_profile.length; i++) {
                var profile_obj = {};
                var gr = new GlideRecord("x_nuta2_nutanix_ca_application_profile");
                if (gr.get(app_profile[i])) {
                    profile_obj.app_profile = {
                        "name": gr.name + ""
                    };
                    profile.push(gr.name + "");
                }
                profile_obj.environment = environment;
                environment_profile_pairs.push(profile_obj);
            }
            specs["environment_profile_pairs"] = environment_profile_pairs;
            var final_profile = [];
            body["spec"] = specs;
            this.appUtil = new Nutanix_Calm_Utils();
            logger.info("Nutanix_ClientServerScriptBridge.fetchProfilesBasisOnEnvironment Body:" + JSON.stringify(body));
            var response = this.appUtil.makeCalmApiCall('POST', '/' + api_info + '/' + this.getParameter("sysparm_blueprint") + "/patch_with_environment/validate", JSON.stringify(body));
            logger.info("Nutanix_ClientServerScriptBridge.fetchProfilesBasisOnEnvironment " + JSON.stringify(response.getBody()) + response.getStatusCode());

            if (response.getStatusCode() + '' == "200" || response.getStatusCode() + '' == "201") {
                response = JSON.parse(response.getBody());
                var environment_profile_pair = response.status.environment_profile_pairs;
                for (var i = 0; i &lt; environment_profile_pair.length; i++) {
                    var name = environment_profile_pair[i].app_profile.name + "";
                    var state = environment_profile_pair[i].state;
                    if (profile.indexOf(name) != -1) {
                        if (state == "valid") {
                            final_profile.push(name);
                        }
                    }
                }
            } else {
                logger.info("error in Nutanix_ClientServerScriptBridge.fetchProfilesBasisOnEnvironment");
            }
            return JSON.stringify(final_profile);


        } catch (e) {
            logger.error("error in Nutanix_ClientServerScriptBridge.fetchProfilesBasisOnEnvironment" + e);
        }

    },
    fetchEnvironments: function() {
        var project = this.getParameter("sysparm_project");
        var gr_pro = new GlideRecord("x_nuta2_nutanix_ca_nutanix_project");
        gr_pro.addQuery("uuid", project);
        gr_pro.query();
        var arr = [];
        if (gr_pro.next()) {
            var gr = new GlideRecord("x_nuta2_nutanix_ca_nutanix_environment");
            gr.addQuery("project", gr_pro.sys_id);
            gr.query();
            while (gr.next()) {
                var obj = {};
                obj["Name"] = (gr.name + "");
                obj["UUID"] = (gr.uuid + "");
                arr.push(obj);
            }
        }
        return (JSON.stringify(arr));
    },
    copyMpiPatching: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
			var project = this.getParameter('sysparm_project');
			var blueprint = this.getParameter('sysparm_blueprint');
			if((parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &gt;= parseFloat("3.2"))){
				logger.debug("Inside Nutanix_ClientServerScriptBridge.mpiPatching.");


				var profile = (this.getParameter('sysparm_profile'));
				// 			var profile_name ='';
				// 			var profileGr = new GlideRecord('x_nuta2_nutanix_ca_application_profile');
				// 			if(profileGr.get(profile[0])){
				// 				 profile_name = profileGr.name+'';
				// 			}
				var configureScript = new Nutanix_FetchConfigureSettingDropdown();
				return configureScript.copyMpiPatching(project, blueprint, profile);
			}
			else{
				var configureScript = new Nutanix_FetchConfigureSettingDropdown();
				return configureScript.mpiPatching(project, blueprint);
			}


        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.mpiPatching. Error:- " + e);
        }
    },
    variableArrayParser_client_script: function() {
        var logger = new Nutanix_Calm_Logger();
        try {
            logger.debug("Inside Nutanix_ClientServerScriptBridge.variableArrayParser");

            var type = this.getParameter('sysparm_type');
            var parent_uuid = this.getParameter('sysparm_parentUuid');
            var var_array = this.getParameter('sysparm_varJson');

            var configureScript = new Nutanix_FetchConfigureSettingDropdown();
            return configureScript.variableArrayParser_client_script(type, parent_uuid, var_array);
        } catch (e) {
            logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.variableArrayParser. Error:- " + e);
        }
    },
    type: 'Nutanix_ClientServerScriptBridge'
});]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-28 19:13:04&lt;/sys_created_on&gt;&lt;sys_id&gt;d018c57f37112300fdfc097973990e26&lt;/sys_id&gt;&lt;sys_mod_count&gt;282&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_ClientServerScriptBridge&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_d018c57f37112300fdfc097973990e26&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-20 07:00:48&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>1052121482</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>095887e5dbcc7c103e3c6a5b8a961956</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e6e0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_ClientServerScriptBridge</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>5504e7fc67cfe410908e53ec7671373b</update_guid>
<update_guid_history>5504e7fc67cfe410908e53ec7671373b:1052121482,faf3a7fc0fcfe410fb68e9375f530646:-1572742019,424d66fcbf0fe410461804059ea9b613:1275560152,93d990b4a087e410333a6301e0fce64b:-1053060227,8e89d8740487e410e75a976860acdd1a:1352115786,53c79834a087e4104562b63e9d3b54d1:75220655,c4c61cb0a187e4100e282756ec930771:-532925700,28773f2862c3e410db7742d5f68b0d27:-38544222,a6ecc7641d43e4100c4cfea8b606a5b0:-704917293,522b4720d543e4107bf2ad9dbf5f18e3:1761178894,7df44ad05543a410d97f9cf28b7ce1c4:-671711741,8d8f7910ed43a410371c600297fdd3ef:640932867,542e319c7003a4106e1ecd7d2e2ce8b6:413881848,9c21b114bf03a410066f73f0e0348cb1:-1975784582,f18da98cc4cbe010a2aeaba055114e2e:-1182076052,c3d79dcc8d4be010f518a27f02b38c22:286628835,c65ef52b6f7e6010569c1d2595e62017:1574671229,671284c95395649021e9bf86ae95c6a2:-1798525142,96f7c04f2dc1ec50fc3a3363b63e67ed:-924820790,ee5b0e9271492c500f2ff7042b3798eb:-1072175383,43f7cad242492c507a50cf363869e76b:158209914,544e3b869c812c5049e311e5e78771c5:880644709,ea3b3b06c1812c50c17446a439ecee80:543152726,16b3fb8a0b412c50c6b9c8333d70289c:799518062,23c768c2df41e850105d13d6636dad71:1273575756,6644e80e3201e850241dda3c6626b030:1893419777,a872a40ed901e8505bccf5e575fdc2fe:124208414,fec95846ae01e8506bbc7be81e34d8f4:-1259745400,0ba8900adbcda850a5421575ae395dca:-1411773714,479550863ccda850b4ba436bacf50854:495795212,3bd048c69a8da850bd3c51cf2e80fae9:2127393807,51cb3f71348da850d38e606e29c29d8e:960917161,553ab771618da85013a673b586cf1aaf:1691952765,5c79f731fa8da850c751e360ac5a457a:546903797,7b8877fd144da850dfd5b76b8bba1be5:-1475075701,40567b3dba4da8508faa9532d8f93fea:-2070185505,ffc3bbf9ec4da850bab7e2a06d0d2655:-1186210127,5a723779524da850115e530226b84a21:-1534487010,1a61ff79744da8506413aee9b8c413fe:-776330007,76e866b98189a85052c60df4e09d3703:225862160,0528a2f9fc89a850a011d6d6d973b642:-1653642524,48a923a5a901a8507278819238f09d0a:1107152166,f0e8afa5dc01a85004861d9d2c8ded25:170806457,2b08ef65b501a850815b8a8b099bcdb4:-2007732508,a396e365b301a85076fb5bb21cc1eac4:604286959,321caeed7c4d68502fbe7bc62e60278a:-986715070,ef2baaad944d68500dec54f3cf04dfdd:300070527,bf6a2aad274d6850db439ad45fb558c2:-1303157774,5b79ee2d694d6850acf2b515f99ed9dc:1717411726,a9d8ee2d4b4d685061c0c372939474d4:2042682380,6a57eae9dd4d68500d029c5e05a5aca3:-420916568,b9a66ea9784d6850cae34be1efaa806b:469150966,1c5266e5614d6850aefcdf0a369685d2:-420916568,0f9f1665194d685079511da596dcbadc:-780693086,b4be1a250e4d6850d3e2d17bbfd77e7d:1684617682,324a9a21fe4d6850677892f422253bb1:1004709379,b83cfdfb77bce05069bbbedd0b84aeb6:1202956061,949b3d7f4dbce0501b373fd86ca609bc:-80064605,5d89bdfb65bce0508d30bce0fb6569d2:1329650593,8248f5fb6ebce050555ffefb335dafec:-1404821254,5067f1bbe3bce0506f71c34994c98f2d:-136706052,33467d7bb6bce05014169e39e8b2f93e:1244217713,d83075f3a47ce0500c2cbd975db5e8f2:-136706052,8cbf2dffc63ce05026ac1f6e8803adaf:1949032831,7cb99fb947d4a01025ded59556122db0:1956392330,71786959f29c20100afbad5cf0519894:1749880423,600fdbf54c1ca41014a39381a5569db5:1825285262,0dae74919650641046abe9cc1d934b0a:818346226,e5b9fc9996106410750f9824d39c42cf:-1802695986,01e1f8991c106410f4661de937907bcf:818346226,6b44581520dc241099f5845d41bc253d:-1802695986,04f05c11ffdc2410155ecb261246f57c:818346226,4e390c99999c241036cc8fd5181b9b00:1197657154,4c4740593e9c241005c36088d9c5140e:-652669506,45658c95fb9c24108da15da51d93fcec:1456791420,ce13f455471c20109b52d77a08b63023:1931544952,ce3b738d53582010f38417e9c37e8b45:-343746566,0ed377491958201096074dee92bfd72c:-1889014731,289ea745d45820105735f8d878931067:-752772320,f2bda345b6582010afc35260f6bd0a9b:1931544952,815f5b8589182010f85c7f11e67d4633:896029596,a2959b8d9ed42010547d1078923946e3:1974254498,c3d117c194d42010316e7d239621d3f8:1718431264,1a9b4bc5dc9420108160c0ba16ce1d42:1154873632,158efa4d22542010d706447b6d25f06e:1931544952,1ceac6b0d9dce0106130705a3526bb47:818346226,261e0c011e44a010329ea89750c70bb6:-297495146,f88e8c3ee6279010defe4cb88347daff:-2114596452,d40a40fa0f279010937fd846e9ae02aa:-1072684777,67f7c47ad5279010c1f6061079839670:-1508815645,3a1688f6f12790104a87999160c3551e:-506495686,44917eae4e239010ace87b3881e4b52e:-453292565,9c74216a3c6f50100017cbecab6756ec:1704120742,79b1c59619a3541081ce707d6a8078b9:-757777704,3ef6f7c652af1410037984966db2582b:-1353144863,cc45b3861eaf14105b1407d8790a934e:1691174747,93d0b3c2fcaf14107b0747ec2d9b7728:1994049734,0ccb2b8ecf6f141090370f558d2d9e32:1319516589,80ccf4548fef901004909406734c9e9b:-1419446835,c544a8c89ee3901010c73694e96bd814:-1611725051,2f1b0423b15f945026adc75892cffbcd:-973350525,540bc0ef9d1f9450698d530f74f020d0:1768524489,052dea1e0fdf5410dd3eb285b864e31a:2082993841,80cc7b4aeed754100ae7fba1da99c958:133374141,118cf43988571410f0d775410cbad636:-311151564,647183957f97d010de0799a0c9c09353:-1464483874,59fd7e914197d010b9c80246b5381591:505985574,9ef53e1d3457d010745e68050a3a361b:-1835021188,7e9234787c135c10a29ac76dd12c0c1b:-886866650,443a54a449d31c1026a8889019665367:-972003283,a8f72cf408db5010ce85dd14aed34300:-265393012,94942434e5db501098287674fd1b11ea:390189069,305a0f101b1f10103e76b55d36432238:-803966239,cd37e2273a4b14d00e00c8ea4fc368c8:2083481506,0e49426f4ec714d0599183b88f710c67:-1853716016,0e5206e731c714d0033d11b6f766506f:-1191682670,43b77d2f078714d0c38db37eef69b93b:-1458451042,176e992f934714d07919ef26a5f6c826:-1835565315,ca4959a7b04714d0c7ea4d866703c363:-21776464,373da82b0fc314d056ec0fb088fdef10:-1189115584,2701ee95bc0b9c90334b8a3e82595306:-21776464,a9406e954a0b9c90ee9d9fa6b60c8f99:-487855012,c03f52950e0b9c90cbc28f1913741e43:-2002468985,8bfd9255e80b9c90c66269795ae07b98:-1781373952,51fc1e91a40b9c90cc46074347625f9d:940757277,65ba1e91410b9c9001c6b95a8858465f:430781602,bbff0299b1c79c90c52f4ca2949e3496:1930685275,c7cd136c287a5c5004fbbb5347b2893e:-978672403,1b68ca087bfad85095d4b515071460f9:1412890268,d8020cd7f32a18501542e492c89227b4:-1784815411,5c4ef3c70e2a18505023d691b958d135:1084107214,ad3b7347f92a18509aa3e286a0786cf2:-111277951,509eca4fede21850189cfd7f365949c3:664959234,ee95067ea3e6d450ebddf0996486c44a:1899846916,705ce53eb6a6d450467e419c8b937ace:-752552378,5e5ba9fa7da6d45061474e110d462b9d:-213033077,dff7e57ab8a6d45002fc5c5e962988c4:1416951758,49f68e62fe6e9450993595f852f20a4d:1318241134,db9f851db0229050d0538ad782511dd2:706123116,d888f899a0ee50508293a6650ba4fef6:327350398,93283c9965ee50507449f5431874b406:-1821556684,54c51cd9456e505023eea5b728f8dece:-1966536315,fdf1e964776edc1089104a23e244ead9:1459432044,276fb820f42edc10227a58f6a959e1db:-1629811561,96df1868f4aadc1086ce8de40a40874d:-975929926,c8acd8a43daadc102b0bd772c46503ff:1937685308,6ae654a0aaaadc1029e9c7faea41cdbf:-1094669477,d6bba1d053e2dc10e1ecb17018d740a6:2008385925,397b29d005e2dc10168eac126eaab390:-2100419,2f63615cfca2dc102eb25a7daaaf2a0a:1669130703,a2d22d1cefa2dc1096c21bfeaeb5171e:-840613039,15c1e1d897a2dc107c779fe741c246e8:1386909292,08ceb32dc61e54109ed8c3c85726f0c0:808682612,0332022d149254105dde4f93ab966bf8:1653264036,7e551fdd56da141085e9207e2a9b87ae:1324719197,ea73df1da0da1410b7ebe4e1a9c401bc:544689539,4d6ecfd928da1410d51c2dcc4756c67b:-522283268,67dd4b19bbda14100118806d4251dc56:-668770748,ef0887dd8c9a1410654461fc906f4215:-1490220843,82e8ba154e5a1410f589a1f824fc6aef:423898695,f2ce4ed1da5a1410190b0c8e8e660b4b:-1383971186,1f914e994f1a14104bae255f59bbc4ca:-1770010683,6327b055a956141053d2d8565f66a72c:1653264036,34558405751ad01003b3dfdee4d0df15:-1589461900,788f6f3401d6d0100852af66f704f761:918778182,181eda98761e5010b2c337b2ae57cb3b:1857624514,f0d92e003fde1010c6abde10f5f07e43:1996722411,82a5e984dd1e10107d82d965b18f1eae:-1143426329,223431d89db19010a4222adb0e2b9e67:-786280282,cdde615474b1901046e194a50f5c2c58:-1381902805,665fcd103cbd501055880a66e20c36e5:-20109215,64810b42ef5814109ea4d7cc4b94bfb8:634624677,2414b7413fd340100ab96503ad3b9043:1243306487,f90b4665057e0010f82f440f315e14d6:895557797,7e9a8a25ac7e0010108dbe64c495c61c:-240350596,091b78b66e2a08101d6d7b394bcc3c23:962085174,7ace8a2566f944108f2fbe7b6b4a8f47:-619924775,488d02e110f944100e0c10f37707451d:1436885151,25e698323c26c4102bee78fcb4ad32ef:-489282716,b6d69832c626c410e399918034141070:1489889436,e8fa48f6fde2c4100fdcd326b7c50319:-188913381,f4a7cb39f2da4c90535f3e4b459355d7:1489889436,8027cb3dadda4c90f05ddab210c7dbff:1400837256,d55c4ff0c6de8890dd45017934b5a404:98391846,845817a6df86c0904d3fc8f65e7e68b2:-1490974487,dd3e0bd12ececc506edc475b09c5a304:234685501,0d6d0391a7cecc505d9ec6630f0b9bbf:-187821833,e99b275b75d10010d9ac45e21dde275f:-773442937,737e74ee38dd4c100a3e164153202439:-773442937,4d8cc49d4d3b3300642ae47270967437:-196710761,66d1b049bf673300a2a00b6ac7858c8f:-606098479,f8ff1ef87ea33300a621c627b365b32a:-23074358,29cf8630f5a333004ebcedf484ef7da7:160107851,226745c109df3300058004ef4329662a:1287672369,4f1bceb73f723300fa88fd5f6fb3009b:1350944049,394b9eb2b5323300623f55faa66c4c4b:164513330,71995e32ea323300f11b8f37500d71f6:2003884812,a285315819b23300cc8d214fbbea6a85:1057742611,04a9a1506bb23300d1b4f99cd9f9aebc:-341199199,cf7e3d219ed2330016dbf489fd36512a:364011551,26daf3d0115b3300d7df0a1b6b499550:2100539652,c4b62a8e45833300c16c80827a0bddb5:-2106673940,51f5354e210333007d826a13b7233bae:-1660207223,188d8124770733002b1ce730932fd34c:-585697185,921b85a09807330016a904b0d3082cc6:-1717599105,27c341ac42c33300c1878076156cba9c:-1848319183,afd8ec28ac8333005317535b27652df6:-1862363404,a050073389f23300bc9bc30da69d915d:116100837,44b33a3734b23300bf5c3983878d35bb:-1901038290,4152f6dc851b33006c373ac56a3c2e79:-105921103,13f989f3a8763300c399af02bc036190:922083935,e3a38dbff8363300e9f74f2bcec3ef75:1049050207,8dbeb50cf4f237006308a5ee1e3576d7:837693920,a3a9414732aa7300517a6cfbe4d0f443:-1694841871,736841476daa7300df223627e81a422d:-455925086,7a28a8cf332a73007a7b0909479ac499:-1642389155,0fd6a08b872a7300f9e52681d837360d:1608356289,45bc1b5293263300aae802582ec50c42:1288712297,8cbd17d81402b30094b6c16e215cfb6f:671347422,95ad93d85c02b3009d7da25f84f6fd80:2079983789,ea7d57984f02b300eaf8cf0faafe94a7:-1913613458,0d2d9f589902b300ec0e2937e4a3e889:-613689569,f8e5be387db133009d0b755c13ad734c:1431244435,5fa5b27888b13300720322b21882f59f:1997697946,e515beb4bdb13300829f33cbc4048368:1431244435,d5053e38b8b13300bab751260a671e8f:-657735429,ecf4beb473b133002bcf5c564434c862:-79630822,179476b4fdb133000d731b614db85fbf:-1192774096,6ad1f6b4b2b13300d7c8c0ee6ea63cbe:485210149,ba0a6e27928933000a4e2fe32d914015:-2137698367,68e9e227a889330092302a8490680237:146338070,0889a227788933000c5cabc625e76f08:-956749601,8b39e2273f89330032cd047a57299611:-930249815,8aa8eae3a58933003eae4bb76ee97178:-368883869,50882ee361893300181f09206ae7b196:224801338,9138a6a33c89330056496dc125c69000:-930249815,42c4a623d489330063dbdf788883b81a:224801338,51c3e223d48933008dc6c5ffabc95687:-1249303010,d5a32a2320893300fe5a564075394510:-563858118,5fe75fd5e7f8f3006e0f24eb7a5c330b:1940707134,0b741b55abf8f30050d7f7f0108e4431:-916866881,b9245315c4f8f3000c0b0636bc813459:1940707134,286260248f347300b0cb116f22d5d9c0:-340599730,cbd5660089b033009ca9fbdb3f981550:242071225,38c4220025b03300549412e860594238:1248019066,b2f78345d938330022e8163616318bfb:-916866881,574e22c114f43300474f50d862c2e80f:740336665,430beca61560330049573282a2151f4a:1045069710,33c018ea0e20330036d2c9aa0c6c6eb1:-449477038,2a7516f516ac330007929f7f4e7b4cbf:-1728002532,4d9695a59da03300454632bd250dbe0e:-686833060,17afcd21cba0330007eeeb0c05a3bdf9:-5734586,3f9e3ce124603300ed9e2fe5bfafda18:580628307,9d9dc1a45c203300148ae094fbecbf95:1105464653,4becc9645e2033003fc6e2e7d784bc5b:205510779,016f2910b8a43300c7633a084025c163:-1192592317,92de2910aca433002241b8e17431705a:-1128989472,b48bad5c8c64330007532841b78f996b:-1192592317,9b0ba15c2b6433005396de3858f07949:-1332793684,266a651cdf6433008fcc5aaa42aecf53:819724920,ec6aed1c306433002a64cb90de5d0c79:-2108043731,48c9a11c1f6433009bcbdfbc7befb3be:501798792,be39e9980b64330061b4671af21df457:37355671,6668e958966433001b2955f4d92e87d8:1816329663,01286d9849643300d45ba91d14f9ec1f:530496545,e1f7e9989b643300eb75f50a9da1fe1f:1506922453,bd926d94bf6433001e428831acfeada9:905650760,dd3161944f643300df783a3b32cddd6e:-176307336,5eb06d542d64330002dc7de780563918:-1819690224,774e4d583d2433001ab14e226bcc5760:1134764883,b29d4558d224330091dc245a49e9c235:1987469742,2b3d0158b9243300dcb54951de8eb273:1209416231,04ec09942d2433006e1758b54ee95671:296884906,85bc055491243300245c470ec2d484aa:-1943028381,46f8cd5c63e03300b2b542d12334bf73:-814625405,30858d5c1ee0330072fe714488812287:1939235230,a035895c5ce03300a04351d79333fa80:-1314008035,60f18918b1e033000f1a0f66f6d4a976:-1054687432,4f8181d843e0330056ed54df419dfa38:-1368795912,ca6009187ae03300a89b739be8322c39:-558566977,478f745807e03300a441bcfb4b108eb4:422450520,b23e30185ae033000cdb8a1d0ef630c1:994389272,583db8d00ce0330014a3c2dc79f8ab7e:-558566977,79dc3cd02ae0330055df960a27057f66:-842402365,229bb8d0d2e03300f2af5174a5bae371:-1344945547,cd5ab890dee033000fc7b1ed6cc1ea65:1186390139,f899b890f1e03300185b436e2c12ee59:-1468292131,08a8f09cfda03300a12136cbf4b1308b:989091510,fed730dc59a03300af4428beef2095eb:-565203453,0807fc9c43a03300a28fa27f362188e5:-1351940065,5866749c05a03300ef37d63550908875:355025531,d1337c949da033006d8db87b34bf7b85:-1625264730,9a32b498fca03300691f1a0f89237a70:2135051506,9b9de4d450a033009747598e351eb6bd:1484497801,6d796814ada033005d2197f4e087edc7:-807304465,37269c941c603300f10b3475fb0db9f8:1643047043,f0445814ad603300eed47414119359d0:613711983,1002d4d80e203300c9c597f999d395a4:625752115,25514094102033005e43476a828e8b68:-1462088996,1830441471203300067bf95a3612f4f2:-448985038,db6f330413203300b19add01431e09e1:2118546340,3fce7bc080203300a06d7a1e2dc4fede:-996687411,dd706404146433008bbe9de4ca2e50f1:2083510104,6b10ac049d643300862c022785d8a554:21081769,5cef1804c864330099ab3d085a8828b2:2077550605,35bf58c0986433000e8d9e35fd8f74a7:-261333179,aede90c01e64330095c3b7646ab73313:833584705,c24ed4c0c2643300fb79c0ef90a49feb:256837824,5877548caf243300bfe10e06956be6f8:833828024,1c85940c232433006b8fee6c22ccb07c:-1617299660,2d04500c652433008dc474e8dc2089fc:-930269075,c9625c88b5243300b18cb3addc089fc9:-108223603,21ad0884d324330047d90a3168c56fb4:865994012,8b0d77fb5fd0330062d89d96ce9ce23a:-1453164596,9dfc73fb61d03300a34499d2f97ebd56:990251154,f61cf3fb65d0330079b8febeb7bcbeef:-426502655,2a7b33bbd6d0330004b081e761ce189b:1722936059,b3f6b3770bd03300ac654701993ab75c:2084357535,35463377d4d03300fe12d189f3ff1b4e:1814720369,a5f43b3780d03300c2adc765c330cd27:1683285281,91e43b371dd033004494a6e2badf2665:-1452414482,f084b737f6d03300802f386ba50c66c2:1994777878,7264373396d033008d8afe1b9bac8b54:1949531399,8234b733d5d0330096766d96870eef8f:1867943043,8d027b3339d033003bf2b3e75d39fb7a:-1529618159,9ef07b333cd033001c8a812646c39450:-1338511374,5d0cdb7337903300513e657281ba4ac7:-869957497,1d9418a20a607300779ad5d660d2f5cf:242071225,22a2d4a2a560730029d51557b7e8625c:468121486,ba87ff5685ac3300470aeca2417979c4:457185806,5d33379a942c330051b08077d53166ca:-324171223,5e0a901e982433003a5be9d03317e7d9:-695220937,480a9c1e21243300972a5fa9b6fc36f1:-1425888095,68492f426da0330018742cd0a1a520f3:1177801854,ceeeb5a4c66c7300271221bbf82981fd:-517859935,dd7e35642e6c730064092b4d1a0b083f:-56157088,f96ef9244d6c730027bf39f8bf8e701e:304172562,0ced7de0396c7300875590d7e7b964a8:-224793420,b74cbd204f6c730060feada1a46beebd:771833043,142a31ec452c73004f6c6b3d4b773d6f:-1946916351,65090bbbfa503300a1c25cc777e1a0d0:-226920833,ba540b732950330054da201eb2a10728:-1224007526,c11f36fb3510330063249c46357e7274:553711594,d2323aefe4d033006781c0dcb579190a:305266318,84513a6b2ed03300363049f5d599a935:-207817255,02e875ab6f10330044626629c49f808f:-157976821,1f67bd1bd514330044036c93c9942ce1:-1456705847,7201b91730143300d7b0aef5c03a3ab5:-1947629520,06d3ed9b34d033003151a5e006cc1259:1204133930,15536d1b7ad03300e6d3d9fe12887a24:-1947629520,a8db8d9bd8903300a38e7e1b9d1779ee:-29372202,eeb945977d903300373a1463f406aa12:1607548734,91d860df3c103300437c2418dc8b11aa:923734581,cbc7ac5fd31033004df989a90828e458:-486607586,b95258717b5433005bfe4c0aa2198d52:-636006611,998198312f543300065dab2115a1affc:-1100820701,43c4b3e556d033001cf71703b1c1d87f:-1331341088,130433e51ed03300ac877619a2a7b633:-381905904,35fba3adcd9033007356e526a0921a47:-915416134,62aaa3ad48903300652e5a8b66faac01:554674915,325a5be1aa9033007bef586a30bcde38:-622606522,2fc73ee93f10330047a8574d0e07545c:-615827199,20bf3758679c7300d66cc61e1da10e9a:99014874,d946f43f46803300b0ae4cd6d1d97957:-300316472,2464bf91614c33006090d33e6b1a26b5:2025526483,1ca8f9a0e2043300e6ffd90d262e78eb:-306487907,57827daca5c033000a46c97edb2644ce:-1632906844,8c2d9d6cac80330059ccacbce573e07b:2045530966,4feab4e468003300fb639fe9411d673d:-421049205,cd3c012fd13f2300c987e59ded575bd4:-1155114592,a7dd9eaabdff2300232f12511c66cc20:-1450768630,8abd1e2e08ff2300b0cc1333814b2ba0:-151118726,8d42900570b32300625fd75ade273e62:-991646019,0db19c4d867323003222b8dabdf8421a:13923263,1bb094c166b32300e4a8ed73ca2a4c98:155818461,e288444d0b732300c57f408658f19512:1859269087,d6d70c0d7e7323001ab168acc7c4f448:-2019175556,a897044dcb732300ac1330623d2f15f2:-1430529820,b0d6c00dfb732300eb0f27a6bd27aba2:-878062264,da164809c97323002a55c6be5e53192d:1947595948,0854844902732300a9b82b3b23c9fc64:-6698668,2dd0eb20b9336300d308a45b4821b241:599934240,ba2b4b20d4ff23006f43234222ba0e17:241717613,601f3ee466bf2300083546a7519fa9ff:599934240,0cde3e2872bf2300e78fc6ddbbd69f9b:-784709088,7b2d322814bf2300e23ae2342d7cef38:-2060232275,a20ad6d884f32300d7795f1a2ed187dc:-784709088,4c0a525817f323006dbca50591a874b5:562560447,2983a444c8332300477cf7ddfdd9eba3:2110445243,5819b4c7262f2300903905b4f740f265:1794159858,18da1861551a230059a4da88cf93e53e:-119375368,fc0106c75b426300737d1ea362be3c65:766145999,be647b72a10e2300ba61f59a16accb6b:-881141664,97e7a5d67b8ea300017b5a854573f08c:654402228,3da7a5d6118ea300d73757d4271e3694:1679016760,6ed66996af8ea3007cb315d5fe76522f:-362004021,0d28b456430ea3008a1dc4b075cb5775:1679016760,26d2ec6de406230073e77e1063b5c11f:-1877681683,9fffadb4a40e2b00baa1b5d2083ec947:-539943379,265ead74890e2b00cb29c8238bd4d2c3:945306347,fcf7c95bbd31e30026eceb01d93a973f:-948813167,2655f81faffda300bcac36971c2d3da1:-1897223609,14bd4d0f6c75a300fc22f003f3d24121:-890451674,da6dcd0fa475a3008d2d3f9a5843991a:-823618084,5ea2c9077275a3000c33a10f8c4702e0:-1507601882,83c16176547d6300e392f12f605bc079:1070470887,fb76e8a1dff5a30079aca374f90904e6:459750355,1914b79d0835a300dfdc41e6ef6141ec:-660112213,6212955daabd63000bf2b8264889aefe:-1176744584,a1bfc5dd65bd63001eca863d7b45bf9e:2033454981,8c3403f4fafd23005dd30f89451b8fed:1116140324,2451363c2dbd2300360de60bdb83aaf4:229073458,6231fef859bd2300237e41b1519a4b95:683530586,a2df22f812bd2300d155ec0e69a7065d:-681667144,fb3a709ddf6d2300cc5fc2a09ac99aca:1461204843,37da9bb095212300ab2488cb274b5788:-2142886880,169918b8a9e5230049b34608d4c84d0d:-171081800,bf79aa6c17a12300e8beee32ee6951a0:1145764236,28856ea42ea12300fb5dd7ec6dd873ae:770636087,4f42ee20e4a1230065cb815a5893f72d:-1333210511,84326e604aa12300e7dcf34ddd869739:657952991,6188951cf1e5630036e3aaa71aace676:-1860823237,10159d18a2e563005a96007e408f0c64:688998715,a064911875e56300c9c0f6c4cb20b8bf:231740739,cb231d9490e5630026b0ca34e99b3458:1274530003,6af7ed33a391230086d4e63524af7e22:187149776,1e1e4dffdc1123000c2b58f6673277bc:-755183496</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_5febba172f7e6810da242f2ef699b676</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="INSERT_OR_UPDATE"><cleared>false</cleared><disabled>ignore</disabled><field>mid_application</field><mandatory>true</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-15 12:15:22</sys_created_on><sys_id>5febba172f7e6810da242f2ef699b676</sys_id><sys_mod_count>0</sys_mod_count><sys_name>mid_application</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_5febba172f7e6810da242f2ef699b676</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-15 12:15:22</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Toggle credential system">48918ffe1b1ecc50ac43877ddc4bcb96</ui_policy><visible>true</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>-1489537832</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>095887e5dbcc7c103e3c6a5b8a961959</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98dd80000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>mid_application</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>d41c7ed3087e6810398551060ebf93ef</update_guid>
<update_guid_history>d41c7ed3087e6810398551060ebf93ef:-1489537832</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_846069cfdbd1230084249235ca9619d2</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="Marketplace Items" section_id="846069cfdbd1230084249235ca9619d2" sys_domain="global" table="x_nuta2_nutanix_ca_nutanix_marketplaceitems" version="3" view=""><sys_ui_element action="INSERT_OR_UPDATE"><element>x_nuta2_nutanix_ca_Nutanix_logo_on_config.xml</element><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>6ef27410db7d5010d1562fb74896199d</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter display_value="Nutanix_logo_on_MarketplaceItems">4400a5cfdbd1230084249235ca961943</sys_ui_formatter><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type>formatter</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.begin_split</element><position>1</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>a2f27410db7d5010d1562fb74896199e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type>.begin_split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>name</element><position>2</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>26f27410db7d5010d1562fb74896199e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>category</element><position>3</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>a6f27410db7d5010d1562fb74896199e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>sc_catalogs</element><position>4</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>2af27410db7d5010d1562fb74896199e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>version</element><position>5</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>aaf27410db7d5010d1562fb74896199e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>template_type</element><position>6</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>2ef27410db7d5010d1562fb74896199e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>appfamily</element><position>7</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>aef27410db7d5010d1562fb74896199e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>support_status</element><position>8</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>22f27410db7d5010d1562fb74896199f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.split</element><position>9</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>a2f27410db7d5010d1562fb74896199f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type>.split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>sys_scope</element><position>10</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>26f27410db7d5010d1562fb74896199f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>owner_name</element><position>11</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>a6f27410db7d5010d1562fb74896199f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>author</element><position>12</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>2af27410db7d5010d1562fb74896199f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>app_state</element><position>13</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>aaf27410db7d5010d1562fb74896199f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>sys_created_on</element><position>14</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>2ef27410db7d5010d1562fb74896199f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>sys_updated_on</element><position>15</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>aef27410db7d5010d1562fb74896199f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.end_split</element><position>16</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>22f27410db7d5010d1562fb7489619a0</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type>.end_split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>description</element><position>17</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>a2f27410db7d5010d1562fb7489619a0</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>deprecation_reason</element><position>18</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>26f27410db7d5010d1562fb7489619a0</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>picture</element><position>19</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-30 05:20:42</sys_created_on><sys_id>a6f27410db7d5010d1562fb7489619a0</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-30 05:20:42</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>bp_type</element><position>20</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-18 13:42:56</sys_created_on><sys_id>9f50a2d32fdee010962a877cf699b68c</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Marketplace Items" display_value="Marketplace Items" name="x_nuta2_nutanix_ca_nutanix_marketplaceitems" sys_domain="global" view="Default view">846069cfdbd1230084249235ca9619d2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-18 13:42:56</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_section action="INSERT_OR_UPDATE"><caption>Marketplace Items</caption><header>false</header><name>x_nuta2_nutanix_ca_nutanix_marketplaceitems</name><roles/><sys_class_name>sys_ui_section</sys_class_name><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-10-26 12:37:28</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>846069cfdbd1230084249235ca9619d2</sys_id><sys_mod_count>3</sys_mod_count><sys_name>Marketplace Items</sys_name><sys_overrides/><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_section_846069cfdbd1230084249235ca9619d2</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2018-12-06 12:09:46</sys_updated_on><sys_user/><title>false</title><view display_value="Default view" name="NULL">Default view</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>353626477</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>095887e5dbcc7c103e3c6a5b8a96195c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d480000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_marketplaceitems</table>
<target_name>Marketplace Items</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>d750a2d36bdee01070ba0f97cdc90d8f</update_guid>
<update_guid_history>d750a2d36bdee01070ba0f97cdc90d8f:353626477,2af27410e97d5010e1c5dfedbaa13aa2:-436513049,b73278dcc73d50108fa7ddf5e92f7963:-1544660323,cdc0309cb23d5010ecdd2b140d4eedab:1487205523,8da451cb7dad5010ecbacf07ae952e0d:-1544660323,5e43bcc346e950104049c76ca15194b3:1623892891,2ee2788336e950109ca67d544318f14b:1492104775,af1defceaa16230064739f51fea33e2d:273323109,063dd7c299162300f1ea052717154def:1188566813,382311650656e3008659a90c4589dc9b:-1688575875,52d25d259c56e30032155a18d358068c:2029266699,03c90520479e23008a9a4ab41410cdfb:-617330265,44f7cd6c2f5e230041ddd2fe31689f81:-1403136692,9e97096c405e23001c0997093727bf7a:-1916791708,5657816c715e23000b131556a9c19dec:540568266,4261bc9c40d2230038fb25bc7da2cad2:1153900754,29213c9c86d22300d9aa7e4e3f6bbd1e:1050057778,a111f89c00d2230064091ef468a7df48:-923628484,0e332810c0d22300d3ecbc5933e38fbd:2131615285,0523a41034d22300704fa2a8c996fe88:-2146896171,01d2acdc4a9223007331da3b871c7140:-1551232439,0045c10c4ace6700ddd5e2ba674bc686:1657146967,f425010c35ce67001037b4a2238786a0:1287874461,b5a489c81dce670013e643f67809216f:-1186506732,e07485c8d9ce6700396c19e909141f59:-195141510,390401c8a8ce6700f4b70cf1fd64738e:-903062885,c4a596d24ff9230062a08f5de2820ddf:1399396038,8060a9cf3cd1230007f5fbf241b242b5:-1508620347</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_documentation_x_nuta2_nutanix_ca_calm_plugin_configuration_calm_saas_and_servicenow_en</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_documentation element="calm_saas_and_servicenow" label="Connect to Calm on Public Cloud" language="en" table="x_nuta2_nutanix_ca_calm_plugin_configuration"><sys_documentation action="INSERT_OR_UPDATE"><element>calm_saas_and_servicenow</element><help/><hint>Connect to Calm on Public Cloud</hint><label>Connect to Calm on Public Cloud</label><language>en</language><name>x_nuta2_nutanix_ca_calm_plugin_configuration</name><plural>Connect to Calm on Public Clouds</plural><sys_class_name>sys_documentation</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-02 08:51:37</sys_created_on><sys_id>8444cf4a2f866410152959ab2799b6dd</sys_id><sys_mod_count>2</sys_mod_count><sys_name>Connect to Calm on Public Cloud</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_documentation_x_nuta2_nutanix_ca_calm_plugin_configuration_calm_saas_and_servicenow_en</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-10 11:47:08</sys_updated_on><url/><url_target/></sys_documentation></sys_documentation></record_update>]]></payload>
<payload_hash>1895343821</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0958cb25dbcc7c103e3c6a5b8a96199c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d530000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Plugin Configuration.Calm SaaS and ServiceNow</target_name>
<type>Field Label</type>
<update_domain>global</update_domain>
<update_guid>0529347c5bd22c104960118f475c9beb</update_guid>
<update_guid_history>0529347c5bd22c104960118f475c9beb:1895343821,a668f83ce6d22c105edde2beaedac0cd:1855448705,9c44038ac58664108ac0191066c5d940:-1445906853</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_bbb0915f37896300fdfc097973990eaf</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;true&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;x_nuta2_nutanix_ca_nutanix_process_queue&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition table="x_nuta2_nutanix_ca_nutanix_process_queue"&gt;state=ready^EQ&lt;item display_value="Ready" endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="ready"/&gt;&lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;&lt;/filter_condition&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;CALM Queue Post Insert BR&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
	this.logger = new Nutanix_Calm_Logger();
	
	// Add your code here
	try{
		var topic = current.topic+'';		
		current.state = "processing";
		current.update();
		
		var call="";
		var callFunction ="";
		switch (topic) {
				
			case "startMigration" :                 call = new Migration_Script();
													callFunction = call.updateCatalog();
													current.comments = "Migration Completed.";
													current.state = "complete";
													break;
				
			case "startMigration_1_4_4" :           var appUtil = new Migration_Script();
													appUtil.addEnvironmentVariableToAllCatalogs();
													current.comments = "V_1_4_4Migration Completed.";
													current.state = "complete";
													
													break;
				
			case "start1_4_3_Migration" :           var appUtil = new Nutanix_Calm_Utils();
													appUtil.migrateV1_4_3();
													current.comments = "V_1_4_3Migration Completed.";
													current.state = "complete";
													
													break;
				
			case "startInventorySync" :             call = new Nutanix_ImportUsers();
													call.startUsersImport();
				
													call = new Nutanix_ImportUsers();
													call.startGroupsImport();

													call = new Nutanix_Import_Subnets();
													call.startSubnetImport();
				
													call = new Nutanix_ImportProjects();
													call.startImportProjects();

													//call = new Nutanix_Categories();
													//call.importCategoryData();

													call = new Nutanix_ImportBlueprints();
													call.startImportBlueprints();

													call = new Nutanix_Import_Marketplace_Items();
													call.startImportMPI();

													call = new NutanixAppIntermediateDao();
													call.startAppImport();
													call.startDeletedAppImport();
				
				                                    current.comments = "Imports Started.";
													current.state = "complete";				
													
													break;
				
			case "ProcessApplicationProfiles" :     call = new Nutanix_ImportApplicationProfiles();
													callFunction = call.processApplicationProfiles(current);													
				                                    current.comments = "Application Profiles processed";
													current.state = "complete";
				
													current.process_name = 'Process application profiles';			
													current.description = 'This process invokes the import of application profiles.';
													break;				
				
				
			case "importApplications" :             call = new NutanixAppIntermediateDao();
													call.importApplications(current);
				                                    current.comments = "Aplications imported";
				                                    current.state = "complete";
				
													break;		
				
			case "processImportedApp" :             call = new NutanixAppIntermediateDao();
				                                    current.comments = "Imported Applications processed";
													call.processImportedApp(current);													
				                                    current.state = "complete";
				
													break;	
				
			case "importDeletedApplications" :      call = new NutanixAppIntermediateDao();
													call.importDeletedApplications(current);
				                                    current.comments = "Deleted Aplications imported";
				                                    current.state = "complete";
				
													break;		
						
			
			case "importProjectData" :              call = new Nutanix_ImportProjects();
													callFunction = call.importProjectData(current);
													current.comments = "Projects imported";
													current.state = "complete";
				
													break;
				
			case "processImportProjectData" :       call = new Nutanix_ImportProjects();
													current.comments = "Imported Projects processed";
													callFunction = call.processImportProjectData(current);
													current.state = "complete";
				
													break;
				
			case "importBlueprintDataByUUID" :      call = new Nutanix_ImportBlueprints();
													callFunction = call.importBlueprintDataByUUID(current);
													current.comments = "Blueprint details imported";
													current.state = "complete";
				
													break;
				
			case "processImportBlueprintData" :     call = new Nutanix_ImportBlueprints();
													current.comments = "Imported Blueprint processed";
													callFunction = call.processImportBlueprintData(current);
													current.state = "complete";
				
													break;
			case "importMPIData" :                  call = new Nutanix_Import_Marketplace_Items();
													callFunction = call.importMPIData(current);
													current.comments = "MarketplaceItem imported";
													current.state = "complete";
				
													break;
				
			case "processImportMPIData" :           call = new Nutanix_Import_Marketplace_Items();
													current.comments = "Imported MarketplaceItem processed";
													callFunction = call.processImportMPIData(current);
													current.state = "complete";
				
													break;
				
			/*case "createUserCriteria" :             call = new Nutanix_ImportBlueprints();
													current.comments = "Adding User Criteria.";
													callFunction = call.createUserCriteria(current);
													current.state = "complete";
													break;*/
				
			case "MapCatItemToProject" :            if(current.payload != "") {
														call = new Nutanix_ImportProjects();
														current.comments = "Mapping Catalog Items to Projects";
														callFunction = call.MapCatItemToProject(current);
														current.state = "complete";
				
														break;
													}
													else{
														current.comments = "No Project reference list for SysId:"+current.parameter;
														current.state = "complete";
														break;
													}
				
			case "ProcessingCredentials" :           call = new Nutanix_ImportCredentials();
													 current.comments = "Imported Credentials processed";
													 callFunction = call.ProcessingCredentials(current);
													 current.state = "complete";
				
													 break;
												
			case "processCatalogVariables" :        call = new Nutanix_CreateCatalogVariables();
													callFunction = call.processCatalogVariables(current);
													current.comments = "Blueprint/MPI variables created.";
													current.state = "complete";
				
													break;
				
			case "processingIcon" :                 call = new Nutanix_Import_Marketplace_Items();
													callFunction = call.processingIcon(current);
													current.comments = "Imported MarketplaceItem Icons processed.";
													current.state = "complete";
				
													break; 
				
			case "startImportEnvironment":          call = new Nutanix_ImportEnvironment();
													callFunction = call.startImportEnvironment(current);
													current.comments = "Import of environments";
													current.state = "complete";
				
													break; 
				
			case "processImportedEnvironment" :     call = new Nutanix_ImportEnvironment();
													callFunction = call.processImportedEnvironment(current);
													current.comments = "Processing of environment";
													current.state = "complete";
				
													break; 
				
			case "processEnvCredentials" :          call = new Nutanix_ImportCredentials();
													callFunction = call.processEnvCredentials(current);
													current.comments = "Processing of environment credentials";
													current.state = "complete";
				
													break;
				
			case "importUsers" :                    call = new Nutanix_ImportUsers();
													callFunction = call.importUsers(current);
													current.comments = "Updates the UUID of imported users to those of calm";
													current.state = "complete";
				
													break;
				
			case "importGroups" :                    call = new Nutanix_ImportUsers();
													callFunction = call.importGroups(current);
													current.comments = "Updates the UUID of imported groups to those of calm";
													current.state = "complete";
				
													break;
				
			case "processProviders" :               call = new Nutanix_ProcessProviders();
													callFunction = call.processProviders(current);
													current.comments = "Processing of environment providers";
													current.state = "complete";
				
													break;   
				
// 			case "processAWStorage" :               call = new Nutanix_ProcessProviders();
// 													callFunction = call.processAWStorage(current);
// 													current.comments = "Processing of AWS storage";
// 													current.state = "complete";
				
// 													break;   
				
// 			case "processTags" :                    call = new Nutanix_ProcessProviders();
// 													callFunction = call.processTags(current);
// 													current.comments = "Processing of Tags";
// 													current.state = "complete";
				
// 													break;    
// 			case "processBlankDisk" :               call = new Nutanix_ProcessProviders();
// 													callFunction = call.processBlankDisk(current);
// 													current.comments = "Processing of BlankDisk";
// 													current.state = "complete";
				
// 													break;    
// 			case "processNetworkInterfaces" :       call = new Nutanix_ProcessProviders();
// 													callFunction = call.processNetworkInterfaces(current);
// 													current.comments = "Processing of NetworkInterfaces";
// 													current.state = "complete";
				
// 													break;  
				
// 			case "processDisks" :                   call = new Nutanix_ProcessProviders();
// 													callFunction = call.processDisks(current);
// 													current.comments = "Processing of Disks";
// 													current.state = "complete";
				
// 													break; 
				
// 			case "processOSProfile" :               call = new Nutanix_ProcessProviders();
// 													callFunction = call.processOSProfile(current);
// 													current.comments = "Processing of OS Profile";
// 													current.state = "complete";
				
// 													break;    
				
// 			case "processNetworkProfiles" :         call = new Nutanix_ProcessProviders();
// 													callFunction = call.processNetworkProfiles(current);
// 													current.comments = "Processing of Network Profiles";
// 													current.state = "complete";
				
// 													break; 
			
// 			case "processDataDisk" :                call = new Nutanix_ProcessProviders();
// 													callFunction = call.processDataDisk(current);
// 													current.comments = "Processing of Data Disk";
// 													current.state = "complete";
				
// 													break; 
			
// 			case "processNutanixDisk" :             call = new Nutanix_ProcessProviders();
// 													callFunction = call.processNutanixDisk(current);
// 													current.comments = "Processing of Nutanix Disks.";
// 													current.state = "complete";
// 													break;
				
			case "processSubnets" :                 call = new Nutanix_Import_Subnets();
													callFunction = call.processSubnets(current);
													current.comments = "Processing of Subnets.";
													current.state = "complete";
				
													break;
				
			case "importRecoveryPoints" :           call = new Nutanix_ImportRecoveryPoints();
													callFunction = call.importRecoveryPoints(current);
													current.comments = "Import of Recovery Points.";
													current.state = "complete";
				
													break;
				
			case "processAhvRecoveryPoints" :       call = new Nutanix_ImportRecoveryPoints();
													callFunction = call.processAhvRecoveryPoints(current);
													current.comments = "Processing of AHV Recovery Points.";
													current.state = "complete";
				
													break;
				
			case "processAwsRecoveryPoints" :       call = new Nutanix_ImportRecoveryPoints();
													callFunction = call.processAwsRecoveryPoints(current);
													current.comments = "Processing of AMIs.";
													current.state = "complete";
				
													break;	
			
			case "processVmwareRecoveryPoints" :    call = new Nutanix_ImportRecoveryPoints();
													callFunction = call.processVmwareRecoveryPoints(current);
													current.comments = "Processing of VMWare Recovery Points.";
													current.state = "complete";
				
													break;	
				
			case "startInventoryDelete" :           call = new Delete_Inventory();
													call.deleteInventory();
													current.comments = "Starts the deletion of calm snow data.";
													current.state = "complete";
													gs.setProperty('x_nuta2_nutanix_ca.Delete_Flag','0');
													this.logger.info("Inventory deletion has successfully completed.");
													break; 
				
			default :                               this.logger.error("Method :: "+topic+" not found inside CALM Queue Post Insert BR.");
													break;
				
		}
		
	}catch(e) {
		current.state = "error";
		current.comments = "Exception caught inside CALM Queue Post Insert BR : "+e; 
		this.logger.error("Exception caught inside CALM Queue Post Insert BR : "+e);
		
	}finally{
		current.update();
		this.logger.info("CALM Queue Post Insert BR ran sucessfully");
	}

})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-14 19:58:34&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;bbb0915f37896300fdfc097973990eaf&lt;/sys_id&gt;&lt;sys_mod_count&gt;79&lt;/sys_mod_count&gt;&lt;sys_name&gt;CALM Queue Post Insert BR&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_bbb0915f37896300fdfc097973990eaf&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-18 21:35:49&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;async&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=bbb0915f37896300fdfc097973990eaf"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1786798839</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0958cb25dbcc7c103e3c6a5b8a96199f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e620000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_process_queue</table>
<target_name>CALM Queue Post Insert BR</target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>e71998a4b60ba41034a118ff5a8e5651</update_guid>
<update_guid_history>e71998a4b60ba41034a118ff5a8e5651:-1786798839,623a85d3b781601016e92fb35dc699f8:850604808,fad1a024a013501032408c827ab59a01:-860939647,566a6c7be3219410dbbead8ca62ff506:1555223931,6dc9283bfc21941033f1b5864d1d4ec2:810007801,a1fe59c64c255010bd664dca27b981a6:810007801,2dd3a5adab3944103b4409a210808b90:1442195893,072da9eac73bb300ba488f9282721c28:1828341754,b5a5818575df330064cc8be698d53c84:-1264698420,0ae9a550edb2330083ac781245d72418:-1790012302,ca99f6de7b623300810be0bba9d52cc0:347639304,65aa86330a3a3300394108f0158f806a:-218226572,ff131311ffa23300901b0b72d7ba7560:182684174,5aeb611b15bc3300b435a8e4e3d31175:2058851827,f6790cdac2e033007dc047d33e0acdf6:1329591928,6f2572e34e143300a219428e0d6cdf12:-1560476379,23d0fe6ba5d033002a9730c6a1b597b6:-298398622,7f41802c095033006cfb04bc310016bf:-1808920150,eb64f1c3840c3300b58be800684825d8:-1082137276,e332b54fb0c833004eea7a624cfec946:-2046263791,373231c120832300baa39ec469345073:-957216339,bde079cd924323002aceaca4fa18eb40:-831597633,36e5e2447f322300ad16271df493a507:-146187127,faaaa5933faa63002138751fe281ba61:864117116,8b9dca8bcaa26300161c0d5a0fc06b47:-117261664,ad26380b71ee23000794f68dc71f9f99:-960480305,f220b32636262300b19720b55e3fbfd5:-256310908,ae10b326ee26230094d58cb6ecf00fce:-1648393065,bcff6326172623005f7ce39bba763d12:1079254834,522563ae76e223007bc54dd706d17880:977754310,c34fdc86dda26300db8df302509e9f82:794859114,4e355d8cc662230032aa216cf016d33f:-1497518300,d371d1880b6223005550ea114a9b2838:-56043395,674a490402622300cc98dc2eb301a13c:-1456565443,f183113dd4122300d6929e92d60ce594:-1651936013,6c1b8d1068522300b0cd1b1d0f8ba992:923013573,e896541f9d02a3007e1a8ae3c8c1eac2:-1408485879,48151c5bde02a30013fb51a54999f2d2:-494754017,23a6ddcd91466b0059c15a7fcc2c6da0:-936893512,0e848941d8466b00634093d4a600b5ef:1063480246,7764494153466b00bbd24126f39a3da0:-175139695,aaec3cc956066b008408246d162573dc:2130389375,dd04644989c26b00f09ef8706f818400:-1294107837,b7e8adc717f5a300fbc71e061366abfd:2029954177,f8ab741e0ff5230052cd48b7d5b0655d:-1874103587,76a465394635e300ea845393180b83f9:54423497,0cc40db16ef1e3007f961be3efcdcd7f:1280628513,1defe0a910f5a300b828d67214b241be:-662906672,2c0ee4e50cf5a3008765e45f25dacf76:-1450709752,b07724e1c4f5a3002956ea81facbb776:-1529791267,94ee5f0187b9630090f940471cfff6de:-1162330319,138e570154b96300d69ddbfec5c20494:1533409521,c015e4554e6d2300f651b69bb1a8c8cc:-148526255,f4041b28c32523003de907be98b7ab1f:1784191909,88ebda3765152300d7aaa6f973f16827:1836702593,5e5b5a37c81523006cf79b390043662c:-905503957,5cb5bc4fe05123005424628ebeb4aa27:-2141048635,f967ccc3c2112300f0042e4a11e8a592:-279721595,92f38843351123009dbef46787a137fb:237522898,84a3213e979523005430521238d53412:-1445107717,d38559b273952300a5ea3b920f6857ab:1269245409,ff2845ba0a552300110193f58d36ad91:1753065237,8a91c47ede9123009978778665e3f706:996518732,3d0a7be67d91230011625b289c3f7bdd:-129430740,4ac9f3e6999123008b22c910895032bc:1810600742,2ea97be68391230020a3722b45a1b1d3:53090790,a1f83f660f9123005cc457e3aca10a9f:-559054214,e8e8ff663c912300cb3d49e9d9d47f61:1336326260,78fa8be6e7112300a803b0e766a363f6:7505214,07d717927f9d2300dbfdea8c98ac472b:-429338116,aae18c7a2ad1230000a18e692b7ecdd1:-1373919756,b35ff7e63fd12300a1be23ee7265877a:-1120294527,db13ff66469123001f1f82f21e4dee96:350511550,e936ef667a9123003153d10f3932ff0f:396412953,2fe607620b512300d44964d0aafe890c:604204092,2dce5756ac55230029c24c930f4d6ceb:-1593874500,e45e9792715523006846a6ded6c483a4:190119948,75d6531278552300f50b3d075b82ca69:2023833913,609c0f96481523000ff28285411be7a4:234303908,74cbc39642152300e1eb38d8f6bc6e85:448758465,0c3bc35655152300c9b979bec4612d4b:1417140707,993a8bd299152300b985f39505e4e97e:-396633100,62a84bd2ca15230063aa7c0b8c0a349f:1062555803,850ffe1e4bd12300b7dfb7e1bfda5e0d:2126984610,cf9a1608b451230017a907bb61523936:-868424183,b8dccd2b5a4523000669646534f2bdf1:360327139,be5b416b10452300a5707f7bfd346df9:-702058998,7e72615b28c96300600a575a54685303:980471509,554fd59727c96300f2ff10e8d12ffa8d:213021568,6f1f5597bcc96300b0639a63798eac53:1147603682,7fae9d57f7c963009ae232f26b6a4860:-1194791625,9372519ffc896300075f5bebdbd6619c:131003476,1c42d55f318963006dd01eb3259dfd5c:-1921484377</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_a2e91eb5db81230084249235ca9619eb</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Nutanix_ImportProjects&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Nutanix_ImportProjects&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Nutanix_ImportProjects = Class.create();
Nutanix_ImportProjects.prototype = {
    initialize: function() {
        this.appUtil = new Nutanix_Calm_Utils();
        this.logger = new Nutanix_Calm_Logger();
        this.pageBreaker = 20;
        this.activeProject = [];
    },

    _deactivateDeletedProject: function() {
        try {
            this.logger.debug("Inside Nutanix_Importproject._deactivateDeletedProject");

            var activeProjectQuery = 'state=COMPLETE';

            for (var i in this.activeProject) {
                activeProjectQuery += '^uuid!=' + this.activeProject[i];
            }

            var inactiveProjectSysID = [];

            var project = new GlideRecord(this.appUtil.configuration.table.Project + "");
            project.addEncodedQuery(activeProjectQuery);
            project.query();

            while (project.next()) {
                project.state = 'INACTIVE';
                inactiveProjectSysID.push(project.update());
            }
			this.logger.debug("Nutanix_Importproject._deactivateDeletedProject Deactivated: "+inactiveProjectSysID.length+" "+JSON.stringify(inactiveProjectSysID)+" Projects.");
            var inactiveCatItems = [];

//             var catGr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
//             catGr.addEncodedQuery('state!=inactive^state!=deleted^multiple_projectsIN' + inactiveProjectSysID.toString());
//             catGr.query();

//             while (catGr.next()) {

//                 inactiveCatItems.push(catGr.item_name.name);

//                 catGr.state = 'inactive';
//                 catGr.update();
// 				this.logger.debug("Nutanix_Importproject._deactivateDeletedProject Deactivated catalog item "+catGr.item_name.name+" Logic, associated project mark as inactive.");
//             }

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ImportBlueprints._deactivateDeletedBPandcatalogs. Error :- " + e);
        }
    },

    _multiPCSubnet: function(accounts) {
        try {
			this.logger.debug("Inside Nutanix_ImportProjects._multiPCSubnet");
            for (var account in accounts) {
                var body = {
                    "entity_type": "virtual_network",
                    "group_member_attributes": [{
                            "attribute": "name"
                        },
                        {
                            "attribute": "cluster_uuid"
                        },
                        {
                            "attribute": "cluster_name"
                        },
                        {
                            "attribute": "vlan_id"
                        }
                    ],
                    "filter_criteria": "account_uuid==" + accounts[account],
                    "group_member_offset": 0,
                    "group_member_count": 100
                };
                var response = this.appUtil.makeCalmApiCall("POST", "/nutanix/v1/groups/list", this.appUtil.stringify(body));
                if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {
                    var parsedJSON = this.appUtil.parse(response.getBody());
                    var total_entity = parseInt(parsedJSON.total_entity_count);
                    for (var i = 0; i &lt; total_entity; i++) {
                        var data = parsedJSON.group_results[0].entity_results[i].data;
                        var cluster_uuid = '';
                        var cluster_name = '';
                        var subnetName = '';
                        var subnetUUID = JSON.stringify(parsedJSON.group_results[0].entity_results[i].entity_id);
                        for (var j in data) {
                            if (data[j].name == 'cluster_uuid') {
                                cluster_uuid = JSON.stringify(data[j].values[0].values[0]);
                            }
                            if (data[j].name == 'cluster_name') {
                                cluster_name = JSON.stringify(data[j].values[0].values[0]);
                            }
                            if (data[j].name == 'name') {
                                subnetName = JSON.stringify(data[j].values[0].values[0]);
                            }
                        }

                        this.logger.debug('Nutanix_ImportProjects._multiPCSubnet i ' + i + 'subnetUUID ' + subnetUUID + ' subnetName ' + subnetName + ' cluster_uuid ' + cluster_uuid + ' cluster_name ' + cluster_name);
                        var grSubnet = new GlideRecord(this.appUtil.configuration.table.subnet);
                        grSubnet.addEncodedQuery('uuid=' + JSON.parse(subnetUUID));
                        grSubnet.query();
                        if (grSubnet.next()) {
                            grSubnet.name = JSON.parse(subnetName);
                            grSubnet.cluster_name = JSON.parse(cluster_name);
                            grSubnet.cluster_uuid = JSON.parse(cluster_uuid);
                            grSubnet.update();
                        } else {
                            grSubnet.initialize();
                            grSubnet.name = JSON.parse(subnetName);
                            grSubnet.uuid = JSON.parse(subnetUUID);
                            grSubnet.cluster_name = JSON.parse(cluster_name);
                            grSubnet.cluster_uuid = JSON.parse(cluster_uuid);
                            grSubnet.insert();
                        }
                    }
                }
            }
        } catch (e) {
            this.logger.debug("Nutanix_ImportProjects._multiPCSubnet :- Exception caught during retrieval of projects. Error: " + e);
        }
    },

    startImportProjects: function() {
        try {
            this.logger.debug("Inside Nutanix_ImportProjects.startImportProjects");
            var body = {
                "kind": "project",
                "offset": 0,
                "length": 1
            };
            var response = this.appUtil.makeCalmApiCall("POST", this.appUtil.configuration.api.getProjectList + "", this.appUtil.stringify(body));
            if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {
                this.logger.info("Connection established to " + this.appUtil.configuration.api.getProjectList);
                var parsed = this.appUtil.parse(response.getBody());
                var records = parsed.metadata.total_matches;
                var pages = parseInt(records / this.pageBreaker);
                this.logger.debug("Number of Project JSON pages " + (pages + 1));
                for (var i = 0, k = 0; i &lt;= pages; i++, k += 19) {
                    body = {
                        "kind": "project",
                        "offset": i + k,
                        "length": this.pageBreaker
                    };
                    this.logger.debug("Call number to importProjectData:" + (i + 1));
                    //this.appUtil.insertIntoQueue("importProjectData", "POST", this.appUtil.stringify(body), this.appUtil.configuration.api.getProjectList+"", 'Import project data', 'This process invokes the import of project data.');
                    var answer = {
                        "method": "POST",
                        "parameter": this.appUtil.stringify(body),
                        "payload": this.appUtil.configuration.api.getProjectList + ""
                    };
                    this.importProjectData(answer);
                }
                this.logger.info("Completed importing and processing of Projects.");
                this._deactivateDeletedProject();
            } else {
                this.logger.debug("Nutanix_ImportProjects.startImportProjects :- Connection to projects/list not established :- " + response.haveError() + " Status code :- " + response.getStatusCode());
            }
        } catch (e) {
            this.logger.debug("Nutanix_ImportProjects.startImportProjects :- Exception caught during retrieval of projects. Error: " + e);
            this.logger.error("Exception caught during retrieval of projects. Error: " + e);
        }
    },

    importProjectData: function(current) {
        try {
            this.logger.debug("Inside Nutanix_ImportProjects.importProjectData");
            var response = this.appUtil.makeCalmApiCall(current.method + '', current.payload + '', current.parameter + '');
            if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {
                var parsedJSON = this.appUtil.parse(response.getBody());
                var entities = parsedJSON.entities;
                this.logger.info("Number of imported Project:" + entities.length);
                for (var i = 0; i &lt; entities.length; i++) {
                    var entity = entities[i];
                    var metadata = entity.metadata;
                    var uuid = metadata.uuid;
                    this.activeProject.push(uuid + '');
                    this.appUtil.insertIntoQueue("processImportProjectData", "", '', this.appUtil.stringify(entity), 'Process project data', 'This job processes the imported project data.');
                }
            } else {
                this.logger.debug("Nutanix_ImportProjects.importProjectData :- Connection projects/list not established :- " + response.haveError() + " Status code :- " + response.getStatusCode());
            }
        } catch (e) {
            this.logger.debug("Nutanix_ImportProjects.importProjectData :- Exception caught during retrieval of projects. Error:- " + e);
            this.logger.error("Exception caught during retrieval of projects. Error :- " + e);
        }
    },

    processImportProjectData: function(current) {
        try {
            this.logger.debug("Inside Nutanix_ImportProjects.processImportProjectData");
            var accounts = [];
            var insertData = new GlideRecord(this.appUtil.configuration.table.stagingProject + "");
            var entity = this.appUtil.parse(current.payload);
            var status = entity.status;
            var resource = entity.status.resources;
            var metadata = entity.metadata;
            var spec_resources = entity.spec.resources;
            insertData.initialize();
            var field;
            //To insert status data
            for (var key in status) {
                field = status[key];
                if (key != 'resources')
                    insertData[key] = (field.constructor === Object || field.constructor === Array) ? JSON.stringify(field) : field + '';
            }
            //To insert resources data
            for (var key in resource) {
                field = resource[key];
                insertData[key] = (field.constructor === Object || field.constructor === Array) ? JSON.stringify(field) : field + '';
                if (key + '' == 'account_reference_list') {
                    for (var i in field) {
                        accounts.push(field[i].uuid);
                    }
                }
            }
            this._multiPCSubnet(accounts);
            //To insert metadata
            for (var key in metadata) {
                field = metadata[key];
                insertData[key] = (field.constructor === Object || field.constructor === Array) ? JSON.stringify(field) : field + '';
            }
            //To insert external_network_list
            for (var key in spec_resources) {
                if (key + '' == 'external_network_list') {
                    field = spec_resources[key];
                    insertData[key] = (field.constructor === Object || field.constructor === Array) ? JSON.stringify(field) : field + '';
                }
            }
            insertData.insert();
        } catch (e) {
            this.logger.debug("Nutanix_ImportProjects.processImportProjectData :- Exception caught during retrieval of projects. Error :- " + e);
            this.logger.error("Exception caught during retrieval of projects. Error :- " + e);
        }
    },
    MapCatItemToProject: function(current) {
        try {
            var rel = new GlideRecord(this.appUtil.configuration.table.catalogProjectRelation + "");
            rel.addQuery('catalog_item', (current.parameter + "").split(',')[0]);
            rel.deleteMultiple();

            var gr = new GlideRecord(this.appUtil.configuration.table.Project + "");
            gr.addQuery('state', 'COMPLETE');
            var obj = {};
            gr.query();
            while (gr.next()) {
                obj[gr.uuid + ""] = gr.sys_id + "";
            }
            var projectList = JSON.parse(current.payload + '');

            if (projectList.constructor === Object)
                projectList = JSON.parse('[' + current.payload + ']');

            var activeProjectList = [];

            var relGR = new GlideRecord(this.appUtil.configuration.table.catalogProjectRelation + "");

            for (var i in projectList) {
                var proj = projectList[i];
				
// 				if(obj[proj.uuid + ''] == undefined || !obj[proj.uuid + ''] || obj[proj.uuid + ''] == null || typeof obj[proj.uuid + ''] == undefined ){
// 					this.appUtil.insertIntoQueue("MapCatItemToProject", '', current.parameter+'', current.payload+'', 'Map catalog items to project', 'This job maps the catalog items to their respective projects.');
// 							return;
// 				}else{
                relGR.initialize();
                relGR.catalog_item = (current.parameter + "").split(',')[0];
                relGR.version = (current.parameter + "").split(',')[1];
				relGR.projects = obj[proj.uuid + ''] + "";
                relGR.insert();
// 				}
				
                activeProjectList.push(obj[proj.uuid + ''] + '');
            }

            var inactiveCatItems = [];
            var queryString = 'state!=inactive^state!=deleted^state!=draft^blueprintIN' + (current.parameter + "").split(',')[0];


            for (var i in activeProjectList)
                queryString = queryString + '^multiple_projects!*' + activeProjectList[i];

            var catGr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
            catGr.addEncodedQuery(queryString);
            catGr.query();

            while (catGr.next()) {

                inactiveCatItems.push(catGr.item_name.name);

                catGr.state = 'inactive';
                catGr.update();
            }
            this.logger.info("Deactivated " + catGr.getRowCount() + " catalog items (" + inactiveCatItems.toString() + ") as there Projects got removed.");

            var reactiveCatItems = [];

            var catGr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
            catGr.addEncodedQuery('item_name.category=88bfbad237512300fdfc097973990e06^state=inactive^blueprint=' + (current.parameter + "").split(',')[0] + '^multiple_projectsIN' + activeProjectList.toString());
            catGr.query();

            while (catGr.next()) {

                reactiveCatItems.push(catGr.item_name.name);

                catGr.state = 'active';
                catGr.update();
            }
            this.logger.info("Re-activated " + catGr.getRowCount() + " catalog items (" + reactiveCatItems.toString() + ") as project got re-attached.");
        } catch (e) {
            this.logger.error("Exception caught while mapping Catalog Item to Project. Error :- " + e);
        }
    },

    type: 'Nutanix_ImportProjects'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-10 09:48:23&lt;/sys_created_on&gt;&lt;sys_id&gt;a2e91eb5db81230084249235ca9619eb&lt;/sys_id&gt;&lt;sys_mod_count&gt;222&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_ImportProjects&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_a2e91eb5db81230084249235ca9619eb&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-28 07:43:07&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>1076472397</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0d5887e5dbcc7c103e3c6a5b8a961955</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98da70000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_ImportProjects</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>ceede86a6cae6410db68f1882b00c2cc</update_guid>
<update_guid_history>ceede86a6cae6410db68f1882b00c2cc:1076472397,bf776e6d98eb90104fda8681bd964435:1580182603,7106aa6d21eb9010e524e07ff5d7ec05:-1256408892,a142eaa52cab90109c5742aa03da9c5e:1433892329,e200262d4b2b9010853ee813d6619719:280370039,d64cdae95aa79010bd192a9f2198acf2:1433892329,402c8221fbe3901016d8a212f9a36f4f:280370039,875206254d63901061392ec648ebdc34:-192052988,29b031a559af50101d82ef712d33edd0:-201936935,5beb256151af50109b0a557f78db2362:-153962752,e6e5e965956f50105aea597ec08413c4:147746740,77e365ed16eb5010cfde2d134ec7c66d:-628079553,548fd16d25eb50109ff139855793b928:147746740,e4bb11e5d6eb5010e9cd77c600774f9e:-1202114110,a7c595ad17ab5010561ecc82d0c8549e:-811405260,58392955ce635010d658b4be7949f90d:-1176831637,6573a959806b10108e57d63792e92232:136524747,99dd065cca2b14106fcf95e152c522d8:-443428564,452c0e10e8e71410d22c7017c18905fb:669671811,090c069ca7a71410e647800e891c67f0:136524747,9b370e942e6314109a2c5d283ce6cdbb:-443428564,35070e94446314105cf38004ab8999b4:136524747,3e1df15ce367d010e7a059e7d7028191:-436702682,aae925d019e3d01022a9b3506e9425ef:1145942808,896ac310d21f1010ec8d0326b3e7cb81:-916521575,58daa82be0c314d0d1e6300296c94409:-681521543,c7a54ce0887e1c50249032cb96a87fcb:-1157485917,594191404d7ad85085e86bda8aa70902:1020152088,3619632764a698501de9079b128678d5:1568144957,aa93efdb03a65850cf5441302b0ea999:318840682,fb969fd37aa258505051a3e577a2276b:-1858536382,ff8213db1b62585004ae40c1604ee49d:2091860258,5ab90b9b2c225850def694b5b422cb13:-864702430,54a9075b6662585081b336a18ed4bc3a:-1343755644,9d60dd6ad62a9450b0b0da069b192d3c:-677080825,6d3a09aa26a69450ec6baf6de9d17583:-1484210192,37d60d6692a694505ee430521f2b14d5:-1438044120,2069f8ae10e29450ecbf3b2e63746f78:-627236077,e633b4de41665450ea024a2774d630a7:496247507,7cdf6c9aff6654508fa40c0f20766ea9:-677080825,b815cc5aa8ee1450d4e4cff2276a7906:1951648267,306b9a3ff15e1c108c0487647989af9e:-677080825,e8418363c0d21c10c7d083c7e9d61e39:537709263,ff3416e7cfded8108aeb6d8a6632f351:467998189,d293152b93dad810a20a9efb9d2ad898:-886985189,ec5035d77892d81051c506eeba618b5d:-344419425,c0136413c01e9810a31677986dd8c285:1489333394,74d310171bda9810ae5a8938c6d7946c:-2009668933,a97f4c9514dcd45006fa62ab5b401607:-830609621,5d204feb84ffc410ce70c23e1be043f9:1686173448,e0008f6fefffc410d516654b2c3eaf5e:174605224,7c0029576733c410a714cfe7daad7063:123522526,eb1f1557db33c410c772307e49dd6f70:1650366142,30c15d533afb8410929104ac58feecf1:1686173448,f36ee36aab7b04103e6f6b88cd6ebe30:-653508665,6cfd6fa6657b041044aedb2c9d0d6ce8:-104945505,c07d27e6aa7b0410dea79edcbfc66666:-1729623294,2c856f6a123b041036187d2d813af79d:-759749974,c6f3272a023b041028567d9629c1e160:-1164256382,097227a6a63b0410cc361d64b81865b1:1421136484,edd1a3e6a23b041011a7b3bbad8166e3:905934808,cd6127a6113b0410e8adae1a817b1576:-645338272,ac9b0f62547704103ad81efc18ea1e95:-2065596619,88d8cb269ef7041038166b0d84480d38:-1077731431,23e4b6a225b304104e878360f4ebf5fc:-91888171,6bf23eaee2730410c9d420e125621f81:-536957611,70527aee8f730410ca98cb38c267aac9:-1618689029,958132ee517304106d2c3e59b08ec7e5:-546761657,9ee0726e4073041049e942c141135a5a:-783697127,43ffa26ea2730410a46b6ceda3b3e9d4:1305042406,49df226ebf7304100b0d415d06df21f9:-439390770,5abde2ea34730410e0ef36f8114ece03:1132284689,59dc6e6af87304102d57a721df3461b8:124021297,f09c62e6357304101c05c1f2db0b867c:-336431585,ceebaa2a4d7304102d7eb0dbd833b27c:830951367,df8b62e63a730410b68a60fd40d56e00:940152231,4b4aae6612730410e469a78000b9c685:2036286942,07696e628473041042418d0177ea9b0a:-121634699,04192ee2497304108df89b6d813e4ff3:-111538780,5d98e2222b73041000cc137018331601:-492152070,2dc7262e20330410d71699561ce71727:853055178,7267e222527304104a4e275eeab87a0f:2038065505,3027626e1c3304101cf2f60f11827b85:-392436231,07c6626ebe3304103c02a477b11cd859:2014899058,4196662e2e330410605b1c381f7f6b8d:1435618448,56062aaa593304104a1e8373616241a3:-1645536868,45b5e6aa9233041023a0db4b04f12889:535087941,ecc2a2aae23304104948741e70f38203:1195921425,68526e2a29330410827aa5d48206f891:-147719049,83a1eaa6973304107ba9f70bca8d7b96:1990873767,6761aa2a803304100bcab8904a3fb3e2:-547057187,a4b0a66696330410ac9aef0b81e8964c:-807482839,66afd2666d330410c2e447045af0988a:1938147104,5ec7a0aad2fbc010347fd27f8e84dab6:504451516,7eb664aaf9fbc0103df82bfefac9b7fe:642837361,cb76ece611fbc010cc9294805f63d243:-92577671,6206646a34fbc010a9971f6c5042560e:1735944323,8cb5e0a6c4fbc0104518bf04b15c3f17:-799913196,03f4e0a6c0fbc010e11230d44d71a30f:891968509,2094a8a28efbc01020188148d59648d0:-1036820167,6f73682626fbc010aaa3c564f39150ed:-1704147116,7133a8a268fbc0106251b89a39394d97:1613522754,558168a29bfbc0100e087ba380141eba:1794178698,88e0686221fbc0107b57715df0e1a027:-2144086966,0b10686ee6bbc0109c0ab6279f73ac74:525934980,069f9c6e8ebbc01013126a9f2abab6a6:-1725273328,962fd46e8bbbc010e0a594698eb100be:2019135640,f2ee5cea9bbbc0100c5e19bb212e335e:1217581896,24be5c2ef2bbc010ed64b84c4e8b81dd:-1943453595,587ed0ea7bbbc010e2b0220dcdaaee27:-223338233,450e98aa27bbc01085e471f3326e84e9:1101871827,865dd4aafdbbc010e9dee5587665d50f:-981093758,ac1d1c6ae9bbc010641d75ed66824aaa:2094057616,a1ccd86a9dbbc010b005cd5cc990e889:-1919401167,807c1c665ebbc010708d3e77a3d0ab95:-513685619,ba1c9c26cabbc0106eb3b8022a0f633d:-1851823251,bbfb5026c4bbc0103f943246041c2e2f:-502379699,33d71c66d1bbc0102e62ab167ba6d18d:2001874981,eb67d4ee117bc0103cb0cf1aa47a2789:624763287,8f175026b2bbc01095819021fa54080c:1069334681,23c610e2f7bbc0106bfa94a3f6558dd7:-552487751,c0e5dc2252bbc0106aaca2db428efc52:-577404957,e78414eedd7bc010c5a31c91d85f5d1d:1082594806,53a2506ed87bc010203089e6d6d3e64a:-1323821735,6a22586eb17bc01019da4e04f9e0324d:-1520002951,19d194ea0a7bc010da359b1fb8745a09:-1904918345,b291dcaa5f7bc010b7c72cff68ae8f64:882264811,f34014a6877bc01053a589392cd4c5e6:351778937,41af0caae67bc0105d362e189a8fecaf:577250137,ab6e84e69d7bc010d8ec8f85132bc132:-1480146652,f6680c26cc7bc01007e8e64c725a920d:1464229858,ae38c422b37bc010041e34e470b2039d:979785196,37b740e21a7bc010d7f2bd200b066155:1194381775,78050022e07bc0104f0c852bf2d76961:1480162114,70844022387bc0108cae099cd9c2cf28:-420547934,14548c6ea33bc01094ecc6b456c793a5:1747065713,59918c6ec93bc010e5132e7c55c0b5c6:-588090877,ca41002e553bc010c9afea68a0502789:641380830,d311042e4f3bc010986fc029b38b86ab:-397288623,5d800cea113bc0102fbe011068d33b03:126538918,ad5088ea8b3bc0103e776487e0d81574:1037063697,8d204c6a1a3bc010b268b3b8e50dac8f:-1222507471,c1df775a9e3bc0107b2359e637900767:237971304,643fb71ae73bc01039d2e99d0e72150b:-1506022374,76ee7f5a063bc010557e7a93d8989f87:1700000585,5f9eff96303bc0101d4421ca3e56d8a7:-1288352882,e44effd6983bc0101ba3dae2daaafb31:774222144,4f7d33d6ae3bc010da1110948243289d:-148658947,062dff96d53bc0106357437b369ce0f9:-1402563690,65fcff96a43bc010bfa5f6ec1fbece9e:-411762399,aa1c73966e3bc010176cf9ad1a9d6aeb:-776315945,8febbb56d03bc0102b05976a6dd73cbc:1293729507,51ab7352bd3bc010c15190f54441a6b9:491152416,966b7792d13bc010ddf504cecd853037:149225391,81d67f52fc3bc010769df04895984cef:1247024079,3266fb52063bc010e8c60707e0fce9ae:-838812394,3ff57352043bc01071b1d7d25651a74b:-71590759,492577de94f7c0103fb420169ed6e366:49431472,07747f9ec0f7c01007dafbacf2df47af:1885175874,0f54ff1e6ff7c010b4f9527d60c3bb74:311451035,70089d0a1df7801063686665aaae98dc:114272863,99f41ab5bfff4010b7a3eef9146e29c2:1955282679,a493167577ff40105734ffb7900b2d41:-457766388,a30f4e719aff4010638c4b7194304240:-1415778463,55de4e3136ff4010e4f8f3257f63cdad:-440954225,f6eace7d2a7f40100911e4375e9cbf73:1424691122,ef268af9b47f4010aaf7b4318e1e6839:-551988214,2ab5063d987f401065b8577318661010:1816181805,189582b9a87f4010380ddbaecd0bd8a1:807238413,eba442b9ec7f4010da6dfb346f8ecde0:-2018659778,28344e71353f4010d30e6c576f81995e:1160779998,2babd931eb3f401067c8c833a412b086:-604378376,3bfa9dfd61fb4010e762924152b72386:1481663876,b7d719bd47fb401098c493e1ddaff2fb:1869738138,7d179db938fb40101f3fdf9224d8c7fa:2027424185,4c66d53d24fb4010b423c7fdb9e4e334:-1639428489,dfd4153d1ffb4010bf6aa4b6fa034ed1:1302568515,9b54d53908fb401091a11a2afb3268ec:1388115767,3712d1b95afb40107a7f43c1d3077930:-685290889,bda159f53cfb4010fff719ebba75e4ed:-297975177,e930d5397ffb4010f148bc89483568b0:-1348433049,1b9f05f501fb401085ec82a46307375f:1424691122,7e2e8dfd4ebb401027bc6f795d235021:1454932024,e84c85b117fb4010982f015d0b8d64a7:617695709,af04cdbdf5bb4010db3d171689d9385a:-1647352739,bd759fa2f186c09087b511b32bee8448:1424691122,6b5f6b094506cc507bb6c3ca4f2235fd:-402115373,94367d3d3b358450384f423c5c7d6f2c:1207482582,c5a9bd2534b94450847e455c91735efa:-1220426539,d408b1e56db94450cda2f3b14e6f6610:-728323026,c026f96586b94450843903165c206bc5:-1262987551,f094b5adcd794450c245b2388208418f:-2023856932,a04c6d2da67944509d42212f2ec1d6a6:-860055883,48faed2d1f794450bd7bbc8ced701cf7:-546938045,10a56569ed794450e37c50e1201d1a40:-1254816347,d7e3ade5f6794450c5c2147e7f575553:-1998630847,32b3e9e537794450fab90d9a59242d8f:-1860326105,394f1da160794450fd7f69668528a486:2080304208,038e19e137794450a20145a87df89943:-757111088,c4bd1da16379445037836b5ca50ef79b:2131034404,163bd5e554394450268f4136dde505db:-470638960,dc0f85a51e394450555c2f65d27ee906:-1268834373,d5bec1e5213944504bd5b590bd808ef2:-538611591,806e8da53e394450a293cbeb46e9f9c4:-514808307,a25205ad58f5445066f8d65aa78e0c2c:-754129784,b002cd6590f5445038f0cb45f04d0a60:2134494320,3511016d36f544503f3d1baac4feed69:2056282560,629d7c65cff5445056e6a5a520c253d5:1256984095,e07dbce512f544501bff73a846b4a55c:-1956599920,356c7c6504f54450134e37e3660dca24:-37841259,dc4c30e523f5445055c94968730d7b9d:-567814108,431c30e56cf54450c5d20c6324410cdb:538674161,7efb78e522f544507c1c702979a6fd8a:195354885,6c7bb865bff544502b986262361a80b7:524756752,b419763cef3dc050ff103d32017d80b6:-541026768,5fdc6af0d93dc050e32efa02b36b0ad8:808813358,e383ad1719a5cc10c0360d7db32dfddd:-220258518,7853e557b2a5cc109cb8343135e3df05:878994355,66a2ed17b4a5cc109677a7eaf332ee70:-58626109,de51a993fba5cc10934dbbdc97b0aad4:214596896,9c50eddf2f65cc10713c1887a49cc636:1139546729,199f5d1f1b65cc1079947f6d385a5579:1098988022,308e1d5b7d65cc105ea0645aa9cf5406:-307870733,c1ddd95b7365cc10cdbb70292e0e1bad:752523075,2e2d159bf565cc1085c931215799b70d:651935662,9b0b99d3c465cc1057f3b595aac3d421:1574184003,e7c4d153b965cc105a2b0de1d138e746:1001062553,3663d5dbcb25cc10e59ed40376c73d19:1347840207,ad101557bb25cc10121ac6490bbbf59c:-1882854963,41afc51b5425cc1083ffaa787b283554:-190527909,b7ae851b8c25cc102c43ca9abfa0a692:-1965494464,812c85930425cc1017abfa2c8c90db58:-466143994,08ca05938425cc10c137b2d317d518e5:-1413064573,963a8d9f14e1cc1076b6eb31f4beb3d4:-1197551279,e21381d3b6e1cc10f29d0cd375a711e5:-1287791139,22fff8dbbba1cc102e144a968ac415f0:-732303879,a3cb301b3ba1cc104e3d5089fc774fb3:-519474529,9a0738939ca1cc1045a373ca545be144:692726875,ebc17c9fc061cc10d3176a6cc855dd68:-1615971355,75efe0db4461cc10e302a3a8430c6236:-1552487841,e4e9a31bd3d100104418de65109fa470:1852796856,4df01b0f6f99cc1017e47be09f64f03a:1852796856,ccecbe26933fb3001113a43adf86767b:-1744017807,6455d8113bbb33008534e59f05fa0677:569034589,b682d099e77b3300966d52075e7431e8:485716240,eb32c09996f733000511a01610cb9935:-1644861048,0a80090cf0222300893aae1221b12ca4:-593650114,d79ff4659216e30048cf1a747724f13e:1503902270,2a7f7c659616e3006f63cd557b5e8eef:1749117318,ca0225d5f202ab0030a309e53b5b6cf0:656277032,ee00dc350a31e300df0b6683cbcbfd29:17721777,4dc5dda58b79a300daee8ae98023d783:-2000852270,d0251da50479a3008fc7020d823bc4ad:-1713061833,564151e1c579a300046645ab70e72ed2:691276984,e58a4d6de839a30040879b64850e6f5f:-776775073,e12a496d5539a300667fd3a6b28b0139:1245547804,03d8c92df239a3007838020030f81c91:1549636146,ab76c9a9de39a3004db97501d15f8caa:1065514183,96c48529b539a30076fe8d852b7c8e4f:-521488326,29b2c1299439a3001cc55dc0f6b476aa:-2104537681,a6ccf8e16d39a300e24ff45403dd4670:-2054934167,640cb0e10b39a300e79b26f81f3f7455:1053004619,32ba70a19f39a3009a5e51cdbbe9dac6:1377505683,02b7ce6c0b212300f49cbfe4f3f554d8:1471353261,a4efe15490696300c50b4b99771141c8:-709045009,f91c6190ca696300e586ca14be620e7e:-1968655764,e19a999c12e56300a0f9505524ae0d5c:1036399084,52500d90cca56300f0cce062440a4a4d:2076616855,ea32c58c33a923006f0d688c6e2c2f15:-145457377,96e319720d952300701138d000d82c86:-1852417661,7bb4cdf6a955230052a5092b24125da4:-9405223,d3a4c5f6255523003c021e00722092a7:962254687,6e032f6a2251230053bb90a3475af37b:612217565,5ee2eb6af1512300e77f70c9a86f8a38:-626493517,2f7bf1f4e0d12300b60ab691d8ab42e6:1763340465,2ecf7438351d6300f58a5d97e45e3fed:-47914924,fc4bec3821d96300308d5b07e478b6bd:1397565698,ae1b2c784ed9630081864986941c8e04:-615110723,dfaaec38e2d9630043a436b9140358b8:764991576,fd38e038c7d96300250d128e8c238db1:-822219293,3d186438a9d96300d861986ffa4e667e:-370003102,4d17ec38acd96300e0ac7415fdfac58f:427249196,4769128469912300e7763fbb66c778d5:-844488387,4460f077014d2300b3b855d1e9a04f93:1795068109,23dc15a71a852300c2ad13066951c863:1873091307,78cc55a7c98523001589b2594c32c02f:793233707,944b91678d852300fd504f31058dccaf:1873091307,aaa4d523cd85230064d4159a5a0e3123:668469638,ee244167e5452300470340e61ae013d1:1873091307,b7600da3a1452300511f3ed06bb0c15c:2090782381,68004d63ab452300dc6d435edf224dc2:-1758429907,85d3d8a387c123001961c54c852d3ac1:-1050710141,b18394a36ec1230042174a33c1387379:-535599749,de6394a3bec1230049313c0abdac8072:16589883,4103146303c123009eca89d3246d4bd6:1471505403,6bd21c23a1c123006013fc15593e48dd:-1752619679,c02880df65c56300512751d227adc76b:1046104694,1e1373471ac56300ce774f06b7d25698:-1623561583,96627347bec5630016bc11c2f3722c86:-1895104401,6c4233470dc563009000970983459c27:-329599567,5781ffc383c563000df6ea0d4cf647b4:-1699010199,7e503bc3fcc5630005f046a2d2e41582:907824829,8b7c5f476d85630056e4a537129088f0:-1699010199,2f2b1b87ce85630052d8833b48d87ef4:-713747691,e62a17475c856300ef92329419465f46:1061393147,26299b03f58563002b16177ea65e49a3:603159948,fcc71fc300856300208a176e1d1b6444:-1424586657,24275fc3e585630081a4dd09e8dedffa:993194299,bf0717cf204563002c32244ea65a4009:913255673,f1e65b835085630034bdcd3bd439273b:953224986,014f074f66456300eea0d98351e86e10:1237958807,53032a3de7812300d10e3f547c6d01ed:1753232393,cb30ee7533812300518a26bec2e5e5e0:-600090132</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_044316881bc7e0107f2a8515ec4bcb75</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_policy"&gt;&lt;sys_ui_policy action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;conditions table="x_nuta2_nutanix_ca_calm_plugin_configuration"&gt;calm_saas_and_servicenow=false^use_external_credential_system=false^EQ&lt;item endquery="false" field="calm_saas_and_servicenow" goto="false" newquery="false" operator="=" or="false" value="false"/&gt;&lt;item endquery="false" field="use_external_credential_system" goto="false" newquery="false" operator="=" or="false" value="false"/&gt;&lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;&lt;/conditions&gt;&lt;description/&gt;&lt;global&gt;true&lt;/global&gt;&lt;inherit&gt;false&lt;/inherit&gt;&lt;isolate_script&gt;true&lt;/isolate_script&gt;&lt;model_id/&gt;&lt;model_table/&gt;&lt;on_load&gt;true&lt;/on_load&gt;&lt;order&gt;100&lt;/order&gt;&lt;reverse_if_false&gt;true&lt;/reverse_if_false&gt;&lt;run_scripts&gt;false&lt;/run_scripts&gt;&lt;script_false&gt;&lt;![CDATA[function onCondition() {

}]]&gt;&lt;/script_false&gt;&lt;script_true&gt;&lt;![CDATA[function onCondition() {

}]]&gt;&lt;/script_true&gt;&lt;set_values/&gt;&lt;short_description&gt;Handle Mid Server Field on Application property&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ui_policy&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-17 17:13:59&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;044316881bc7e0107f2a8515ec4bcb75&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Handle Mid Server Field on Application property&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_policy_044316881bc7e0107f2a8515ec4bcb75&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-17 17:13:59&lt;/sys_updated_on&gt;&lt;table&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/table&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;view/&gt;&lt;/sys_ui_policy&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1808777448</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0d5887e5dbcc7c103e3c6a5b8a961958</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e2b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Handle Mid Server Field on Application property</target_name>
<type>UI Policy</type>
<update_domain>global</update_domain>
<update_guid>9e931ec8a3c7e010c84e8cf38449f2bc</update_guid>
<update_guid_history>9e931ec8a3c7e010c84e8cf38449f2bc:-1808777448</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_script_b7e56ae437a12300fdfc097973990e63</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_script"&gt;&lt;sys_ui_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;description/&gt;&lt;global&gt;false&lt;/global&gt;&lt;name&gt;x_nuta2_nutanix_ca.Calm_Catalog_Variable&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var $j = jQuery.noConflict();
var trigger_array = [];


function render_variables(answer){
    var profiles = g_form.getValue('multiple_application_profile');
	var noProfileVar = [];
	if(g_form.getValue('no_variables_for_profile')+'' != "[]")
		noProfileVar =  JSON.parse(g_form.getValue('no_variables_for_profile'));
	
	var array_profile = profiles.split(',');
	var profile_html = [];
	var selected_profile = JSON.parse(g_form.getValue('profile_name_sys_id'));
	
	for(var n=0; n &lt;array_profile.length; n++){
		
		if(noProfileVar.include(array_profile[n])){
		var json ={
			"profile" : array_profile[n],
			"html" : "&lt;span style=\"padding: 10px 15px 10px 15px; display: block; background: #e6e8ea; font-weight: bold;\" data-toggle=\"collapse\" data-target=\"#"+array_profile[n]+"\"&gt;&lt;i class=\"fa fa-plus\"&gt;&lt;/i&gt; "+selected_profile[array_profile[n]+''].name+"&lt;/span&gt;&lt;div id="+array_profile[n]+" class=\"collapse\"&gt;&lt;p style=\"padding: 10px 15px 10px 15px;\"&gt;No variables are defined for this profile.&lt;/p&gt;"
			};			
		}
		else{
		var json ={
			"profile" : array_profile[n],
			"html" : "&lt;span style=\"padding: 10px 15px 10px 15px; display: block; background: #e6e8ea; font-weight: bold;\" data-toggle=\"collapse\" data-target=\"#"+array_profile[n]+"\"+&gt;&lt;i class=\"fa fa-plus\"&gt;&lt;/i&gt; "+selected_profile[array_profile[n]+''].name+"&lt;/span&gt;&lt;div id="+array_profile[n]+"  class=\"collapse\"&gt;"
			};
		}
		profile_html.push(json);
	}
	var str = '';
	
	if(answer &amp;&amp; answer!="{}"){
		var variable_data = (answer)?answer:g_form.getValue('variable_data');

		variable_data = JSON.parse(variable_data);

		var k = 0;
		console.log("Variable DATA :  "  + answer);
		for(var i in variable_data){
			var row = variable_data[i];
			
			if(row.isHidden + '' == 'true')
				continue;

			var check ='';

			if(row.runtime_config==true || row.runtime_config=='true')
				check = 'checked="true"';

			var setVal = "onchange=\"setVal('" + i +"', this.value)\"";
			var setRun = "onchange=\"setRuntime('" + i +"', this.checked)\"";

			var fieldType = (row.data_type+'' == 'SECRET')?'password':'text';
			var placeHolder = (row.data_type+'' == 'SECRET') ? 'placeholder="*******"' :'';
			var isDisabled = (row.isdisabled+''=='true')?'disabled':'';
			var mandatoryAttr = (row.mandatory+''=='true')?'required':'';
			var isCheckBoxDisabled = isDisabled;
			var secrate_variable = (g_form.getValue('profile_secret_variables'));

			var dependsStr = 
				(row.field_json.all_dep.length != 0) ?'&lt;div style="padding: 5px 1px; margin-bottom: 10px; background-color: #e8f0fa; color: #007eff; position: relative;"&gt;Depends on '+(row.field_json.all_dep.toString()).replace('_'+row.application_profile,'')+''+(secrate_variable.includes(row.field_json.all_dep.toString())?' value is secret and therefore not displayed &lt;/div&gt;':'&lt;/div&gt;') :"";
			
			if(row.data_type == 'EXEC_LOCAL' || row.data_type == 'HTTP_LOCAL' || row.data_type == 'EXEC_SECRET' || row.data_type == 'HTTP_SECRET') {
				isCheckBoxDisabled = 'disabled';
			}
			var GWT_calm_format = {'DATE_TIME':'yyyy-MM-dd HH:mm:ss','DATE':'yyyy-MM-dd','TIME':'HH:mm:ss'};
			
			var spn = '';
			
			var inputType = '';

			if(row.data_type+'' == 'SECRET')
				spn = '&lt;span class="field-icon toggle-password glyphicon glyphicon-eye-open spanField'+k+'" onclick="tooglePassword(\'field'+k+'\', \'spanField'+k+'\')"&gt;&lt;/span&gt;';

			if(k%2==0)
				str = str + '&lt;div class="containerStart"&gt;';

			if(row.type+'' == '5')
				inputType = '&lt;select ' +placeHolder+ ' ' +isDisabled+ ' class="inputText field'+k+'" ' + setVal +' '+mandatoryAttr+'  id="'+row.uuid+'"&gt;'+_option_handler(row)+'&lt;/select&gt;';
			
			if(row.type+'' == '21'){
				
				inputType = '&lt;div&gt;&lt;div id="span-'+row.uuid+'"&gt;&lt;/div&gt;&lt;select ' +placeHolder+ ' ' +isDisabled+ ' '+mandatoryAttr+' onchange="selectOption(\'addOption\',this.value, \''+i+'\')" class="inputText field'+k+'" id="'+row.uuid+'"&gt;'+_option_handler(row)+'&lt;/select&gt;&lt;/div&gt;';
			
			}
			if(row.type+'' == '9')
				inputType = '&lt;span class="input-group"&gt;&lt;input type="text" id="'+row.uuid+'" class="form-control" ' + setVal +' style="background-color:white;" ReadOnly="true" value="'+_option_handler(row)+'"/&gt;&lt;span class="input-group-btn"&gt;&lt;button class="btn btn-default" ' +isDisabled+ ' onclick="new GwtDateTimePicker(\''+row.uuid+'\', \''+GWT_calm_format[row.val_type]+'\', false)"&gt;&lt;span class="icon-calendar icon"&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/span&gt;';
			
			if(row.type+'' == '10')
				inputType = '&lt;span class="input-group"&gt;&lt;input type="text" id="'+row.uuid+'" class="form-control" ' + setVal +' style="background-color:white;" ReadOnly="true" value="'+_option_handler(row)+'"/&gt;&lt;span class="input-group-btn"&gt;&lt;button class="btn btn-default" ' +isDisabled+ ' onclick="new GwtDateTimePicker(\''+row.uuid+'\', \''+GWT_calm_format[row.val_type]+'\', true)"&gt;&lt;span class="icon-calendar icon"&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/span&gt;';
			
			if(row.type+'' == '2')
				inputType = '&lt;textarea ' +placeHolder+ ' ' +isDisabled+ ' '+mandatoryAttr+' class="inputText field'+k+'" ' + setVal +'  id="'+row.uuid+'"&gt;'+_option_handler(row)+'&lt;/textarea&gt;';
			
			if(row.type+'' == '6')
				inputType = '&lt;input type="'+fieldType+'" ' +placeHolder+ ' ' +isDisabled+ ' ' + setVal +' '+mandatoryAttr+' class="inputText field'+k+'" id="'+row.uuid+'" value="'+_option_handler(row)+'"/&gt;';
			
			if(row.type+'' == '25')
				inputType = '&lt;input type="'+fieldType+'" ' +placeHolder+ ' ' +isDisabled+ ' ' + setVal +' '+mandatoryAttr+' class="inputText field'+k+'" id="'+row.uuid+'"/&gt;';
			
			/*if(row.type+'' == '25') {
				inputType = '&lt;input class="inputText field'+k+'" type="password" value="' + row.value + '"' + setVal +' '+isDisabled+'&gt;';
				spn = '&lt;span class="field-icon toggle-password glyphicon glyphicon-eye-open spanField'+k+'" onclick="tooglePassword(\'field'+k+'\', \'spanField'+k+'\')"&gt;&lt;/span&gt;';
			}
			else if(row.type+'' == '21' || row.type+'' == '5') {
				inputType = '&lt;select id='+row.uuid+' class="inputText field'+k+'" '+ setVal +' '+isDisabled+'&gt;'+_option_handler(row)+'&lt;/select&gt;';
			}
			else {
				inputType = '&lt;input class="inputText field'+k+'" type="text" value="' + row.value + '"' + setVal +' '+isDisabled+'&gt;';
			}
			*/
			var desc = '';
			if(row.description != '')
				desc = '&lt;div style="padding: 5px 1px; margin-bottom: 10px; background-color: #e8f0fa; color: #007eff; position: relative;"&gt;'+row.description+'&lt;/div&gt;';
			
			var htmlStr = '&lt;div style="padding:15px 40px;"&gt;&lt;div style="padding:1px 1px 12px 1px; width: 100%"&gt;&lt;span style="float:left;"&gt;&lt;strong&gt;' + row.question_text + '&lt;/span&gt;&lt;/strong&gt;&lt;span style="float:right;"&gt;&lt;input class="inputCheckbox" style="margin-right:2px" ' + setRun + ' type="checkbox" ' + check + ' '+isCheckBoxDisabled+'&gt;&lt;/input&gt;Runtime &lt;/span&gt;&lt;/div&gt; &lt;div style="padding-top:14px;"&gt;'+desc+' '+dependsStr+' '+inputType+'&lt;/div&gt;' + spn + '&lt;/div&gt;';

			//str = str + htmlStr;
			for(var u=0; u&lt;profile_html.length; u++){
				if(profile_html[u].profile == row.application_profile){
				    profile_html[u].html = profile_html[u].html + htmlStr;	
				}
			}

// 			if(k%2!=0)
// 				str = str + '&lt;/div&gt;';

			k++;

		}	
	}else{
		str = "&lt;p style='padding-bottom:20px'&gt;No variables are defined for this profile.&lt;/p&gt;";
	}
	$j(".bodyData").html('');
	var str = '';
	for(var a=0; a&lt;profile_html.length; a++){
		str = str + profile_html[a].html +'&lt;/div&gt;';
	}
	jslog("Final HTML body : "+str);
	$j(".bodyData").append(str);
	
	jslog(JSON.stringify(variable_data));
	onChangeTrigger(variable_data);
	_createDependencyJSON(variable_data);
	new GlideModal().get('loader').destroy();
		
	var second_var_run = JSON.parse((answer)?answer:g_form.getValue('variable_data'));
	
	for(var j in second_var_run) {
		if(second_var_run[j].type + '' == '5')
			$j("#"+second_var_run[j].uuid).val(second_var_run[j].value);
		if(second_var_run[j].type + '' == '21')	
			selectOption("initrun","", j);
	}
	
// 	jslog(JSON.stringify(variable_data));
// 	onChangeTrigger(variable_data);
// 	_createDependencyJSON(variable_data);
// 	new GlideModal().get('loader').destroy();
	
}

function selectOption(type, multiValOption, key) {
		//alert("selectOption ::: " + type + multiValOption + key);
    multiValOption = unescape(multiValOption);
    var variable_data = JSON.parse(g_form.getValue('variable_data'));
    var row_uuid = variable_data[key].uuid + '';
    var tmp_array = (variable_data[key].value != '') ? variable_data[key].value.split(',') : [];
	var options = variable_data[key].options;
//	console.log("==variable_data "+variable_data+" row_uuid "+row_uuid+" tmp_array "+tmp_array);

    if (type == 'addOption' &amp;&amp; tmp_array.indexOf(multiValOption) == -1 &amp;&amp; multiValOption != '') {
        tmp_array.push(multiValOption);
        $j('#' + row_uuid).find('option[value="' + multiValOption + '"]').remove();
    }

    if (type == 'removeOption' &amp;&amp; tmp_array.indexOf(multiValOption) != -1) {
        var index = tmp_array.indexOf(multiValOption);
        if (index &gt; -1) {
            tmp_array.splice(index, 1);
        }
        var option = '&lt;option value="' + multiValOption + '"&gt;' + multiValOption + '&lt;/option&gt;';
        $j("#" + row_uuid).append(option);
    }
    if (type == 'initrun') {
	//	console.log("inside initrun");
        for (var k = 0; k &lt; tmp_array.length; k++)
            $j('#' + row_uuid).find('option[value="' + tmp_array[k] + '"]').remove();
    }

    variable_data[key].value = tmp_array.toString();

    g_form.setValue('variable_data', JSON.stringify(variable_data));

    var spanOptions = '';
    for (var i = 0; i &lt; tmp_array.length; i++) {
		//alert("tmp_array ::::  " + tmp_array[i]);
		/*if(options.indexOf(tmp_array[i]) == -1)
			continue;*/
        spanOptions += '&lt;div style="display: -webkit-inline-box; margin: 3px;"&gt;&lt;span class="list-options" style="margin: 3px; padding: 5px; border: 1px solid rgba(0, 126, 255, 0.24); line-height: 13px; font-size: 12px; display: inline-block; border-radius: 2px; background-color: rgba(0, 126, 255, 0.08); color: #007eff;"&gt;' + tmp_array[i] + '&lt;a href="#" onclick="selectOption(\'removeOption\',\'' + escape(tmp_array[i]) + '\', \'' + key + '\')"&gt;&lt;i class="icon-cross" style="padding-left: 7px;font-size: 11px;margin-top: -4px;"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;';
    }
	
	//alert("spanOptions   ::::: " + spanOptions);
    $j("#span-" + row_uuid).html(spanOptions);
	var var_name = variable_data[key].name + "";
	//console.log(var_name);
	if(trigger_array.indexOf(var_name) != -1) {
		_createDependencyJSON(variable_data);
	}
}

function onChangeTrigger(var_data) {
	for(var i in var_data) {
		if(var_data[i].field_json.all_dep.length == 0)
			continue;
		
		var all_dep = var_data[i].field_json.all_dep;
		//console.log("***all_dep : "+all_dep);
		trigger_array = trigger_array.concat(all_dep);
	}
}

function macroReplace(yup, value) {
	
	var macroVar = "";
	if(value.startsWith("@@{") &amp;&amp; value.endsWith("}@@"))
		macroVar = value.replace("@@{","").replace("}@@","");
	
	var form_data = JSON.parse(g_form.getValue("variable_data"));
	for(var i in form_data) {
		if(form_data[i].name + "" == macroVar)
			value = form_data[i].value + "";	
	}
	
	$j("#"+form_data[yup].uuid).val(value);
	
	return value;
}

function setVal(yup, value) {
	value = macroReplace(yup,value);
	var variable_data = JSON.parse(g_form.getValue('variable_data'));
    variable_data[yup].value = value;
    g_form.setValue('variable_data', JSON.stringify(variable_data));
	var var_name = variable_data[yup].name + "";
	if(trigger_array.indexOf(var_name) != -1) {
		_createDependencyJSON(variable_data);
	}
    //_validateField(yup, value);
}

function setRuntime(yup, value) {
    var variable_data = JSON.parse(g_form.getValue('variable_data'));
    variable_data[yup].runtime_config = value;
    g_form.setValue('variable_data', JSON.stringify(variable_data));
}

function responseParse(response) {
    var answer = response.responseXML.documentElement.getAttribute("answer");
    g_form.setValue('variable_data', answer);
    render_variables(answer);
}

function getProfileVariableData() {

    var loadingDialog = new GlideModal("loader", true);
    loadingDialog.setTitle('Fetching profile Variables...');

    var val = g_form.getValue('variable_data');

    if (val) {
        render_variables(val);
        return;
    }

    loadingDialog.renderWithContent('&lt;div class="loading-container"&gt;&lt;div class="loading-indicator icon-loading icon-lg"&gt;&lt;/div&gt;&lt;/div&gt;');

    var type = g_form.getValue('type');

    var project = g_form.getValue('multiple_project');
    var blueprint = g_form.getValue('blueprint');
    var application_profile = g_form.getValue('multiple_application_profile');
	var cat_item = g_form.getValue('cat_item');
	var delta_profile = g_form.getValue('delta_profiles');
	
    var ga = new GlideAjax('Nutanix_ClientServerScriptBridge');
    //	ga.addParam('sysparm_name', 'getProfileVariableDetails');
    ga.addParam('sysparm_name', 'noProfileVariableDetails');
    ga.addParam('sysparm_project', project);
    ga.addParam('sysparm_blueprint', blueprint);
    ga.addParam('sysparm_application_profile', application_profile);
    ga.getXML(ParseNoProfileVar);
 
	function ParseNoProfileVar(response) {
	  var answer = response.responseXML.documentElement.getAttribute("answer");
	  g_form.setValue('no_variables_for_profile', '');
	  g_form.setValue('no_variables_for_profile', answer);
	}


    var ga = new GlideAjax('Nutanix_ClientServerScriptBridge');
    //	ga.addParam('sysparm_name', 'getProfileVariableDetails');
    ga.addParam('sysparm_name', 'getMultipleProfileVariableDetails');
    ga.addParam('sysparm_project', project);
    ga.addParam('sysparm_blueprint', blueprint);
    ga.addParam('sysparm_application_profile', application_profile);
	ga.addParam('sysparm_cat_item', cat_item);
	ga.addParam('sysparm_delta_profiles', delta_profile);
	ga.addParam('sysparm_type', type);
    ga.getXML(responseParse);
}

function tooglePassword(field, fieldspan) {
    var input = $j('.' + field);

    if (input.attr("type") == "password") {
        input.attr("type", "text");
    } else {
        input.attr("type", "password");
    }
}

function _option_handler(arr_json) {
	
	//console.log("PRINCE &lt;&lt;::::::&gt;&gt; " + arr_json);
    var options = '';
    if (!(arr_json.type + '' == '21' || arr_json.type + '' == '5')) {
        /*if (arr_json.data_type == 'EXEC_LOCAL' || arr_json.data_type == 'HTTP_LOCAL' || arr_json.data_type == 'EXEC_SECRET' || arr_json.data_type == 'HTTP_SECRET') {
            _setRequestValues(arr_json);
        } else*/
            options = arr_json.value + '';
    } else {
        /*if (arr_json.data_type == 'EXEC_LOCAL' || arr_json.data_type == 'HTTP_LOCAL' || arr_json.data_type == 'EXEC_SECRET' || arr_json.data_type == 'HTTP_SECRET') {
            g_form.addInfoMessage('Fetching values for variable "' + arr_json.question_text + '"');
            _setRequestValues(arr_json);
        } else {*/
            options = '&lt;option value=""&gt;&lt;/option&gt;';
            for (var i = 0; i &lt; arr_json.options.length; i++) {
				//console.log("AMIT KOLKAR ::: " + arr_json.options[i]);
                options += '&lt;option value="' + arr_json.options[i] + '"&gt;' + arr_json.options[i] + '&lt;/option&gt;';
            }
        //}
    }

    return options;
}

function _setRequestValues(pre_map) {
	console.log("PRE MAP   " + JSON.stringify(pre_map));
	new GlideModal().get('loader').destroy();
	
	var loadingDialog = new GlideModal('variable_loader', true);
	loadingDialog.setTitle('Fetching variable values...'); 
	loadingDialog.renderWithContent('&lt;div class="loading-container"&gt;&lt;div class="loading-indicator icon-loading icon-lg"&gt;&lt;/div&gt;&lt;/div&gt;');
	
	var type = g_form.getValue('type_of_blueprint');
	var blueprintSysId = g_form.getValue('blueprint');
	
	var gajax = new GlideAjax('Nutanix_ClientServerScriptBridge');
	gajax.addParam('sysparm_name', 'getHttpValues');
	gajax.addParam('sysparm_type', type);
	gajax.addParam('sysparm_parentUuid', blueprintSysId + '');
	gajax.addParam('sysparm_preMap', JSON.stringify(pre_map) + '');
	gajax.getXML(getResponse);
}

function setVariableData(uuid, value) {
	var var_data = JSON.parse(g_form.getValue("variable_data"));
	for(var i in var_data) {
		if(var_data[i].uuid + '' == uuid + '') {
			var_data[i].value = value + '';
		}
	}
	jslog(uuid + " : " +value + ":" +JSON.stringify(var_data));
	g_form.setValue("variable_data", JSON.stringify(var_data));
}

function getResponse(response){//var_data, loadingDialog){//, loadingDialog) {
	
	try{
	var var_data = JSON.parse(g_form.getValue("variable_data"));
	g_form.clearMessages();
	var answer = response.responseXML.documentElement.getAttribute("answer");
	
	
	//console.log("GetResponse :: " + answer);
	
	var parsedAnswer = JSON.parse(answer);
	var options = '';
	for(var i in parsedAnswer) {
		/*if(parsedAnswer[i].depends_on.all_dep.length == 0)
			continue;*/
		var type = parsedAnswer[i].type + "";
		var uuid = parsedAnswer[i].uuid + "";
		var data_type = parsedAnswer[i].data_type + "";
		
		if(type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') {
			if(parsedAnswer[i].state == 'SUCCESS') {
				options = '&lt;option value=""&gt;&lt;/option&gt;';
				var val_arr = [];
				for(var j = 0; j &lt; parsedAnswer[i].value.length; j++) {
					options += '&lt;option value="' +parsedAnswer[i].value[j]+'"&gt;'+parsedAnswer[i].value[j]+'&lt;/option&gt;';
					val_arr[j] = parsedAnswer[i].value[j] + "";
				}
				
				for(var m in var_data) {
					if(var_data[m].uuid == uuid)
						var_data[m].options = val_arr;
				}
				
				$j("#"+uuid).empty();
				$j("#"+uuid).append(options);
				$j("#"+uuid+" option[value='" + parsedAnswer[i].default_value + "']").attr("selected","selected");
			}
			else {
				var msg = '';
				for(var k = 0; k &lt; parsedAnswer[i].error.length; k++)
					msg += parsedAnswer[i].error[k];
				g_form.addErrorMessage("Failed fetching values for variable '"+parsedAnswer[i].name+"': "+msg);
			}
		}
		
		if(type == "LOCAL") {
			$j("#"+uuid).val(parsedAnswer[i].value);
			//setVariableData(uuid, parsedAnswer[i].value + '');
			for(var n in var_data) {
				if(var_data[n].uuid + '' == uuid + '') {
					var_data[n].value = parsedAnswer[i].value + '';
					break;
				}
			}
		}
		
		if(data_type == "LIST_SINGLE" &amp;&amp; (type + "" == "LOCAL" || type + "" == "PREDEFINED")) {
			
			options = '&lt;option value=""&gt;&lt;/option&gt;';
			for(var j = 0; j &lt; parsedAnswer[i].options.length; j++) 
				options += '&lt;option value="' +parsedAnswer[i].options[j]+'"&gt;'+parsedAnswer[i].options[j]+'&lt;/option&gt;';
			
			$j("#"+uuid).empty();
			$j("#"+uuid).append(options);
			$j("#"+uuid).val(parsedAnswer[i].value);
		}
		
		if(data_type == "LIST" &amp;&amp; (type + "" == "LOCAL" || type + "" == "PREDEFINED")) {
			var tmp_array = (parsedAnswer[i].value + "").split(',');
			options = '&lt;option value=""&gt;&lt;/option&gt;';
			for(var j = 0; j &lt; parsedAnswer[i].options.length; j++) 
				options += '&lt;option value="' +parsedAnswer[i].options[j]+'"&gt;'+parsedAnswer[i].options[j]+'&lt;/option&gt;';
			
			$j("#span-" + uuid).html("");
			var spanOptions = '';
			for (var k = 0; k &lt; tmp_array.length; k++) {
				spanOptions += '&lt;div style="display: -webkit-inline-box; margin: 3px;"&gt;&lt;span class="list-options" style="margin: 3px; padding: 5px; border: 1px solid rgba(0, 126, 255, 0.24); line-height: 13px; font-size: 12px; display: inline-block; border-radius: 2px; background-color: rgba(0, 126, 255, 0.08); color: #007eff;"&gt;' + tmp_array[k] + '&lt;a href="#" onclick="selectOption(\'removeOption\',\'' + escape(tmp_array[k]) + '\', \'' + parsedAnswer[i].key + '\')"&gt;&lt;i class="icon-cross" style="padding-left: 7px;font-size: 11px;margin-top: -4px;"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;';
			}
			$j("#span-" + uuid).html(spanOptions);
			
			$j("#"+uuid).empty();//$j("#id")
			$j("#"+uuid).append(options);
			for(var n in var_data) {
				if(var_data[n].uuid + '' == uuid + '') {
					var_data[n].value = parsedAnswer[i].value + '';
					break;
				}
			}
			
			//$j("#"+uuid+" option[value='" + parsedAnswer[i].value + "']").attr("selected","selected");
		}
		
		
	}
	g_form.setValue('variable_data', JSON.stringify(var_data));
	new GlideModal().get('variable_loader').destroy();
	}catch(e){
		g_form.addErrorMessage(e.message);
		new GlideModal().get('variable_loader').destroy();
	}
}

function _createDependencyJSON(var_data) {
	
	var pre_map = {};
	var extApiFlag;
	for(var i in var_data) {
		
		var field = JSON.parse(var_data[i].field);
		var value = (var_data[i].field_json.all_dep.length != 0) ? field.value + "" : var_data[i].value + "";
		var type = field.type + "";
		//var field_type = (field.data_type == "BASE" &amp;&amp; field.options.choices.length != 0) ? "LIST_SINGLE" : "LOCAL";
			
		pre_map[var_data[i].name] = {"depends_on":var_data[i].field_json, "value": value , "uuid": var_data[i].uuid, "type": type , "name": var_data[i].name, "key": i + "", "data_type": field.data_type};
		
		if(type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') {
			pre_map[var_data[i].name].requiresApiCall = true;
		}
		else {
			if(field.options &amp;&amp; field.options.choices) {
				pre_map[var_data[i].name].options = field.options.choices;
				pre_map[var_data[i].name].data_type = "LIST_SINGLE";
			}
			if(field.data_type + "" == 'LIST') {
				pre_map[var_data[i].name].data_type = field.data_type;
				//pre_map[var_data[i].name].type = "LOCAL";
			}
		}
	}
	//console.log("Pre Map:"+JSON.stringify(pre_map));
	//if(extApiFlag)
		_setRequestValues(pre_map);
}

/*function _validateField(index, field_val) {
	
	var variable_data = JSON.parse(g_form.getValue('variable_data'));
	var var_name = variable_data[index].question_text + '';
	var reg_exp_str = variable_data[index].regex + '';
	var is_mandatory = variable_data[index].mandatory + '';
	var reg_exp = new RegExp(reg_exp_str);
	
	$j(".error_body").html('');
	if(!reg_exp.test(field_val)) {
		var msg = var_name+"'s value "+field_val+" doesn't match with specified regex '"+reg_exp_str+"'";
		var error_str = '&lt;div class="alert alert-danger" style="padding: 5px 16px; position: relative; margin: 5px 0px;"&gt;'+msg+'&lt;/div&gt;';
		$j(".error_body").append(error_str);
	}
	
	if(is_mandatory &amp;&amp; field_val == '')  {
		var mandatory_msg =  "Variable '"+var_name+"' is marked as mandatory. Assign a value to it";
		var man_error_str = '&lt;div class="alert alert-danger" style="padding: 5px 16px; position: relative; margin: 5px 0px;"&gt;'+mandatory_msg+'&lt;/div&gt;';
		//$j(".error_body").html('');
		$j(".error_body").append(man_error_str);
	}
}*/
]]&gt;&lt;/script&gt;&lt;script_name&gt;Calm_Catalog_Variable_Config_Script&lt;/script_name&gt;&lt;sys_class_name&gt;sys_ui_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-31 09:42:02&lt;/sys_created_on&gt;&lt;sys_id&gt;b7e56ae437a12300fdfc097973990e63&lt;/sys_id&gt;&lt;sys_mod_count&gt;404&lt;/sys_mod_count&gt;&lt;sys_name&gt;x_nuta2_nutanix_ca.Calm_Catalog_Variable&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_script_b7e56ae437a12300fdfc097973990e63&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-16 16:15:33&lt;/sys_updated_on&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;use_scoped_format&gt;false&lt;/use_scoped_format&gt;&lt;/sys_ui_script&gt;&lt;/record_update&gt;</payload>
<payload_hash>1568245047</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0d5887e5dbcc7c103e3c6a5b8a96195b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98f0a0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>x_nuta2_nutanix_ca.Calm_Catalog_Variable</target_name>
<type>UI Script</type>
<update_domain>global</update_domain>
<update_guid>aae560f5dee320108999851ceb4c9f31</update_guid>
<update_guid_history>aae560f5dee320108999851ceb4c9f31:1568245047,5485a47569e3201060628338aad02d85:-1963065388,fbe5d5159ce7a85004f3cfb1d0b2e922:1652922889,b68426537553e050f7c37dd92ad53b23:-682116495,69a3e61fed13e0500ea8f575eae35a5f:1260429305,058d161f129fa05049d0941c823f22a6:-849868707,119d26870b136010035d89618641d903:1432250926,b1c96ac3d4136010d39ad09b3a33077f:-127493412,a069a2c3dd1360106874ff188f3e4ea7:-1691509764,41a06acbfbdf201045b2b66a5793d0cf:521271688,fe4bd2c71edf2010e30e092787431480:1621495448,5c651203f1df20101ddaa09d308d678d:-11352616,e1b396c3b6df2010989bdeba7eb047e6:-983787157,4c5fa51f439fa05092f9fd521240ba06:1582078857,012feddb919fa050efb84f4749c1b364:676122984,ea2f1272485b60504df3d3b4a53b67df:-244677298,0abe9e32af5b6050c98af16f9fd81007:-1821279070,0ff29e769f1b605026976ac2869eb437:-1189716373,550f5dfe90576050bb83e73225ff110b:1280763954,e87c5dfa39576050ff2c1d9518e39bb8:-1832239066,c34a99fad4576050460eb424076a3c1a:-1855341756,ed9f45f2e4576050846c259456b049d2:1512597924,4361b2010d5f2410e28b5746c9143312:781679176,b21a052c8517a010ca9a81a8f61c08f1:-685123544,b6f3c9a8d117a010c5a6e99c2e5502e4:-218771200,64e7706c37d3a01022a889d6dc308096:-1072616830,34c4fce858d3a0103426402ef7a8bbf7:-1227258094,5033f4a83bd3a010aa0774c3b29027dd:-1984404715,8b427464edd3a0108db7bff3939509bd:-1420410207,b5e1ac54cd1760100be001ad32a1b2cb:-1229427,218344503d93601064dcbc67f26e666a:2002637827,17b7c3b2b6836010b404c56b651e68d4:347371026,c8b78fb2188360105b3fad4e5f8c03b3:-1306364361,52d587b2bb83601040825f5cf5b92237:-980301320,3ee40732df8360102de4c204e73596bc:198657087,6d93c332cc8360100b343526f00f847c:-980301320,55c2c3328e836010d93aa4141de81475:333730273,70720bfee1436010a9ecafd2c454894d:-1263708607,ca90037e8f4360106df6401816ca715c:656458945,f90ffe3eeb436010e2ff8ef06508325f:693699350,13ee763e6c43601005cfb17c2a191a18:-971945299,472eb27a92436010e4733e53915e6e55:1761819597,935df27ae943601021049dc28337b3b9:1810917135,8e2cf27a0443601002f4a96f4195f754:1141659332,ecebb27a0143601050bb3dbe36475a43:-293207819,0f5a72f6a94360108902d0b6735bfb9c:1732442545,a968b6fe2f036010a8b67024324462dd:-1402361012,f85e57669d872010508ca946663f616d:946093826,cfca9ba2f18720101b440eb76f74400b:960380662,2b1c9aeeed8320100ca470fafe398c9b:676469852,0466526e3b832010fc2cc1db55899354:-280858074,207596ea4083201049a9631bc8380cfe:362941002,d274da2a9d8320102e5068861ca20665:1583464074,9192da2acb8320107450e40c2134ca96:1219744167,de419a2ab583201034c22717735887f0:1639796096,e0b05ea6ee832010cf22efaa0d739967:1017927856,b22d8a26d4832010a3504620a9481bd0:105474019,e66c862647832010f5f929d9377613a5:312835626,03670aeabf43201093ac71b4a5d8d687:-1621171341,e211c6aa4a432010c32e1874a8a37d63:-504910506,03e1f16e65032010c603463e272db974:-1144030212,a8a1bdeaca03201044a24ac28adff92f:-1550032976,6f90fdaa55032010467471f2577041ad:-1306308446,218b0b75d34364500aba2568399730e4:984877583,d9714b6195c32450370051d84f58a6fc:597966019,9e00832175c324505f5d1132d53335e6:1585023461,f9ad722d838324504cbd237d1a28eb73:1098973012,ed4272e1b88324508727bd6361825c9c:-402416165,e55032ed7d4324505b396ee937634f95:-52145957,bce42b1433cfac104fac378f6952b9bb:325952880,c99c971c8f8fac10ba4db8a23c01be2e:-569717136,a365ae48414f6c106ade55b71885ecb5:-126794288,3b536e84544f6c105645198d1a5cdec8:-1298037407,6a1226c4394f6c109392c3365cd3a1aa:-2097426599,cf912208e24f6c10f7db3784c38058ce:-255151375,932062448d0f6c10c27c37f4b2b591f9:-1859702803,93e840bd0cbaa05028e94acedce9fb2b:957145293,4c2182b3e02ee810d0017500bac771a4:622495973,945510750c81a8504bb2b3d9485b429b:-124936373,0e145c35ad81a850e0c6ab0ffe82b3ff:1434077992,3f2c08fd2c41a850dcba4697d1a2ae58:-1929498512,5596bb612141a850b2121a370233d65e:1662618628,a573ffad0701a8501c8ac4f0cef54d96:1425345436,d6a0bbe96301a85014aa3d0d9b0566a5:1216390289,b83bafe52901a8503d6c79e80c7a4d19:1010953739,9dc5aa69004d68502cda0586384ee0e6:241058488,8484a2e5084d6850f382ef3de53f77de:2060129837,b9a162e5fd4d68508b0dda0a9a526260:1744425755,cd87cf1d64852850df4ce769be904ec2:-12646392,7cafda91db4528505aeee3a5964e1fbc:1037434735,d5667af098c9a4506c37c62c832636fb:-1342222153,154738b8ae45a450f62748f12c46824a:364850711,0044f8f0a5092010003a30629eb241e9:-1351397579,52fba4f0010920100bb273c3f437bb76:364850711,112560fc58c52010bdc463375a3298e1:1410632425,163a612ef97cac10b3c0bac2b3e74969:247417313,dc76a9a6d47cac10c85af0c199dd54ce:1166291881,c543f43583a460107548d777908f8334:1678867835,ea6f20f1b3a46010f24163b5bb7207c6:1208581513,352420f5906460101ecc03dbd818989a:1117942685,a45328f5f16460105b21db356246ee21:868507560,7303e8b573646010318eb1e4d936ae6c:1753193272,d3912435a7646010984da8dcb9595417:-2115962806,3c5068b1d76460109b954e01b943cdc0:-1281403302,cbce14711d6460103a229df0381524dc:-2001415989,79cdd4fd4124601077e563af8c7228fc:-1596085137,93c614b1062460103b6cc038fda6aaa6:305477520,f9975dee3b3420500b08905d034b2c7c:1410632425,f1ecc1265934205074a303cacb3f7eae:-336161975,71f84d223d34205044416c06b1f7a2b0:1042052784,c03e7c2630f02050cba78d40b4394797:-336161975,2d42c7caa2fcac1079733c0ae0eaa849:-146771095,f3c25c0edc38ac10e7f3704ba526d76e:-278979842,fe015c8a5338ac107a1225fc207a7527:-369333460,df6f4c4ad138ac1091301cdfe638f97d:-275545172,750e0006b138ac10bf07c22d2715a38b:-744247852,cff40082df38ac1013309c76c952212a:1836741146,3bf348425b38ac10ee2cb001bba15b1d:487924234,37c20cce22f4ac109683c3cc8056c520:-325714103,58d0cc8eb7f4ac10901cff506c45aa18:-1440888544,567f7b791af4ac10dae27b00d8f6a62c:-776428017,7fe73b3939f4ac10a8a5ab91657a9e6b:162142639,d033337522f4ac1067088818588d87da:-776428017,1ddd637112f4ac10e88baab6fc6ee71b:162142639,c59c6bfd7db4ac10da2cfcf8d4bec7f5:-776428017,08fa277dabb4ac10f6194876446bc7ed:140793180,c4e8237db2b4ac10b349d08c46d65b9f:-776428017,5af76ff97fb4ac105d97ff1cf5186372:1123210981,59c32b79f8b4ac10228ec91b273e21b3:-1162335902,9992eb39a8b4ac1057a11e21459c5a7c:-1342222153,3a02abb519b4ac10983c067cedd59520:-1884456057,3e6ed735e2b4ac109758f2bc04153288:1194035201,c4eefeb9cd34ac10b02489c771b6b5c3:766886768,5a8dba79fa34ac10e7238f4b379308ba:1870502654,94f17c92d1a02410f5f5fccd68a7c7f2:-1342222153,1d73fd020168e01092a0e030000974b0:-330003897,0e9ba5ceeb28e0105667d5b78bce8427:2027117386,89e1a1c66a28e010f9f1cd644450b3c0:-224166313,6ea6dd42b428e0102cd052dd3a71dcf3:1039876893,8af0914e2ae4e010b4b4ad8a6cc78c44:-1584458480,99449042b664e01039836817ecd86bea:528220477,72c390421164e010ab33be9a2327b99f:-1102105804,aa900406db24e010068c3a0070073e6b:528220477,28108cc24224e010614284e5538796d7:-1731078883,498380b1bba8a010a8fcd0563c4809da:-1090209548,f9114c319ca8a010ef0e4f182bdfc81e:107320566,812937153f146010448d5a2b8e57bf62:-486574368,1cf9a999409c20102a9adecba4b94123:-472294419,92544d11f25c20104ccc43d46d9facde:1664252067,59a0c89183982010631148e450a6275e:1350931667,edbeffcd2858201004848cdbe6722cbb:-1762509766,86db370102982010400364b49fcab6a8:404504477,517b7b8d44582010fc077e8f357c1323:-687407164,3f12f7c5065820103f590731285059ef:576900291,a8cf6b8596582010c53417700c582d1d:774882051,1469a34d7e182010d1587a10c6a0eb28:905891560,122bd7818b182010b6d5b85498544204:905891560,07a89fcd73d4201029e4d47d7593575a:-941295275,608793010e18201082b59673e7ffc4ae:1840289923,0da45f4d0ad42010269f225b7e05cf92:-1864680603,d59b0bc5cc942010b39882dda894e9d2:-513899452,d9f8004d3504a0101d53f0dbf73fa1f8:364850711,a76c459e14a3541084bacd0ecdfb1d79:-759080581,ea8d104e9527141020f2728b35b5dad5:1570571547,daf973b51d63141011df9d3b8a4c8f63:-659085603,f9e54ba54ba3d010215f3b767992379b:114946691,c34dfeed6163d01080615f7907ab1f6b:1035742795,4afb7a2ded63d010aff9edbd17f565db:-469500900,f328762d8663d010b0e30d0cfadfa473:1347325463,69a41f9cedab5850823fbf2756ae57ed:1588135423,9012df1c1eab5850131039473047865c:-303183310,845e0f98c5ab58509dea78d94b1015d5:1104293498,a13c4b1813ab585003c32309abc91fe4:1038028701,8cea83188aab5850712e85145a96ac61:-819791179,06054714c5ab5850bc6a9b7372540c37:474776351,d854be58c32b5850dd989acbab1733fe:573319532,4442f0ff021bd4501c15a6ccf660a289:1038028701,c412f0ffb01bd450f54d2794a81ac150:-960080067,9bcde0f05e135c109b31fa74f2648bfb:1955665417,6b11447c505f1c103d7f169fb2efe259:-1033193669,4ec0047cf95f1c109136169eeabeb31e:314225039,835f99ec2e971c1017c381fc9b8b35a1:71537527,437cd56cb0971c10a19b59197db9f3fc:-1595720922,14ea992cb0971c100b65f01ff2a86044:-603512383,b37b8daaebcf5410f7903742b1ed64e7:-1756318587,bb68056a1fcf5410ba9ce20856c02450:1300882515,4eea8350661f10109dbb161602a60ef9:-961849528,83739e67e00b14d0dd70e3750add4e1a:-424363036,a752d667cf0b14d0688ac4fe3b113e5f:-1342736470,78319627aa0b14d0d0498e96a7a44c35:131263944,552b86ef9ac714d0a179e3c1c20ba4f5:-1628549292,585a06af8ec714d012ea671967340aa2:292418102,c55206e760c714d0d164bcedfa3ad80d:58955094,98d771af5d8714d048361fa336e29f5b:732574808,4279012f900714d03e22dc7479ff4b6a:772779061,9b783863760714d016a640be8737c4ba:-431679506,58a36863f6ae5850a7e30ee6d6aa5afc:772779061,bf632827f0ae58500e336f291ad301ba:1095117372,c0814687bee21850c11f5e120d8bbcc6:-1671156618,84000a477ce218501be4354b439089ff:-1970503793,6ad73dcf1ca21850c140a305fe04c472:700803310,a67ded0b16a2185084f418ec6591fce5:-1733010158,3fcae1077aa21850f7553906c56cbf4a:700803310,6b6529c319a218505f36efbdf9ee370e:-1733010158,7f24a1cfd5621850e02b554ef3aa55fb:-1995734597,f573694ffe621850d936779bcb490d2e:-450774637,fac269b9362e905085fce9461a321923:963027690,7795787ddd6a9050ea525875a2191f8c:1475466203,2d416fec02a21050dc5aba4e90d86bc4:-2005138552,bf8f53204ae21050c5b4321c9d275865:-349922106,4f5d9b6c58a210501653888b35270cf1:532483338,fb4b93a85ca210501f20c87fd58c17ba:836260555,0bb713a854a2105081093f568ac28808:310978825,b113dba409a21050854229df49245bf2:-128718938,9b315b60f7a210503598f913257b4c25:-443771688,e2d0d32421a210508f93477d3a06d732:-367518593,17114b682f62105042a9699152b4fc07:188628008,ed37322469621050905490232ae71b52:-619368226,eac4fa205a621050407791cb1a3407ee:188628008,5f91b220906210508c98fcebb29bc79f:-856368793,ceeda26c8f221050c5f97205abf3e013:1564946959,e8cca22c4c221050ce7bd4be92f53c51:697721594,aafaea68f0221050a7625942b07cf39a:1387066393,53e76ee4392210502f6e97a84fe34f92:1045967694,02f6e2287f221050014ce52c64814f62:223621847,565662e442221050f6da92b9de282357:1084229711,c7d56ea4bb22105055d44ec7244222d7:-1725369489,e704a6640b22105049667a6d3dfd7adf:1092003810,8f63e26499221050415b613d3b2d1dcb:223621847,ea916ae0bd221050fd774e14982ad5d9:-777867187,cbce12a0f1221050723d0437f010200b:223621847,6b5ad2a8eaeedc10b60975448c5d04de:1546021647,d9b352e8aceedc10dd3c4a5c71d8b8d8:1865708828,7621126853eedc104b596167ac25a016:760192236,b27fc6e4d7eedc10ae66d8ecf9f72b05:-539334212,0acd06a407eedc10d792701ff9c20482:-350007055,9f4c4a64bfeedc10f867d5346e66cde9:-1525128140,d2c90ee0a2eedc106bf296140121d053:-957462160,5d588aa096eedc10da7b14fe105180de:758308440,7e654a20f1eedc10e27e8f7e0f626103:-1394022376,eb33ceacb3aedc10b3c06c2370398c66:-1791426522,a2bd39686eaedc10f9dd8d1fee613268:959797833,483b3928cdaedc1012f0b055a2578ee4:954233802,55dc292cfc6edc10cf04e23420510369:-443771688,5d5be52c3c6edc10cea9443c632fba70:-1984207408,ccc66da8886edc10d5101c3c1eba39f8:-443771688,b0b521a8296edc10f66962b20d93f7f5:540366047,806421687b6edc10819a63cd705388d3:-1827224385,0e899dec4b2edc10e23b35f18cd23278:1140840678,780115a4fd2edc1072334f6b46492f9d:-118200845,dffbc9289b2edc100d3627fff8adc518:-221669944,505b0da4592edc1006bf087ff98e721f:-793671532,85c209da7f161810545127d7aa8937c5:-443771688,43d10d1ea6161810e80c8d5cb606989b:848489912,653bfc5e48d218107d5782961afb59be:-443771688,afc5385e01d21810e0d91b1db5a00cb0:1934870460,b779e41e37d2181098ee0b0b05558eff:-443771688,7c4920da3ed21810bc9cd2ea629a743a:-4762827,e34828da80d21810695a05e09dc5359b:-1703310554,bb96e05a18d218104de326d999a16490:1103369342,0b64a81a9ed21810b8f370b583b9ac4c:-969320260,88a2e0d6fad21810f420666df78662a8:-782838937,408d6506ec1ed410ed910b94a8da3821:32420899,f2466102ca1ed41004a660e9ee476aa0:327305795,5c4169ca4ddad41030ce9c976d4542d3:-1119313158,a32f59ca55dad41049a3585477609a14:369632382,949cd54a6bdad4103e95b5e7392f91b6:-1889402583,adca11c698dad4104428f630d3cb6e8f:-618400863,fcf724863f5ad41078f0809c3e4729b1:556436590,6358d9ddaa96141094e9b4f1ce646f40:-302445085,0125d15de4961410d50ac4dd87bf6c34:319365036,5e5df41d1e561410a1c67ccb4fa23a92:971680876,0d4cc645589ed010245c2fb3207e7a78:-2027441562,264419f0a452d010e0cc89b22244da21:-1477156202,26c01d307352d010f1a4355854e4519f:-1662907954,0cfc09f89912d010d3edbcb963407015:-402594845,d3380db85812d010bac609e573366ccb:1910711537,459481f4f812d0109a2f23efdb48822c:-373849509,214ef0f0d512d01093aa4a578b07d6b0:-94817655,defb78702e12d010cb8e87b9264af944:1135954615,f6da7470dd12d0109e56fed5fb7177a1:-1626033581,269938fceede90105338e1943d5b5e39:-516342780,2668f4bc6bde9010a888f45e7f3b9f1f:-120791025,f226f47c75de90105b1bcb579bcd303a:-1633389534,91162f68831e901042cf919b642b59a0:2079319554,0d44eb28ce1e90102d181d6054a045d1:32741029,b342aba43c1e901003fe106cf2609896:980877329,aa302ba4fd1e901063e1938ca41a55eb:-929593994,5700aba4f61e9010aed0f8387e4f3b43:1444887561,1b5e17e0811e901043c153f09d50a9fa:-234526537,a4369f2032da9010247df3256774f3f0:2124417765,d900d7a0165a901077275d19956e3de3:-1077829402,3d8d4320255a9010f5d1899ecfdefd6f:1058954304,966c87ec291a90105d8ba886babd5d63:366339545,f5b94f204b1a9010902f4c8741fcad03:299700431,03a536e8ddd690102927e032820d5f49:-1504893068,9a7ee390fb12901029d6b7dafdff8d34:-2006744134,7456e39cc0de5010445a4c25e80bcb17:1260132326,c8df575808de50108a23f6ee6d5f2122:1595163672,acde53185ede5010d9152e1eaff60b2c:-93971704,090d97d4cfde501058c279c15a7e074d:-441523557,e5cbd39452de50108b9f94e43c0eb184:-1707661207,cb695bd068de501020f51d72e92e6306:-32661674,eb340b94e39e5010e6127405bf1342c7:1346646433,74830b946b9e5010d9d98ec639c11c17:-1736755557,fa1e9a98221e5010149bc25b3d6b6be2:-1046945845,64da4409384c5c100461fe416f2ac9a6:1457954112,8af98409014c5c10fb12877a75aecd3a:630123296,f3857bb49a0c5c109119a13c5fc1678e:-2023147150,f3291da4293f4010d0314c6ca937ee39:239784530,6842efae6497401090fcc49e119289f8:1426157202,2da1ebae0f97401098ebce257f68be8a:1241742694,7d8da7af46028490a78a186306e2513e:-979984116,9e30adf2b4910010f86e6370fc8d7d74:2119676966,9e30adf2b4910010f86e6370fc8d7d74:2119676966,d993cb8793b90c10a81e37065c1a56ed:1967862980,32f89d2c5f950810d3b20a373a7ec855:2119676966,cc74d9e01d950810d48fbd9799eb06fe:-575043568,1a8359a0ef950810d58216d5b0f2a63f:2119676966,4594c99072d9c4108e32c14ea84d9250:-575043568,77ad66c4efbf73000f9ad5934fa73274:653197949,bedc2a0459bf7300ffadd4ca6c18d02e:527202197,92efb47f4cef33006d6e2b2ee56d0cfe:-797846945,aaaff07fcaef3300edb471ed508cf2d2:1020976701,d5eeb43fd1ef330020bb9fb3946aded4:400827039,16087c7330ef3300b8e9db95ff0dcb2b:-245489976,2041acb76baf33001f1304c7e5a44356:1877858645,ae402037d3af3300300a4c702b2a44ad:-690548779,fa7f987751af3300547f8edabdb8545b:684323477,0bee1837cbaf3300c79a865d42a38d8a:-1646627083,921e14bf936f3300a252379ac442a37b:79264637,efadd8bff76f33004f54a1bba4a45bda:684323477,62599c3f8b6f3300648357e6f6df6d03:-1921714859,7a76d8bb236f3300bb28cfc693c14ec0:1283178837,d21e487fc52f330030709e0b3aabbcbf:-1856439002,02669716fea33700b0a4b5a528c5058a:-999447415,73455f9277a33700460da4d1944c526a:1171777011,b21c5fc6c22bf30052e2645491d0ff3d:-622472980,74da1fc6682bf3007bc956557024ef02:-1806621591,56651bc2462bf3006bb328ffe2c4ceb8:-1308618076,f4619fce0be7f3003882ab02003143d4:-533319088,11f7cbc6a9e7f300e680fd85dcb92cb7:-2012640722,9a87cf461de7f300787c291d3189b0aa:590302490,d0048b8211e7f300f88ce309aa6828dc:-512238208,ab052f308ca7330031c8c0be7a7a5dbb:1473030049,ca81caef419b7300d5cd86e4ddef61ea:222033794,a0010aafc89b7300d0771b152952a1b0:-2126690521,5ae0c2efcb9b73006278315ab7a00f51:-492520079,dafff16f129b7300a34b00f59ddcb8de:1820175659,427fb56fa99b73003bce3c2e5088e666:-899705051,4698bd2bb59b730017310bf21db4de8f:-1203619502,ae18f52b539b7300086b836816409f8e:-1431643442,4cd7f9e7499b7300d71ab2f3bbb00515:-1334393333,fd1771e7cd9b73009d95dffc967f66ce:-1346814695,5776f967299b7300249bed85bf23659f:841536629,4e16f9670e9b7300ae99af550df3d4c6:-222451105,08a5f9638d9b7300c66465ec54350d67:-1961112359,2d664d45f0df3300b7cf82e6dee63ad1:1828153509,fe4c463bbc72330087b4c4b4a0252181:-277034093,8030e89ac8723300350c0b3a3f212f07:-777017347,cccf545a53723300bd4adfd21843e31e:-1848332899,ea5f5c5a2272330045efa17e512f753b:-651668099,67de509ad57233000b9cee96002d8432:104753117,6a8e5c5ad672330089c09837ad27c11e:-651668099,c6dd545a417233006e298fbd8b71bd00:-139539463,931ddc1698723300635f74bbb29de766:1253391673,23acd41a6e72330034da8d1c1b531766:1838217846,97b9d412c27233003429cad1f4980033:-359935294,72f69412ab723300a30b15597c5b428b:1860171336,83461816db723300fb7c9eeaa87c1a7c:1533467491,913654162b723300b4c436f2faf1e301:-1863832799,ade590de463233008a17b88d69b03be7:-1730453810,5180941294723300e0c07ee848ae5781:-203153093,74f403280cb2330068b46324c9d029cb:1207310939,4d940b2c13723300d835d5d5a04bb84c:1420267932,c1a38f2469b233001b78d93f290c0ef7:-938064750,64034f6473b23300e986d461d27dc79c:-852095737,4b714b6438b2330021f368dff6e07c94:610260374,8f11cfe88172330070a1e16405c861a4:1862408242,fce00b2c1372330011b707bf7602a045:-1333728444,9020cfe0dab23300c6887c703482ded1:-1034664747,00ff7620bcb233005532b6962b98bdd2:-7804381,507eb22c3f7233004e114d0228b8bd42:1405927611,5395b22cd3723300557ce22260e0793e:-7804381,2cb07ea8e6723300c2f542d052380e17:-526996572,b70076a4d5723300dbbd45afb7f2a5e8:5567748,c2cea6a40772330057db5c083026a8eb:-526996572,b48da6a452723300289d55cb264bf430:-1822870006,90eba6a48d723300f465118099bc0ee0:216079738,2aa926a4e872330089fdfea41eebdc32:546776629,9499aae8ac323300a2a9ae0e2ac67c80:-250385679,d9aeca541cf23300d1aa26c6e4f6a291:1338924191,e0bcca54f5f2330025d6c13e4d8f3c9b:1034441724,517c06948bf23300cb7f56d8a47ef08b:-1061895673,c0cb82d469b23300e8cfec3ad20bbbaf:1034441724,a3960550793233006022f8cfbe53f34c:-185654525,e35f5bd1feaf33000647ebd783b08dda:1105925921,69417f4573273300ed92da6d7b3c2119:1553211763,d42e65d9dce77300e239179085b39306:-592298416,400ee5d546e773005aa9505d84fc74fe:-1266919709,01bda9d91fe7730037e58d51de0da920:-329949949,7d7c836e4ed33300e92b9e93dd5341d8:-1266919709,801c432e70d33300ffa749736b1db5be:768615631,4a9a4bea49d333005d3c567c6a16e116:-474030192,c1c9c7aa9ed333003a776a4cfddeaa9b:-10547425,ede643a635d33300477accdc527dd71c:-1071432204,d1a50b264ad33300010dc3b537f30c61:-1897360104,6c020bea3493330027c1cacb1a4325e7:-16845817,8e492f1cc5973300c0c7c5e6d5f51d65:1828153509,b1102350d2973300e8644c3cc46d7cc7:-1132441322,7101d390fa5733007c8f0df4a9c0797c:2048916006,21c307d4e9173300560f3835d9818870:1305479120,5ad9e65492d33300c204c524ca537fe7:1620335701,24b46edc0d93330032479de37152666a:-427731780,3474aed4e9933300ebaa5a321fb8b5ba:-493589215,2f5326581b9333009f2698c7db698fc2:1931777581,4ff2ee18c593330092b428bde48af94b:-884861201,53289218559333007ff118b28824a87d:593520875,2b375294e8933300e5699426f716e539:-1855241814,8ed61e10c9933300b480f0214f3b6da3:973569100,dd561e54e0933300929bf2eaee3b0dbc:-43631344,ceb51a1092933300acc7db01b71747a7:-1536249503,d59d82dcb2533300d2c0078d9a28ff95:-900130254,20fc02dc795333005c436323971bf0af:7692858,fa9c8adca85333005892e882d034b4ee:-595027722,5a9b425c95533300802317b5fb4a9fc9:-1630425153,07494a58cf533300302bf209829b515b:-948576381,c7e807d34dc33700430470dbb2d163de:2048916006,02900f43b287f300a0e6825a99fac37f:257704390,7074a6478203f30075cafd2503667d85:331110085,dcf3aa07f203f3009485b883aca24dc7:-408138085,e37f120303cfb30005467d3e8a35083c:-545576721,bafd3d4f700fb30067b44024c08a8d78:-1520027241,dbbc398f450fb300c2df2c602c8ce3c1:500697485,2c54b947870fb30043205ad88cff5103:-1018093464,1723f583140fb300ef08e0c24865e40f:-1400845175,8f82bdc3170fb3008a342ce8ac9ea165:-2028652497,ad12f5c3c00fb3001d4cfe445008a2ec:-1175334942,bb40f943e20fb30076abcc568ad539da:-1502922629,76ce6903bd0fb300b76c2ffce36476b3:1211625514,3eaaa90f2dcbb300e488238765689db2:-1917311144,3c1a614f5bcbb30003f0d7e3052867de:-718281986,ce99690f18cbb300dafa9de060677ee8:-2103453556,cb186d8bf6cbb300c176df0e6ad53c86:1967341051,5e256d0bbbcbb3002f7c0c9c916bdd75:-1824360474,c644edc75bcbb3007df92af6dffbb2bf:-2124767658,89e4e5be1103b300434e57f908aca478:-1476490641,ae74e5fa8203b300f8bcb660c2bdb8ea:-2105409488,cc34693eb003b3006a0bb98fdf9098c4:-1861070414,dcc2a17ef203b30067894911e4899e99:-1697375883,4821a9fa0303b3000b723a35c85181aa:50877948,3110e5b64b03b3009f08882f1be6896b:-1046413642,61dfddb65e03b300b9a0a77456e5f5c5:50402844,d28f9db6de03b30070e25c79daaef0be:1793364251,219b99b61703b300abdfe48419b4492e:-797992500,e54bd5b69e03b300758441b884fd5b60:-246262430,9daadd76d903b300122d3369f1350b1f:-2134473115,e90a99f23303b300df7553480e2275ce:1544965036,1a6919f22903b300d191653744d1dcd0:-858114910,4e37d1f28d03b300f1a1476635fa473a:-1469867222,5dd6d9b21d03b300f7ce8ff5c6da387c:1215432175,345619727a03b300dcf5aeef9eca7333:-943272626,4c55d572c603b300e4e1c47e0f0f27f6:972339820,b5b45d326803b300bf6c0934612a70aa:762969527,a0a45dfe01cf7300bf5aea00dfe2c70b:164346851,0cf31dfe1bcf7300ffb101569859a55c:-143183974,421355fe52cf73009f7f4585ea79f3af:664975112,b49255fe3dcf7300df40c3315d5076aa:1627638089,7c429d7e50cf730042d8c8f937f8a1c0:-886858469,3c41d97e33cf7300c21d315628080e00:-712150493,9580d17edbcf7300f261f02812f8a3a1:-1792676629,df00d17e83cf73001d14e2f8cfff8cb6:-1594400237,b4cd85fa2dcf73003c411a75e4dfb54c:238377375,c63c4d3acacf730046dbdd2c7f3e6022:401714481,aa88c1f6b0cf7300fe69ea12cd20c70e:-397268359,faa749b69fcf7300b02a1e6306f9e0ba:1120703283,91e685b67ecf73004c0ba3b294a653c3:-1151647309,f57641b69dcf7300281bfb3de51a1851:-1196655235,70d20df29bcf7300f64f0788fdb8f90d:887729016,a25249b293cf730040fbb16add0a9591:134603403,a691cd72d6cf730001e0fdcc40230a23:-1141507545,88b0cd720bcf7300a6dadfc23a117918:1696110012,dcaff072b0cf73008857e27eda71d524:1979317144,9bee343271cf73002a7ca3a7f22080cb:-724494225,d78cb03e848f7300599fd5abfff400f3:-2033089104,b39ab03ee18f730078b135052d4270be:-717978856,b11af4fa108f73006e1bd6007acba06d:-155631351,73b9f07a7a8f7300ec5b3d9c8a1d5857:-129995247,68e5fc3a068f73006fe16abe7b3d6d9b:-1709974898,3d757cf6828f7300a8e93547d1b5eb04:-1680656410,c39070364a8f730020c349934f69d26b:-985649026,a6ff2832318f730002417713163e2082:-1063223266,368ce472b88f7300349978add0cd6063:-684793568,fb2964be374f73002ad18a7bebbfc6fc:-820611553,e8a724becf4f7300e57b5bde88ac3ba8:1371627422,a2776c3ece4f7300181209126f764b8d:125179352,c8d3a87adc4f7300ffe54c183281a1e4:744498241,45712c7a064f73008ba9700c093178cb:1925979038,8de0207aba4f730029ccffb7b404f5d2:-796314565,8670e4b6434f7300d304cae915ed1a03:1155415452,fa30283a7d4f73002de07ab8fca14a24:-1552221556</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_mid_server</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="mid_server" table="x_nuta2_nutanix_ca_calm_plugin_configuration"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes&gt;edge_encryption_enabled=true&lt;/attributes&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;MID Server&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;mid_server&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value="Reference"&gt;reference&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;32&lt;/max_length&gt;&lt;name&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference display_value="" name="ecc_agent"&gt;ecc_agent&lt;/reference&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;nitin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-12 07:18:51&lt;/sys_created_on&gt;&lt;sys_id&gt;cc01d46e4f41a30065e48020a310c7af&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;MID Server&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_mid_server&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-15 07:54:04&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1121680033</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0d58cb25dbcc7c103e3c6a5b8a96199b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98dcb0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Plugin Configuration.MID Server</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>49400a9b38b628102b22e1156d64574b</update_guid>
<update_guid_history>49400a9b38b628102b22e1156d64574b:-1121680033,4eb5c1aa07c1230011c3e2dae91e0559:-1378852435,738541aa1cc1230041aaa6c2904f0af3:-2015262470,0fc190aef441a300e2c4230944586cd4:-1378852435,85a1dc6e2c41a3001cd511fb77d7b7e1:-2015262470,1c31586e0841a3006dd97b94bfb92cd3:-1306863494,9ee0546ed041a30080d9d87c3ac289ba:-1953061986,977a6b92b201a3007348deb38a03db49:-667940654,364aa792cf01a300709c61439cbbeb09:-1840430439,472a27924801a300cb6a042f2d14f532:-730727518,e9b7eb126701a3006f8cb7f0b9f2b72c:1858432982,5e36f8de054963003c4ab8eb05752e8f:-966065418,8962889ebdc56300f2f82bbd86b76be6:817933755,ec810c5ed2c56300c5dfc68b6c23dd48:-998810353</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_scope_privilege_faac7cd01b0b64107f2a8515ec4bcbca</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_scope_privilege"><sys_scope_privilege action="INSERT_OR_UPDATE"><operation>execute</operation><source_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</source_scope><status>allowed</status><sys_class_name>sys_scope_privilege</sys_class_name><sys_created_by>system</sys_created_by><sys_created_on>2021-03-18 05:32:40</sys_created_on><sys_id>faac7cd01b0b64107f2a8515ec4bcbca</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CatalogClientScriptJS.addScript</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_scope_privilege_faac7cd01b0b64107f2a8515ec4bcbca</sys_update_name><sys_updated_by>system</sys_updated_by><sys_updated_on>2021-03-18 05:32:40</sys_updated_on><target_name>CatalogClientScriptJS.addScript</target_name><target_scope display_value="Global">global</target_scope><target_type>scriptable</target_type></sys_scope_privilege></record_update>]]></payload>
<payload_hash>77705625</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>0d58cb25dbcc7c103e3c6a5b8a96199e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e570000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>CatalogClientScriptJS.addScript</target_name>
<type>Cross scope privilege</type>
<update_domain>global</update_domain>
<update_guid>b6ac7cd09e0b6410b2f02e6610e71dcb</update_guid>
<update_guid_history>b6ac7cd09e0b6410b2f02e6610e71dcb:77705625</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_transform_script_54cb351037ed2300d27b8cf6c3990e7c</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_transform_script"&gt;&lt;sys_transform_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;map display_value="Nutanix Calm Application - Map"&gt;a3243fc637c12300d27b8cf6c3990e6b&lt;/map&gt;&lt;order&gt;100&lt;/order&gt;&lt;script&gt;&lt;![CDATA[(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {

    // Add your code here
    var logger = new Nutanix_Calm_Logger();
    logger.info("Transform map [" + map.name + "]. completed.");

    if (gs.getProperty("x_nuta2_nutanix_ca.var_migrate") + "" == "0") {
        new Migration_Script().copyFieldJson();
        gs.setProperty("x_nuta2_nutanix_ca.var_migrate", "1");
    }

	var gr = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
	gr.addQuery('isprofilevariable', 'true');
	gr.addQuery()
	gr.query();
	while (gr.next()) {
		var field_json = gr.field_json;
		var array = field_json.split("}@@");
		var profile = gr.application_profile+"";
		var temp = "";
		var index = 0;

		for (var i = 0; i &lt; (array.length - 1); i++) {

			if (array[i].endsWith(profile) ) {
					temp = temp + array[i] + "}@@";
			} else {
				temp = temp + array[i] + "_" + profile + "}@@";
			
			}
			index++;
		}
		temp = temp + array[index];
		gr.field_json = temp ;
		gr.update();
	}
	
	//scope for improment marge in above loop
	var name_gr = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
	name_gr.addEncodedQuery('isprofilevariable=true');
	name_gr.query();
	while(name_gr.next()){
			var field_json = JSON.parse(name_gr.field_json);
			var name = field_json.name+'';
			if(name.includes("_"+name_gr.application_profile)){
				continue;
			}else{
				name = name+"_"+name_gr.application_profile;
				field_json.name = name ;
				name_gr.field_json = JSON.stringify(field_json);
				name_gr.update();
			}
	}
})(source, map, log, target);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_transform_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;mumtaz.ansari&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-30 11:49:58&lt;/sys_created_on&gt;&lt;sys_id&gt;54cb351037ed2300d27b8cf6c3990e7c&lt;/sys_id&gt;&lt;sys_mod_count&gt;24&lt;/sys_mod_count&gt;&lt;sys_name&gt;onComplete&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;protected&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_transform_script_54cb351037ed2300d27b8cf6c3990e7c&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-21 10:53:33&lt;/sys_updated_on&gt;&lt;when&gt;onComplete&lt;/when&gt;&lt;/sys_transform_script&gt;&lt;/record_update&gt;</payload>
<payload_hash>1893090556</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>415887e5dbcc7c103e3c6a5b8a961957</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98f430000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>onComplete</target_name>
<type>Transform Script</type>
<update_domain>global</update_domain>
<update_guid>a62cc91f992320107fec4e5e54c568b7</update_guid>
<update_guid_history>a62cc91f992320107fec4e5e54c568b7:1893090556,98e3a89351ab2410185c2975f2bf5adb:-2067133626,2bd1b77e70a3e010785e63adb0480075:1893090556,56892bfe3a6fa0101f6c9a86ae185b23:-1223606238,fd08efbed0eba010abac5d61096505c2:1717321034,50994f3af5ef60102916da68ffa02d21:1589475620,54f1b63e872b601094857c04c27b1ded:1902720654,3adc3e3086d3245000c81b8206c43828:1589475620,28defda86e17e050b0aede4d4f3364cf:-1054791800,3158887de6baa0506e816eb137149309:-626838177,0dc617dd46ba60507b4dee46b60ed6c9:1896271721,1b45f101bcbeec104fdb2bef3fbab65e:-986756010,402169493d3eec1055dabded5fde647e:774499104,35b0e109503eec10579eed8ba8e07ff1:-1729161345,6318b4b88efeac1064bfa530f1aaf14b:-1423726263,c96ba47c19faac10a469a915d47d1573:-1966819408,3b80ec21c86ee0901ec8777525c90e12:-1423726263,341f9ce18a2ee090a8185802b8b8a004:-312418934,931e1061566ee09085740c97ab7d4bdd:1765177598,fe7ae2dde966e090cf2cf11097b6b680:1239064490,689ec611a226e090b5f8c3057dfa2244:1120830048,81ba20d51e2ea090547a797e426670fb:1318361344,f22ec1858fee6090e16011c213677f45:1120830048,237eb041c22e6090706cafd5e124f049:1763010988,ce92a0fd3de7d010e479230976f33c77:-1081968176,792cd2e89861230010f2dfc054210056:12616528,c3db751002ed2300906acfef0d1cf49e:-1331130750</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_817dbad72f7e6810da242f2ef699b6b6</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="DELETE"><cleared>false</cleared><disabled>ignore</disabled><field>mid_server</field><mandatory>false</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-15 12:21:42</sys_created_on><sys_id>817dbad72f7e6810da242f2ef699b6b6</sys_id><sys_mod_count>0</sys_mod_count><sys_name>mid_server</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_817dbad72f7e6810da242f2ef699b6b6</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-15 12:21:42</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Toggle credential system">48918ffe1b1ecc50ac43877ddc4bcb96</ui_policy><visible>false</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>-1786522034</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>415887e5dbcc7c103e3c6a5b8a96195a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e1b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>mid_server</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>fee2968848c7e010e0535eac687ae375</update_guid>
<update_guid_history>fee2968848c7e010e0535eac687ae375:-1786522034,0d8d7ed7df7e6810d2c2a85c77c84090:-703271462</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_properties_0f270c922fca6410152959ab2799b6b5</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description/><ignore_cache>true</ignore_cache><is_private>false</is_private><name>x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow</name><read_roles>x_nuta2_nutanix_ca.calm_admin,x_nuta2_nutanix_ca.user</read_roles><suffix>Calm_SaaS_and_ServiceNow</suffix><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-02 13:44:46</sys_created_on><sys_id>0f270c922fca6410152959ab2799b6b5</sys_id><sys_mod_count>2</sys_mod_count><sys_name>x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_properties_0f270c922fca6410152959ab2799b6b5</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-04 05:13:54</sys_updated_on><type>boolean</type><value>true</value><write_roles>x_nuta2_nutanix_ca.calm_admin,x_nuta2_nutanix_ca.user</write_roles></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=0f270c922fca6410152959ab2799b6b5"/></record_update>]]></payload>
<payload_hash>1130673736</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4158cb25dbcc7c103e3c6a5b8a96199d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98cf70000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>d295ec326f42e410cc37e190d5a60b38</update_guid>
<update_guid_history>d295ec326f42e410cc37e190d5a60b38:1130673736,5e4dc41a19ca64106c8425fd408294e7:701010505,5e570c9293ca641071bd79cbd872b289:-1863259350</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_cc07c62137412300d27b8cf6c3990e83</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Nutanix_Calm_Utils&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description&gt;DAO util and changes&lt;/description&gt;&lt;name&gt;Nutanix_Calm_Utils&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Nutanix_Calm_Utils = Class.create();
Nutanix_Calm_Utils.prototype = {
    initialize: function() {
        this.logger = new Nutanix_Calm_Logger();
        /*
		How to use alias in script
		1. Add new alias in either of table,api,property
		2. In respective script includes, instantiate Nutanix_Calm_Utils var apputil
		3. Referance specific value as apputil.configuration.&lt;api/table/property&gt;.&lt;key-name&gt;
 		*/
        this.version = gs.getProperty('x_nuta2_nutanix_ca.calm_version');
        this.configuration = {

            "api": {
                "getProjectList": "/projects/list",
                "getBlueprintList": "/blueprints/list",
                "getBlueprintDetail": "/blueprints/",
                "getAppList": "/apps/list",
                "getAppDetail": "/apps/",
                "getMarketplaceItemDetail": "/calm_marketplace_items/",
                "getCategories": "/categories/AppFamily/list",
                "getIcon": "/static/app_icons/",
                "getEnvironment": "/environments/",
                "getUsersList": "/users/list",
                "getRolesList": "/roles/list",
                "projectInternal": "/projects_internal",
                "directoryServices": "/directory_services/list",
                "getMarketplaceItem": "/calm_marketplace_items/list",
                "getGroupsList": "/user_groups/list",
                "proxyLogin": "/proxy_login",
                "getSubnets": "/subnets/list"
            },
            "table": {
                "NutanixStagingApplication": "x_nuta2_nutanix_ca_nutanix_staging_application",
                "NutanixCalmAction": "x_nuta2_nutanix_ca_nutanix_calm_action",
                "NutanixCalmApplication": "x_nuta2_nutanix_ca_nutanix_calm_application",
                "ActionWorkflowStaging": "x_nuta2_nutanix_ca_app_action_workflow_trigger",
                "AppDeployment": "x_nuta2_nutanix_ca_application_deployment",
                "Blueprint": "x_nuta2_nutanix_ca_nutanix_blueprint",
                "Project": "x_nuta2_nutanix_ca_nutanix_project",
                "CalmPluginConfig": "x_nuta2_nutanix_ca_calm_plugin_configuration",
                "stagingProject": "x_nuta2_nutanix_ca_nutanix_staging_project",
                "stagingBlueprints": "x_nuta2_nutanix_ca_nutanix_staging_blueprints",
                "processQueue": "x_nuta2_nutanix_ca_nutanix_process_queue",
                "applicationProfiles": "x_nuta2_nutanix_ca_application_profile",
                "varaiblesTable": "item_option_new",
                "variableSetTable": "io_set_item",
                "stagingMarketplaceItem": "x_nuta2_nutanix_ca_nutanix_staging_marketplace_items",
                "catalog": "sc_catalog",
                "category": "sc_category",
                "sysUiAction": "sys_ui_action",
                "catalogProfileRelation": "x_nuta2_nutanix_ca_catalog_item_and_application_profile_relation",
                "variablesProperties": "x_nuta2_nutanix_ca_catalog_variables_properties",
                "catalogUserCriteria": "sc_cat_item_user_criteria_mtom",
                "userCriteria": "user_criteria",
                "catalogProjectRelation": "x_nuta2_nutanix_ca_nutanix_calm_projects_blueprints_relationship",
                "Credentials": "x_nuta2_nutanix_ca_nutanix_calm_credential",
                "appRunlogs": "x_nuta2_nutanix_ca_nutanix_calm_app_runlogs",
                "stagingEnvironment": "x_nuta2_nutanix_ca_nutanix_staging_environment",
                "runtimeConfig": "x_nuta2_nutanix_ca_nutanix_runtime_configuration",
                "catalogClientScript": "catalog_script_client",
                "catalogUIPolicy": "catalog_ui_policy",
                "catItem": "sc_cat_item",
                "awsStorage": "x_nuta2_nutanix_ca_nutanix_storage",
                "awsTag": "x_nuta2_nutanix_ca_nutanix_aws_tag_list",
                "StagingGCP": "x_nuta2_nutanix_ca_staging_gcp",
                "blankDisks": "x_nuta2_nutanix_ca_blank_disks",
                "networking": "x_nuta2_nutanix_ca_networking",
                "disks": "x_nuta2_nutanix_ca_disks",
                "stagingAzure": "x_nuta2_nutanix_ca_staging_azure",
                "security": "x_nuta2_nutanix_ca_secret",
                "nw_profiles": "x_nuta2_nutanix_ca_network_profiles",
                "dataDisk": "x_nuta2_nutanix_ca_data_disk",
                "subnet": "x_nuta2_nutanix_ca_subnet",
                "dropDownTable": "x_nuta2_nutanix_ca_generic_table_for_dropdown",
                "recoveryPoints": "x_nuta2_nutanix_ca_restore_points",
                "marketplaceItem": "x_nuta2_nutanix_ca_nutanix_marketplaceitems"
            },
        };
    },
    // Get credentials

    _getApiToken: function() { //Orchestration api token call
        try {
            var credential_alias = "";
            var calmInstanceURL = "";
            var midApplication = "";
            var retries = 0;

            var grConfig = new GlideRecord(this.configuration.table.CalmPluginConfig);
            if (grConfig.get(gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id') + "")) {
                grConfig.query();
                if (grConfig.next()) {
                    credential_alias = grConfig.credential + "";
                    calmInstanceURL = grConfig.calm_instance + "";
                    midApplication = grConfig.mid_application + "";

                }
            }

            while (retries &lt; 3) {

                var inputs = {};
                inputs['endpoint'] = calmInstanceURL + gs.getProperty('x_nuta2_nutanix_ca.API_Prefix') + '/users/me';
                inputs['midapplication'] = midApplication + "";
                inputs['credentialalias'] = credential_alias + "";

                var outputs = sn_fd.FlowAPI.executeAction('x_nuta2_nutanix_ca.nutanix_refresh_token', inputs, 10000);

                var response = outputs['response'] + "";
                var statuscode = outputs['statuscode'] + "";
                var headers = outputs['headers'];

                if (statuscode == '200' || statuscode == '201') {
                    var parse_headers = JSON.parse(headers);
                    var cookie = parse_headers["Set-Cookie"][0];
                    gs.setProperty("x_nuta2_nutanix_ca.nuta_session_token", cookie + "");
                    this.logger.info("Refreshing Nutanix session.");
                    break;
                    //return "200";
                }

                retries++;
            }
            //return "401";
        } catch (err) {
            this.logger.error("Failed getting token. Error: " + err);
        }
    },

    // Use this method to make Calm API client call to the Nutanix for JSON response
    makeCalmApiCall: function(httpMethod, endpoint, body) { //Original makeCalmApiCall
        try {
            var credential_status = "";
            var cookie = "";

            var grConfig = new GlideRecord(this.configuration.table.CalmPluginConfig);
            grConfig.addQuery('sys_id', gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id'));
            grConfig.query();
            if (grConfig.next()) {
                //this.Catalog = grConfig.service_catalog;
                this.midServer = (grConfig.mid_server) ? grConfig.mid_server.getDisplayValue() + '' : "";
                this.midApplicationServer = (grConfig.mid_application) ? grConfig.mid_application.default_mid_server.name + "" : "";
                this.calmInstanceURL = grConfig.calm_instance + '';
                this.userName = grConfig.calm_admin_username + "";
                this.password = grConfig.calm_admin_password.getDecryptedValue() + "";
                cookie = gs.getProperty("x_nuta2_nutanix_ca.nuta_session_token") + "";
            }

            var endpointURL = this.calmInstanceURL + gs.getProperty('x_nuta2_nutanix_ca.API_Prefix') + endpoint;

            var request = new sn_ws.RESTMessageV2();
            request.setEccParameter('skip_sensor', true);
            request.setRequestHeader("Accept", "application/json");
            request.setRequestHeader("Content-Type", "application/json");

            if (gs.getProperty("x_nuta2_nutanix_ca.use_external_credential_system") + "" == "false") {
                request.setBasicAuth(this.userName, this.password);
				if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow") + "" == "false"){
					request.setMIDServer(this.midServer + '');
				}
            } else {
                request.setMIDServer(this.midApplicationServer + "");

                if (cookie + "" == "") {
                    gs.eventQueue("x_nuta2_nutanix_ca.refresh_token", "", "", "");
                    request.setRequestHeader("Cookie", cookie);
                } else {
                    var preset_cookie = cookie + "";
                    request.setRequestHeader("Cookie", preset_cookie);
                }
            }

            request.setHttpMethod(httpMethod);
            request.setEndpoint(endpointURL);

            if (body)
                request.setRequestBody(body);

            request.disableForcedVariableSubstitution();

            //if(this.midServer.status =='Up' &amp;&amp; this.midServer.validated == 'true') {

            var response = request.execute();

            if (gs.getProperty("x_nuta2_nutanix_ca.use_external_credential_system") + "" == "true" &amp;&amp; response.getStatusCode() == "401") {
                this.logger.info("Nutanix session has expired.");
                //credential_status = this._getApiToken();
                gs.eventQueue("x_nuta2_nutanix_ca.refresh_token", "", "", "");
                //if(credential_status != '401')
                return this.makeCalmApiCall(httpMethod, endpoint, body);
            }
            //this.logger.debug(' MID Server '+this.midServer.getDisplayValue()+''+ ' is Up ');
			this.logger.debug("====makeCalmApiCall \nhttpMethod: "+httpMethod+"\nendpointURL:"+endpointURL+"\nrequest body"+JSON.stringify(body)+"\nresponse StatusCode: "+response.getStatusCode()+"\n response body:"+response.getBody());
            return response;
            //} else {
            //this.logger.error(' MID Server '+this.midServer.getDisplayValue()+''+ ' is Down / Not Validated ');
            //return false;
            //}
        } catch (err) {
            this.logger.error("Make Calm API Call [makeCalmApiCall] Error: " + err);
        }
    },
	 makeAsyncCalmApiCall: function(httpMethod, endpoint, body) { //Original makeCalmApiCall
        try {
            var credential_status = "";
            var cookie = "";
			var grConfig = new GlideRecord(this.configuration.table.CalmPluginConfig);
            grConfig.addQuery('sys_id', gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id'));
            grConfig.query();
            if (grConfig.next()) {
				this.midServer = (grConfig.mid_server) ? grConfig.mid_server.getDisplayValue() + '' : "";
                this.midApplicationServer = (grConfig.mid_application) ? grConfig.mid_application.default_mid_server.name + "" : "";
                this.calmInstanceURL = grConfig.calm_instance + '';
                this.userName = grConfig.calm_admin_username + "";
                this.password = grConfig.calm_admin_password.getDecryptedValue() + "";
                cookie = gs.getProperty("x_nuta2_nutanix_ca.nuta_session_token") + "";
            }
            var endpointURL = this.calmInstanceURL + gs.getProperty('x_nuta2_nutanix_ca.API_Prefix') + endpoint;
            var request = new sn_ws.RESTMessageV2();
            request.setEccParameter('skip_sensor', true);
            request.setRequestHeader("Accept", "application/json");
            request.setRequestHeader("Content-Type", "application/json");
            if (gs.getProperty("x_nuta2_nutanix_ca.use_external_credential_system") + "" == "false") {
                request.setBasicAuth(this.userName, this.password);
				if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow") + "" == "false"){
					request.setMIDServer(this.midServer + '');
				}
            } else {
                request.setMIDServer(this.midApplicationServer + "");
                if (cookie + "" == "") {
                    gs.eventQueue("x_nuta2_nutanix_ca.refresh_token", "", "", "");
                    request.setRequestHeader("Cookie", cookie);
                } else {
                    var preset_cookie = cookie + "";
                    request.setRequestHeader("Cookie", preset_cookie);
                }
            }
            request.setHttpMethod(httpMethod);
            request.setEndpoint(endpointURL);
            if (body)
                request.setRequestBody(body);

			request.disableForcedVariableSubstitution();
			
            var response = request.executeAsync();
            if (gs.getProperty("x_nuta2_nutanix_ca.use_external_credential_system") + "" == "true" &amp;&amp; response.getStatusCode() == "401") {
                this.logger.info("Nutanix session has expired.");
                gs.eventQueue("x_nuta2_nutanix_ca.refresh_token", "", "", "");
                return this.makeCalmApiCall(httpMethod, endpoint, body);
            }
			this.logger.debug("makeCalmApiCall \nhttpMethod: "+httpMethod+"\nendpointURL:"+endpointURL+"\nresponse StatusCode: "+response.getStatusCode()+"\n response body:"+response.getBody());
			
            return response;
        } catch (err) {
            this.logger.error("Make Calm API Call [makeCalmApiCall] Error: " + err);
        }
    },
    //===========================API call to get CALM version=========================//
    makeCalmApiVersionCall: function(httpMethod, endpoint, body) {
        try {
			var cookie = "";
            var grConfig = new GlideRecord(this.configuration.table.CalmPluginConfig);
            grConfig.addQuery('sys_id', gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id'));
            grConfig.query();
            if (grConfig.next()) {
				this.userName = grConfig.calm_admin_username + "";                    //added authentiction check
                this.password = grConfig.calm_admin_password.getDecryptedValue() + "";
                //this.Catalog = grConfig.service_catalog;
                if (gs.getProperty("x_nuta2_nutanix_ca.use_external_credential_system") + "" == "false")
                    this.midServer = grConfig.mid_server;
                else
                    this.midServer = grConfig.mid_application.default_mid_server;

                this.calmInstanceURL = grConfig.calm_instance + '';
            }

            var endpointURL = this.calmInstanceURL + endpoint;

            var request = new sn_ws.RESTMessageV2();
            request.setEccParameter('skip_sensor', true);
            request.setRequestHeader("Accept", "text/html");
            request.setHttpMethod(httpMethod);
			if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow") + "" == "false"){
				request.setMIDServer(this.midServer.getDisplayValue() + '');
			}
            request.setEndpoint(endpointURL);
// 			request.setBasicAuth(this.userName, this.password); //basic Authentication.
			
			
			
			if(gs.getProperty("x_nuta2_nutanix_ca.use_external_credential_system") + "" == "false")
				{
					request.setBasicAuth(this.userName, this.password); //basic Authentication.
				}
			else
				{
					cookie = gs.getProperty("x_nuta2_nutanix_ca.nuta_session_token") + ""; //cookie status
					request.setMIDServer(this.midApplicationServer + "");
					if (cookie + "" == "") 
					{
						gs.eventQueue("x_nuta2_nutanix_ca.refresh_token", "", "", "");
						request.setRequestHeader("Cookie", cookie);
					} 
					else 
					{
                    var preset_cookie = cookie + "";
                    request.setRequestHeader("Cookie", preset_cookie);
					}
				}
			
            if (body)
                request.setRequestBody(body);

            if ((this.midServer.status == 'Up' &amp;&amp; this.midServer.validated == 'true') &amp;&amp; (gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow") + "" == "false")) {
                var response = request.execute();
				this.logger.debug("makeCalmApiVersionCall \nhttpMethod: "+httpMethod+"\nendpointURL:"+endpointURL+"\nresponse StatusCode: "+response.getStatusCode()+"\n response body:"+response.getBody());
                this.logger.debug(' MID Server ' + this.midServer.getDisplayValue() + '' + ' is Up ');
                return response;
            }
			if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow") + "" == "true"){
			    var response = request.execute();
				this.logger.debug("makeCalmApiVersionCall \nhttpMethod: "+httpMethod+"\nendpointURL:"+endpointURL+"\nresponse StatusCode: "+response.getStatusCode()+"\n response body:"+response.getBody());
                return response;
			}else {
                this.logger.error(' MID Server ' + this.midServer.getDisplayValue() + '' + ' is Down / Not Validated ');
                return false;
            }
			
        } catch (err) {
            this.logger.error("Make Calm API Version Call [makeCalmApiVersionCall] Error: " + err);
        }
    },
    //===========================End of API call to get CALM version==================//

    makeProxyCall: function(httpMethod, endpoint, body, userId) { //API Proxy Call
        try {
            var userGr = new GlideRecord('sys_user');
            if (userGr.get(userId)) {
                var proxyURL = this.configuration.api.proxyLogin + '';
                var calmUserName = userGr.email + '';
                calmUserName = calmUserName.toLowerCase() + '';
                var proxyBody = {
                    "proxy_for_username": calmUserName
                };
                var proxyResponse = this.makeCalmApiCall('POST', proxyURL, this.stringify(proxyBody));
            }
            if (proxyResponse.getStatusCode() == '200' || proxyResponse.getStatusCode() == '201') {
                var parsedProxyResp = this.parse(proxyResponse.getBody());
                var sessionId = parsedProxyResp.ntnx_igw_session + '';
                var idExpiresIn = parsedProxyResp.expires + '';
                var grConfig = new GlideRecord(this.configuration.table.CalmPluginConfig);
                grConfig.addQuery('sys_id', gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id'));
                grConfig.query();
                if (grConfig.next()) {
                    this.midServer = (grConfig.mid_server) ? grConfig.mid_server : grConfig.mid_application.default_mid_server;
                    this.calmInstanceURL = grConfig.calm_instance + '';
                }

                var domain = this.calmInstanceURL.replace('https://', '').replace(':9440', '');
                var cookie = 'NTNX_IGW_SESSION=' + sessionId + '; path=/; domain=' + domain + '; Secure; HttpOnly; Expires=' + this.proxyUTCConverter(idExpiresIn) + ';';
                var endpointURL = this.calmInstanceURL + gs.getProperty('x_nuta2_nutanix_ca.API_Prefix') + endpoint;

                var proxyRequest = new sn_ws.RESTMessageV2();
                proxyRequest.setEccParameter('skip_sensor', true);
                proxyRequest.setRequestHeader("Accept", "application/json");
                proxyRequest.setRequestHeader("Content-Type", "application/json");
                proxyRequest.setRequestHeader("Cookie", cookie);
                proxyRequest.setHttpMethod(httpMethod);
				if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow") + "" == "false"){
					proxyRequest.setMIDServer(this.midServer.getDisplayValue() + '');
				}
                proxyRequest.setEndpoint(endpointURL);
                if (body)
                    proxyRequest.setRequestBody(body);

                proxyRequest.disableForcedVariableSubstitution();

                if (this.midServer.status == 'Up' &amp;&amp; this.midServer.validated == 'true') {
                    proxyResponse = proxyRequest.execute();
					this.logger.debug("makeProxyCall \nhttpMethod: "+httpMethod+"\nendpointURL:"+endpointURL+"\proxyResponse StatusCode: "+proxyResponse.getStatusCode()+"\n response body:"+proxyResponse.getBody());
                    this.logger.debug(' MID Server ' + this.midServer.getDisplayValue() + '' + ' is Up ');
                    return proxyResponse;
                }
				if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow") + "" == "true"){
					proxyResponse = proxyRequest.execute();
					this.logger.debug("makeProxyCall \nhttpMethod: "+httpMethod+"\nendpointURL:"+endpointURL+"\proxyResponse StatusCode: "+proxyResponse.getStatusCode()+"\n response body:"+proxyResponse.getBody());
                    return proxyResponse;
				}
				else {
                    this.logger.error(' MID Server ' + this.midServer.getDisplayValue() + '' + ' is Down / Not Validated ');
                    return false;
                }

            }
			if (proxyResponse.getStatusCode() == '403'){ return this.makeCalmApiCall(httpMethod, endpoint, body); }
			else {
                this.logger.error("Error in makeProxyCall API Call [makeProxyCall] Error: " + proxyResponse.getBody());
            }
        } catch (err) {
            this.logger.error("Make Proxy API Call [makeProxyCall] Error: " + err);
        }
    },

    makeIntermediateApiCall: function(httpMethod, endpoint, body, userId) { //API intermediate Proxy Call

        var local_groups_flag = "";
        var grConfig = new GlideRecord(this.configuration.table.CalmPluginConfig);
        grConfig.addQuery('sys_id', gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id'));
        grConfig.query();
        if (grConfig.next()) {
            local_groups_flag = grConfig.use_local_groups + "";
        }

        if (!this.versionNewCheck() || local_groups_flag == "true") {
            return this.makeCalmApiCall(httpMethod, endpoint, body);
        } else {

            var grUser = new GlideRecord('sys_user_has_role');
            grUser.addEncodedQuery('role.name=x_nuta2_nutanix_ca.calm_admin^ORrole.name=admin^user=' + userId);

            grUser.query();

            if (grUser.next()) //user_name.hasRole("x_nuta2_nutanix_ca.calm_admin")) 
            {
                return this.makeCalmApiCall(httpMethod, endpoint, body);
            } else {
                return this.makeProxyCall(httpMethod, endpoint, body, userId);
            }
        }
    },

    makeCalmApiCallForIcon: function(httpMethod, endpoint, body, sysId) {
        try {
            var grConfig = new GlideRecord(this.configuration.table.CalmPluginConfig);
            grConfig.addQuery('sys_id', gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id'));
            grConfig.query();
            if (grConfig.next()) {
                //this.Catalog = grConfig.service_catalog;
                this.midServer = grConfig.mid_server;
                this.calmInstanceURL = grConfig.calm_instance + '';
                this.userName = grConfig.calm_admin_username + '';
                this.password = grConfig.calm_admin_password.getDecryptedValue() + '';
            }

            var endpointURL = this.calmInstanceURL + gs.getProperty('x_nuta2_nutanix_ca.API_Prefix') + endpoint;
            var tablename = 'sc_cat_item';
            var recordSysId = sysId;
            var filename = 'picture';
            var request = new sn_ws.RESTMessageV2();
            request.setEccParameter('skip_sensor', true);
            request.setBasicAuth(this.userName, this.password);
            request.setHttpMethod(httpMethod);
			if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow") + "" == "false"){
				request.setMIDServer(this.midServer.getDisplayValue() + '');
			}
            request.setEndpoint(endpointURL);
            request.saveResponseBodyAsAttachment(tablename, recordSysId, filename);
            if (body)
                request.setRequestBody(body);

            request.disableForcedVariableSubstitution();

            if (this.midServer.status == 'Up' &amp;&amp; this.midServer.validated == 'true') {
                var response = request.execute();
				this.logger.debug("makeCalmApiCallForIcon \nhttpMethod: "+httpMethod+"\nendpointURL:"+endpointURL+"\nresponse StatusCode: "+response.getStatusCode()+"\n response body:"+response.getBody());
                this.logger.debug(' MID Server ' + this.midServer.getDisplayValue() + '' + ' is Up ');
                return response;
            }
			if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow") + "" == "true"){
					var response = request.execute();
					this.logger.debug("makeCalmApiCallForIcon \nhttpMethod: "+httpMethod+"\nendpointURL:"+endpointURL+"\nresponse StatusCode: "+response.getStatusCode()+"\n response body:"+response.getBody())
                    return response;
			}
			else {
                this.logger.error(' MID Server ' + this.midServer.getDisplayValue() + '' + ' is Down / Not Validated ');
                return false;
            }
        } catch (err) {
            this.logger.error("Make API Call [makeCalmApiCallForIcon] Error: " + err);
        }
    },

    ///changes

    generateRequestBody: function(name, version, presetOffset, pageBreaker) {

        if (!this.versionNewCheck()) {
            var responseBody = "";
            switch (name) {

                case "startImportMPI":
                    responseBody = {
                        "kind": "marketplace_item",
                        "offset": 0,
                        "length": 1
                    };
                    return responseBody;

                case "importMPIData":
                    responseBody = {
                        "kind": "marketplace_item",
                        "offset": presetOffset,
                        "length": pageBreaker
                    };
                    return responseBody;

                default:
                    this.logger.error("Inside Nutanix_Calm_Utils.generateRequestBody :: " + name + " not found");
            }
        } else {
            var responseBody = "";
            switch (name) {

                case "startImportMPI":
                    responseBody = {
                        "kind": "marketplace_item",
                        "offset": 0,
                        "filter": "app_state==PUBLISHED",
                        "length": 1
                    };
                    return responseBody;

                case "importMPIData":
                    responseBody = {
                        "kind": "marketplace_item",
                        "offset": presetOffset,
                        "filter": "app_state==PUBLISHED",
                        "length": pageBreaker
                    };
                    return responseBody;

                default:
                    this.logger.error("Inside Nutanix_Calm_Utils.generateRequestBody :: " + name + " not found");

            }
        }
    },

    ///
    //Show/Hide 'Sync' ui action on authentication success or failure
    showHideSyncUiAction: function(SyncStatus) {
        try {
            var grAction = new GlideRecord(this.configuration.table.sysUiAction);
            grAction.addQuery('action_name', 'nutanix_sync');
            grAction.query();
            if (grAction.next()) {
                grAction.form_button = SyncStatus;
                grAction.update();
            }
        } catch (e) {
            this.logger.error("Inside Nutanix_Calm_Utils.showHideSyncUiAction Error: " + e);
        }

    },

    //Show/Hide 'Save Properties' ui action on MID Server Down/not validated
    showHideSaveUiAction: function(SaveStatus) {
        try {
            var grAction = new GlideRecord(this.configuration.table.sysUiAction);
            grAction.addQuery('action_name', 'save_properties');
            grAction.query();
            if (grAction.next()) {
                grAction.form_button = SaveStatus;
                grAction.update();
            }
        } catch (e) {
            this.logger.error("Inside Nutanix_Calm_Utils.showHideSaveUiAction Error: " + e);
        }

    },


    updateCatalogName: function(name) {
        var gr = new GlideRecord(this.configuration.table.catalog);
        gr.addQuery('sys_id', gs.getProperty('x_nuta2_nutanix_ca.nutanix_catalog_sysId') + '');
        gr.query();
        if (gr.next()) {
            gr.title = name + '';
            gr.update();
        } else {
            gr.initialize();
            gr.title = name;
            //gr.desktop_image = '';   //Image needed to be added.
            gr.insert();
        }
    },

    //('importApplications', 'POST', '/apps/list', 'payload');
    insertIntoQueue: function(topic, method, parameter, payload, process, desc) {
        var gr = new GlideRecord(this.configuration.table.processQueue);
        gr.initialize();
        gr.topic = topic + '';
        gr.method = method + '';
        gr.parameter = parameter + '';
        gr.payload = payload + '';
        gr.process_name = process + '';
        gr.description = desc + '';
        gr.state = "ready";
        gr.insert();
    },

    // Inserts app run logs into App Runlogs table
    insertAppRunlogs: function(parsedJson) {
        try {
            var grRunlogs = new GlideRecord(this.configuration.table.appRunlogs);
            grRunlogs.initialize();

            //grRunlogs.name = parsedJson.status.action_reference.name;
            var action_name_vars = ['action_install_ngt', 'action_manage_ngt', 'action_uninstall_ngt', 'action_update'];
            var action_name = parsedJson.status.action_reference.name + '';
            if (action_name_vars.indexOf(action_name) != -1) {
                var action_name_json = {
                    'action_install_ngt': 'Install NGT',
                    'action_manage_ngt': 'Manage NGT',
                    'action_uninstall_ngt': 'Uninstall NGT',
                    'action_update': 'App Edit'
                };
                action_name = action_name_json[action_name];
            } else {
                var aname = action_name.replace('action_', '').replace('_', ' ');
                aname = aname.split(" ");
                for (var j = 0, x = aname.length; j &lt; x; j++) {
                    aname[j] = aname[j][0].toUpperCase() + aname[j].substr(1);
                }
                action_name = aname.join(" ");
            }
            grRunlogs.name = action_name + '';

            grRunlogs.uuid = parsedJson.metadata.uuid;
            grRunlogs.description = parsedJson.status.description;
            grRunlogs.app_uuid = parsedJson.status.application_reference.uuid;
            grRunlogs.app_name = parsedJson.status.application_reference.name;
            grRunlogs.is_runlog_archived = parsedJson.status.is_runlog_archived;
            grRunlogs.is_critical = parsedJson.status.is_critical;
			grRunlogs.state_reason = (parsedJson.status.reason_list).toString();//stringify
            grRunlogs.state = parsedJson.status.state;
            grRunlogs.type = parsedJson.status.type;
            grRunlogs.kind = parsedJson.metadata.kind;
            grRunlogs.last_update_time = this.calmDateConvertor(parsedJson.metadata.last_update_time);
            grRunlogs.creation_time = this.calmDateConvertor(parsedJson.metadata.creation_time);
            grRunlogs.insert();

        } catch (e) {
            this.logger.error("Error occured while inserting app run logs, Nutanix_Calm_Utils.insertAppRunlogs: " + e);
        }
    },

    // Calm "last_update_time", "creation_time" date convertor specific to SNOW datetime format
    calmDateConvertor: function(getdate) {
        try {
            var date = new Date(getdate / 1000);
            var year = date.getUTCFullYear();
            var month = date.getUTCMonth() + 1; // getMonth() is zero-indexed, so we'll increment to get the correct month number
            var day = date.getUTCDate();
            var hours = date.getUTCHours();
            var minutes = date.getUTCMinutes();
            var seconds = date.getUTCSeconds();
            var lastUpdate = year + '-' + month + '-' + day + ' ' + hours + ':' + minutes + ':' + seconds;
            return lastUpdate;
        } catch (e) {
            this.logger.error("Error occured inside Nutanix_Calm_Utils.calmDateConvertor: " + e);
        }
    },

    parse: function(str) {
        if (str)
            return JSON.parse(str);

        return '';
    },

    stringify: function(str) {
        if (str)
            return JSON.stringify(str);

        return '';
    },

    proxyUTCConverter: function(timeStamp) {
        var d = new Date(timeStamp * 1000);
        return d.toGMTString();
    },

    markdown_renderer: function(markdown_string) {
        try {

            if (markdown_string == '')
                return '';

            x_nuta2_nutanix_ca.Markdown_lib;
            var converter = new showdown.Converter();
            var html_string = converter.makeHtml(markdown_string);
            var markdown_desc = (html_string + '').replace(/(&lt;h[1-9])/g, '&lt;strong').replace(/(&lt;\/h[1-9]&gt;)/g, '&lt;/strong&gt;').replace(/&lt;ul&gt;/g, '&lt;ul style="list-style-position: inside;"&gt;');

            return markdown_desc;
        } catch (e) {
            this.logger.error(e);
        }
    },

    versionNewCheck: function() {
        var old_version_array = ["2.4", "2.5", "2.6"];

        if (old_version_array.indexOf(this.version + "") == -1)
            return true;
        else
            return false;

    },

    _createMacroArray: function(macro_string) {

        var split_macros = macro_string.split("@@{");
        var macro_array = [];
        for (var i = 0; i &lt; split_macros.length; i++) {
            if (split_macros[i].indexOf("}@@") != -1)
                macro_array.push(split_macros[i].split("}@@")[0] + "");
        }

        return macro_array;
    },

    getMacroDependencies: function(field) {

        try {

            var field_json = (field) ? JSON.parse(field) : {};
            var dep_json = {};
            var all_dep = [];

            var type = field_json.type + "";
            if (type == "EXEC_LOCAL" || type == "EXEC_SECRET") {
                var attrs = field_json.options.attrs;
                dep_json.script = {
                    "dependencies": this._createMacroArray(attrs.script + ""),
                    "value": attrs.script
                };
                dep_json.all_dep = dep_json.script.dependencies;
            } else if (type == "HTTP_LOCAL" || type == "HTTP_SECRET") {
                var supported_fields = {
                    "content_type": "",
                    "url": "",
                    "request_body": ""
                };
                var attrs = field_json.options.attrs;
				
                for (var i in supported_fields) {
                    dep_json[i] = {
                        "dependencies": this._createMacroArray(attrs[i] + ""),
                        "value": attrs[i]
                    };
                    dep_json.all_dep = all_dep.concat(dep_json[i].dependencies);
                }
                dep_json.response_paths = {
                    "dependencies": this._createMacroArray(JSON.stringify(attrs.response_paths)),
                    "value": attrs.response_paths
                };
				dep_json.all_dep = all_dep.concat(dep_json.response_paths.dependencies);
            } else if (field_json.data_type + "" == "LIST_SINGLE" || field_json.data_type + "" == "LIST") {
				
				var choice_arr = field_json.options.choices.toString();
				dep_json["local"] = {
                    "dependencies": this._createMacroArray(choice_arr + ""),
                    "value": field_json.value+""
                };
                dep_json.all_dep = dep_json.local.dependencies;
				
			} else {
                dep_json["local"] = {
                    "dependencies": this._createMacroArray(field_json.value + ""),
                    "value": field_json.value+""
                };
                dep_json.all_dep = dep_json.local.dependencies;
            }

            return dep_json;
        } catch (e) {
            gs.info(e);
        }
    },

    createPreMap: function(field, type) {

		try{
        var pre_array = [];

        if (type == "LOCAL" || type == "SECRET" || type == "PREDEFINED")
            return field.local.dependencies;

        if (type == "EXEC_LOCAL" || type == "EXEC_SECRET") {
            return field.script.dependencies;
        }

        if (type == "HTTP_LOCAL" || type == "HTTP_SECRET") {
            var supported_fields = {
                "content_type": "",
                "url": "",
                "request_body": "",
                "response_paths": ""
            };
            for (var i in supported_fields) {
                var sup_array = field[i].dependencies;
                for (var j = 0; j &lt; sup_array.length; j++) {
                    if (pre_array.indexOf(sup_array[j]) == -1)
                        pre_array.push(sup_array[j]);
                }
            }
            return pre_array;
        }
		} catch(e){gs.error(type);}
    },

    createDependencyMap: function(var_array) {
        var arr = JSON.stringify(var_array);
        arr = JSON.parse(arr);
        return this._tsort(arr);
    },

    _tsort: function(map) {
		
        var error_map = {};
		
        function tsort(edges) {
            var nodes = {},
                sorted = [],
                visited = {};

            var Node = function Node(id) {
                this.id = id;
                this.afters = [];
            };

            edges.forEach(function(v) {
                var from = v[0],
                    to = v[1];
                if (!nodes[from]) nodes[from] = new Node(from);
                if (!nodes[to]) nodes[to] = new Node(to);
                nodes[from].afters.push(to);
            });
            Object.keys(nodes).forEach(function visit(idstr, ancestors) {
                var node = nodes[idstr],
                    id = node.id;
                if (visited[idstr]) return;
                if (!Array.isArray(ancestors)) ancestors = [];
                ancestors.push(id);
                visited[idstr] = true;
                node.afters.forEach(function(afterID) {
                    if (ancestors.indexOf(afterID) &gt;= 0) error_map[afterID] = id;
                    visit(afterID.toString(), ancestors.map(function(v) {
                        return v;
                    }));
                });
                sorted.unshift(id);
            });
            return sorted;
        }

        var createEdges = function createEdges(dep) {
            var result = [];
            Object.keys(dep).forEach(function(key) {
                dep[key].forEach(function(n) {
                    result.push([n, key]);
                });
            });
            return result;
        };
		
        var list = createEdges(map);
		
		var sorted_array = tsort(list);
		
		for(var i in map){
			if(!map[i].length &amp;&amp; sorted_array.indexOf(i) == -1)
				sorted_array.unshift(i);
		}
		
        return {
            "Dep_array": sorted_array,
            "error_map": error_map
        };
    },

    _tsort2: function(map) {
		var error = "";
        function topologicalSortHelper(node, visited, temp, graph, result) {
            temp[node] = true;

            var neighbors = graph[node];

            for (var i = 0; i &lt; neighbors.length; i += 1) {

                var n = neighbors[i];

                if (temp[n]) {
					error = 'Circular dependency detected for variable: '+n;
                    this.logger.error(error);
					return;
                }

                if (!visited[n]) {

                    topologicalSortHelper(n, visited, temp, graph, result);

                }

            }

            temp[node] = false;

            visited[node] = true;

            result.push(node);

        }

        function topsort(graph) {

            var result = [];
            var visited = [];

            var temp = [];

            for (var node in graph) {

                if (!visited[node] &amp;&amp; !temp[node]) {

                    topologicalSortHelper(node, visited, temp, graph, result);

                }

            }

            return result;

        }
		
		return {
            "Dep_array": topsort(map),
            "error_map": [error]
        };
    },
	migrateV1_4_3 : function(){
	try {
		var delete_blueprint = {};
		var str = [];
		var answer = '';

		var blueprint = new GlideRecord('x_nuta2_nutanix_ca_nutanix_blueprint');
		blueprint.addQuery('state', 'ACTIVE');
		blueprint.query();
		while (blueprint.next()) {
			var final_var_list = [];
			var response = this.makeCalmApiCall("get", '/blueprints/' + blueprint.uuid, "");
			if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {
				var app_profile_list = JSON.parse(response.getBody()).spec.resources.app_profile_list;
				if (app_profile_list.length &lt; 1)
					continue;

				for (var i in app_profile_list) {
					var variable_list = app_profile_list[i].variable_list;
					if (variable_list.length &lt; 1)
						continue;

					for (var j in variable_list) {
						var var_index = final_var_list.indexOf(variable_list[j].name);
						(var_index == -1) ? final_var_list.push(variable_list[j].name): delete_blueprint[blueprint.name] = {
							"sys_id": blueprint.sys_id + '',
							"variables": variable_list[j].name + ''
						};
					}
				}
			}
		}
		gs.info("V1_4_3 migration , blueprint to be deleted : " + JSON.stringify(delete_blueprint));


		var delete_mpi = {};
		var mpi = new GlideRecord('x_nuta2_nutanix_ca_nutanix_marketplaceitems');
		mpi.addQuery('state', 'active');
		mpi.query();
		while (mpi.next()) {
			var final_var_list = [];
			var response = this.makeCalmApiCall("get", '/calm_marketplace_items/' + mpi.uuid, "");
			if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {
				response = JSON.parse(response.getBody());
				var app_profile = (response.status.resources.app_blueprint_template.status.resources.app_profile_list);
				if (app_profile.length &lt; 1)
					continue;
				for (var i in app_profile) {
					var variable_list = app_profile[i].variable_list;
					if (variable_list.length &lt; 1)
						continue;
					for (var j in variable_list) {
						var var_index = final_var_list.indexOf(variable_list[j].name);
						(var_index == -1) ? final_var_list.push(variable_list[j].name): delete_mpi[mpi.name + " " + mpi.version] = {
							"sys_id": mpi.sys_id + '',
							"variables": variable_list[j].name + ''
						};
					}
				}
			}
			
		}
		gs.info("V1_4_3 migration, MPI to be deleted : : " + JSON.stringify(delete_mpi));

		var str = [];
		for (var z in delete_blueprint) {
					
			var count = 0;
			var cat_item = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
			cat_item.addQuery('blueprint', delete_blueprint[z].sys_id);
			cat_item.query();
            
			while (cat_item.next()) {
				count++;
				cat_item.state = 'deleted';
				cat_item.update();
		//		gs.info(" Deactivated catalog " + cat_item.item_name.name + " in V1_4_3 migration ");
				var catItem = cat_item.item_name.getRefRecord();
				catItem.active = false;
				catItem.update();
				gs.info(" Deactivated catalog " + cat_item.item_name.name + " in V1_4_3 migration ");
			}
			
			var variable = new GlideRecord('item_option_new');
			variable.addQuery('cat_item', delete_blueprint[z].sys_id + '');
			variable.query();
		//	gs.info("deleted blueprint " + variable.cat_item.name + " in V1_4_3 migration ");
			while (variable.next()) {
				variable.cat_item = "";
				variable.update();
			}
			var variables_properties  = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
			variables_properties.addQuery('catalog_item', delete_blueprint[z].sys_id+'');
			variables_properties.query();
			while(variables_properties.next()){
				variables_properties.deleteRecord();
			}
			if(count &gt; 0)
				str.push(z);
			gs.info("Blueprint "+z+" is migrated to V1.4.3");
		}
		for (var k in delete_mpi) {
			var count = 0;
			var cat_item = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
			cat_item.addQuery('blueprint',delete_mpi[k].sys_id + '');
			cat_item.query();

			while (cat_item.next()) {
				count++;
				cat_item.state = 'deleted';
				cat_item.update();
		//		gs.info(" Deactivated catalog " + cat_item.item_name.name + " in V1_4_3 migration ");
				var catItem = cat_item.item_name.getRefRecord();
				catItem.active = false;
				catItem.update();
				gs.info(" Deactivated catalog " + cat_item.item_name.name + " in V1_4_3 migration ");
			}
			var mpi = new GlideRecord('item_option_new');
			mpi.addQuery('cat_item', delete_mpi[k].sys_id + '');
			mpi.query();
	//		gs.info("deleted MPI " + mpi.cat_item.name + " in V1_4_3 migration ");
			while (mpi.next()) {
				mpi.cat_item = "";
				mpi.update();
			}
			var variables_properties  = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
			variables_properties.addQuery('catalog_item', delete_mpi[k].sys_id+'');
			variables_properties.query();
			while(variables_properties.next()){
				variables_properties.deleteRecord();
			}
	//		gs.info("deleted blueprint " + mpi.name + " in V1_4_3 migration ");
			if(count &gt; 0)
				str.push(k);
			gs.info("MPI "+k+" is migrated to V1.4.3")
		}
		gs.info(str);
		

		gs.setProperty('x_nuta2_nutanix_ca.1_4_3', "1");
		str.length &gt; 0 ? gs.setProperty('x_nuta2_nutanix_ca.1_4_3_bp', str) : '';
		
		var var_property = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties'); 
		var_property.addEncodedQuery('isprofilevariable=true');
		var_property.query();
		while(var_property.next()){
			 var base_var = new GlideRecord('item_option_new');
             base_var.get(var_property.variable);
             base_var.description = var_property.uuid;
			 base_var.update();
	//		gs.info(var_property.variable.name+"updated in V1_4_3 migration");
		}
		this.insertIntoQueue('startInventorySync', '', '', '', 'Start inventory sync', 'This process is invoking the import of all the inventories.');
	} 
	catch (err) {
		gs.info("V1_4_3 migration ," + err);
	}
	},

    type: 'Nutanix_Calm_Utils'

	
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;mumtaz.ansari&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-09 13:20:11&lt;/sys_created_on&gt;&lt;sys_id&gt;cc07c62137412300d27b8cf6c3990e83&lt;/sys_id&gt;&lt;sys_mod_count&gt;311&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_Calm_Utils&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_cc07c62137412300d27b8cf6c3990e83&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;priyanka.more&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-15 06:28:13&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>1991498067</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>455887e5dbcc7c103e3c6a5b8a961956</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98eca0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_Calm_Utils</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>9de595151ee7a8505347a3f199717e4c</update_guid>
<update_guid_history>9de595151ee7a8505347a3f199717e4c:1991498067,23451e0d1fab685032e2366996d61330:-1359795341,07141689e7ab685095ad1318ca4808a4:-1385154366,b0c30a09ce2b685066c2f7d5b1a42a11:-1916675437,f0ef75c1622b685065e3160536d33cb2:-2106372668,224f3981632b6850c02c833327e244e5:-629982135,a43dbd01262b6850bd2218c44f87bbec:-795623122,806b3d4d96e768501368abc37619395f:897437648,38bc3760d6afe450a2d271bfad8dd0f9:-559306764,d94ab4af5ddbe050e26c2dc61e953c66:1065383329,8a8008a38a1be050b61660fbc7c4789b:995871067,059bff9fdbd7e050dba7cc0fbec7bdf1:-1074102222,162bffdb72d7e05091d122298845fbb1:-807041294,f1a60cd1329b6c1038865661009aa206:670733650,57cf3f4df45b6c10350126492e79719d:1748392096,e89cf30d105b6c10387793fb7958c3f0:-1718538466,39c97309285b6c1068d9502b89716476:9683510,ed13449514536450a3a3946e8b492b62:-625154092,32260bc9b75f24105916309bcf972ab1:-1718538466,98fdf6895f5f2410eb012f80f603cb48:1142123488,64a9bc208717a010b2bcff37c99b18d3:1500248117,e7612b50a2cfac1042622df762ae411c:433819442,25ac16c0d44f6c104378d93fa48dd49b:1261537780,3cae7478081fe05040def7fb88c0b674:372130242,19f4c6ac6b17e0504d37b76081a745e6:-760913758,57289782b5032c105c060ff3e73cf32a:1470504511,ff6c692da74f6810d4a0459a4ac89959:9683510,904721e58e4f6810fa7abb18b9ca0c54:-1924842460,a763d7141347a4108c5baad1ce0122ec:-1221580520,b9c1b8d8510764108e60fceab68f1a76:1201879943,5629824f6d2ea410fb8b80c0d7daefa9:-580514552,e4f7028b5b2ea4102f366f2ed3a2f388:-1308439452,40d4028b1e2ea4102c6c6d6df3562682:-419389598,90f3064ba52ea4106ad9c61071e8ce2b:-138399324,a183420b382ea4109be9398356ce9931:-1101507772,cb434ac7502ea4107a7decb3a75e19c1:2118783886,7e92020b742ea410d6eb30a7bc59c0ef:-517713638,47f1c6c7cd2ea410ed4ca53826443c98:-1167147846,c1f904c3fba6a4105a2f971cb9974bca:31064640,922900439aa6a41037809b8f1ea161fb:-2076634797,b948844319a6a410e727e195e4f1cbe6:-1986833347,0589fabe0d22a410eeefdca56dd71236:274081148,b784f63a7422a41025486df3e759438c:1095628317,45d3363a8b22a41096d36d392a50e085:519817271,5460faf24c22a4104320798e1a00c746:1757579613,47ccaa328222a410500dee141c329cc1:-2044115447,0ca2c08f1f2260103ebc7a74de47bfc4:-602151229,69fe76baaa6a201048e556890250f36f:844487474,b71a853e3d82e410ad7b9df8768b2e96:-1308439452,3ca3013ac382e410a67872e29b291587:-184484956,81a1fcba7c42e4103fef008e496072c6:-1859996223,7d9ca4763d42e4109cb9619a27ce7eeb:-700746788,edc15fca180a6410531c73723450582b:-1537827042,37b60b0633c66410ff4a70a3074ebb8b:-844126338,f71d5b78008a28505383ea8e2bfa6967:-1629203490,6e0d5b78308a2850e6b7f1d33d266360:-1303240130,74e8073c6f4a28501db68eea3bd3353c:-1656482562,c57f71fc37822850c5e3323d1b83d7f7:618512356,467a317c9042285086754e058e802eb1:2038663202,dc9b3d1895c62450269f5605485e5ba0:2068391738,8f2eac98e7c22450e2c706a48984e05b:381450646,37d8e45070c2245012de7f6602af0082:1072730093,8b04a81480c224507b89c3f7faa1d6ff:1526717229,3acedc1098c22450e0712ead4fc7fa29:1386446374,7e6e181075c22450aca7fad2f0b7a25c:819833986,572d18dc258224506de2a689fbe8d26f:70328679,e1fbbe9c51396810c701e13243aef399:2068391738,1ad3715825756810c8305f6a20bd9e1c:1299782207,f64637178cc5a010e5d6cce191e1ed7c:794574022,41fe27977641a010cf52bb19ebdf8e49:-1162172460,3a382317390d60100cdd3a22a1e31756:-1720968745,8506ab9ff5c960109dd527d5a27ebac0:-1480299067,87949b5b6749201019d4fd7f75f1feac:2047460462,bc54535b7d492010ece97d36b9cbbed2:197412046,09241b5ba149201083275892119a1674:-2112234879,9ed3135b9c492010534b1dd8d10a593c:-1154098148,b1a01f9745492010e48f2483f6539b94:-2112234879,1f00d7171e49201082c83bc0dd7ebe75:477655778,0f0efe5f14852010490bfd543f0bccc4:2058676548,7c187697ca452010ae72bf3880244b71:554753000,4d37fa57294520108d8eb1cb81f9a60c:-2092582353,c2073e179c452010525c8d6d97d321ff:134978440,1ca56a9bb681a01009dedc90c2f99c17:-84550483,0e65669b5781a0109bed58c6b6518001:508288653,6df4ea1bce81a010079fe8e6008460b4:-1018148627,6fc1ae93e281a010619c04c34b182966:-1219859515,f32c169b6941a0105f30bc98a77d5409:813996737,c2f75ad38f41a010a7af3057ee4eece1:-1837960032,aa6f8edba8cd6010b343d3764bba5c08:-1371065259,b2a78693388d6010ee036641d628daf4:1984564746,49c04617854d60104bd75a79ac2e510e:-929198226,d1deb55bf54d6010313280802ab37219:-1034966017,6266ed972d0d6010b90c5a399c85f090:-2143074387,586f4d1b3b816010e2ced8921e181342:-894455589,2d3a8dd36e8160108caf92b1f96575ba:-1158615153,ec3785dfc1416010665ef0c3a1f27f9a:-238751210,ba1c285b96412090fefffdd307ec57b6:-1778960937,ba1c285b96412090fefffdd307ec57b6:-1778960937,0a7b20179f4120905cf41071b14fbf83:-398606045,0a39e4979b412090e067809b2dcb35cc:77506037,0af7044fcac1ec508a6f5cdaa82decbb:1592236647,730fceb22589ac50cd78e0e9dce6223a:778679874,a70f2c729f8d6c5045ce341e804e640e:212524770,ea9da872df8d6c501d4988219d683538:-1491054638,44eae4fe2b4d6c50798bbdfd4cbc7921:-450531328,9e8d50767e4d6c500a371182a25bbe39:-22926363,a71d1076884d6c508442605ada56a24b:305593674,69d654724a4d6c501a048397cafd45c0:-516026927,d5c07fea70496c508943bc94829a0afd:-1159142025,2c9f936eb2096c505908be516d9da3de:1172023152,a9c9bc625d816c500a77c0a4cbfdc85e:-1465992257,bca8346237816c5049e437d83df2c89c:-856285477,4616e7aad0812c1074a33dc8c5a820f2:2062547225,80c487d228c1e8109ec625f9e780030a:-1003074713,4e996830c445a450eca50157b2880fa6:-280436743,aa6a9ea21e382050005619f32755e906:-475985189,adb524fc45c5201048ff31fb68ac73df:1207511384,ef319d6abe3420508bf04da864f03bed:-1725784686,664e4d66fd342050933f61b8e03dd607:-1246111289,783dc566dc342050ab32ff484b89f4f3:308438742,7fb9c16261342050d8fab77c5209653b:-268475562,9c6889229e342050714d409cfd9c4975:-660742223,aab605ee4ff020504095c545dddbd7f4:308438742,77f5c9ae18f020502a51361cedf8792b:1182541328,9cb44dea6ff02050db45fd691dc71e00:965727796,03a2cdaa6ef02050d40509997d2f69dd:-499249684,6cb1056abaf020508d1890a522c8bd07:2022299203,3d204d2a49f02050c2174a60f04894c9:-1369079489,e6ff7c2a4ff02050d993570ec85a6063:-499249684,e5bd34a2ebf020504432617877b0c9a6:-1388073913,eb5c145af034ec10936c67cd8ee6b8e6:-499249684,695d401e18f0ec100512c82c2592f684:-1179768822,c3d9c41ab5f0ec10e52906a190f206d4:135236869,bef640d68cf0ec10bef1772414387b10:1932028713,ef6227c2af70ec1009f5faaf23a093be:1282268883,840fd7ced830ec108043f8092bd206f5:2024070210,d9dcdf06e930ec108d82502f0a59dff3:1527963938,69190fcea3fcac1067977c0633878efd:1706282203,3b61c7cafdfcac1067865cdf3d2e9342:1527963938,fe3b93f1b8b4ac101c4d9d052b195bad:1706282203,275bc7f58e74ac103a9dc4aa6bbb4e36:1628799004,3c86c731cb74ac10dc4912209726248d:1710239481,b014811227e0241053c316f8c50c840b:-2038794393,8f62c15e1ba02410d9d7db84eb1fb300:1467487879,1feef41e63a024101ec0d813b73dd9f1:29603083,d5f82d56bb64e010d6d9c30cc76a1432:1207511384,1eb6691a6b64e01004ee8fda70dae3e3:-698584641,599425968c64e01011efb56f339e08af:-1546385751,ccb8a84a30a0a010be3e8cabb28f20e2:1157381549,b9bd308260a7141009d1a45f65333aef:1883650057,ae4dfc423ba71410755cb0187edb18b6:-1504345741,84ac7082f5a7141033f36764a0cbfa04:-665294929,42ea740223a714100ee8f7300e1958a4:1011490111,c7f9fc02bca71410f23255dd2fadec75:1076727468,84293402e9a7141023bcea8a8a315394:378531725,922838ce1e6714101b2bc737f1d7cc95:746374128,cc46f48a026714106c4b63154c121488:-2093866599,3be470ca53671410c70373eabda272aa:-62248380,6a343c0e326714106af4676e2abcd309:-157584389,8dd1f0ca8e671410457e5f5bf6a34196:-1951128383,df91b48a7167141041ccae93473b4027:-1442617945,4090f84a8367141075e24a5cc8fc186a:2050462117,019fecc6c067141072f79593cd328328:-1831188795,787facc6e267141095a2fa898eab22f3:-218743293,58eee04a196714102fed89dcddcc4bc5:-1831188795,c39da40a5f671410bf7a7efc07465413:2048920037,39a6dc71c1e7d010d18e0169c755ea52:906781525,01a210fd70a7d01056a5355ec799143f:505886764,e302d4b9cfa7d010d107acb81f0e6d80:-1764571886,8370587d02a7d01037da4132ed10955e:2078562337,850c88b3a7d7d450242a3035b659c654:597391151,e44639ecb4d71c1063aca00e8a2cf4eb:-892405644,5c3c6928d4d71c105171f27959a3e2b4:2040406697,6a2b29e452d71c10c9b6c626159f1adf:404193919,f75a1c2cf2931c103b5419dd938fcab0:-1492400141,7375493dbfaa9050eb4055ce77b52673:1225862913,d03438bd7e6a9050267746c54d050d1b:-8613182,f7687716af14d010bcb3dc3d7f5255a5:1841950767,46efa875b8985010ad2d948d2c50ce80:1917529601,fdfe6cb52b985010fc4c97c57e5f6696:391584771,0aef32028a5814103f20b1da6538f7c6:-1054649825,2d41f51d98c49450008c80112298fa8d:7024653,3a0fe119cb849450bf9a6f99acb82c9d:-2063652868,c9ad2dd567c494503668444ff5f39e39:-1926451537,91ce64110880945028378435b33559b4:-419128519,756e2cdd4d409450eb98f96c1242652a:-726268620,626b6cd5804094502b6fddbca3bbbe78:1350530146,00eaa0115c4094503f974a1e6ed0283c:1097110424,aeaaa4153a4094502a868a18349e1d89:1072866694,ca62a859c700945099506bcc27cf92e6:1105396883,1de9a07f4a3b8c1080924c17a1acccee:-1473050218,8df8683b8e3b8c10235d6d8d92e6a943:-416441710,cf9e33eb90378c1037ac6db56c02befa:-1224839798,bf76f32b08f38c10d10c1fc4af1a8b85:1156754090,11a373a3a8f38c105212ca069ab67dad:-674292436,e1d177ef9ab38c10e01bcb24eb3ca703:478526910,61ecb8edbef3c010e0eba1d4d19aa376:-1705682866,852311e6e2230010745fac29bfba6d75:1018307385,6081fb01ded34010e3fc2b3f1c8d3ac9:681981532,31e0ff4105d34010ccc3f135f620b248:16326279,24ef234193d340106aff90c439e2e0e9:-1988975767,27cfaf012ad340107a0c037c1e1b3f1a:-1528290642,e54fa78d3e934010cf980a60a5a432ff:-1261945501,0b7d2f4daf9340100679e7a4d7f62205:108306278,fadca78d55934010f8f5145b83a714fa:-1722235142,363ceb4dbe934010e3ad284585ebbafe:1730098361,ef4967890a93401099a2d34620d270bc:6821147,3ddfd64d71db0010122d2bf85192c8c1:-185829358,e1de9e0d26db00108957f9579c60326c:-101961738,10bf8e4da39b0010e908e837057801e3:154883992,50a9d4385fd3001045f360f74dc4020a:1372376674,a7d814f491d300104b0899e0e507aaa5:805872783,fbbb3360ed5f0410688e9d2e798e78d5:2063878629,f54cebda5d4fc010b8505077f002b494:-1354894918,e276d419e3c70010a0df446941e8e443:-1214763492,f6e7c88a2c7e4010868929a9593f346d:-37487785,5a1db85ae16000106ebce4d45ef5fe78:-468448675,d564843aadbbf3007a09a34adcf81312:2134306854,2ebc7fee6d3bf300f6047d8b9c4c2949:-463460632,2397eb6948b333001f5e9b426982e8db:-1430333070,9b9b87d1b077330020578a6fe81eceb9:404727060,be52f4c95f2b3300175a1fa3c5cd42a1:-1241190103,28b5c2b00e63330004a1081af9a80ae5:-1014061663,c906858573df330050af5efb86a6464f:1416748225,6dea86f75172330010ef5f8bdfa564bb:195597801,6d1bb84c35b2330004e67592b96aab81:2101651716,4dcafc4c50b23300beed94d3d4e67ae9:-1274462870,789ab44c12b233005466861233c15aa5:-1097618369,5be9344c0db2330091e3f5ff46a55667:-1861443188,4659fc0cf5b23300e198857bcdddf091:1441827055,bbe5879ae3a2330038043fee8bec790c:1967914857,8c85ba1ebe623300f603b202b20e4824:-1245825130,ebe0365e87623300913d753ed7d89702:344087215,e298a6db2acff3004c51d146d6331c19:-352558727,da6a86b3a6723300395edec4c356b718:601796858,e9c463b511b233008dcab6efdd042a05:1396697269,73709df76d7633006d6c9f987ad87b00:240563474,19690d73bc763300c270f630fe3c62a4:1062521728,1f35f887258233000aa19fe78028382b:1388854173,ea253cc71d82330023ba1a8cc933652c:327979110,02e4f44762823300e09356ead0fa5b48:-1811692405,dfb370c736823300e983ef303f01b514:1388854173,54b3b88767823300aba696f0ad315d42:-273468163,67833447c8823300897b2db4f67aaa99:-682300393,eb065d009f0e3300fa77911fa5c1599d:1388854173,7283d104120a33009647acb2516f24f8:-1520857,8f9800097d1f3300bf88a72f79e2bceb:1990703629,74c9e6270c893300fe19e1421a433a34:344087215,2b99eee3c48933000713f06a20c9a609:445303032,5978a6a3fe89330096387f43539eae04:1542210748,adf722a3838933008f241867543b31cd:320182338,b41766a36d893300e3e2fbc39b268382:245319624,17c5a66326893300578b9b715e31256a:2128763330,e86566ef6a4933006f22e2b300d58bae:1141746189,c615e623c889330066507d26488846c2:-888239665,b3f46a23d68933000353fce10a876dca:999585783,93d46a23aa893300ae8c3095c71b0adf:-156386778,495b9e674a4933004ed85a7b14019c65:-1075560250,268ade67f7493300813cf1768cd324ab:1468239795,ba5112af16093300dbecd05e833c5b61:2025756305,3a0f822fac0933004b135db2b3060e04:1525564970,1ced82eb87093300cbc203fcdf827bcc:-1595414578,f30cc26b4a0933004f07d83343fa1a3e:-1841920116,fb954667ab093300d3228e896106645f:139672442,89714263d10933002764995614ee778a:-2047818780,783947d7ccb073009f7b9a289d845243:1664189231,5f2ce15b78bc330019c1251dbce2db99:1344231297,8c8c626e5f7833005f146d29009880b8:2048893628,67cbf8783430b300e0cf6eb80848396e:-183637656,d92aa4bc39fc7300ddf50098b1044c46:756771976,79201cf083bc73006e6188847af07bab:683982105,ab890ce464b0730075b92922ba008d3b:1890913806,e87980e48db0730055d55c279ef362d2:-2055294049,240580ece1707300239bbdc475446560:-1897943010,12c783458438330042985007636a30b3:1890913806,e7da35386ef0f30045d878d6d2467b7e:-1322583702,048c3944163033007ce5954103de6f3a:-1281797981,ede97d00cb30330037db91f69e20a6d2:1554116198,af1695f7f0a03300d9aa26f55bbe36be:1960442693,63a91973e9e033008ca1ca8c349b9fd0:827788452,49296a23085033004c28815ffecaa6b6:-44464157,74c8a62380503300fbf7a8741f16ac35:-837492737,9d70e34bf76c33008cf942a5df7b8de9:1669009267,87d69b83a06c330042b12e79012e8ebf:1983010569,67c657c30a6c3300feba6e17aa99f4f1:-2063810673,52e1e28b4da83300414d69d7b5da69c2:-843339734,5ca42676536033006e1450d3c431cf38:-1379735095,972ef5fed3c033002f04b7fd660f11d6:916214372,2bad4a53c52e6300949200b0b467c7e0:1289926590,67eae517c7aa63008d5f4aabbfb0f8a2:-1564236883,358d0ecb49a26300d3aa690585619951:1065150832,de140e4731a26300acbb850ae0d66447:-504486437,cd0e4c03b0ae23003a38fa08f0800ebd:-2112665817,3c91b07a5ca62300c60ae243592de180:1885335981,b7a077261c2623009110b85c0d7e57f6:240199054,f6b0ebd00ce223002b72eb45598e3833:-587797936,2d4cd39cf8a22300f2f5de9d038ba596:1159552271,84535b90fb2663008e74faa51946d5c0:817947824,75916acc3a66230082d51178c6f97c03:1483891257,99fd6d003fe22300bafbde99866909ef:-484971044,4b3a6d005ce2230035ed8ec2cf47b0c4:-1052171364,18a78d8c262223003ffa7e78914b8197:-484971044,2b9926ff058223002c8bb8125f154ca5:796385693,211b5277db822300a3ee96183503e821:472942619,8f999af3028223003a4046a92220fb02:-503582359,b29ac6776b422300d71ace5fbd006d53:31732372,d0623de3230623002733c8bd4a177f8e:-372205656,c2a1495bd782a30086b29ba9c9cc7c4f:1912644188,e95cb8938082a300ab069bc1400f4dda:1985826361,a3e39c1bed02a300c11af68991e3ae4f:167991996,b2301817a502a3005838bf32b8a758b1:-990520716,637761a1628a2300ff8d0078b953da1c:1688517324,a8e2e0ad1f06230089145ac71a53bed7:-1776621505,d8976159ecc223004ad254ff2c79c981:-1842019564,ed8970d1f8422300321da662a2b968ce:-97848339,29dcfcc967066b009a3858610083f71e:-1042701577,b24f680110066b00185c500e1a19d4de:1951309313,60f5ec494cc26b00556b49d1edbb536d:1891592437,f5309950408e2300740ce55e25eef619:-2060227712,f63ec110f38e2300adafa9339b24e002:810742891,7ead89dc254e230068662e8043188a9c:1136719629,d6da815cfd4e23004ea3f265eddf7a2b:-776447500,c5e349d0924e2300b2f2673f7e59316d:-549523885,f82d0e8c56862300f9d646448cd53a9a:866126304,301d5283e87523003448ccb4b988e599:-666693685,afeb1e434d75230008806ce877096361:253922448,07c3864f1ef123004c8f82c95e4d1b3e:-607216006,b83382cb24f123001a04ed3380b83fa6:1939680493,106ab9c7bef1230009502141c93898a8:-1666048103,3dcee98fcab12300c5aed6fc3061b722:-58668486,937e218f1eb12300e623e9d74ce493a8:-607216006,86bc61cb06b12300a1d6ce1dbf58c88b:-569454194,d0a91e07f0b9a3005b4269817e7e18f9:-1104963394,d0b6e1c362f5a300466dd1b345efe6da:992225794,45f4a1039cf5a300fefa76ecc6920ca0:-1136790922,5bad9dcb82b5a30025783ef4baa2348f:873845548,677a7faec039630023d03a479bc97558:1438022542,3e6a7fae4c3963006bc70b2aeed3b951:1302355598,737f12da12f9230017cfd0f7cf2cec38:1438022542,fd0431f11f75e300819956b957d0c1d8:-1614843276,8f88c57519f1e30032cd16d5f949c3fe:-1708585935,97b749fd57fd2300e0fd7c565308b068:862696279,92974d715c3163001543d85471f42df9:-379608796,2e77cd71b43163002a19ecb73e54efde:854484825,b47ef7edc13d23005468f7f185ed4d9c:-1587995975,e51ef3edea3d230043db7e7fce3b797a:1161824316,a77dff6d2a3d2300a740b15b7e288747:-606199214,7a2c732dd73d2300b24c984b837ff56c:-1025347161,1adffb156ef1230075f7e851ee4ae3c6:1241088169,5fa5bc6dfff5a30086193c6125c8e866:-754602674,6018a8d5836d2300d957e536e5a08c64:1786128469,002f110187652300c3ccf79fd27c3ddc:244504230,bce4a48501e1230012691220b880aa0c:-676849501,e7464ae801212300ae40b489254314bb:-77708988,32406d14722963008c76d6a26c36ad92:-1015307147,117bb543eed12300947a461f60646cb0:-1801119527,4216fd4fd79123007b8c6f028117403f:-1093476056,60a4cdcf62112300552423ab2aecb411:376767278,4de530ba45912300a90b840b65fac61d:381494677,e1424b56a75123000bdde251181f97ef:1741981683,9cd8f054a42d23000bb4ac24e1c1baf7:1731031146,3e98f410242d2300b5cc05fdaac488e1:-1100326519,3952a5fa6e952300560b977d79c58e0b:1727849333,2d3ed03233152300ee301914f1975060:1093139738,69182b5efb9d230049dd02f69eeb675a:820698938,23d72b5e509d2300d8e45d9218844f40:-498397573,3f77eb1ec29d23007dac6230dabe50fb:1746460774,4a342f5ab99d2300789741e24ee9f4fc:1570937844,f15f1f56b19d23000c863cb1d50c1697:1878383819,13447ed6741d230090969f346b3610fb:583572587,f77e3fe61ad12300d526fe1ddd30df69:1783218942,59e4875264152300a67a293efd0bddbe:-85140564,3e6b6612eed123003af199fb13803785:-2052516138,32ac688eb61d2300fa8c57c23fcedd3f:1586355424,c86ca08e4f1d2300c50fdf92f108640d:-1564394133,86abe80e431d2300279dba1e95e70ddd:-1770319341,4a9a600e501d23000540f6502e3c43e9:-641103501,c9e9280ece1d230021e93ead6f92b6e1:-182189005,1e49acca5c1d23009febb302fc45abd6:-1199287213,503920ca7a1d2300f26521753167f4d7:-1384747517,2cb86c4a701d23007ac317fe2d05536b:-1036576009,83956c4ad41d2300a0627e1b1cb1f763:895067125,8705e80a351d230090244b7565da2d22:-1517002870,2d179f2547112300083bdec5aed8d716:619773215,ec868cf97c512300e4a968dbc749d045:339057694,46ddb938c4d12300fa0005d8527a01eb:-530584369,697cfdb453d1230053fe2423b1efbe8f:617939878,cee8f4b0e4dd23009e7d64cf60c3dca0:-754938354,4e073cfcf29d2300bf5149956108dac3:1186470154,a1a534fc1a9d2300add3f80cafd222f8:1368592038,7b6534fc259d2300fca491e5e0a25a6d:-1971579545,d663b87cb59d2300846ef2c70e22c27a:-663801934,0643f83c099d230071278aa97e645704:-173218921,7933b0b86d9d2300811dca0446bfb299:-267801899,691ee0783b9d230079028fdaccad2598:735034123,f46554786d5d230070d150bd261ef15e:1929433413,fe4358349f5d2300edc8abf7812e377d:-593066623,8c015434ea5d230092b3900f6bf0e241:-1163449663,86fd0830d75d23001d12b554d2ac2558:-1751284441,69757b60bc1d2300000eca5130f5d7c5:-1772029879,af29be58771123002e6424df3a6bba11:-316090238,41c33ed0901123006cceabb949f4c600:831224956,d6a6917795cd23005f104d772b853f86:268008152,4c5070771e4d2300ce01a17ffe33909c:151205789,dcd2a227c0c5a300193c273ededccea7:40333851,9ef0e2e326c5a300d472157d00e4ce1e:56452773,1f3f1e638bc5a3009eea9ea80ea96eff:-1893247731,25ac11a7e88523007642c4635d2b6001:-915065046,1b7cdd67c38523001d0a29181f8122de:1001649820,664cd967e5852300e24ba755b2e62f31:-1378107027,4dbb196799852300f425cd24d3bf51a7:1129056810,1f5bd16724852300ce3f1e4494124ad9:-683076092,04fa1d2714852300d936f10dae5456eb:301120033,714755a3ce852300b25327aa96e76d1b:810830716,5cd9c9a74f452300c4904d9f7cf0c98b:-683076092,e4c398a3f1c12300d81b41b84f862e49:1234535235,a95354a3d8c12300df0b56605532303e:1739961597,1652146300c1230040aa7ffcbbee26b2:-510357201,15e114639dc12300fe6a692e482357ad:-1593936654,4321d4efa78123008eff1be4b522d199:-151142886,58de44afaa8123006894176fbc006807:1039072466,d6a970efbc052300159fbad5d7aadee9:382554143,74897c6fa8052300d5c8bdb0279a5659:-2095677452,2569bcaf9e0523003137d910f11458e6:593806146,35d7fc2fad0523003985f6bcc680d7ba:-1921525184,6797346fb00523006adbc1637fc9a408:-1554795412,2537fc2faf05230049da6bf3c1a543b5:-754857388,8be634abcb0523002962446fea483e73:-617809692,2a56b0ab9e0523008e8d4ba31010995c:718925376,7eaba8e3c4052300d238013ffb647002:1003504369,02b23f9ffb412300f840e6c9a2eaae15:1471106428,0092fb9f704123002c128187d875e2e8:1312140642,78a0bf5fa9412300bbd493677413a326:-383440449,3b7eeb1ff0412300e9a4798c23f70661:-648995161,fa3ea75b8d412300edd20469b7ccbf1b:51835091,6bac635b50412300bdadf0aec5163f6a:1091477255,735f73930041a300f6f8bb46ff326fa3:249568305,568f201b3c49630074a0e400c0aa7fc0:-1931523059,83cf07cf33456300855103455ae8ded5:-2070930081,84bf8b4ffb056300fe7d0617901a628b:1842252555,fd3fcf8f83456300dcbcc8f160d7967b:911212182,a07545eae545e3004f0fed9a9bacec69:194890797,91f9f4e24e45e30013307843f71ca846:1772564359,11da6c2a5505e300ce82207ed852c857:1395583904,d27204ee3181e300acf5ec2d18f22301:1213373881,22af7bcec4c12300934e9e143c07bca8:1584108704,2cccc7b54bc12300bb1bb95e051751ff:-518467077,9eadb63969812300396736d5128f2c0d:2141133413,d4bcdfb13b4523009eb7a6ada0a68c1b:1323389742,91e3573d56052300eb43dab606537f0d:-2009685848,b053fab509c1230055576b7cd0d4b7fc:-850130911,13777239d38123005cd8a3aed83bb194:-531617724,7617b2f57f812300e7c8affd884b042c:759044228,5a93b275e4812300127d43fbf82ade3f:-2106764558,f2423eb1f5812300d97042cf31edb4f2:-839528526,677136710c812300c22744101ea8ae21:553052209,38cf2ab1a2812300d574fe40923f8a08:849427136,c74c62710b81230009dd5f4cafb18280:1582422541,ed25ae39d54123006c9b4e7c5da69c93:1810348366,1daf9e39784123003efc709984d6098d:2125162294,5f6fdef542412300dab2737dd8f7b3a3:1149931353,e71fda39604123004c31f089c66cf260:-797722392,a2fd96f5ed412300e059b6bd5776f2ad:-1410515181,89cf3571eb012300ecdabb5481ce084a:-1455467242,35b121f9ed092300b98578bf102bcbcf:-2132334686,f3178e21e94123004c8a087ac0e02461:-393435071</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_0021d7ca2f0a6410152959ab2799b603</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="DELETE"><cleared>false</cleared><disabled>ignore</disabled><field>credential</field><mandatory>ignore</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-02 09:48:14</sys_created_on><sys_id>0021d7ca2f0a6410152959ab2799b603</sys_id><sys_mod_count>3</sys_mod_count><sys_name>credential</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_0021d7ca2f0a6410152959ab2799b603</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:44:06</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Calm SaaS compatibility test without MID server">aeeb29a72ff12010152959ab2799b6af</ui_policy><visible>ignore</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>1870175379</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>455887e5dbcc7c103e3c6a5b8a961959</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98dd20000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>credential</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>1de0c65fdeb62810f82c63c71896b290</update_guid>
<update_guid_history>1de0c65fdeb62810f82c63c71896b290:1870175379,791a86e7c7d66c508155440b46f88893:-849814905,9e91dd7c7b162c101bd285a73d548819:-909442257,da70917c12162c1019e756d609b9659b:1791634979,491d8578dd162c105512c9e4e97af417:-261024516,61a805f448162c109a626de7fae66ff8:-849814905,f04fecc97216e010bd30a309e6538ae2:-261024516,f3ea2c098916e010e12f0b3ec6e6b768:1791634979,d1311bcae90a641081adf84026c54c31:-261024516</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_08ac96ef3785a300fdfc097973990ef8</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="Plugin Properties" section_id="08ac96ef3785a300fdfc097973990ef8" sys_domain="global" table="x_nuta2_nutanix_ca_calm_plugin_configuration" version="3" view=""><sys_ui_annotation action="INSERT_OR_UPDATE"><is_plain_text>false</is_plain_text><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>1f6186232fd66c50152959ab2799b69f</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><text>You cannot edit the Calm instance URL once it is successfully authenticated.  Delete inventory (that cleans up the entire CMDB) re-enables edit option on Calm instance</text><type display_value="Info Box Blue">753f88a80f930000b12e6903cfe01206</type></sys_ui_annotation><sys_ui_element action="INSERT_OR_UPDATE"><element>x_nuta2_nutanix_ca_Nutanix_logo_on_config.xml</element><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>5f61ce232fd66c50152959ab2799b626</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter display_value="Nutanix_logo_on_Config">17f3f8abdb05230084249235ca961994</sys_ui_formatter><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type>formatter</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>service_catalog</element><position>1</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>9761ce232fd66c50152959ab2799b627</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>calm_saas_and_servicenow</element><position>2</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>1b61ce232fd66c50152959ab2799b627</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>mid_application</element><position>3</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>9b61ce232fd66c50152959ab2799b627</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>mid_server</element><position>4</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>1f61ce232fd66c50152959ab2799b627</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>calm_instance</element><position>5</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>9f61ce232fd66c50152959ab2799b627</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>1f6186232fd66c50152959ab2799b69f</element><position>6</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>1361ce232fd66c50152959ab2799b628</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type>annotation</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>calm_version</element><position>7</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>9361ce232fd66c50152959ab2799b628</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>use_external_credential_system</element><position>8</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>1761ce232fd66c50152959ab2799b628</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>credential</element><position>9</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>9761ce232fd66c50152959ab2799b628</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>calm_admin_username</element><position>10</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>1b61ce232fd66c50152959ab2799b628</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>calm_admin_password</element><position>11</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>9b61ce232fd66c50152959ab2799b628</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>show_help_text</element><position>12</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>1f61ce232fd66c50152959ab2799b628</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>datadelflag</element><position>13</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-19 06:06:15</sys_created_on><sys_id>9f61ce232fd66c50152959ab2799b628</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="Plugin Properties" display_value="Plugin Properties" name="x_nuta2_nutanix_ca_calm_plugin_configuration" sys_domain="global" view="Default view">08ac96ef3785a300fdfc097973990ef8</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:06:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_section action="INSERT_OR_UPDATE"><caption>Plugin Properties</caption><header>false</header><name>x_nuta2_nutanix_ca_calm_plugin_configuration</name><roles/><sys_class_name>sys_ui_section</sys_class_name><sys_created_by>girishgyani</sys_created_by><sys_created_on>2018-10-15 20:01:59</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>08ac96ef3785a300fdfc097973990ef8</sys_id><sys_mod_count>3</sys_mod_count><sys_name>Plugin Properties</sys_name><sys_overrides/><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_section_08ac96ef3785a300fdfc097973990ef8</sys_update_name><sys_updated_by>mumtaz.ansari</sys_updated_by><sys_updated_on>2018-12-10 10:28:06</sys_updated_on><sys_user/><title>false</title><view display_value="Default view" name="NULL">Default view</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>1195271260</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>455887e5dbcc7c103e3c6a5b8a96195c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d680000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Plugin Configuration</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>ef61ce2338d66c505d63c870ae39862a</update_guid>
<update_guid_history>ef61ce2338d66c505d63c870ae39862a:1195271260,c7f7b43c3bd22c1060cdb540347072c1:587701399,0950a648535aa81099956cdd522abbe4:1497705348,a1e0d3cad00a6410a98c0f53c188827d:-2078701061,eaab83c65b0a641000a44fe19682c344:-2139658775,82368f82bfc6641000483361f83e5521:-1792006071,c844cf4a49866410113d0cf71cec97db:-8154538,73abe1a79ef1201060486e849914e7df:812952599,c85eaa26b4174010ee4d7b7a31717e8d:-2083793690,61c25838e59fc490225aacec03911890:-2133159801,38b21838579fc490953d8d4f93774722:522520461,e92214e26b870090dae3190cad96c5d8:1009136000,5dd1d0a2868700901aa11613ab71c85d:241237586,db418bfef51ecc509797d323eebe2e49:540365768,16bb7a7a9b1ecc50fec7a5e84d9124bb:-903660170,c2bb7a7a8c1ecc50a1e8f354eb805267:1211682121,a9cda67c6ddd80103f928c26cff6086f:-600597485,a742663464dd8010108c0b4cef8f4ac9:543209493,7e22e23481dd8010d645ddfa8c332b7c:-1164298646,874cbdf4801d801003b6faa5c9b12058:915872158,8e24a617b0784c501e4f8ded8d4336a6:-1907681311,8b209d3f5624c050a568b8fb99b72fdc:693067631,15101d3f2824c050e8d067af8653b5eb:461019601,feef893fe924c0502eda97742dab5a00:-1888762212,4148b59e469c8010062a5614e3e60071:1715311886,c428bd5eac9c8010cae6cbab22bc0dee:1303010438,8008bd5e759c8010dccaa8577127a2ff:553531205,f497f55eb49c8010e04603a3eb2bb6b2:-2104648893,376e33a45b7c7300e18ef0b5a0f23e0c:-1567177831,663ab24c47f03300c230070c711d7053:1425163882,9e68bec8e7f033001a43e8708393c6df:-1105161566,c3eaae08cbb0330050167ebea14dc99d:-1065086188,924862041db033001c7173d635ac6bf4:-610219646,1b46e68031b033005ec68e054cfd978c:1899149594,9fa49b43286c330087fceb1794088795:-1003495776,1d178a5bce9c3300ba34bcd2899de8ac:-610219646,bc76ce5b9e9c330048b4c4075e5211ce:-1003495776,85641a4774407300e9190019b1791119:-1950018527,4e54d647db4073002a65588840e31c97:-1647341855,66000745bf4033007e4c54c68af20076:-1950018527,181aba013b4033008587f994e008db76:-1669853224,20f93a0192403300573c34951cdf17c3:-1704956321,25d9f601c4403300a9ef3274df8f2069:1279872848,1aa8bacd480033009c0e484e4724b25f:-1247647024,1925764d1b003300e90b30420752349c:-796958284,1615764d63003300a74e0195d801e21c:-799479747,efe4b24d8600330007d2c215895752d7:1531621707,ab94fe0da80033005ba3aef08bc9b578:91869259,e0643e0d4a0033007535d1c258fd84f0:631935208,c310f649e70033005305309e41cb50d8:160114994,17ee2ac52e0033007523238b36878a9e:1302466754,af4270e999d22300643aab515f8eb482:1090575250,9978c95c0f122300536e7af0704842b8:1464286708,1d78c95c1a122300fee82d399996030b:1816450309,a333784996caa3002b9546f93cbfbee4:96858575,6382605cf14ea7003f5bc7cb8961308d:1262091979,8463fe5763f123009827ba18f335d853:-1475006493,b3337e576bf12300a32b7c2aab7b12c7:1190180816,3ea23657d2f123006d7a4fb0cd269e04:2130483600,e192b257a7f123006d333d2b8019dee4:344948565,d962fe17d7f123001ff3826e3f363df3:55690884,a252fe1786f123002eb621b9d1d95b6e:-352688413,fa2b92438c752300cd4fb5e947b9fd1d:484873792,a11b52430675230087d0ee3f569f7a31:-1233294232,85e3514ff8712300b447c55d242ed8af:-1205866606,fe34ac4579e12300ea86af3e192f6e51:-208391995,d9433fb4f06123001e8e76ecc67e26b7:1035761652,b03d93f4b7212300aeaf553d86a39548:59133458,ab300f78be2d2300fe819bd55983e0d4:-180939093,f14e695e401123009a62d01882d9cc0a:-1652260500,141ea55eef1123005dca4bff60ca0ccf:1324485653,d69d615e51112300d2cce3ba6bb586dd:1001319548,7be4611ab01123007724e8598d525a57:-250393164,85d4edd6171123008897aa715da75dd6:1539857931,00946dd6a511230053199e666d45a051:738982177,5023699614112300b4c1da5ade671fae:1850067817,5db2659634112300ad4255e1b2ccd879:-820474099,5002ed562f112300f4168dcfef503c1d:-655238016,9131215655112300dca76c6ebe098f67:-533211616,9d3121560a1123009b949d67f997d55c:-1096750098,d53121563411230011cee17829dfad52:1122390091,054a4d771e8d2300eadb007fcd9bc2df:847922435,7a64c1b3578d2300a3c78c6abab9a3e6:1247660144,50d4b83b894d2300517b3acc0ffcbfd9:174965597,5cd4b83b904d2300d15d62f52061c0b9:-1013762022,151e1263acc5a300a39c0c9084d55b14:937777189,f40ede2333c5a300849574a21eb22941:-201320042,7fcd1e2364c5a300df82c1635e55c5d7:-48249859,5ebdda2310c5a3008767a5576c77e7a1:1264063002,7cad9a2352c5a300450dcb1b2f3a09c0:349129940,4a9d5a23b4c5a3009d0106ce6e3382e9:-39812589,598d5a23b0c5a300720c2d41adb5b907:612312278,ac7d1a23ecc5a3002da8eb7463c43a06:-232313057,f35dd623aec5a300f708514ef3359e3b:1627952849,2a3d5623c0c5a300daa819d315c49f7d:-1982647205,12dc5eef3685a30047d8b33b3ab97407:-2098363784</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_x_nuta2_nutanix_ca_nutanix_staging_marketplace_items_type</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="type" table="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;Type&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;type&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value="String"&gt;string&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;40&lt;/max_length&gt;&lt;name&gt;x_nuta2_nutanix_ca_nutanix_staging_marketplace_items&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-02-18 13:38:33&lt;/sys_created_on&gt;&lt;sys_id&gt;692f56932fdee010962a877cf699b629&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Type&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_x_nuta2_nutanix_ca_nutanix_staging_marketplace_items_type&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-18 13:38:33&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>1676236231</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4558cb25dbcc7c103e3c6a5b8a96199c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d220000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_staging_marketplace_items</table>
<target_name>Nutanix Staging Marketplace Items.Type</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>8a6fd69304dee0105cb8e664de4536e1</update_guid>
<update_guid_history>8a6fd69304dee0105cb8e664de4536e1:1676236231</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_92c9f8761b2a0810ac43877ddc4bcb2e</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;false&lt;/action_insert&gt;&lt;action_query&gt;true&lt;/action_query&gt;&lt;action_update&gt;false&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;x_nuta2_nutanix_ca_nutanix_calm_application&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;Update_state_on_display&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {

	var utils = new Nutanix_Calm_Utils();
	var app_detail = utils.makeAsyncCalmApiCall("GET","/apps/"+current.uuid,"");
	if(app_detail.getStatusCode() == '200' || app_detail.getStatusCode() == '201') 
	{
		var app_status = JSON.parse(app_detail.getBody()).status.state + "";
		current.state = app_status + "";
		current.update();
	}

})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-01-28 10:52:38&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;92c9f8761b2a0810ac43877ddc4bcb2e&lt;/sys_id&gt;&lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;&lt;sys_name&gt;Update_state_on_display&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_92c9f8761b2a0810ac43877ddc4bcb2e&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-18 16:31:30&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before_display&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=92c9f8761b2a0810ac43877ddc4bcb2e"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>284743042</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4558cb25dbcc7c103e3c6a5b8a96199f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e5c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_calm_application</table>
<target_name>Update_state_on_display</target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>2573d7145e47a4105403fb5fcbcc70f5</update_guid>
<update_guid_history>2573d7145e47a4105403fb5fcbcc70f5:284743042,8c395e18c683a410b316da0db04b8b3c:-2080342190,9021ae0474cfe010cc0cadb08b0d8236:967553978,4a7f1ac0bacfe010340c0cfc00f3a5fb:1988116441,6b1af8f22f2a0810b2bc07b256b559b2:-139525050</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_92e8017f37112300fdfc097973990e33</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Nutanix_FetchConfigureSettingDropdown&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Nutanix_FetchConfigureSettingDropdown&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Nutanix_FetchConfigureSettingDropdown = Class.create();
Nutanix_FetchConfigureSettingDropdown.prototype = {
    initialize: function() {
        this.appUtil = new Nutanix_Calm_Utils();
        this.logger = new Nutanix_Calm_Logger();

        this.disabledFields = gs.getProperty('x_nuta2_nutanix_ca.disabled.fields') + '';
    },
	_insertIntoOptions: function(var_json) {
		
		try{
		
		var sys_id = var_json.sys_id + "";
		var grQuestionChoice = new GlideRecord("x_nuta2_nutanix_ca_generic_table_for_dropdown");
		grQuestionChoice.addQuery('variable', sys_id + "");
		grQuestionChoice.query();
		grQuestionChoice.deleteMultiple();
		
		
		for(var i = 0; i &lt; var_json.options.length; i++) {
			var grQuestionChoice = new GlideRecord("x_nuta2_nutanix_ca_generic_table_for_dropdown");
			grQuestionChoice.initialize();
			grQuestionChoice.variable = sys_id + "";
			grQuestionChoice.name = var_json.options[i] + "";
			grQuestionChoice.value = var_json.options[i] + "";
			grQuestionChoice.insert();
		}
		} catch(e) {gs.info("In _insertIntoOptions:"+e);}
	},

	_sysIdToValue: function(values) {
		var sys_id_arr = values.split(",");
		var val_arr = [];
		for(var i = 0; i &lt; sys_id_arr.length; i++) {
			var grQuestionChoice = new GlideRecord("x_nuta2_nutanix_ca_generic_table_for_dropdown");
			grQuestionChoice.get(sys_id_arr[i] + "");
			val_arr.push(grQuestionChoice.value + "");
		}
		return val_arr.toString();
	},
	
    variableArrayParser: function(type, parent_uuid, var_array) {
        //this.logger.debug("++++variableArrayParser type" + type + " parent_uuid," + parent_uuid + " var_array" + var_array);
		var cat_launch = false;
        if (type + "" == 'catalog') {
			cat_launch = true;
            var gr = new GlideRecord("x_nuta2_nutanix_ca_nutanix_runtime_configuration");
            gr.addQuery("item_name", parent_uuid);
            gr.query();
            if (gr.next()) {
                parent_uuid = gr.blueprint.uuid + "";
                type = "blueprints";
                if ("" + gr.item_name.category.title == "Un-Published Blueprints") {
                    type = "blueprints";
                }
                if ("" + gr.item_name.category.title == "Published Blueprints") {
                    type = "published";
                }

            }
        }
		//gs.info("Var array"+var_array);
        var parsed_var_array = JSON.parse(var_array);
        var pre_map = {};
        var extApiFlag = false;
        for (var i = 0; i &lt; parsed_var_array.length; i++) {
            var var_data = parsed_var_array[i];
		
			var hasMacros = (this.appUtil._createMacroArray(var_data.def_val + "").length != 0);
			if(hasMacros)
				var_data.value = var_data.def_val;
            var depends_on = this.appUtil.getMacroDependencies(JSON.stringify(var_data));
            
			//Amit Kolkar
			//if (hasMacros == true) {
				pre_map[var_data.name] = {
					"depends_on": depends_on,
					"value": (hasMacros) ? var_data.def_val + "" : var_data.value + "",
					"uuid": var_data.uuid,
					"type": var_data.type,
					"data_type": var_data.data_type,
					"name": var_data.name,
					"sys_id": (var_data.sys_id) ? var_data.sys_id : "",
					"catalog_launch": cat_launch
				};

				if(var_data.type == 'EXEC_LOCAL' || var_data.type == 'HTTP_LOCAL' || var_data.type == 'EXEC_SECRET' || var_data.type == 'HTTP_SECRET') {
					pre_map[var_data.name].requiresApiCall = true;
				} else {
					if(var_data.options &amp;&amp; var_data.options.choices &amp;&amp; var_data.options.choices.length != 0) {
						pre_map[var_data.name].options = var_data.options.choices;
						pre_map[var_data.name].data_type = "LIST_SINGLE";
					}
					if(var_data.data_type + "" == 'LIST') {
						if(cat_launch)
							pre_map[var_data.name].value = this._sysIdToValue(var_data.value);
						pre_map[var_data.name].data_type = var_data.data_type;
					}
				}
			//}
			
		}
		gs.info("Pre Map"+JSON.stringify(pre_map));
        //this.logger.debug("====variableArrayParser type" + type + " parent_uuid," + parent_uuid + " var_array" + var_array);
        var result = this.getHttpValues(type, parent_uuid, JSON.stringify(pre_map));

        return result;
    },

    fetchLaunchVars: function(catSysId, profile) {

        var varJSON = {
            "profile": {},
            "service": {}
        };
        var grProfile = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
        grProfile.addQuery('application_profile.name', profile + "");
        grProfile.addQuery('catalog_item', catSysId + "");
        grProfile.addQuery('isprofilevariable', true);
        grProfile.orderBy('variable.name');
        grProfile.query();
        while (grProfile.next())
            varJSON.profile[grProfile.variable.sys_id + ""] = grProfile.field_json + "";
        var grService = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
        grService.addQuery('catalog_item', catSysId);
        grService.addQuery('isservicevariable', true);
        grService.orderBy('variable.name');
        grService.query();
        while (grService.next()) {
            varJSON.service[grService.service_name.question_text + ""] = {};
        }

        grService.query();
        while (grService.next()) {
            varJSON.service[grService.service_name.question_text + ""][grService.variable.sys_id + ""] = grService.field_json + "";
        }

        //[grService.sys_id] = {"field_json": grService.field_json + ""};
        //varJSON["service"][grService.service_name] = {"sys_id": grService.sys_id, "field_json": grService.field_json};
        return JSON.stringify(varJSON);
    },

    fieldValidation: function(catSysId, fieldValueMap) {
        try {
            this.logger.debug("Inside Nutanix_ClientServerScriptBridge.fieldValidation.");
            var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
            gr.addEncodedQuery('catalog_item=' + catSysId + '^isprofilevariable=true^ORisservicevariable=true^ORfield_regexISNOTEMPTY');
            gr.query();

            var fieldValReg = {};
            while (gr.next()) {

                var listRegex = {};
                if (gr.type + '' == 21) {
                    var filter = (gr.variable.reference_qual + '').substr(9, (gr.variable.reference_qual + '').length);
                    var genTable = new GlideRecord('x_nuta2_nutanix_ca_generic_table_for_dropdown');
                    genTable.addQuery('variable', filter);
                    genTable.query();
                    while (genTable.next()) {
                        listRegex[genTable.sys_id + ''] = genTable.value + '';
                    }


                }
                fieldValReg[gr.variable.name + ''] = {
                    "status": false,
                    "regex": gr.field_regex + '',
                    "type": gr.type + '',
                    "data_type": gr.data_type + '',
                    "listRegex": listRegex
                };
            }
            return JSON.stringify(fieldValReg);

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ClientServerScriptBridge.fieldValidation. Error:- " + e);
        }

    },


    hideAccessLocalGroupOption: function() //hide the option
    {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.hideAccessLocalGroupOption.");

            var lg = new GlideRecord('x_nuta2_nutanix_ca_calm_plugin_configuration');
            lg.addQuery();
            lg.query();
            while (lg.next()) {
                return lg.use_local_groups;

            }
        } catch (e) {
            this.logger.error("Error caught in Nutanix_FetchConfigureSettingDropdown.hideAccessLocalGroupOption:" + e);
        }
    },

    supportStatusMPI: function(bpSysID) {
        try {
            //             gs.info(bpSysID);
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.supportStatusMPI.");
            var ss = new GlideRecord('x_nuta2_nutanix_ca_nutanix_marketplaceitems');
            if (ss.get(bpSysID)) {
                return ss.support_status;
            }
        } catch (e) {
            this.logger.error("Error caught in Nutanix_FetchConfigureSettingDropdown.supportStatusMPI: " + e);
        }
    },

    advanceVariableDynamicOptions: function(catSysId, fieldValueMap) {
        try {

            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.advanceVariableDynamicOptions.");
            /*var launch_set_json = {};
			var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties+'');
			gr.addEncodedQuery('catalog_item='+catSysId+'^isprofilevariable=true^ORisservicevariable=true');//^data_typeINEXEC_SECRET,HTTP_SECRET,EXEC_LOCAL,HTTP_LOCAL');
			
			gr.query();
			
		
			var catalog =  new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
			catalog.addQuery('item_name',catSysId);
			catalog.query();
			
			var profile_json = {};
			var service_json = {};
			while(gr.next()) {
				var type = gr.data_type + "";
				var requires_api_call = false;
				
				if(type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET')
					requires_api_call = true;
				
				if(gr.isprofilevariable + "" == "true") {
					profile_json[gr.variable.question_text + ""] = {
						"sys_id" : gr.sys_id+'',
						"value" : gr.default_value + "",
						"depends_on" : JSON.parse(gr.field_json + ""),
						"uuid": gr.uuid + "",
						"type": type,
						"requiresApiCall": requires_api_call,
						"name": gr.variable.name+'',
						"question_text": gr.variable.question_text+''
					};
					
				}
				if(gr.isservicevariable + "" == "true") {
					service_json[gr.variable.question_text+''] = {
						"sys_id" : gr.sys_id+'',
						"value" : gr.default_value + "",
						"depends_on" : JSON.parse(gr.field_json + ""),
						"uuid": gr.uuid + "",
						"type": type,
						"requiresApiCall": requires_api_call,
						"name": gr.variable.name+'',
						"question_text": gr.variable.question_text+''
					};
				}
			}
			launch_set_json = {"profile_json": profile_json, "service_json": service_json};
			gs.info("Launch Page:"+JSON.stringify(launch_set_json));
			
			launch_set_json.profile_json = JSON.parse(this.getHttpValues('blueprints', catalog.blueprint.uuid + "" , JSON.stringify(launch_set_json.profile_json)));
			launch_set_json.service_json = JSON.parse(this.getHttpValues('blueprints', catalog.blueprint.uuid + "" , JSON.stringify(launch_set_json.service_json)));
			
			gs.info("Result:"+JSON.stringify(launch_set_json));
			return;*/
            var advanceFields = [];
            advanceFields[0] = {};
            advanceFields[1] = JSON.parse(this.fieldValidation(catSysId));
            return JSON.stringify(advanceFields);

        } catch (e) {
            this.logger.error("Error caught in Nutanix_FetchConfigureSettingDropdown.advanceVariableDynamicOptions:" + e);
        }
    },
	
	_substituteMacroEscript: function(value, all_values) {
		
        var macro_split = value.split("@@{");
        for (var i = 0; i &lt; macro_split.length; i++) {
            if (macro_split[i].includes("}@@")) { //@@{Prince}@@
                var internal_split = macro_split[i].split("}@@");
                if (!all_values[internal_split[0]])
                    return '';
					internal_split[0] = (all_values[internal_split[0]].value + "").replace(/\n/g, "");
				macro_split[i] = internal_split.join('');
            }
        }
        return macro_split.join('');
    },

    _substituteMacro: function(value, all_values) {
		
        var macro_split = value.split("@@{");
        for (var i = 0; i &lt; macro_split.length; i++) {
            if (macro_split[i].includes("}@@")) { //@@{Prince}@@
                var internal_split = macro_split[i].split("}@@");
                if (!all_values[internal_split[0]])
                    return '';
				
				//gs.info("unescapeAayega ::  " + unescape(all_values[internal_split[0]].value));
				//code changes by Prince ...
// 				if((all_values[internal_split[0]].value).contains("\n")){
// 					var res =  all_values[internal_split[0]].split("\n");
// 					gs.info("Prince inside if ::: " + res.join());
// 					internal_split[0] = res.join();
// 				}else{
					internal_split[0] = unescape(all_values[internal_split[0]].value + "");
//}
				macro_split[i] = internal_split.join('');
            }
        }
		
        return macro_split.join('');
    },

    _createOverrideVarBody: function(all_values, variable_json) {
		
		try {
        var type = variable_json.type + "";
        var override_array = [];

        if (type == "EXEC_LOCAL" || type == "EXEC_SECRET") {
            override_array.push({
                "key": "script",
                "value": this._substituteMacroEscript(variable_json.depends_on.script.value, all_values)
            });
        }

        if (type == "HTTP_LOCAL" || type == "HTTP_SECRET") {
            var supported_fields = {
                "content_type": "",
                "url": "",
                "request_body": "",
				"response_paths": ""
            };
            for (var i in supported_fields) {
                
                var val = (variable_json.depends_on[i].value) ? variable_json.depends_on[i].value + "" : "";
				
				if(i == "response_paths"){
					val = (variable_json.depends_on[i].value) ? variable_json.depends_on[i].value : {};
					var var_name = {};
					for(var k in val)
						var_name[k] = this._substituteMacro(val[k] + "", all_values);
					override_array.push({
						"key": i,
						"value": var_name
					});
				}
				else{
					override_array.push({
						"key": i,
						"value": this._substituteMacro(val, all_values)
					});
				}
            }
			
        }
			
        return JSON.stringify(override_array);
		} catch(e) {
			gs.info("override_array er"+e);
		}
    },

    getHttpValues: function(type, parent_uuid, pre_map) {
       //  gs.info("!Pre map:"+JSON.stringify(pre_map));
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getHttpValues. type : " + type + " parent_uuid : " + parent_uuid + " pre_map : " + pre_map);

            var post_value_map = {};
            pre_map = JSON.parse(pre_map);
            var top_pre_map = {};
            for (var i in pre_map) {
                top_pre_map[i] = this.appUtil.createPreMap(pre_map[i].depends_on, pre_map[i].type);
				//gs.info("Amit K 1 : " + top_pre_map[i] + " and dep on " + JSON.stringify(pre_map[i].depends_on) + " and type " + pre_map[i].type);
            }
			
            var top_post_map = this.appUtil.createDependencyMap(top_pre_map);
			//gs.info("Amit K : 2 " + top_post_map);
            var dependency_array = top_post_map.Dep_array;
			//gs.info("Amit K : 3 " + dependency_array);
            var error_array = top_post_map.error_map;
            var mpi_uuid, bp_name, project_uuid, environment_uuid;
            if (type == 'unpublished') {
                var table_name = (type == 'unpublished') ? this.appUtil.configuration.table.Blueprint + '' : 'x_nuta2_nutanix_ca_nutanix_marketplaceitems';
                var grBlueprint = new GlideRecord(table_name);
                if (grBlueprint.get(parent_uuid)) {
                    parent_uuid = grBlueprint.uuid + '';
                    type = 'blueprints';
                }
            }
            if (type == 'published') {
                var table_name = (type == 'unpublished') ? this.appUtil.configuration.table.Blueprint + '' : 'x_nuta2_nutanix_ca_nutanix_marketplaceitems';
                var grBlueprint = new GlideRecord(table_name);
                if (grBlueprint.get(parent_uuid)) {
                    mpi_uuid = grBlueprint.uuid + '';
                    bp_name = grBlueprint.name;

                    var bp_project = new GlideRecord('x_nuta2_nutanix_ca_nutanix_calm_projects_blueprints_relationship');
                    bp_project.addEncodedQuery('catalog_item.sys_id=' + parent_uuid);
                    bp_project.query();
                    while (bp_project.next()) {
                        project_uuid = bp_project.projects.uuid;
                        environment_uuid = bp_project.projects.environment_uuid;
                    }
                    parent_uuid = this.mpiPatchingBp(mpi_uuid, bp_name, project_uuid, environment_uuid);
                    type = 'blueprints';
                }
				else{
						var grBlueprint = new GlideRecord(table_name);
						grBlueprint.addEncodedQuery('uuidLIKE'+parent_uuid);
						grBlueprint.query();
						if (grBlueprint.next()){
							mpi_uuid = grBlueprint.uuid + '';
							bp_name = grBlueprint.name;
							var bp_project = new GlideRecord('x_nuta2_nutanix_ca_nutanix_calm_projects_blueprints_relationship');
							bp_project.addEncodedQuery('catalog_item.sys_id='+grBlueprint.sys_id);
							bp_project.query();
							while(bp_project.next()){
								project_uuid = bp_project.projects.uuid;
								environment_uuid = bp_project.projects.environment_uuid;
							}
							parent_uuid = this.mpiPatchingBp(mpi_uuid, bp_name, project_uuid,  environment_uuid);
							type = 'blueprints';
						}
				}
            }
            gs.info("Dependency JSON!"+JSON.stringify(dependency_array));
            for (var pos = 0; pos &lt; dependency_array.length; pos++) {

                var var_json = pre_map[dependency_array[pos]];
                this.logger.debug("!!!!! var_json \n" + JSON.stringify(var_json));
                if (!var_json) {
                    this.logger.error('Dependent variable "' + dependency_array[pos] + '" not found.');
                    continue;
                }

				//gs.info(var_json.name);
				
                if (!var_json.requiresApiCall) {
					if(var_json.data_type + "" == "LIST_SINGLE" || var_json.data_type + "" == 'LIST') {
						//gs.info(JSON.stringify(var_json));
						var_json.options = this._substituteMacro(var_json.options.toString(), pre_map).split(',');
						var_json.value = this._substituteMacro(var_json.value, pre_map);//2,33,44
					}
					else
						var_json.value = this._substituteMacro(var_json.value, pre_map);
					
					if(var_json.depends_on.all_dep.length != 0 &amp;&amp; var_json.data_type + "" == "LIST" &amp;&amp; var_json.catalog_launch) {
						//gs.info("Is work:"+JSON.stringify(var_json));
						this._insertIntoOptions(var_json);
					}
					if(var_json.depends_on.all_dep.length != 0)
						post_value_map[dependency_array[pos]] = var_json;
                    continue;
                }
				
                var var_uuid = var_json.uuid;
                var options = {
                    "state": "",
                    "values": []
                };

                var request_body = JSON.stringify({
                    "requestId": "",
                      "overridden_field": this._createOverrideVarBody(pre_map, var_json)
                });
				//gs.info("Override body: "+request_body);
				//gs.info("Send val body: "+'POST' + '/' + type + '/' + parent_uuid + '/variables/' + var_uuid + '/values' + request_body + "");
                var sendValuesBody = this.appUtil.makeCalmApiCall('POST', '/' + type + '/' + parent_uuid + '/variables/' + var_uuid + '/values', request_body + "");
				if(!sendValuesBody)
					continue;
				
                var parsedSendValueBody = JSON.parse(sendValuesBody.getBody());
				//gs.info('1) HTTP variable discussion POST \n endpoint /'+type+'/'+parent_uuid+'/variables/'+var_uuid+'/value'+"\n request body "+JSON.stringify(request_body)+"\n response body "+JSON.stringify(parsedSendValueBody));
                // 				gs.info(sendValuesBody.getBody());
                var valPollBody = {
                    "requestId": parsedSendValueBody.request_id,
                    "trlId": parsedSendValueBody.trl_id
                };
//gs.info("valPollBody "+JSON.stringify(valPollBody));
                var getValuesBody = this.appUtil.makeCalmApiCall('POST', '/' + type + '/' + parent_uuid + '/variables/' + var_uuid + '/values', JSON.stringify(valPollBody));
                var parsedValueBody = JSON.parse(getValuesBody.getBody());
				if(!getValuesBody)
					continue;
				
				//gs.info('2) HTTP variable discussion POST \n endpoint /'+type+'/'+parent_uuid+'/variables/'+var_uuid+'/value'+"\n request body "+JSON.stringify(valPollBody)+"\n response body "+JSON.stringify(parsedValueBody));
				
                var execState = parsedValueBody.state + "";
                while (execState == 'RUNNING' || execState == 'running') {
                    getValuesBody = this.appUtil.makeCalmApiCall('POST', '/' + type + '/' + parent_uuid + '/variables/' + var_uuid + '/values', JSON.stringify(valPollBody));
                    parsedValueBody = JSON.parse(getValuesBody.getBody());
                    execState = parsedValueBody.state + "";
                }
				//gs.info("Values:"+getValuesBody.getBody());
                //r parsedValueBody = JSON.parse(getValuesBody.getBody());
				
                if (parsedValueBody.state == 'SUCCESS') {
                    var_json.state = parsedValueBody.state;
                    var_json.default_value = var_json.value + "";
                    var_json.value = [];
                    for (var i in parsedValueBody.values)
                        var_json.value[i] = parsedValueBody.values[i];
                } else {
                    var_json.state = parsedValueBody.state;
                    var_json.error = [];
                    for (var j in parsedValueBody.message_list)
                        var_json.error[j] = parsedValueBody.message_list[j].message;
                }

                post_value_map[dependency_array[pos]] = var_json;
            }

            //gs.info("!!!Pre map:" + JSON.stringify(pre_map));
			gs.info("post_value_map:" + JSON.stringify(post_value_map));
            return JSON.stringify(post_value_map);

        } catch (e) {
            this.logger.error("Error caught in Nutanix_FetchConfigureSettingDropdown.getHttpValues:" + e);
        }
    },



    getSubnet: function(catalog) {
        try {
            var clusterJson = {};
            var catalogSysid;
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getSubnet");
            var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
            gr.addQuery('item_name', catalog);
            gr.query();
            if (gr.next()) {
                var grProject = new GlideRecord(this.appUtil.configuration.table.Project + '');
                grProject.addQuery('sys_id', gr.project + '');
                grProject.query();
                if (grProject.next()) {
                    var subnetList = grProject.subnet.split(',');
                    for (var x in subnetList) {
                        var grSubnet = new GlideRecord(this.appUtil.configuration.table.subnet + '');
                        grSubnet.addQuery('sys_id', subnetList[x]);
                        grSubnet.query();
                        if (grSubnet.next()) {
                            if (!clusterJson[grSubnet.cluster_name + '']) {
                                clusterJson[grSubnet.cluster_name + ''] = {};
                                clusterJson[grSubnet.cluster_name + '']['uuid'] = grSubnet.cluster_uuid + '';
                                clusterJson[grSubnet.cluster_name + '']['subnet'] = {};
                            }

                            clusterJson[grSubnet.cluster_name + '']['subnet'][grSubnet.uuid + ''] = grSubnet.name + '';
                        }

                    }


                }

            }
            /*setting session*/
            var grCat = new GlideRecord('x_nuta2_nutanix_ca_nutanix_catalog_items');
            grCat.addQuery('sys_id', catalog);
            grCat.query();
            if (grCat.next()) {
                var gr = new GlideRecord('item_option_new');
                gr.addQuery('cat_item.name', grCat.name + '');
                gr.query();
                var catalog_clusterJSON = {};
                while (gr.next()) {
                    if ((gr.name + '').endsWith('cluster_name') &amp;&amp; gr.question_text == 'Cluster Name') {
                        catalog_clusterJSON[gr.sys_id + ''] = {};
                        catalog_clusterJSON[gr.sys_id + '']['name'] = gr.name + '';
                        catalog_clusterJSON[gr.sys_id + '']['label'] = gr.question_text + '';
                        catalog_clusterJSON[gr.sys_id + '']['value'] = gr.default_value + '';
                    }
                }

                for (var k in catalog_clusterJSON) {
                    var serviceName = (catalog_clusterJSON[k].name + '').slice(0, (catalog_clusterJSON[k].name).length - 12);
                    catalog_clusterJSON[k]['nics'] = {};
                    var gr = new GlideRecord('item_option_new');
                    gr.addQuery('cat_item.name', grCat.name + '');
                    gr.query();
                    while (gr.next()) {
                        if ((gr.name + '').indexOf(serviceName) != -1 &amp;&amp; (gr.name + '').indexOf('_nic_') != -1) {
                            catalog_clusterJSON[k]['nics'][gr.sys_id + ''] = gr.name + '';
                        }
                    }
                }
            }

            /**/


            var catNicJson = {
                "catalog_data": catalog_clusterJSON,
                "cluster_info": clusterJson
            };
            return (JSON.stringify(catNicJson));

        } catch (e) {
            this.logger.error("Inside Nutanix_FetchConfigureSettingDropdown.getSubnet." + e);
        }
    },

    getNutanixSubnetList: function(projects) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getNutanixSubnetList.");
            var subnetListJSON = {};
            var project_array = projects.split(',');
            var project_subnet = [];
            for (var i = 0; i &lt; project_array.length; i++) {
                var projectSubnet = new GlideRecord(this.appUtil.configuration.table.Project);
                if (projectSubnet.get(project_array[i] + '')) {
                    if (projectSubnet.subnet != '') {
                        var subnetList = projectSubnet.subnet.split(',');
                        for (var k in subnetList) {
                            if ((project_subnet.indexOf(subnetList[k])) == -1)
                                project_subnet.push(subnetList[k]);
                        }
                    }
                }
            }

            for (var j in project_subnet) {
                var subnetListGR = new GlideRecord(this.appUtil.configuration.table.subnet);
                subnetListGR.addQuery('sys_id', subnetList[j] + '');
                subnetListGR.query();
                if (subnetListGR.next()) {
                    subnetListJSON[subnetListGR.uuid + ''] = {
                        "name": subnetListGR.name + '',
                        "cluster_name": subnetListGR.cluster_name + '',
                        "cluster_uuid": subnetListGR.cluster_uuid + ''
                    };
                }
            }

            return subnetListJSON;
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.getNutanixSubnetList. Error:- " + e);
        }
    },

    getServiceVariableDetails: function(projects, blueprint, profiles, type, bpType) {

        try {
            var subnet_info = this.getNutanixSubnetList(project);
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getServiceVariableDetails.");
            var project_array = projects.split(',');
            var profile_array = profiles.split(',');
            var project = project_array[0];
            var profile = profile_array[0];

            var variables = new GlideRecord(this.appUtil.configuration.table.applicationProfiles + '');
            if (variables.get(profile)) {
                this.logger.info("Fetching variables associated with profile " + variables.name);
            }
            var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
            gr.addQuery('application_profile', profile);
            gr.addQuery('catalog_item', blueprint);
            gr.addQuery('isprofilevariable', false);
            gr.orderBy('variable.order');
            gr.query();

            var answer = {};

            var i = 0;

            while (gr.next()) {

                if (!answer[gr.service_name.name + ''])
                    answer[gr.service_name.name + ''] = {};

                var categoryName = gr.category_name.name + '';

                if (gr.category_name.name + '' == gr.variable.name + '') {

                    if (!answer[gr.service_name.name + ''][gr.category_name.name + ''])
                        answer[gr.service_name.name + ''][gr.category_name.name + ''] = {};

                    if (bpType == "published" &amp;&amp; type == "new") {

                        var ans = (this.getVariablePatchedValue(type + '', gr.default_value + '', gr.sys_id, gr.variable.name + '', gr.category_name.name + '', gr.category_name.question_text + ''));
                        this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getServiceVariableDetails.Patched Value for " + gr.variable.name + " :: " + ans);
                        answer[gr.service_name.name + ''][gr.category_name.name + '']['new_' + gr.sys_id + ''] = (ans) ? JSON.parse(ans) : [];
                        answer[gr.service_name.name + ''][gr.category_name.name + '']['new_' + gr.sys_id + ''].notCmplx = false;


                    } else {
                        answer[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''] = (gr.default_value + '') ? JSON.parse(gr.default_value + '') : {};
                        answer[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''].notCmplx = false;
                    }

                } else {

                    /*if (gr.is_hidden == true)
                        continue;*/


                    if (!answer[gr.service_name.name + ''][gr.category_name.name + ''])
                        answer[gr.service_name.name + ''][gr.category_name.name + ''] = {};
                    var catname = (gr.category_name.name + '').substring(((gr.service_name.name + '').length) + 1);
                    var varname = (gr.variable.name + '').substring(((gr.service_name.name + '').length) + 1);
                    var default_value = "";
                    var runtime_config = gr.runtime_config + '';
                    var isdisabled = gr.isdisabled + '';
                    var ans, parsedAns;
                    if (catname == "ssh_keys" &amp;&amp; bpType == "published") {
                        var hasKey;
                        var gr_ssh = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
                        gr_ssh.addQuery('application_profile', profile);
                        gr_ssh.addQuery('catalog_item', blueprint);
                        gr_ssh.addQuery('isprofilevariable', false);
                        gr_ssh.addQuery('variable.name', 'CONTAINS', 'key_0');
                        gr_ssh.orderBy('variable.order');
                        gr_ssh.query();
                        if (gr_ssh.next()) {
                            hasKey = "true";
                        }
                        if (hasKey != "true") {
                            ans = this.getVariablePatchedValue(type + '', gr.default_value + '', gr.sys_id, gr.variable.name + '', gr.category_name.name + '', gr.category_name.question_text + '', "true");
                            parsedAns = (ans) ? JSON.parse(ans) : {};
                            answer[gr.service_name.name + ''][gr.category_name.name + ''] = parsedAns;
                        }

                    }
                    if ((!gr.default_value) &amp;&amp; bpType == "published") {
                        ans = this.getVariablePatchedValue(type + '', gr.default_value + '', gr.sys_id, gr.variable.name + '', gr.category_name.name + '', gr.category_name.question_text + '');
                        parsedAns = (ans) ? JSON.parse(ans) : "";
                        this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getServiceVariableDetails.Patched Value for " + gr.variable.name + " :: " + ans);
                        if (parsedAns) {
                            default_value = parsedAns.value + '';
                            var isSupported = (default_value + '' == 'Cloud-init' || default_value + '' == 'Sysprep' || (varname + '').startsWith('key_') || (this.disabledFields.includes(varname) &amp;&amp; varname + '' != 'name' &amp;&amp; varname + '' != 'type')) ? false : true;
                            //runtime_config = (parsedAns.runtime+'') ? parsedAns.runtime+'' : gr.runtime_config+'';
                            runtime_config = ((default_value + '').indexOf('@@') != -1 || isSupported + '' == 'false') ? false : (parsedAns.runtime + '') ? parsedAns.runtime + '' : gr.runtime_config + '';
                            isdisabled = ((default_value + '').indexOf('@@') != -1 || isSupported + '' == 'false') ? true : (runtime_config + '' == 'true') ? false : true; // ((default_value+'').indexOf('@@') != -1 || (this.disabledFields.includes(varname) &amp;&amp; varname+''!='name' &amp;&amp; varname+''!='type')) ? true : (runtime_config+'' == 'true') ? false : true;
                            // 							
                        }
                    }

                    /*Advanced Variable*/
                    var opt = [];
                    if (gr.variable.type + '' == 5 &amp;&amp; gr.isservicevariable == true) {
                        var optionRec = new GlideRecord("question_choice");
                        optionRec.addQuery('question', gr.variable + '');
                        optionRec.query();
                        while (optionRec.next()) {

                            opt.push(optionRec.value + '');

                        }


                    } else if (gr.variable.type + '' == 21 &amp;&amp; gr.isservicevariable == true) {
                        var varRefRec = gr.variable.getRefRecord().reference_qual + '';
                        varRefRec = varRefRec.substr(9, varRefRec.length);
                        var optionRec = new GlideRecord(this.appUtil.configuration.table.dropDownTable + '');
                        optionRec.addQuery('variable', varRefRec);
                        optionRec.query();
                        while (optionRec.next()) {

                            opt.push(optionRec.value + '');
                        }


                    }

                    answer[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''] = {
                        'name': gr.variable.name + '',
                        'question_text': gr.variable.question_text + '',
                        'value': (gr.default_value + '') ? gr.default_value + '' : default_value,
                        'runtime_config': (gr.default_value + '') ? gr.runtime_config + '' : runtime_config,
                        'type': gr.variable.type + '',
                        'isprofilevariable': gr.isprofilevariable + '',
                        'uuid': gr.uuid + '',
                        'isdisabled': (gr.default_value + '') ? gr.isdisabled + '' : isdisabled,

                        'isSupported': gr.issupported + '',
                        'isservicevariable': gr.isservicevariable + '',

                        'notCmplx': true,

                        'val_type': gr.value_type + '',
                        'description': gr.variable.help_text + '',
                        'mandatory': gr.variable.mandatory + '',
                        'regex': gr.field_regex + '',
                        'options': opt,
                        'data_type': gr.data_type + '',
                        'serviceField': (gr.isprofilevariable + '' == 'false' &amp;&amp; gr.isservicevariable + '' == 'false') ? true : false,
                        "field_json": (gr.isservicevariable + '' == 'true') ? this.appUtil.getMacroDependencies(gr.field_json + "") : {},
                        "field": (gr.isservicevariable + '' == 'true') ? gr.field_json + "" : "{}",
                        "isHidden": gr.is_hidden + ""
                    };
                }
                i++;
            }

            this.logger.debug("Final answer" + i + " :: " + JSON.stringify(answer));
            var returnJSON = {};
            returnJSON['service_configuration'] = answer;
            returnJSON['subnet_list'] = subnet_info;
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getServiceVariableDetails. return : " + JSON.stringify(returnJSON));
            return JSON.stringify(returnJSON);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.getServiceVariableDetails. Error:- " + e);
        }

    },

    getVariablePatchedValue: function(type, value, grSysid, varname, categoryName, categoryNameText, sshFlag) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getVariablePatchedValue for variable :: " + varname + ",Category Name :: " + categoryNameText + ",SSh flag :: " + sshFlag);
            if ((!value || (varname == categoryName) || categoryNameText == "SSH Keys")) {
                var ans = {
                    "value": "",
                    "runtime": false
                };
                var session = gs.getSession();
				var bpResponse = JSON.parse(session.getClientData('Cloned_bp_response'));

                var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
                gr.addQuery("sys_id", grSysid);
                gr.query();
                if (gr.next()) {
                    var profileUUID = "";
                    for (var i in bpResponse) {
                        var serviceJSON = bpResponse[i];
                        if (serviceJSON.name.toLowerCase() + '' == gr.service_name.name + '') {

                            for (var k in serviceJSON.profile) {
                                var profile = serviceJSON.profile[k];
                                if (profile.name == gr.application_profile.name + '') {
                                    profileUUID = profile.uuid + '';
                                    break;
                                }
                            }

                            if (serviceJSON.substrate[profileUUID]) {
                                this.logger.debug("Patching :: Found profile :: " + gr.application_profile.name + '');
                                var substrateJSON = serviceJSON.substrate[profileUUID];
                                var categoryJSON = "";
                                var insideCategoryJSON = "";
                                switch (gr.category_name.question_text + '') {

                                    case "Connection":
                                        categoryJSON = "readiness_probe";
                                        break;

                                    case "VM Configuration": //categoryJSON = "create_spec";
                                        //break;

                                    case "Storage": //categoryJSON = "create_spec";
                                        //break;
                                    case "Network Adapters":

                                    case "Network Profiles":

                                    case "OS Profile":

                                    case "OS Profile Script":

                                    case "Management Optional":

                                    case "Storage Profile":

                                    case "Disks":

                                    case "Networking":

                                    case "Categories":

                                    case "API ACCESS":

                                    case "Blank Disks":

                                    case "Images":

                                    case "SSH Keys":

                                    case "Storage Profile Data Disks":

                                    case "Guest Customization":

                                    case "VDisks":
                                        categoryJSON = "create_spec";
                                        break;

                                }
                                var runtime = "";
                                var field;
                                var fieldName;
                                var editables = substrateJSON.editables[categoryJSON];
                                for (var l in substrateJSON) {
                                   
                                    if (l + '' == categoryJSON) {
                                        
                                        //this.logger.debug("Patching :: Category :: "+categoryJSON);

                                        if (categoryJSON == "create_spec") {
                                            fieldName = varname.substring(serviceJSON.name.length + 1);
                                            // 												if((categoryName) &amp;&amp; categoryName == "categories"){
                                            // 													var ansCat = {};var q=1;
                                            // 													var edit = (editables.categories) ? editables.categories : "false";
                                            // 													var disable = (edit == "true") ?  "false" : "true";
                                            // 													for( var b in substrateJSON[l].categories ){

                                            // 														ansCat['category_'+q] =	{
                                            // 																				  "name":  serviceJSON.name+'_'+b,
                                            // 																				  "question_text": b+'',
                                            // 																				  "value": substrateJSON[l].categories[b],
                                            // 																				  "runtime_config": edit,
                                            // 																				  "type": "6",
                                            // 																				  "isprofilevariable": "false",
                                            // 																				  "uuid": "",
                                            // 																				  "isdisabled": disable,
                                            // 																				  "notCmplx": true
                                            // 																				};
                                            // 													}

                                            // 													return JSON.stringify(ansCat);
                                            // 												}
                                            if (categoryNameText == "VM Configuration") {
                                                for (var b in substrateJSON[l]) {
                                                    if (b == fieldName) {
                                                        ans.value = (substrateJSON[l][b]) ? substrateJSON[l][b] : '';
                                                        if (fieldName != "template" &amp;&amp; fieldName != "datastore" &amp;&amp; fieldName != "host") ans.runtime = (editables[b]) ? (editables[b]) : false;
                                                        return JSON.stringify(ans);
                                                    }
                                                }
                                            }
                                            
                                            for (var s in substrateJSON[l].resources) {
                                                
                                                var varServiceName = serviceJSON.name.toLowerCase() + '_' + s + '';
                                                
                                                if (categoryNameText == "SSH Keys" &amp;&amp; sshFlag == "true" &amp;&amp; s == "sshKeys") {

                                                    var ansSSH = {};
                                                    var q = 0;
                                                    var edit = "false";
                                                    var disable = "true";
                                                    for (var b in substrateJSON[l].resources.sshKeys) {
                                                        
                                                        for (var w in editables.resources.sshKeys) {
                                                            if (b == w)
                                                                edit = editables.resources.sshKeys[w] + '';
                                                        }
                                                        ansSSH['new_ssh_key_' + q] = {
                                                            "name": serviceJSON.name + '_key_' + b,
                                                            "question_text": 'key ' + b + '',
                                                            "value": substrateJSON[l].resources.sshKeys[b],
                                                            "runtime_config": edit,
                                                            "type": "6",
                                                            "isprofilevariable": "false",
                                                            "uuid": "",
                                                            "isdisabled": (edit == "true") ? "false" : "true",
                                                            "isSupported": "true",
                                                            "isservicevariable": "false",
                                                            "notCmplx": true
                                                        };
                                                        q++;

                                                    }
                                                    
                                                    return JSON.stringify(ansSSH);
                                                } else if (categoryNameText == "Management Optional" &amp;&amp; s == "guestCustomization") {
                                                    if (fieldName == "startup_script") {
                                                        ans.value = (substrateJSON[l].resources[s].startupScript) ? substrateJSON[l].resources[s].startupScript : '';
                                                        ans.runtime = (editables.resources.guestCustomization &amp;&amp; editables.resources.guestCustomization.startupScript) ? editables.resources.guestCustomization.startupScript : false;
                                                        return JSON.stringify(ans);
                                                    } else if (fieldName == "security_groups") {
                                                        var groups = (substrateJSON[l].resources.tags.items &amp;&amp; substrateJSON[l].resources.tags.items[0]) ? substrateJSON[l].resources.tags.items[0] : '';
                                                        for (var p = 1; p &lt; substrateJSON[l].resources.tags.items.length; p++)
                                                            groups = groups + ',' + substrateJSON[l].resources.tags.items[i];
                                                        ans.value = groups;
                                                        ans.runtime = (editables.resources.tags &amp;&amp; editables.resources.tags.items) ? editables.resources.tags.items : false;
                                                       
                                                        return JSON.stringify(ans);
                                                    }

                                                } else if (categoryNameText == "API ACCESS" &amp;&amp; s == "serviceAccounts") {
                                                    ans.value = (substrateJSON[l].resources[s][0].email) ? substrateJSON[l].resources[s][0].email : "";
                                                    ans.runtime = (editables.resources.serviceAccounts[0] &amp;&amp; editables.resources.serviceAccounts[0].email) ? editables.resources.serviceAccounts[0].email : false;
                                                    return JSON.stringify(ans);
                                                } else if (categoryNameText == "Disks" &amp;&amp; s == "disks") {
                                                    for (var j in substrateJSON[l].resources[s]) {
                                                        substrateJSON[l].resources[s][j].runtime = {};
                                                        substrateJSON[l].resources[s][j].disabled = {};
                                                        for (var x in editables.resources.disks)
                                                            if (x == j) {
                                                                substrateJSON[l].resources[s][j].runtime = (editables.resources.disks[x]) ? (editables.resources.disks[x]) : {};
                                                                substrateJSON[l].resources[s][j].disabled = substrateJSON[l].resources[s][j].runtime;
                                                            }
                                                    }
                                                    
                                                    return JSON.stringify(substrateJSON[l].resources[s]);
                                                } else if (categoryNameText == "Networking" &amp;&amp; s == "networkInterfaces") {
                                                    for (var j in substrateJSON[l].resources[s]) {
                                                        substrateJSON[l].resources[s][j].runtime = {};
                                                        substrateJSON[l].resources[s][j].disabled = {};
                                                        for (var x in editables.resources.networkInterfaces)
                                                            if (x == j) {
                                                                substrateJSON[l].resources[s][j].runtime = (editables.resources.networkInterfaces[x]) ? (editables.resources.networkInterfaces[x]) : {};
                                                                substrateJSON[l].resources[s][j].disabled = substrateJSON[l].resources[s][j].runtime;
                                                            }
                                                    }
                                                    return JSON.stringify(substrateJSON[l].resources[s]);
                                                } else if (categoryNameText == "Blank Disks" &amp;&amp; s == "blankDisks") {
                                                    for (var j in substrateJSON[l].resources[s]) {
                                                        substrateJSON[l].resources[s][j].runtime = {};
                                                        substrateJSON[l].resources[s][j].disabled = {};
                                                        for (var x in editables.resources.blankDisks)
                                                            if (x == j) {
                                                                substrateJSON[l].resources[s][j].runtime = (editables.resources.blankDisks[x]) ? editables.resources.blankDisks[x] : {};
                                                                substrateJSON[l].resources[s][j].disabled = substrateJSON[l].resources[s][j].runtime;
                                                            }
                                                    }
                                                    
                                                    return JSON.stringify(substrateJSON[l].resources[s]);
                                                } else if (categoryNameText == "Images" &amp;&amp; s == "disk_list") {
                                                    var bootIndex = (substrateJSON[l].resources.boot_config &amp;&amp; substrateJSON[l].resources.boot_config.boot_device &amp;&amp; substrateJSON[l].resources.boot_config.boot_device.disk_address &amp;&amp; substrateJSON[l].resources.boot_config.boot_device.disk_address.device_index + '') ? substrateJSON[l].resources.boot_config.boot_device.disk_address.device_index : -1;
                                                    for (var j in substrateJSON[l].resources[s]) {
                                                        substrateJSON[l].resources[s][j].runtime = {};
                                                        substrateJSON[l].resources[s][j].disabled = {};
                                                        substrateJSON[l].resources[s][j].bootable = (bootIndex == j) ? true : false;
                                                        for (var x in editables.resources.disk_list)
                                                            if (x == j) {
                                                                substrateJSON[l].resources[s][j].runtime = (editables.resources.disk_list[x]) ? editables.resources.disk_list[x] : {};
                                                                substrateJSON[l].resources[s][j].disabled = substrateJSON[l].resources[s][j].runtime;
                                                            }
                                                    }
                                                    
                                                    return JSON.stringify(substrateJSON[l].resources[s]);
                                                } else if (categoryNameText == "Storage Profile Data Disks" &amp;&amp; s == "storage_profile") {
                                                    for (var j in substrateJSON[l].resources[s].data_disk_list) {
                                                        substrateJSON[l].resources[s].data_disk_list[j].runtime = {};
                                                        substrateJSON[l].resources[s].data_disk_list[j].disabled = {};
                                                        for (var x in editables.resources.storage_profile.data_disk_list)
                                                            if (x == j) {
                                                                substrateJSON[l].resources[s].data_disk_list[j].runtime = (editables.resources.storage_profile &amp;&amp; editables.resources.storage_profile.data_disk_list[x]) ? editables.resources.storage_profile.data_disk_list[x] : {};
                                                                substrateJSON[l].resources[s].data_disk_list[j].disabled = substrateJSON[l].resources[s].data_disk_list[j].runtime;
                                                            }
                                                    }
                                                    
                                                    return JSON.stringify(substrateJSON[l].resources[s].data_disk_list);
                                                } else if (categoryNameText == "OS Profile" &amp;&amp; s == "os_profile") {
                                                    for (var j in substrateJSON[l].resources[s].secrets) {
                                                        substrateJSON[l].resources[s].secrets[j].runtime = {};
                                                        substrateJSON[l].resources[s].secrets[j].disabled = {};
                                                        for (var x in editables.resources.os_profile.secrets)
                                                            if (x == j) {
                                                                substrateJSON[l].resources[s].secrets[j].runtime = (editables.resources.os_profile &amp;&amp; editables.resources.os_profile.secrets[x]) ? editables.resources.os_profile.secrets[x] : {};
                                                                substrateJSON[l].resources[s].secrets[j].disabled = substrateJSON[l].resources[s].secrets[j].runtime;

                                                            }
                                                    }
                                                   
                                                    return JSON.stringify(substrateJSON[l].resources[s].secrets);
                                                } else if (categoryNameText == "OS Profile Script" &amp;&amp; s == "os_profile") {

                                                    ans.value = (substrateJSON[l].resources[s].linux_config &amp;&amp; substrateJSON[l].resources[s].linux_config.custom_data + '') ? substrateJSON[l].resources[s].linux_config.custom_data + '' : "";
                                                    ans.runtime = (editables.resources.os_profile &amp;&amp; editables.resources.os_profile.linux_config &amp;&amp; editables.resources.os_profile.linux_config.custom_data) ? editables.resources.os_profile.linux_config.custom_data : false;
                                                   
                                                    return JSON.stringify(ans);

                                                } else if (categoryNameText == "Guest Customization" &amp;&amp; s == "guest_customization") {
                                                    varname = varname.substring(serviceJSON.name.length + 1);
                                                    for (var j in substrateJSON[l].resources[s].linux_data) {
                                                        if (varname == "dns_search_path" &amp;&amp; j == varname) {
                                                            ans.value = (substrateJSON[l].resources[s].linux_data.dns_search_path[0] + '') ? substrateJSON[l].resources[s].guest_customization.linux_data.dns_search_path[0] + '' : "";
                                                            ans.runtime = (editables.resources.guest_customization &amp;&amp; editables.resources.guest_customization.linux_data &amp;&amp; editables.resources.guest_customization.linux_data.dns_search_path[0]) ? editables.resources.guest_customization.linux_data.dns_search_path[0] : false;
                                                            return JSON.stringify(ans);
                                                        } else if (j == varname) {
                                                            ans.value = substrateJSON[l].resources[s].linux_data[j] + '';
                                                            for (var x in editables.resources.guest_customization.linux_data) {
                                                                if (x == varname) {
                                                                    ans.runtime = editables.resources.guest_customization.linux_data[x] + '';
                                                                    return JSON.stringify(ans);
                                                                }
                                                            }
                                                        }
                                                    }
                                                    if (fieldName == "script") {

                                                        ans.value = (substrateJSON[l].resources[s].cloud_init &amp;&amp; substrateJSON[l].resources[s].cloud_init.user_data) ? substrateJSON[l].resources[s].cloud_init.user_data : ((substrateJSON[l].resources[s].sysprep &amp;&amp; substrateJSON[l].resources[s].sysprep.unattend_xml) ? substrateJSON[l].resources[s].sysprep.unattend_xml : (substrateJSON[l].resources[s].cloud_init) ? substrateJSON[l].resources[s].cloud_init : '');
                                                        ans.runtime = (editables.resources.guest_customization &amp;&amp; editables.resources.guest_customization.cloud_init) ? (editables.resources.guest_customization.cloud_init) : false;
                                                        return (JSON.stringify(ans));
                                                    } else if (fieldName == "install_type") {
                                                        ans.value = (substrateJSON[l].resources[s].sysprep &amp;&amp; substrateJSON[l].resources[s].sysprep.install_type) ? substrateJSON[l].resources[s].sysprep.install_type : "";
                                                        ans.runtime = false;
                                                        return (JSON.stringify(ans));
                                                    } else if (fieldName == "type") {
                                                        ans.value = (substrateJSON[l].resources[s].sysprep) ? 'Sysprep' : 'Cloud-init';
                                                        ans.runtime = false;
                                                        return (JSON.stringify(ans));
                                                    }
                                                } else if (varname == (serviceJSON.name.toLowerCase() + '_' + 'storage') &amp;&amp; s == "block_device_map") {

                                                    substrateJSON[l].resources[s].root_disk.runtime = "";
                                                    substrateJSON[l].resources[s].root_disk.disabled = "";
                                                    substrateJSON[l].resources[s].root_disk.runtime = (editables.resources.block_device_map.root_disk.size_gb) ? editables.resources.block_device_map.root_disk.size_gb + '' : 'false';
                                                    substrateJSON[l].resources[s].root_disk.disabled = substrateJSON[l].resources[s].root_disk.runtime;
                                                    for (var j in substrateJSON[l].resources[s].data_disk_list) {

                                                        substrateJSON[l].resources[s].data_disk_list[j].runtime = 'false';
                                                        substrateJSON[l].resources[s].data_disk_list[j].disabled = 'false';
                                                        if (editables &amp;&amp; editables.resources &amp;&amp; editables.resources.block_device_map &amp;&amp; editables.resources.block_device_map.data_disk_list[j] &amp;&amp; editables.resources.block_device_map.data_disk_list[j].size_gb) {
                                                            var runtime_data = editables.resources.block_device_map.data_disk_list[j].size_gb;
                                                            substrateJSON[l].resources[s].data_disk_list[j].runtime = (runtime_data) ? runtime_data + '' : 'false';
                                                            substrateJSON[l].resources[s].data_disk_list[j].disabled = substrateJSON[l].resources[s].data_disk_list[j].runtime;
                                                        }
                                                    }
                                                    return JSON.stringify(substrateJSON[l].resources[s]);
                                                } else if (varname == (serviceJSON.name.toLowerCase() + '_vdisks') &amp;&amp; s == "disk_list") {
                                                    for (var j in substrateJSON[l].resources[s]) {
                                                        substrateJSON[l].resources[s][j].runtime = {};
                                                        substrateJSON[l].resources[s][j].disabled = {};
                                                        for (var x in editables.resources.disk_list) {
                                                            if (x == j) {
                                                                substrateJSON[l].resources[s][j].runtime = editables.resources.disk_list[j];
                                                                substrateJSON[l].resources[s][j].disabled = substrateJSON[l].resources[s][j].runtime;
                                                            }
                                                        }
                                                    }
                                                    return JSON.stringify(substrateJSON[l].resources[s]);
                                                } else if (varname == (serviceJSON.name.toLowerCase() + '_network_adapters') &amp;&amp; s == "nic_list") {
                                                    for (var j in substrateJSON[l].resources[s]) {
                                                        substrateJSON[l].resources[s][j].runtime = {};
                                                        substrateJSON[l].resources[s][j].disabled = {};
                                                        for (var x in editables.resources.nic_list)
                                                            if (x == j) {
                                                                substrateJSON[l].resources[s][j].runtime = (editables.resources.nic_list[j]) ? (editables.resources.nic_list[j]) : {};
                                                                substrateJSON[l].resources[s][j].disabled = substrateJSON[l].resources[s][j].runtime;
                                                            }
                                                    }
                                                    return JSON.stringify(substrateJSON[l].resources[s]);
                                                } else if (categoryNameText == "Storage Profile" &amp;&amp; s == "storage_profile") {
                                                    for (var j in substrateJSON[l].resources[s].image_details) {
                                                        varServiceName = serviceJSON.name.toLowerCase() + '_' + j;
                                                        if (varname == varServiceName) {
                                                            ans.value = (substrateJSON[l].resources[s].image_details[j]) ? (substrateJSON[l].resources[s].image_details[j] + '') : "";
                                                            ans.runtime = (editables.resources.storage_profile.image_details &amp;&amp; editables.resources.storage_profile.image_details[j]) ? (editables.resources.storage_profile.image_details[j]) : false;
                                                            if ((varname.indexOf("use_custom_image") != -1) &amp;&amp; !ans.value) ans.value = "false";
                                                            return JSON.stringify(ans);
                                                        }

                                                    }
                                                    for (var j in substrateJSON[l].resources[s].os_disk_details) {
                                                        varServiceName = serviceJSON.name.toLowerCase() + '_' + substrateJSON[l].resources[s].image_details[j];
                                                        if (varname == varServiceName) {
                                                            ans.value = (substrateJSON[l].resources[s].os_disk_details[j]) ? (substrateJSON[l].resources[s].os_disk_details[j]) : "";
                                                            ans.runtime = (editables.resources.storage_profile.os_disk_details[j]) ? (editables.resources.storage_profile.os_disk_details[j]) : false;
                                                            return JSON.stringify(ans);
                                                        }
                                                    }
                                                    if (varname.indexOf("use_managed_disks") != -1) {
                                                        ans.value = (substrateJSON[l].resources[s].is_managed) ? (substrateJSON[l].resources[s].is_managed) : "";
                                                        ans.runtime = (editables.resources.storage_profile.is_managed) ? (editables.resources.storage_profile.is_managed) : false;
                                                        return JSON.stringify(ans);
                                                    }
                                                } else if (categoryNameText == "Network Profiles" &amp;&amp; s == "nw_profile") {
                                                    for (var j in substrateJSON[l].resources[s].nic_list) {
                                                        substrateJSON[l].resources[s].nic_list[j].runtime = {};
                                                        substrateJSON[l].resources[s].nic_list[j].disabled = {};
                                                        for (var x in editables.resources.nw_profile.nic_list)
                                                            if (x == j) {
                                                                substrateJSON[l].resources[s].nic_list[j].runtime = (editables.resources.nw_profile.nic_list[j]) ? editables.resources.nw_profile.nic_list[j] : {};
                                                                substrateJSON[l].resources[s].nic_list[j].disabled = substrateJSON[l].resources[s].nic_list[j].runtime;
                                                            }
                                                    }
                                                    return JSON.stringify(substrateJSON[l].resources[s].nic_list);
                                                } else if (varname + '' == varServiceName + '') {
                                                    field = substrateJSON[l].resources[s];
                                                    if (!(field.constructor == Object || field.constructor == Array)) {
                                                        ans.value = substrateJSON[l].resources[s] + '';
                                                        ans.runtime = this.checkEditable(editables, varname, categoryJSON, serviceJSON.name.toLowerCase() + '_') + '';
                                                        return JSON.stringify(ans);
                                                    } else if (s == "security_group_list") {
                                                        var sec = field[0].security_group_id + '';
                                                        for (var m = 1; m &lt; field.length; m++) {
                                                            sec += "," + field[m].security_group_id + '';
                                                        }
                                                        ans.value = sec + '';
                                                        ans.runtime = this.checkEditable(editables, varname, categoryJSON, serviceJSON.name.toLowerCase() + '_') + '';
                                                        return JSON.stringify(ans);
                                                    }
                                                } else if (categoryNameText == "VM Configuration" &amp;&amp; s == "hw_profile" &amp;&amp; varname.indexOf("hardware_profile") != -1) {
                                                    ans.value = (substrateJSON[l].resources[s].vm_size) ? substrateJSON[l].resources[s].vm_size : '';
                                                    ans.runtime = (editables.resources.hw_profile.vm_size) ? (editables.resources.hw_profile.vm_size) : false;
                                                    return JSON.stringify(ans);
                                                } else if (categoryNameText == "SSH Keys" &amp;&amp; fieldName == "block_project_wide_ssh_key" &amp;&amp; s == "metadata" &amp;&amp; sshFlag != "true") {
                                                    var blockValue = false;
                                                    for (var data in substrateJSON[l].resources[s]) {
                                                        if (substrateJSON[l].resources[s][data].key + '' == 'block-project-ssh-keys') {
                                                            blockValue = substrateJSON[l].resources[s][data].value + '';
                                                            ans.runtime = (editables.resources.metadata.items[data]) ? (editables.resources.metadata.items[data]) : false;
                                                        }
                                                    }
                                                    ans.value = blockValue;
                                                    return JSON.stringify(ans);
                                                }
                                            }
                                        } else if (categoryJSON == "readiness_probe") {
                                            for (var s in substrateJSON[l]) {
                                                var varServiceName = serviceJSON.name.toLowerCase() + '_' + s;
                                                if (varname + '' == varServiceName + '') {
                                                    ans.value = substrateJSON[l][s] + '';
                                                    if (varname.indexOf("disable_readiness_probe") != -1)
                                                        ans.value = (substrateJSON[l][s] == 'true') ? false : true;
                                                    ans.runtime = this.checkEditable(editables, varname, categoryJSON, serviceJSON.name.toLowerCase() + '_') + '';
                                                    return JSON.stringify(ans);
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                        }
                    }
                }
            }
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.getVariablePatchedValue. Error:- " + e);
        }
    },
    //Ptaching of MPI
    //Ptaching of MPI
    mpiPatching: function(projects, blueprint) {

        var logger = new Nutanix_Calm_Logger();
        var utils = new Nutanix_Calm_Utils();
        var reqUtils = new Nutanix_RequestUtil();
        var blueprintTemplate = "";
        var catVariableBody = {};
        var bpVariablesJSON = {};
        var parseResp = {};

        try {
            logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.mpiPatching.");

            var project = projects.split(',');
            project = project[0];

            var bp = new GlideRecord('x_nuta2_nutanix_ca_nutanix_marketplaceitems');
            bp.addQuery('sys_id', blueprint);
            bp.query();

            var mpi_uuid = (bp.next()) ? bp.uuid : "";

            var response = utils.makeCalmApiCall('GET', '/calm_marketplace_items/' + mpi_uuid);

            if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {

                response = JSON.parse(response.getBody());

                var environment_uuid = ' ';
                var project_uuid = '';

                var projectRecord = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');
                projectRecord.addQuery('sys_id', project);
                projectRecord.query();

                if (projectRecord.next()) {
                    project_uuid = projectRecord.uuid + '';
                    environment_uuid = projectRecord.environment_uuid + '';
                }

                var name = bp.name + '';
                var app_bp_name = ((name + GlideSecureRandomUtil.getSecureRandomString(8) + mpi_uuid).replaceAll('-', ' ').trim().replaceAll(' ', '_')).substring(0, 64);
                var tmpbody = {
                    "status": response.status.resources.app_blueprint_template.status,
                    "spec": response.spec.resources.app_blueprint_template.spec
                };

                var body = {
                    "api_version": "3.0", //response.api_version,
                    "metadata": {
                        "kind": "blueprint",
                        "project_reference": {
                            "kind": "project",
                            "uuid": project_uuid + ''
                        },
                        "categories": response.metadata.categories //changes
                    },
                    "spec": {
                        "description": response.spec.resources.app_blueprint_template.spec.description, //response.spec.description,
                        "app_blueprint_name": app_bp_name + '',
                        "source_marketplace_version": response.spec.resources.version, //"1.0.0", //changes
                        "source_marketplace_name": name + '',
                        "resources": response.spec.resources.app_blueprint_template.spec.resources

                        //reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)
                        //response.spec.resources.app_blueprint_template.spec.resources
                    }
                };
               
                    body.spec.environment_uuid = environment_uuid + '';
                
                //gs.error("MPI payload send: "+JSON.stringify(body));
                //	return "MPI Launch Body "+JSON.stringify(body);

                var response = utils.makeCalmApiCall('POST', '/blueprints/marketplace_launch', JSON.stringify(body));
                // 			return "post marketplace launch  call "+response.getStatusCode();
                if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {

                    var session = gs.getSession();
                    session.putClientData('non_filtered_cloned_bp_response', response.getBody());

                    parseResp = JSON.parse(response.getBody());
                    blueprintTemplate = (parseResp.status.resources) ? parseResp.status.resources : "";
                    var clonedBpUuid = parseResp.metadata.uuid;

                    //gs.error("Patching : "+response.getBody());

                } else {
                    logger.error("API call to '/blueprints/marketplace_launch' failed with name : " + app_bp_name + ":-" + response.getBody());
                    //gs.error("Errorr :: "+(JSON.parseresponse.getBody()).message_list[0].message);
                    return JSON.stringify({
                        "errMess": JSON.parse(response.getBody()).message_list[0].message,
                        "status": false
                    });
                }

                var bpVariables = new Nutanix_CreateCatalogVariables();
                if (bp.template_type == "Single Vm") {

                    var service_body = [{
                        "uuid": "singleVm-default-service-uuid",
                        "name": "single_vm_configuration"
                    }];

                    catVariableBody = {
                        "substrate_definition_list": (blueprintTemplate.substrate_definition_list) ? blueprintTemplate.substrate_definition_list : "",
                        "app_profile_list": (blueprintTemplate.app_profile_list) ? blueprintTemplate.app_profile_list : "",
                        "service_definition_list": service_body,
                        "package_definition_list": (blueprintTemplate.package_definition_list) ? blueprintTemplate.package_definition_list : ""
                    };
                    bpVariablesJSON = bpVariables._filterJSONDatatoService(catVariableBody);
                } else if (blueprintTemplate.package_definition_list &amp;&amp; blueprintTemplate.substrate_definition_list &amp;&amp; blueprintTemplate.app_profile_list &amp;&amp; blueprintTemplate.service_definition_list) {
                    catVariableBody = {
                        "substrate_definition_list": (blueprintTemplate.substrate_definition_list) ? blueprintTemplate.substrate_definition_list : "",
                        "app_profile_list": (blueprintTemplate.app_profile_list) ? blueprintTemplate.app_profile_list : "",
                        "service_definition_list": (blueprintTemplate.service_definition_list) ? blueprintTemplate.service_definition_list : "",
                        "package_definition_list": (blueprintTemplate.package_definition_list) ? blueprintTemplate.package_definition_list : ""
                    };

                    bpVariablesJSON = bpVariables._filterJSONDatatoService(catVariableBody);
                }

                bpVariablesJSON.uuid = parseResp.metadata.uuid + '';
                bpVariablesJSON.name = parseResp.metadata.name + '';

                var session = gs.getSession();
                session.putClientData('Cloned_bp_response', JSON.stringify(bpVariablesJSON));
                var clientData = session.getClientData('Cloned_bp_response');
                logger.debug("MPI cloned Blueprint response ::" + clientData);
                return JSON.stringify({
                    "errMess": "Successfull",
                    "status": true
                }); //JSON.parse(clientData).uuid+'';
            } else {
                logger.error("API call to '/calm_marketplace_items/uuid' failed: " + response.getBody());
                var result = {
                    "errMess": (response.getBody()).message_list[0].message,
                    "status": false
                };
                return JSON.stringify(result);
            }
        } catch (e) {
            logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.mpiPatching. Error:- " + e);
            return "false";
        }
    },

    fetchBlueprints: function(projectUUID, blueprintType) {

        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.fetchBlueprints.");

            var gr = new GlideRecord(this.appUtil.configuration.table.catalogProjectRelation + '');
            gr.addQuery('projects.uuid', projectUUID);

            if (blueprintType == 'unpublished')
                gr.addQuery('catalog_item.category', gs.getProperty('x_nuta2_nutanix_ca.nutanix_unpublishedBP_sysId'));
            else
                gr.addQuery('catalog_item.category', gs.getProperty('x_nuta2_nutanix_ca.nutanix_category_sysId'));

            gr.orderBy('catalog_item.name');
            gr.query();

            var ans = {};
            var i = 0;

            while (gr.next()) {
                if ((blueprintType == 'unpublished' &amp;&amp; gr.catalog_item.state + '' == 'ACTIVE') || (blueprintType != 'unpublished' &amp;&amp; gr.catalog_item.state + '' == 'active')) {
                    ans[i] = {
                        'sys_id': gr.catalog_item + '',
                        'name': gr.catalog_item.name + '' + " " + gr.version + ''
                    };
                    i++;
                }
            }

            this.logger.debug("Fetched " + i + " blueprints.");

            return JSON.stringify(ans);

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.fetchBlueprints. Error:- " + e);
        }

    },

    fetchApplicationProfiles: function(blueprintSysId) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.fetchApplicationProfiles.");

            var blueprint = new GlideRecord(this.appUtil.configuration.table.Blueprint + '');
            if (blueprint.get(blueprintSysId)) {
                this.logger.info("Fetching profiles associated with blueprint " + blueprint.name);
            }
            var gr = new GlideRecord(this.appUtil.configuration.table.catalogProfileRelation + '');
            gr.addQuery('catalog_item', blueprintSysId);
            gr.addQuery('state', 'active');
            //gr.addEncodedQuery('providersNOT LIKEaws^providersNOT LIKEazure^providersNOT LIKEgcp');
            gr.orderBy('application_profile.name');
            gr.query();

            var ans = {};
            var i = 0;
            while (gr.next()) {
                ans[i] = {
                    'sys_id': gr.application_profile + '',
                    'name': gr.application_profile.name + ''
                };
                i++;
            }

            this.logger.debug("Fetched " + i + " profiles.");

            return JSON.stringify(ans);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.fetchApplicationProfiles. Error:- " + e);
        }
    },

    fetchProviderIcons: function(catSysId) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.fetchProviderIcons.");

            var grBp = new GlideRecord('x_nuta2_nutanix_ca_nutanix_catalog_items');
            if (grBp.get(catSysId)) {
                var bpSysId = grBp.blueprint_name;
            }
            if (bpSysId != '') {
                var gr = new GlideRecord(this.appUtil.configuration.table.catalogProfileRelation + '');
                gr.addQuery('catalog_item', bpSysId);
                gr.addQuery('state', 'active');
                gr.orderBy('application_profile.name');
                gr.query();

                var entities = [];
                var i = 0;
                while (gr.next()) {
                    entities[i] = {
                        'profile': gr.application_profile.name + '',
                        'providers': gr.providers + ''
                    };
                    i++;
                }

                this.logger.debug("Fetched " + i + " profiles.");

                return JSON.stringify(entities);
            } else {
                var grReq = new GlideRecord('sc_req_item');
                grReq.addQuery('sys_id', catSysId);
                grReq.query();
                if (grReq.next()) {
                    var grBp = new GlideRecord('x_nuta2_nutanix_ca_nutanix_catalog_items');
                    if (grBp.get(grReq.cat_item)) {
                        var bpSysId = grBp.blueprint_name;
                    }
                    if (bpSysId != '') {
                        var gr = new GlideRecord(this.appUtil.configuration.table.catalogProfileRelation + '');
                        gr.addQuery('catalog_item', bpSysId);
                        gr.orderBy('application_profile.name');
                        gr.query();

                        var entities = [];
                        var i = 0;
                        while (gr.next()) {
                            entities[i] = {
                                'profile': gr.application_profile.name + '',
                                'providers': gr.providers + ''
                            };
                            i++;
                        }

                        this.logger.debug("Fetched " + i + " profiles.");

                        return JSON.stringify(entities);
                    }
                }
            }
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.fetchProviderIcons. Error:- " + e);
        }
    },

    getProfileVariableDetails: function(project, blueprint, profile) {

        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getProfileVariableDetails.");

            var variables = new GlideRecord(this.appUtil.configuration.table.applicationProfiles + '');
            if (variables.get(profile)) {
                this.logger.info("Fetching variables associated with profile " + variables.name);
            }

            var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
            gr.addQuery('application_profile', profile);
            gr.addQuery('catalog_item', blueprint);
            gr.addQuery('isprofilevariable', true);
            gr.orderBy('variable.name');
            gr.query();

            var answer = {};
            var i = 0;
            while (gr.next()) {

                /*if (gr.is_hidden == true)
                    continue;*/

                var opt = [];
                if (gr.variable.type + '' == 5) {
                    var optionRec = new GlideRecord("question_choice");
                    optionRec.addQuery('question', gr.variable + '');
                    optionRec.query();
                    while (optionRec.next()) {

                        opt.push(optionRec.value + '');

                    }

                } else if (gr.variable.type + '' == 21) {
                    var varRefRec = gr.variable.getRefRecord().reference_qual + ''
                    varRefRec = varRefRec.substr(9, varRefRec.length);
                    var optionRec = new GlideRecord(this.appUtil.configuration.table.dropDownTable + '');
                    optionRec.addQuery('variable', varRefRec);
                    optionRec.query();
                    while (optionRec.next()) {
                        opt.push(optionRec.value + '');
                    }

                }
                // 				else if(gr.variable.type+'' == 10 || gr.variable.type+'' == 9){
                // 					var dtVal = gr.default_value+'';
                // 					if( gr.variable.type+'' == 9 ){
                // 						var gdt = new GlideDate() ;
                // 						gdt.setValue(dtVal);
                // 						gr.default_value = gdt.getByFormat("yyyy-MM-dd");
                // 					}

                // 					else{
                // 						var gdt = new GlideDateTime() ;
                // 						gdt.setValue(dtVal);
                // 						gr.default_value = gdt.getDate().getByFormat("yyyy-MM-dd")+' '+gdt.getTime().getByFormat("HH:mm:ss");
                // 					}

                // 				}

                answer[gr.sys_id + ''] = {
                    'name': gr.variable.name + '',
                    'question_text': gr.variable.question_text + '',
                    'value': gr.default_value + '',
                    'runtime_config': gr.runtime_config + '',
                    'type': gr.variable.type + '',
                    'isprofilevariable': gr.isprofilevariable + '',
                    'uuid': gr.uuid + '',
                    'isdisabled': gr.isdisabled + '',
                    "val_type": gr.value_type + '',
                    "description": gr.variable.help_text + '',
                    "mandatory": gr.variable.mandatory + '',
                    "regex": gr.field_regex + '',
                    "options": opt,
                    "data_type": gr.data_type + '',
                    "field_json": this.appUtil.getMacroDependencies(gr.field_json + ""),
                    "field": gr.field_json + "",
                    "isHidden": gr.is_hidden + ""
                };
                i++;
            }

            this.logger.debug("Fetched " + i + " variables.");

            return JSON.stringify(answer);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.getProfileVariableDetails. Error:- " + e);
        }

    },



    checkEditable: function(editables, varname, categoryJSON, serviceJSON) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.checkEditable.");
            if (categoryJSON == "create_spec") {

                for (var i in editables.resources) {
                    var varServiceName = serviceJSON + i;
                    if (varname == varServiceName) {
                        return editables.resources[i] + '';
                    }
                }

            } else if (categoryJSON == "readiness_probe") {
                for (var i in editables) {
                    var varServiceName = serviceJSON + i;
                    if (varname == varServiceName) {
                        return editables[i] + '';
                    }
                }
            }

        } catch (e) {
            this.logger.error("Inside Nutanix_FetchConfigureSettingDropdown.checkEditable. " + e);
        }

    },

    getCrendentialsDetails: function(project, blueprint, profile) {

        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getCrendentialsDetails.");

            var gr = new GlideRecord(this.appUtil.configuration.table.Credentials + '');
            gr.addQuery('catalog_item', blueprint);
            gr.orderBy('name');
            gr.query();

            var answer = {};
            var i = 0;
            while (gr.next()) {
                answer[gr.name + ''] = {};

                answer[gr.name + ''].credential_name = {
                    "name": 'credential_name',
                    "question_text": 'Credential Name',
                    "value": gr.name + ''
                };

                answer[gr.name + ''].username = {
                    "name": 'username',
                    "question_text": 'Username',
                    "value": gr.username + '',
                    "runtime_config": gr.username_editable + ''
                };

                answer[gr.name + ''].secret_type = {
                    "name": 'secret_type',
                    "question_text": 'Secret Type',
                    "value": gr.type + ''
                };

                if (gr.type + '' == 'KEY') {
                    answer[gr.name + ''].ssh_private_key = {
                        "name": 'ssh_private_key',
                        "question_text": 'SSH Private Key',
                        "value": gr.ssh_private_key + '',
                        "runtime_config": gr.secret_editable + ''
                    };

                    answer[gr.name + ''].passphrase = {
                        "name": 'passphrase',
                        "question_text": 'Passphrase',
                        "value": gr.passphrase + '',
                        "runtime_config": gr.passphrase_editable + ''
                    };
                } else {
                    answer[gr.name + ''].password = {
                        "name": 'password',
                        "question_text": 'Password',
                        "value": gr.password + '',
                        "runtime_config": gr.secret_editable + ''
                    };
                }

                answer[gr.name + ''].uuid = gr.uuid + '';
                answer[gr.name + ''].description = gr.description + '';
                answer[gr.name + ''].is_default = gr.is_default + '';
                answer[gr.name + ''].is_secret_modified = gr.is_secret_modified + '';
                answer[gr.name + ''].name = gr.name + '';
                answer[gr.name + ''].state = gr.state + '';

                answer[gr.name + ''].username_isdisabled = gr.username_isdisabled + '';
                answer[gr.name + ''].secret_isdisabled = gr.secret_isdisabled + '';
                answer[gr.name + ''].ssh_private_key_isdisabled = gr.ssh_private_key_isdisabled + '';
                answer[gr.name + ''].passphrase_isdisabled = gr.passphrase_isdisabled + '';

                answer[gr.name + ''].credential_reference = {
                    "value": gr.credential_reference + '',
                    "label": gr.credential_reference.name + ''
                };

                answer[gr.name + ''].runtime = gr.runtime + '';

                i++;
            }

            this.logger.debug("Fetched " + i + " credentials.");

            return JSON.stringify(answer);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.getCrendentialsDetails. Error:- " + e);
        }

    },

    /*fetchEnvironmentCredentials: function( credSysId ){
    											try{
    												this.logger.debug("Inside x_nuta2_nutanix_ca_nutanix_runtime_configuration.fetchEnvironmentCredentials.");

    												var gr = new GlideRecord(this.appUtil.configuration.table.Credentials+'');
    												gr.get(credSysId);

    												var answer = {};
    													var i = 0;

    													if(gr){
    														answer[gr.name+''] = {};

    															answer[gr.name+''].credential_name = {
    																"name": 'credential_name',
    																"question_text": 'Credential Name',
    																"value": gr.name+''
    															};

    															answer[gr.name+''].username = {
    																"name": 'username',
    																"question_text": 'Username',
    																"value": gr.username+'',
    																"runtime_config": gr.username_editable+''
    															};

    															answer[gr.name+''].secret_type = {
    																"name": 'secret_type',
    																"question_text": 'Secret Type',
    																"value": gr.type+''
    															};

    															if(gr.type+'' == 'KEY'){
    																answer[gr.name+''].ssh_private_key = {
    																	"name": 'ssh_private_key',
    																	"question_text": 'SSH Private Key',
    																	"value": gr.ssh_private_key+'',
    																	"runtime_config": gr.ssh_private_key_editable+''
    																};

    																if(gr.passphrase+'')
    																	answer[gr.name+''].passphrase = {
    																	"name": 'passphrase',
    																	"question_text": 'Passphrase',
    																	"value": gr.passphrase+'',
    																	"runtime_config": gr.passphrase_editable+''
    																};
    															}else{
    																answer[gr.name+''].password = {
    																	"name": 'password',
    																	"question_text": 'Password',
    																	"value": gr.password+'',
    																	"runtime_config": gr.secret_editable+''
    																};
    															}

    															answer[gr.name+''].uuid = gr.uuid+'';
    															answer[gr.name+''].description = gr.description+'';
    															answer[gr.name+''].is_default = gr.is_default+'';
    															answer[gr.name+''].is_secret_modified = gr.is_secret_modified+'';
    															answer[gr.name+''].name = gr.name+'';
    															answer[gr.name+''].state = gr.state+'';

    															answer[gr.name+''].environment = gr.environment+'';
    															answer[gr.name+''].project = gr.project+'';

    															answer[gr.name+''].username_isdisabled = gr.username_isdisabled+'';
    															answer[gr.name+''].secret_isdisabled = gr.secret_isdisabled+'';
    															answer[gr.name+''].ssh_private_key_isdisabled = gr.ssh_private_key_isdisabled+'';
    															answer[gr.name+''].passphrase_isdisabled = gr.passphrase_isdisabled+'';

    															i++;
    														}

    														this.logger.debug("Fetched " + i + " credentials.");

    														return JSON.stringify(answer);

    													}catch(e){
    														this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.fetchEnvironmentCredentials. Error:- "+e);
    													}

    												},*/

    mappedCredentials: function(projects) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.mappedCredentials.");
            var project_array = projects.split(',');
            var arr = [];
            var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_calm_credential');
            for (var i = 0; i &lt;= project_array.length; i++) {
                if (i == 0)
                    var gs = gr.addQuery('project.sys_id', project_array[i] + '');
                else
                    gs.addOrCondition('project.sys_id', project_array[i] + '');
            }
            gr.query();
            while (gr.next()) {
                arr.push({
                    'label': gr.name + '',
                    'value': gr.sys_id + '',
                    'type': gr.type + '',
                    'username': gr.username + ''
                });
            }

            return JSON.stringify(arr);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.mappedCredentials. Error:- " + e);
        }
    },

    getCatalogInfo: function(sysId) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getCatalogInfo.");

            var catalogItem = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
            catalogItem.addQuery('item_name', sysId);
            //catalogItem.get(sysId);
            //this.logger.info("Fetching Catalog Details for "+blueprint.name);
            catalogItem.query();

            if (catalogItem.next()) {
                var rtn = {
                    "itemName": catalogItem.item_name.name + '',
                    "description": catalogItem.item_name.getRefRecord().description_markdown + '',
                    "usersName": catalogItem.user_criteria.user.getDisplayValue() + '',
                    "groupsName": catalogItem.user_criteria.group.getDisplayValue() + '',
                    "usersSysId": catalogItem.user_criteria.user + '',
                    "groupsSysId": catalogItem.user_criteria.group + ''
                };
                return JSON.stringify(rtn);
            }

            return '';

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.getCatalogInfo. Error:- " + e);
        }

    },

    getRealtedCatalogItems: function(sysId) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getRealtedCatalogItems.");

            var catalogItem = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
            catalogItem.addQuery('blueprint', sysId);
            //catalogItem.get(sysId);
            //this.logger.info("Fetching Catalog Details for "+blueprint.name);
            catalogItem.query();
            var answer = {};

            var k = 0;

            while (catalogItem.next()) {
                answer[k] = {
                    'name': catalogItem.item_name.name + '',
                    'sys_id': catalogItem.item_name + ''
                };

                k++;
            }

            return JSON.stringify(answer);

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.getRealtedCatalogItems. Error:- " + e);
        }

    },

    getBlueprintInfo: function(sysId) {
        try {

            this.logger.debug("Inside x_nuta2_nutanix_ca_nutanix_runtime_configuration.getBlueprintInfo.");

            var catalogItem = new GlideRecord(this.appUtil.configuration.table.catItem + '');
            if (catalogItem.get(sysId)) {
                catalogItem = new GlideRecord(catalogItem.sys_class_name + '');
                if (catalogItem.get(sysId)) {
                    var rtn = {
                        "itemName": catalogItem.name + '',
                        "description": catalogItem.description_markdown + '',
                    }
                    return JSON.stringify(rtn);
                }
            }

            return '';

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.getBlueprintInfo. Error:- " + e);
        }

    },

    fetchRuntimeVariablesValue: function(sysId) {
        try {
            this.logger.debug("Inside x_nuta2_nutanix_ca_nutanix_runtime_configuration.fetchRuntimeVariablesValue.");
            var gr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
            if (gr.get(sysId)) {
                var arr = {};

                if (gr) {
                    arr = {
                        "application_profile": {
                            "sys_ids": gr.multiple_application_profile + ''
                        },
                        "blueprint": {
                            "name": gr.blueprint.name + ' ' + ((gr.blueprint.getRefRecord().version) ? gr.blueprint.getRefRecord().version : ''),
                            "sys_id": gr.blueprint + '',
                            "class": gr.blueprint.sys_class_name + ''
                        },
                        "project": {
                            "sys_ids": gr.multiple_projects + ''
                        },
                        "item_name": gr.item_name + ''
                    };

                    return JSON.stringify(arr);
                }

                return '';
            }
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.fetchRuntimeVariablesValue. Error:- " + e);
        }
    },

    checkDuplicate: function(catName, catSysId) {
        try {
            this.logger.debug("Inside x_nuta2_nutanix_ca_nutanix_runtime_configuration.checkDuplicate.");
            var gr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
            if (catSysId)
                gr.addEncodedQuery('item_name.name=' + catName + '^item_name!=' + catSysId);
            else
                gr.addEncodedQuery('item_name.name=' + catName);
            gr.query();

            if (gr.next())
                return 'yes';

            return 'no';
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.checkDuplicate. Error:- " + e);
        }

    },
    fetchMultipleBlueprints: function(blueprintType) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.fetchMultipleBlueprints.");
            var gr = new GlideRecord(this.appUtil.configuration.table.catalogProjectRelation + '');
            if (blueprintType == 'unpublished')
                gr.addQuery('catalog_item.category', gs.getProperty('x_nuta2_nutanix_ca.nutanix_unpublishedBP_sysId'));
            else
                gr.addQuery('catalog_item.category', gs.getProperty('x_nuta2_nutanix_ca.nutanix_category_sysId'));
            gr.orderBy('catalog_item.name');
            gr.query();

            var ans = {};
            var i = 0;
            while (gr.next()) {
                if ((blueprintType == 'unpublished' &amp;&amp; gr.catalog_item.state + '' == 'ACTIVE') || (blueprintType != 'unpublished' &amp;&amp; gr.catalog_item.state + '' == 'active')) {
                    ans[i] = {
                        'sys_id': gr.catalog_item + '',
                        'name': gr.catalog_item.name + '' + " " + gr.version + ''
                    };
                    i++;
                }
            }

            this.logger.debug("Fetched " + i + " blueprints.");
            return JSON.stringify(ans);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.fetchMultipleBlueprints. Error:- " + e);
        }
    },
    fetchMultipleProjects: function(blueprint, blueprintType) {
        try {
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.fetchBlueprints. blueprint ");
            var gr = new GlideRecord(this.appUtil.configuration.table.catalogProjectRelation + '');
            gr.addQuery('catalog_item', blueprint);
            if (blueprintType == 'unpublished')
                gr.addQuery('catalog_item.category', gs.getProperty('x_nuta2_nutanix_ca.nutanix_unpublishedBP_sysId'));
            else
                gr.addQuery('catalog_item.category', gs.getProperty('x_nuta2_nutanix_ca.nutanix_category_sysId'));
            gr.orderBy('catalog_item.name');
            gr.query();
            var ans = {};
            var i = 0;
            while (gr.next()) {
                if ((blueprintType == 'unpublished' &amp;&amp; gr.catalog_item.state + '' == 'ACTIVE') || (blueprintType != 'unpublished' &amp;&amp; gr.catalog_item.state + '' == 'active')) {
                    ans[i] = {
                        'name': gr.catalog_item.name + '' + " " + gr.version + '',
                        'project_sys_id': gr.projects + ''
                    };
                    i++;
                }
            }
            this.logger.debug("Fetched " + i + " project.");
            return JSON.stringify(ans);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.fetchMultipleProjects. Error:- " + e);
        }
    },
    getMultipleProfileVariableDetails: function(projects, blueprint, profiles, cat_item, delta_profiles, type) {
        try {
            this.logger.debug("####Inside Nutanix_FetchConfigureSettingDropdown.getMultipleProfileVariableDetails.");

            var answer = {};
            if (type == "update") {
                answer = this.getProfileVariableData(profiles, cat_item, JSON.stringify(answer));
                if (delta_profiles != '')
                    answer = this.getProfileVariableData(delta_profiles, blueprint, answer);
            } else {
                answer = this.getProfileVariableData(profiles, blueprint, JSON.stringify(answer));
            }

            this.logger.debug("####Inside Nutanix_FetchConfigureSettingDropdown.getMultipleProfileVariableDetails." + answer);
            return answer;
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.getMultipleProfileVariableDetails. Error:- " + e);
        }

    },
    getMultipleServiceVariableDetails: function(projects, blueprint, profiles, type, bpType, cat_item, delta_profiles) {
        try {
            this.logger.debug("--Inside Nutanix_FetchConfigureSettingDropdown.getMultipleServiceVariableDetails.Projects " + projects + " Blueprint " + blueprint + " Profiles " + profiles + " Type " + type + " BpType " + bpType);

            var multipleService = [];
            if (type == 'update') {
                multipleService = this.getServiceVariableData(projects, cat_item, profiles, type, bpType, JSON.stringify(multipleService));
                multipleService = this.getServiceVariableData(projects, blueprint, delta_profiles, type, bpType, multipleService);
            } else {
                multipleService = this.getServiceVariableData(projects, blueprint, profiles, type, bpType, JSON.stringify(multipleService));
            }

            this.logger.debug("Nutanix_FetchConfigureSettingDropdown.getMultipleServiceVariableDetails final array. return : " + JSON.stringify(multipleService));
            return multipleService;
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.noProfileVariableDetails. Error:- " + e);
        }
    },

    noProfileVariableDetails: function(projects, blueprint, profiles) {
        this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.noProfileVariableDetails.");
        try {
            var project = projects.split(',');
            var profile = profiles.split(',');
            var answer = [];
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.noProfileVariableDetails. project : " + JSON.stringify(project) + " profile " + JSON.stringify(profile) + ' answer ' + JSON.stringify(answer));
            for (var i in profile) {
                var gr = new GlideAggregate(this.appUtil.configuration.table.variablesProperties + '');
                gr.addQuery('catalog_item', blueprint);
                gr.addQuery('isprofilevariable', true);
                gr.addQuery('application_profile', profile[i]);
                gr.query();
                if (gr.getRowCount() == 0 || gr.getRowCount() &lt; 1) {
                    answer.push(profile[i]);
                }
            }
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.noProfileVariableDetails. answer : " + JSON.stringify(answer));
            return JSON.stringify(answer);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.noProfileVariableDetails. Error:- " + e);
        }
    },
    getProjectSubnet: function(catalog, project_uuid) {
        try {
            var clusterJson = {};
            var catalogSysid;
            this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getProjectSubnet. catalog : " + catalog + " project_uuid : " + project_uuid);
            var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
            gr.addQuery('item_name', catalog);
            gr.query();
            if (gr.next()) {
                var grProject = new GlideRecord(this.appUtil.configuration.table.Project + '');
                grProject.addQuery('uuid', project_uuid + '');
                grProject.query();
                if (grProject.next()) {
                    var subnetList = grProject.subnet.split(',');
                    for (var x in subnetList) {
                        var grSubnet = new GlideRecord(this.appUtil.configuration.table.subnet + '');
                        grSubnet.addQuery('sys_id', subnetList[x]);
                        grSubnet.query();
                        if (grSubnet.next()) {
                            if (!clusterJson[grSubnet.cluster_name + '']) {
                                clusterJson[grSubnet.cluster_name + ''] = {};
                                clusterJson[grSubnet.cluster_name + '']['uuid'] = grSubnet.cluster_uuid + '';
                                clusterJson[grSubnet.cluster_name + '']['subnet'] = {};
                            }

                            clusterJson[grSubnet.cluster_name + '']['subnet'][grSubnet.uuid + ''] = grSubnet.name + '';
                        }

                    }


                }

            }
            /*setting session*/
            var grCat = new GlideRecord('x_nuta2_nutanix_ca_nutanix_catalog_items');
            grCat.addQuery('sys_id', catalog);
            grCat.query();
            if (grCat.next()) {
                var gr = new GlideRecord('item_option_new');
                gr.addQuery('cat_item.name', grCat.name + '');
                gr.query();
                var catalog_clusterJSON = {};
                while (gr.next()) {
                    if ((gr.name + '').endsWith('cluster_name') &amp;&amp; gr.question_text == 'Cluster Name') {
                        catalog_clusterJSON[gr.sys_id + ''] = {};
                        catalog_clusterJSON[gr.sys_id + '']['name'] = gr.name + '';
                        catalog_clusterJSON[gr.sys_id + '']['label'] = gr.question_text + '';
                        catalog_clusterJSON[gr.sys_id + '']['value'] = gr.default_value + '';
                    }
                }

                for (var k in catalog_clusterJSON) {
                    var serviceName = (catalog_clusterJSON[k].name + '').slice(0, (catalog_clusterJSON[k].name).length - 12);
                    catalog_clusterJSON[k]['nics'] = {};
                    var gr = new GlideRecord('item_option_new');
                    gr.addQuery('cat_item.name', grCat.name + '');
                    gr.query();
                    while (gr.next()) {
                        if ((gr.name + '').indexOf(serviceName) != -1 &amp;&amp; (gr.name + '').indexOf('_nic_') != -1) {
                            catalog_clusterJSON[k]['nics'][gr.sys_id + ''] = gr.name + '';
                        }
                    }
                }
            }

            /**/


            var catNicJson = {
                "catalog_data": catalog_clusterJSON,
                "cluster_info": clusterJson
            };
            this.logger.debug("**Inside Nutanix_FetchConfigureSettingDropdown.getProjectSubnet. final answer : " + JSON.stringify(catNicJson));
            return (JSON.stringify(catNicJson));

        } catch (e) {
            this.logger.error("Inside Nutanix_FetchConfigureSettingDropdown.getProjectSubnet." + e);
        }
    },

    getProfileVariableData: function(profiles, blueprint, answers) {

        var profile = profiles.split(',');
        var answer = JSON.parse(answers);

        var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
        for (var i in profile) {
            if (i == 0)
                var qc = gr.addQuery('application_profile', profile[i]);
            else
                qc.addOrCondition('application_profile', profile[i]);
        }
        gr.addQuery('catalog_item', blueprint);
        gr.addQuery('isprofilevariable', true);
        gr.orderBy('variable.name');
        gr.query();

        var i = 0;
        while (gr.next()) {

            /*if (gr.is_hidden == true)
            	continue;*/

            var opt = [];
            if (gr.variable.type + '' == 5) {
                var optionRec = new GlideRecord("question_choice");
                optionRec.addQuery('question', gr.variable + '');
                optionRec.query();
                while (optionRec.next()) {

                    opt.push(optionRec.value + '');

                }

            } else if (gr.variable.type + '' == 21) {
                var varRefRec = gr.variable.getRefRecord().reference_qual + '';
                varRefRec = varRefRec.substr(9, varRefRec.length);
                var optionRec = new GlideRecord(this.appUtil.configuration.table.dropDownTable + '');
                optionRec.addQuery('variable', varRefRec);
                optionRec.query();
                while (optionRec.next()) {
                    opt.push(optionRec.value + '');
                }

            }
			
			
            answer[gr.sys_id + ''] = {
                'name': gr.variable.name + '',
                'question_text': gr.variable.question_text + '',
                'value': gr.default_value + '',
                'runtime_config': gr.runtime_config + '',
                'type': gr.variable.type + '',
                'isprofilevariable': gr.isprofilevariable + '',
                'uuid': gr.uuid + '',
                'isdisabled': gr.isdisabled + '',
                "val_type": gr.value_type + '',
                "description": gr.variable.help_text + '',
                "mandatory": gr.variable.mandatory + '',
                "regex": gr.field_regex + '',
                "options": opt,
                "data_type": gr.data_type + '',
                "uuid": gr.uuid + '',
                "application_profile": gr.application_profile + '',
                "field_json": this.appUtil.getMacroDependencies(gr.field_json + ""),
                "field": gr.field_json + "",
                "isHidden": gr.is_hidden + ""
            };
            i++;
        }

        return JSON.stringify(answer);
    },
    getServiceVariableData: function(projects, blueprint, profiles, type, bpType, multipleService) {
        var project_array = projects.split(',');
        var profile_array = profiles.split(',');
        var multipleService = JSON.parse(multipleService);
        for (var pro = 0; pro &lt; profile_array.length; pro++) {
            var profile = profile_array[pro];
            var variables = new GlideRecord(this.appUtil.configuration.table.applicationProfiles + '');
            if (variables.get(profile)) {
                this.logger.info("Nutanix_FetchConfigureSettingDropdown.getMultipleServiceVariableDetails Feach ServiceVariable of " + variables.name + " Profile.");
            }
            var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
            gr.addQuery('application_profile', profile_array[pro]);
            gr.addQuery('catalog_item', blueprint);
            gr.addQuery('isprofilevariable', false);
            gr.orderBy('variable.order');
            gr.query();

            this.logger.info("Nutanix_FetchConfigureSettingDropdown.getMultipleServiceVariableDetails Feach ServiceVariable of " + variables.name + " Profile. Feached " + gr.getRowCount() + " Count");
            var answer = {};
            var i = 0;
            while (gr.next()) {

                if (!answer[variables.name + '_' + gr.service_name.name + ''])
                    answer[variables.name + '_' + gr.service_name.name + ''] = {};
                var categoryName = gr.category_name.name + '';
                if (gr.category_name.name + '' == gr.variable.name + '') {
                    if (!answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + ''])
                        answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + ''] = {};
                    if (bpType == "published") {
                        var ans = (this.getVariablePatchedValue(type + '', gr.default_value + '', gr.sys_id, gr.variable.name + '', gr.category_name.name + '', gr.category_name.question_text + ''));
                        this.logger.debug("--Inside Nutanix_FetchConfigureSettingDropdown.getMultipleServiceVariableDetails.Patched Value for " + gr.variable.name + " :: " + ans);
                        answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + '']['new_' + gr.sys_id + ''] = (ans) ? JSON.parse(ans) : [];
                        answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + '']['new_' + gr.sys_id + ''].notCmplx = false;
                    } else {
                        answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + ''][gr.sys_id + ''] = (gr.default_value + '') ? JSON.parse(gr.default_value + '') : {};
                        answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + ''][gr.sys_id + ''].notCmplx = false;
                    }
                } else {
                    /*if (gr.is_hidden == true)
                    	continue;*/
                    if (!answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + ''])
                        answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + ''] = {};
                    var catname = (gr.category_name.name + '').substring(((gr.service_name.name + '').length) + 1);
                    var varname = (gr.variable.name + '').substring(((gr.service_name.name + '').length) + 1);
                    var default_value = "";
                    var runtime_config = gr.runtime_config + '';
                    var isdisabled = gr.isdisabled + '';
                    var ans, parsedAns;
                    if (catname == "ssh_keys" &amp;&amp; bpType == "published") {
                        var hasKey;
                        var gr_ssh = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
                        gr_ssh.addQuery('application_profile', profile);
                        gr_ssh.addQuery('catalog_item', blueprint);
                        gr_ssh.addQuery('isprofilevariable', false);
                        gr_ssh.addQuery('variable.name', 'CONTAINS', 'key_0');
                        gr_ssh.orderBy('variable.order');
                        gr_ssh.query();
                        if (gr_ssh.next()) {
                            hasKey = "true";
                        }
                        if (hasKey != "true") {
                            ans = this.getVariablePatchedValue(type + '', gr.default_value + '', gr.sys_id, gr.variable.name + '', gr.category_name.name + '', gr.category_name.question_text + '', "true");
                            parsedAns = (ans) ? JSON.parse(ans) : {};
                            answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + ''] = parsedAns;
                        }
                    }
                    if ((!gr.default_value) &amp;&amp; bpType == "published") {
                        ans = this.getVariablePatchedValue(type + '', gr.default_value + '', gr.sys_id, gr.variable.name + '', gr.category_name.name + '', gr.category_name.question_text + '');
                        parsedAns = (ans) ? JSON.parse(ans) : "";
                        this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getMultipleServiceVariableDetails.Patched Value for " + gr.variable.name + " :: " + ans);
                        if (parsedAns) {
                            default_value = parsedAns.value + '';
                            var isSupported = (default_value + '' == 'Cloud-init' || default_value + '' == 'Sysprep' || (varname + '').startsWith('key_') || (this.disabledFields.includes(varname) &amp;&amp; varname + '' != 'name' &amp;&amp; varname + '' != 'type')) ? false : true;
                            runtime_config = ((default_value + '').indexOf('@@') != -1 || isSupported + '' == 'false') ? false : (parsedAns.runtime + '') ? parsedAns.runtime + '' : gr.runtime_config + '';
                            isdisabled = ((default_value + '').indexOf('@@') != -1 || isSupported + '' == 'false') ? true : (runtime_config + '' == 'true') ? false : true;
                        }
                    }

                    /*Advanced Variable*/
                    var opt = [];
                    if (gr.variable.type + '' == 5 &amp;&amp; gr.isservicevariable == true) {
                        var optionRec = new GlideRecord("question_choice");
                        optionRec.addQuery('question', gr.variable + '');
                        optionRec.query();
                        while (optionRec.next()) {
                            opt.push(optionRec.value + '');
                        }
                    } else if (gr.variable.type + '' == 21 &amp;&amp; gr.isservicevariable == true) {
                        var varRefRec = gr.variable.getRefRecord().reference_qual + '';
                        varRefRec = varRefRec.substr(9, varRefRec.length);
                        var optionRec = new GlideRecord(this.appUtil.configuration.table.dropDownTable + '');
                        optionRec.addQuery('variable', varRefRec);
                        optionRec.query();
                        while (optionRec.next()) {
                            opt.push(optionRec.value + '');
                        }
                    }
                    answer[variables.name + '_' + gr.service_name.name + ''][variables.name + '_' + gr.category_name.name + ''][gr.sys_id + ''] = {
                        'name': gr.variable.name + '',
                        'question_text': gr.variable.question_text + '',
                        'value': (gr.default_value + '') ? gr.default_value + '' : default_value,
                        'runtime_config': (gr.default_value + '') ? gr.runtime_config + '' : runtime_config,
                        'type': gr.variable.type + '',
                        'isprofilevariable': gr.isprofilevariable + '',
                        'uuid': gr.uuid + '',
                        'isdisabled': (gr.default_value + '') ? gr.isdisabled + '' : isdisabled,
                        'isSupported': gr.issupported + '',
                        'isservicevariable': gr.isservicevariable + '',
                        'notCmplx': true,
                        'val_type': gr.value_type + '',
                        'description': gr.variable.help_text + '',
                        'mandatory': gr.variable.mandatory + '',
                        'regex': gr.field_regex + '',
                        'options': opt,
                        'data_type': gr.data_type + '',
                        'serviceField': (gr.isprofilevariable + '' == 'false' &amp;&amp; gr.isservicevariable + '' == 'false') ? true : false,
                        "field_json": (gr.isservicevariable + '' == 'true') ? this.appUtil.getMacroDependencies(gr.field_json + "") : {},
                        "field": (gr.isservicevariable + '' == 'true') ? gr.field_json + "" : "{}",
                        "isHidden": gr.is_hidden + ""
                    };
                }
                i++;
            }

            this.logger.debug("--Inside Nutanix_FetchConfigureSettingDropdown.getMultipleServiceVariableDetails. all service variable value answer" + variables.name + " :: " + JSON.stringify(answer));
            if (i &gt; 0) {
                var returnJSON = {};
                returnJSON['profile'] = variables.name + '';
                returnJSON['service_configuration'] = answer;
                returnJSON['profile_sys_id'] = variables.sys_id + '';
                if (pro == 0)
                    returnJSON['subnet_list'] = this.getNutanixSubnetList(projects);
                this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getMultipleServiceVariableDetails " + JSON.stringify(returnJSON));
                multipleService.push(returnJSON);
            }
        }
		
        return JSON.stringify(multipleService);
    },
    mpiPatchingBp: function(mpi_uuid, bp_name, project_uuid, environment_uuid) {
        try {
            gs.info("!! mpi_uuid : " + mpi_uuid + " bp_name : " + bp_name + " project_uuid : " + project_uuid + " environment_uuid : " + environment_uuid);
            var logger = new Nutanix_Calm_Logger();
            var utils = new Nutanix_Calm_Utils();
            var reqUtils = new Nutanix_RequestUtil();
            var response = utils.makeCalmApiCall('GET', '/calm_marketplace_items/' + mpi_uuid);
            if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {
                response = JSON.parse(response.getBody());
                var name = bp_name + '';
                var app_bp_name = ((name + GlideSecureRandomUtil.getSecureRandomString(8) + mpi_uuid).replaceAll('-', ' ').trim().replaceAll(' ', '_')).substring(0, 64);
                var tmpbody = {
                    "status": response.status.resources.app_blueprint_template.status,
                    "spec": response.spec.resources.app_blueprint_template.spec
                };
                var body = {
                    "api_version": "3.0", //response.api_version,
                    "metadata": {
                        "kind": "blueprint",
                        "project_reference": {
                            "kind": "project",
                            "uuid": project_uuid + ''
                        },
                        "categories": response.metadata.categories //changes
                    },
                    "spec": {
                        "description": response.spec.resources.app_blueprint_template.spec.description, //response.spec.description,
                        "app_blueprint_name": app_bp_name + '',
                        "source_marketplace_version": response.spec.resources.version, //"1.0.0", //changes
                        "source_marketplace_name": name + '',
                        "resources": response.spec.resources.app_blueprint_template.spec.resources
                    }
                };
                if (environment_uuid + '')
                    body.spec.environment_uuid = environment_uuid + '';

                var response = utils.makeCalmApiCall('POST', '/blueprints/marketplace_launch', JSON.stringify(body));
                if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {
                    parseResp = JSON.parse(response.getBody());
                    var clonedBpUuid = parseResp.metadata.uuid;
                    return clonedBpUuid + '';
                }

            }
        } catch (e) {
            logger.error("Exception caught inside mpiPatching. Error:- " + e);
            return "false";
        }
    },


    copyMpiPatching: function(projects, blueprint, profile1) {

        var logger = new Nutanix_Calm_Logger();
        var utils = new Nutanix_Calm_Utils();
        var reqUtils = new Nutanix_RequestUtil();
        var blueprintTemplate = "";
        var catVariableBody = {};
        var bpVariablesJSON = {};
        var parseResp = {};

        try {
            logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.mpiPatching.");

            var project = projects.split(',');
            project = project[0];

            var bp = new GlideRecord('x_nuta2_nutanix_ca_nutanix_marketplaceitems');
            bp.addQuery('sys_id', blueprint);
            bp.query();

            var mpi_uuid = (bp.next()) ? bp.uuid : "";

            var response = utils.makeCalmApiCall('GET', '/calm_marketplace_items/' + mpi_uuid);

            if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {

                response = JSON.parse(response.getBody());

                var environment_uuid = ' ';
                var project_uuid = '';

                var projectRecord = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');
                projectRecord.addQuery('sys_id', project);
                projectRecord.query();
                var environment_uuid_array;
                if (projectRecord.next()) {
                    project_uuid = projectRecord.uuid + '';
                    environment_uuid = projectRecord.environment_uuid + '';
                    if (parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &gt;= parseFloat("3.2")) {
                        environment_uuid_array = environment_uuid.split(',');
                    }
                }

                var name = bp.name + '';
                var app_bp_name = ((name + GlideSecureRandomUtil.getSecureRandomString(8) + mpi_uuid).replaceAll('-', ' ').trim().replaceAll(' ', '_')).substring(0, 64);
                var tmpbody = {
                    "status": response.status.resources.app_blueprint_template.status,
                    "spec": response.spec.resources.app_blueprint_template.spec
                };

                var body = {
                    "api_version": "3.0", //response.api_version,
                    "metadata": {
                        "kind": "blueprint",
                        "project_reference": {
                            "kind": "project",
                            "uuid": project_uuid + ''
                        },
                        "categories": response.metadata.categories //changes
                    },
                    "spec": {
                        "description": response.spec.resources.app_blueprint_template.spec.description, //response.spec.description,
                        "app_blueprint_name": app_bp_name + '',
                        "source_marketplace_version": response.spec.resources.version, //"1.0.0", //changes
                        "source_marketplace_name": name + '',
                        "resources": response.spec.resources.app_blueprint_template.spec.resources

                        //reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)
                        //response.spec.resources.app_blueprint_template.spec.resources
                    }
                };

                var env = "";
                var app_pro = "";
                for (var i = 0; i &lt; environment_uuid_array.length; i++) {

                    env = environment_uuid_array[i];

                    var body1 = new Object();
                    var profile = [];
                    body1["api_version"] = "3.0";
                    var metadata = {};
                    var api_info;

                    metadata.kind = "marketplace_item";
                    api_info = "calm_marketplace_items";

                    metadata["categories"] = {};

                    var project_reference = {};
                    project_reference["kind"] = "project";
                    project_reference["name"] = projectRecord.name + "";
                    project_reference["uuid"] = project_uuid;
                    metadata["project_reference"] = project_reference;

                    body1["metadata"] = metadata;
                    var specs = {};
                    var environment_profile_pairs = [];
                    var environment = {};
                    environment["uuid"] = environment_uuid_array[i];
                    
                    var app_profile = profile1;
                    app_profile = app_profile.split(",");
                    for (var i = 0; i &lt; app_profile.length; i++) {
                        var profile_obj = {};
                        var gr = new GlideRecord("x_nuta2_nutanix_ca_application_profile");
                        if (gr.get(app_profile[i])) {
                            profile_obj.app_profile = {
                                "name": gr.name + ""
                            };
                            profile.push(gr.name + "");
                        }
                        profile_obj.environment = environment;
                        environment_profile_pairs.push(profile_obj);
                    }
                    specs["environment_profile_pairs"] = environment_profile_pairs;
                    var final_profile = [];
                    body1["spec"] = specs;
                    this.appUtil = new Nutanix_Calm_Utils();
                    logger.info("Nutanix_ClientServerScriptBridge.fetchProfilesBasisOnEnvironment Body:" + JSON.stringify(body1));
					
                    var response = this.appUtil.makeCalmApiCall('POST', '/' + api_info + '/' + mpi_uuid + "/patch_with_environment/validate", JSON.stringify(body1));
                    logger.info("Nutanix_ClientServerScriptBridge.fetchProfilesBasisOnEnvironment " + JSON.stringify(response.getBody()) + response.getStatusCode());

                    if (response.getStatusCode() + '' == "200" || response.getStatusCode() + '' == "201") {
                        response = JSON.parse(response.getBody());
                        var environment_profile_pair = response.status.environment_profile_pairs;
                        for (var i = 0; i &lt; environment_profile_pair.length; i++) {
                            var name = environment_profile_pair[i].app_profile.name + "";
                            var state = environment_profile_pair[i].state;
                            if (profile.indexOf(name) != -1) {
                                if (state == "valid") {
                                    final_profile.push(name);
                                }
                            }
                        }
					
                        if (final_profile.length &gt; 0) {
                            app_pro = final_profile[0];
                            break;
                        }
                    } else {
                        logger.info("error in Nutanix_ClientServerScriptBridge.fetchProfilesBasisOnEnvironment");
                    }
                }
				
               
                    var env_template = [{
                        "app_profile": {
                            "name": app_pro + ""
                        },
                        "environment": {
                            "uuid": env + ""
                        }
                    }];
					 body.spec.environment_profile_pairs = env_template;
					
               
                //gs.error("MPI payload send: "+JSON.stringify(body));
                //	return "MPI Launch Body "+JSON.stringify(body);
                
				
                var response = utils.makeCalmApiCall('POST', '/blueprints/marketplace_launch', JSON.stringify(body));
                // 			return "post marketplace launch  call "+response.getStatusCode();
                if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {

                    var session = gs.getSession();
                    session.putClientData('non_filtered_cloned_bp_response', response.getBody());

                    parseResp = JSON.parse(response.getBody());
                    blueprintTemplate = (parseResp.status.resources) ? parseResp.status.resources : "";
                    var clonedBpUuid = parseResp.metadata.uuid;

                    //gs.error("Patching : "+response.getBody());

                } else {
                    logger.error("API call to '/blueprints/marketplace_launch' failed with name : " + app_bp_name + ":-" + response.getBody());
                    //gs.error("Errorr :: "+(JSON.parseresponse.getBody()).message_list[0].message);
                    return JSON.stringify({
                        "errMess": JSON.parse(response.getBody()).message_list[0].message,
                        "status": false
                    });
                }

                var bpVariables = new Nutanix_CreateCatalogVariables();
                if (bp.template_type == "Single Vm") {

                    var service_body = [{
                        "uuid": "singleVm-default-service-uuid",
                        "name": "single_vm_configuration"
                    }];

                    catVariableBody = {
                        "substrate_definition_list": (blueprintTemplate.substrate_definition_list) ? blueprintTemplate.substrate_definition_list : "",
                        "app_profile_list": (blueprintTemplate.app_profile_list) ? blueprintTemplate.app_profile_list : "",
                        "service_definition_list": service_body,
                        "package_definition_list": (blueprintTemplate.package_definition_list) ? blueprintTemplate.package_definition_list : ""
                    };
                    bpVariablesJSON = bpVariables._filterJSONDatatoService(catVariableBody);
                } else if (blueprintTemplate.package_definition_list &amp;&amp; blueprintTemplate.substrate_definition_list &amp;&amp; blueprintTemplate.app_profile_list &amp;&amp; blueprintTemplate.service_definition_list) {
                    catVariableBody = {
                        "substrate_definition_list": (blueprintTemplate.substrate_definition_list) ? blueprintTemplate.substrate_definition_list : "",
                        "app_profile_list": (blueprintTemplate.app_profile_list) ? blueprintTemplate.app_profile_list : "",
                        "service_definition_list": (blueprintTemplate.service_definition_list) ? blueprintTemplate.service_definition_list : "",
                        "package_definition_list": (blueprintTemplate.package_definition_list) ? blueprintTemplate.package_definition_list : ""
                    };

                    bpVariablesJSON = bpVariables._filterJSONDatatoService(catVariableBody);
                }

                bpVariablesJSON.uuid = parseResp.metadata.uuid + '';
                bpVariablesJSON.name = parseResp.metadata.name + '';

                var session = gs.getSession();
                session.putClientData('Cloned_bp_response', JSON.stringify(bpVariablesJSON));
                var clientData = session.getClientData('Cloned_bp_response');
                logger.debug("MPI cloned Blueprint response ::" + clientData);
                return JSON.stringify({
                    "errMess": "Successfull",
                    "status": true
                }); //JSON.parse(clientData).uuid+'';
            } else {
                logger.error("API call to '/calm_marketplace_items/uuid' failed: " + response.getBody());
                var result = {
                    "errMess": (response.getBody()).message_list[0].message,
                    "status": false
                };
                return JSON.stringify(result);
            }
        } catch (e) {
            logger.error("Exception caught inside Nutanix_FetchConfigureSettingDropdown.mpiPatching. Error:- " + e);
            return "false";
        }
    },
		variableArrayParser_client_script: function(type, parent_uuid, var_array) {
	 //this.logger.debug("++++variableArrayParser type" + type + " parent_uuid," + parent_uuid + " var_array" + var_array);
			var cat_launch = false;
        if (type == 'catalog') {
			cat_launch = true;
            var gr = new GlideRecord("x_nuta2_nutanix_ca_nutanix_runtime_configuration");
            gr.addQuery("item_name", parent_uuid);
            gr.query();
            if (gr.next()) {
                parent_uuid = gr.blueprint.uuid + "";
                type = "blueprints";
                if ("" + gr.item_name.category.title == "Un-Published Blueprints") {
                    type = "blueprints";
                }
                if ("" + gr.item_name.category.title == "Published Blueprints") {
                    type = "published";
                }

            }
        }

        var parsed_var_array = JSON.parse(var_array);
        var pre_map = {};
        var extApiFlag = false;
        for (var i = 0; i &lt; parsed_var_array.length; i++) {
            var var_data = parsed_var_array[i];
			var hasMacros = (this.appUtil._createMacroArray(var_data.def_val + "").length != 0);
            var depends_on = this.appUtil.getMacroDependencies(JSON.stringify(var_data));
            pre_map[var_data.name] = {
                "depends_on": depends_on,
                 "value": (hasMacros) ? var_data.def_val + "" : var_data.value + "",
                "uuid": var_data.uuid,
                "type": var_data.type,
				"data_type": var_data.data_type,
                "name": var_data.name,
                "sys_id": (var_data.sys_id) ? var_data.sys_id : "",
				"catalog_launch": cat_launch
            };
			if(var_data.type == 'EXEC_LOCAL' || var_data.type == 'HTTP_LOCAL' || var_data.type == 'EXEC_SECRET' || var_data.type == 'HTTP_SECRET') {
				pre_map[var_data.name].requiresApiCall = true;
			} else {
				if(var_data.options &amp;&amp; var_data.options.choices &amp;&amp; var_data.options.choices.length != 0) {
					pre_map[var_data.name].options = var_data.options.choices;
					pre_map[var_data.name].data_type = "LIST_SINGLE";
				}
				if(var_data.data_type + "" == 'LIST') {
					if(cat_launch)
						pre_map[var_data.name].value = this._sysIdToValue(var_data.value);
					pre_map[var_data.name].data_type = var_data.data_type;
				}
			}
			
        }
        //this.logger.debug("====variableArrayParser type" + type + " parent_uuid," + parent_uuid + " var_array" + var_array);
        var result = this.getHttpValues_client_script(type, parent_uuid, JSON.stringify(pre_map));

        return result;
	},
	getHttpValues_client_script: function(type, parent_uuid, pre_map) {
    try{
			this.logger.debug("Inside Nutanix_FetchConfigureSettingDropdown.getHttpValues. type : "+type+" parent_uuid : "+parent_uuid+" pre_map : "+pre_map);
			
			var post_value_map = {};
			pre_map = JSON.parse(pre_map);
			var top_pre_map = {};
			for(var i in pre_map) {
				top_pre_map[i] = this.appUtil.createPreMap(pre_map[i].depends_on, pre_map[i].type);
			}
			
			var top_post_map = this.appUtil.createDependencyMap(top_pre_map);
			
			var dependency_array = top_post_map.Dep_array;
			var error_array = top_post_map.error_map;
			var mpi_uuid, bp_name, project_uuid,  environment_uuid;
			
			if(type == 'unpublished') {
				
				var table_name = (type == 'unpublished') ? this.appUtil.configuration.table.Blueprint + '' : 'x_nuta2_nutanix_ca_nutanix_marketplaceitems';
				var grBlueprint = new GlideRecord(table_name);
				if (grBlueprint.get(parent_uuid))
				{	
				parent_uuid = grBlueprint.uuid + '';
				type = 'blueprints';
				}
			}
			if(type+'' == 'published') {
				
				var table_name = 'x_nuta2_nutanix_ca_nutanix_marketplaceitems';
				var grBlueprint = new GlideRecord(table_name);
				grBlueprint.addEncodedQuery('uuidLIKE'+parent_uuid);
				grBlueprint.query();
				
				if (grBlueprint.next())
				{	
					
					mpi_uuid = grBlueprint.uuid + '';
					bp_name = grBlueprint.name;
					
					var bp_project = new GlideRecord('x_nuta2_nutanix_ca_nutanix_calm_projects_blueprints_relationship');
					bp_project.addEncodedQuery('catalog_item.sys_id='+grBlueprint.sys_id);
					bp_project.query();
					while(bp_project.next()){
						project_uuid = bp_project.projects.uuid;
						environment_uuid = bp_project.projects.environment_uuid;
					}
					
					parent_uuid = this.mpiPatchingBp(mpi_uuid, bp_name, project_uuid,  environment_uuid);
					type = 'blueprints';
				}
			}
// 			gs.info("!"+JSON.stringify(dependency_array));
			for(var pos = 0; pos &lt; dependency_array.length; pos++) {
				
				var var_json = pre_map[dependency_array[pos]];
				
				this.logger.debug("!!!!! var_json \n"+JSON.stringify(var_json));
				if(!var_json) {
					this.logger.error('Dependent variable "'+dependency_array[pos]+'" not found.');
					continue;
				}
				
			 if (!var_json.requiresApiCall) {
					if(var_json.data_type + "" == "LIST_SINGLE" || var_json.data_type + "" == 'LIST') {
						//gs.info(JSON.stringify(var_json));
						var_json.options = this._substituteMacro(var_json.options.toString(), pre_map).split(',');
						var_json.value = this._substituteMacro(var_json.value, pre_map);
					}
					else
						var_json.value = this._substituteMacro(var_json.value, pre_map);
                    post_value_map[dependency_array[pos]] = var_json;
                    continue;
                }
				
                var var_uuid = var_json.uuid;
                var options = {
                    "state": "",
                    "values": []
                };

                var request_body = JSON.stringify({
                    "requestId": "",
                      "overridden_field": this._createOverrideVarBody(pre_map, var_json)
                });
				//gs.info("Override body: "+request_body);
				//gs.info("Send val body: "+'POST' + '/' + type + '/' + parent_uuid + '/variables/' + var_uuid + '/values' + request_body + "");
// 				gs.info('Priyanka POST \n endpoint /'+type+'/'+parent_uuid+'/variables/'+var_uuid+'/value'+"\n request body "+JSON.stringify(request_body));
                var sendValuesBody = this.appUtil.makeCalmApiCall('POST', '/' + type + '/' + parent_uuid + '/variables/' + var_uuid + '/values', request_body + "");
				
                var parsedSendValueBody = JSON.parse(sendValuesBody.getBody());
                // 				gs.info(sendValuesBody.getBody());
                var valPollBody = {
                    "requestId": parsedSendValueBody.request_id,
                    "trlId": parsedSendValueBody.trl_id
                };
//gs.info("valPollBody "+JSON.stringify(valPollBody));
                var getValuesBody = this.appUtil.makeCalmApiCall('POST', '/' + type + '/' + parent_uuid + '/variables/' + var_uuid + '/values', JSON.stringify(valPollBody));
                var parsedValueBody = JSON.parse(getValuesBody.getBody());
                var execState = parsedValueBody.state + "";
                while (execState == 'RUNNING' || execState == 'running') {
                    getValuesBody = this.appUtil.makeCalmApiCall('POST', '/' + type + '/' + parent_uuid + '/variables/' + var_uuid + '/values', JSON.stringify(valPollBody));
                    parsedValueBody = JSON.parse(getValuesBody.getBody());
                    execState = parsedValueBody.state + "";
                }
				//gs.info("Values:"+getValuesBody.getBody());
                //r parsedValueBody = JSON.parse(getValuesBody.getBody());
                if (parsedValueBody.state == 'SUCCESS') {
                    var_json.state = parsedValueBody.state;
                    var_json.default_value = var_json.value + "";
                    var_json.value = [];
                    for (var i in parsedValueBody.values)
                        var_json.value[i] = parsedValueBody.values[i];
                } else {
                    var_json.state = parsedValueBody.state;
                    var_json.error = [];
                    for (var j in parsedValueBody.message_list)
                        var_json.error[j] = parsedValueBody.message_list[j].message;
                }

                post_value_map[dependency_array[pos]] = var_json;
            }

            //gs.info("!!!Pre map:" + JSON.stringify(pre_map));
			gs.info("post_value_map:" + JSON.stringify(post_value_map));
            return JSON.stringify(post_value_map);

        } catch (e) {
            this.logger.error("Error caught in Nutanix_FetchConfigureSettingDropdown.getHttpValues:" + e);
        }
    },
    type: 'Nutanix_FetchConfigureSettingDropdown'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-28 19:21:56&lt;/sys_created_on&gt;&lt;sys_id&gt;92e8017f37112300fdfc097973990e33&lt;/sys_id&gt;&lt;sys_mod_count&gt;989&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_FetchConfigureSettingDropdown&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_92e8017f37112300fdfc097973990e33&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-17 00:43:01&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>-2133271558</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>495887e5dbcc7c103e3c6a5b8a961955</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98f2b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_FetchConfigureSettingDropdown</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>dc1a1af1626368103071190e0cd3ebbd</update_guid>
<update_guid_history>dc1a1af1626368103071190e0cd3ebbd:-2133271558,171070bd822f2810b1cca3b323b0a61b:-1080478846,ef5f647d0d2f2810cb81dfc716aaf8db:144450568,722da07d3ce320105e933a8675af2bc9:1070972202,55ddeee9aa2368100d8f7d9fec627730:1705771107,25b52225eb236810fdc06fcbabb0df1d:-1047691869,851996e558ef2810650ab08963992a6b:877118339,33f896e596ef281048a1847efe3b3cf7:-574231244,4ad61ea5f1ef2810d7ecce55aeae5915:1309898342,10ae8ae96caf2810274c541eb66f47f2:-1771617287,86e886a94daf2810f5531635c01174b9:1371637024,6f57ce29e9af2810e819b97f969eb823:984609344,1b0e53d53ae72810a947651a23a3cb2c:757898459,d64d935553e72810b820716e21f80e97:-416542344,8d0b1b1533e7281089c726711e6fc451:-637335441,0e58d3912fe72810aa11d312ac04b033:-1746639800,b82987d1e8a72810b4612bad36d6c177:-1962918436,f8c58391b7a7281018b6848d33dd63bb:-1814763041,08a36071f7ebe090585a465ea3f591fe:2082505813,6761e43101ebe090c4108d71b574a8b2:-2064383943,74f3d2a97e27e090ce6d48e3aa28eeb4:-2064383943,72d5d515c5e7a850bd1deb02d4bcc27e:-1540792305,30968f89f9af6850273f69925d5c067e:-1312079952,03b18b052daf685034369103718b7cd6:-1646452344,54b77249a16f685073a6d0c2cd872575:474146935,3b9732491e6f6850fff4364971f0df95:-1991824160,9ef57e45ec6f6850b51a5532166af05a:-604152711,90ef2a01126f685074219b4143e8a359:474146935,9d5ea6c95e2f68504cd29f62995301d8:-618774476,c73baac9572f6850ac723f7566748191:1377109895,92c922499f2f6850fb737c271a15faef:-1185166433,bee72a45a02f6850859e6798595f0869:1504318555,f5056e41572f6850e03dfeb352588ef7:-1650406398,3fd3aa41042f68508b80f769b8b83b70:-2090521745,c7a50649022b6850a9e609265c80415a:1329562538,3ad40649822b68509bda9038a8b109ad:-194577971,c9d20a09272b68502aa4b827e504250a:-1753107273,4fa2c609192b68505c5200d470e782b1:-413972342,a6f14e853a2b685024e5b34a89fbd688:-671454806,f0210a456f2b68508121259f76fd0b88:-1046886297,e00c3dcd3de7685038f3ee1997025a40:-854534071,6519bd0d04e76850e8180d487ba0cdd6:2119584952,3557bd892ae76850a30e070e708b92f6:-693808524,2f35b9c5f8e76850e31850a5037f8dab:187274079,889669c9e3a768505fcf07d57dde6719:1643862647,6985ad4948a768507fab5efbf5e7aff9:-1364513586,878269c586a768509c44ae9bf737727e:796188115,4701694528a768509e57d211b19077fc:-466294781,7dff154503a7685006d5c5c758abed78:493005244,704fdd0573a7685089c283ec1c341bbd:-794443354,c62f1d0537a7685060c15b14f8aac073:521568758,b54e91c1daa768507c841f693d91437f:1798092133,2f3d15013ea7685084459aa0d877a967:342509594,0c795109be676850be9561fdd6b84c57:-2034756840,6a5695cdfc276850ce32994d34b5f8fa:384135430,edef05c1732768503145d5aeebe9169f:-855634196,2deb4d4d1ee3685031c142aabb211087:1321120786,b65609816ee368503bf1c3846759c453:-272459592,1e31450daca36850f549bc6bee81a16a:350307520,b838b0414aa36850021ee4b72c186462:-303892314,4c08fc01b1a36850dbf5d7da942359d7:487693920,c6d5bc8949636850079a17618f989fb8:607648500,20e2c0f03aefe450988e16f546df78a1:1788259448,7740887852afe45005b7e88906cb9491:-1819625407,26adbfe01bafe45007045f08832c549d:-526519413,37927ba4782fe450dea991c6fb669a47:-1872006103,792fa36cdfebe450e925ed33ff9909c8:-1335070983,543ceba4baebe450550277700a518748:1636726073,713fb624be67e450094ab4ec3d5b9e3a:1318226497,d9c9df9873eba45071acc9bad8eb115a:-1995709934,b7f6db142aeba45094640bc03aceea1d:1841716886,551b7654b22ba4504275cae174a0e6bf:-1094026851,ecca3e90fe2ba45048f3c5ccca3ccb39:8664761,6fba3ed0af2ba4508d51d4d43a6f603c:-123638791,7379fa90ee2ba4509752760fbdb558db:-2015188203,e1487e502c2ba45093dd1beb079ee185:-1179735463,72673250882ba4507330fe6d356ce2dd:719242598,3d0576dc90e7a450366f6462e5a970b0:1615842571,96e3f69ce6e7a4506222fa2b69006a2a:-1611958917,f023b25cf1e7a4508f58830dedef5f4a:993271905,c3e276d870e7a450d3a127583546463e:1316048017,90c032d8c8e7a450f3e332018c69153d:483615243,225c5a18d067a45058d5dc928f071b83:1445164021,41fbd2d44567a450bfecb6cc7fccca65:111297173,eb211a9cf027a4506c43dac33004d5cf:-530280571,75809a1c7627a450c2b0cfd8eee4a2fc:1054190313,bd3a69d01faf6450dee1ffdea1e2f3fc:-1128233911,b1400de3e81fe050cb178d9313f4f949:-1077121947,0676702fb9dbe050c458766fcb2bb298:-739628381,de83386b11dbe0509a01b9ea4320eb23:1718495943,0f43fc6bfbdbe0506945d696e8ca95af:1458041447,4b4c206f3d9be05006bf768e0ac7b78e:1381829081,bef660e7cf9be0502176f28906ac8925:2045679626,1ef16467cb9be050093b6ed36fb33c11:1541559164,aff0a0270f9be050936aec18f6682e67:-3333430,819f58a3319be0509d94987e04c72287:1541559164,d13c50af4e5be05087582539c4d26fd1:1080183836,1a9ad0aff85be05004da326d2b6faa40:-339965124,428a90afac5be0508cff7abf30c37a53:1573414172,cd8694e7835be0500ae107e043080392:-1591943620,99a49ce38d5be0502dbb909bbd97441f:715077884,4d6394e3015be0508f601a3f8a01df80:1928003638,ec3054230d5be050227f0873b588a4cf:318739150,eae10063cb1be050b965c2f35a10e9a0:-831315305,4a3a33db4bd7e050d779955cc4b907ec:-487482185,a01afbdb97d7e050760ba45b5332ecdf:-246057875,9959bb5b36d7e050267a9fa34f4c2c85:-1776986255,7bb593538c57e050f6d142f1665906d4:-684688587,12249f13ee57e050873dd23c0e5c1789:1693100809,b146321fa193e05038bf5de036e03108:327449037,b2e956d70f13e05038e2fe58b3d11057:-782348691,21501183c113a0501e6ec8f632be6ca2:-1412488403,1591d176d057605000d6828fb93a1c30:1210687098,a35b053280576050896da340d5efe582:-1677172880,c4dd16cb98df2010cd81a77b9cc98353:-849773821,3fc85ac763df201059217e7f36bc5ee2:-1178056937,a8e943c5e89f2410296b3418212fed20:-1114171696,dd2d2a05541f2410948ed524d35080c1:-1323154125,5edbdef0395fe010d49e1890ccbb8c4e:273485267,d31a9af0f85fe0108d1098efe3ecd16b:-2066618458,14975abcc21fe0101c6c87bd3bbb1c8b:-218448635,64f39e74a31fe010fb448c5ac07a3067:2142962457,a59bbd70719be01031800dfc57c3da03:-888171669,e4d4702cbdd3a010c1796eace1e1a817:-1965299641,8d19e4601bd3a0106c5274b870020b3c:-1499100708,777a509822d360109f2c224034becec9:-2128986425,ba04981007d36010ac7f67352f785b13:-665822521,79b0733a8f076010b626eee0c96b6473:-1273044324,c78faf76e8076010db2bed1668d1fa67:-764342428,242eef3661076010de76ca9cb305ae34:736271278,c59cebf23d076010f879d32afc11f3e8:-2068303040,ddfa6fb22107601063b1b3cfb896db8f:1074701047,4caaaf720b0760107d1d220bdfb36e52:1813185411,7c892b72710760103ed3285b1a402079:-632712190,833a6cc2c8c76450a0c138bd3a2dc6cf:243196515,237524ce248764502e087314db3a613a:-1383661043,0e34208ee8876450b92c24dd96c45726:-570907926,a6a3244ec687645044ec6303c4ac06b5:947890314,6393644e2387645082a9bb57ae821c53:-1569681127,4583a8ca28876450f7afc3bd75da4ac6:947890314,e0d1a8cacb8764507adc271e74bfc18f:-401819533,61df584a5b87645071b77edb3268de13:-286419260,3ccd148638876450a494e14fba02d842:118876019,b6eb5446ef876450ed6f08e9e78d6e65:-1305007381,3f8850829b876450f6b1908dce0e29c3:1559636872,b3275c021f876450d86f536599615f50:1459773054,94079b35bb83645056016e35a22641e6:1106672843,f1d41bb11d836450150131bc6c6d7b76:1034102677,7d29c7e99bc32450ebb63707da2077d4:-1835255290,d7a883e99ac324503822b09d2fd56677:-943906868,8f480b2993c32450d6f50d7306ed2d14:1280603361,c716c36952c3245083aa314faa8448ca:568661675,1605c3e5cec324504b5a0ef3a718d509:541943245,57424fa19fc32450cba5b05277333102:1688356451,bf118f214dc324509d19d0123cb84b46:-426673106,002f36ede9832450ff99242ac871d15b:1304925722,b01e36ad6b832450f6356e8c8ba176da:-899168906,081b76a9ae832450d0855d888147c9d2:286582995,96893a692d832450e88b8b5b2ed3e311:1380236271,30a8b62910832450534a04d93ac17ec1:1322819835,8e88b629c28324504fab4c5a2ae14ea9:-1755342337,fbb7b6296783245045759daec0ef78f9:-1181610533,1b573229fb8324502c902595aa7f1bf6:1431441236,7eb0b661a6832450f7257499d828510d:-1398230621,f82b6acc7a9b245064585a800c161275:1108910192,a266ab3683476050eadde152b8fcb843:-1024680998,b52063fe2907605096977c2fb7c7ef73:-720966255,bef5d73645076050fc6fb5903570a4c3:658312903,af6c91e234432050a05388c2a4313fb7:-1866591858,cc17f0a255076c10a905569b8ceeae86:-1010277402,f463f4eec8c36c1009f5ac0e81bb1909:-1932518251,0f7065dedcc72c1007cc9964a45f74d4:620200321,6328180642c7e810e34a29ddf92505a8:-467113071,0409b2b1aa03e8100d5924705531265d:618693563,ec44b2bd68cfa810725bd808ec1f4160:-131780457,02f05c7d260ba8106072004479f4eda8:167387778,687f48f58b0ba8101215bee297ca29e6:-1396994478,7b1d88bd5bc7a8109f6f0a84e0a9ae1a:-807111898,dfcbc479a3c7a810996cb0f8442810ff:-1230158244,43d57ee8eb4b64104fb9731b0cf4f49f:1606411202,1e232ae87b0b6410202a3567ae3e9c80:563979212,0ec3760031c32410bda627e65f2acaa9:1529239962,ae22b288368324105fbf890307eaa966:1174814038,b6e49e802c432410658408de3e1c2d2b:1529239962,c6bd0e8847032410ef5d72d8b4dcdc8f:34267700,4aacf1c004cfe0106c4b8082a298c7b5:-258853336,74927c77ab3aa010fbba391b69e841a7:174221074,9eade073383aa010eb845c1b1d3f3e45:-1796859055,db62ca059fb2205063ec0b75cb4b56c0:432302469,ec414ac1efb220501b45288243c60ac3:-941920520,7a80424195b22050ebfac05e7d17ff5e:65364857,5f8a5830ccfaac1058af3101ccb3d0c3:-524365420,462710bc99baac10a891904188ca23e7:64148989,5dc0d47889baac10b8b2693b7961be4d:-1886969169,d44ebe7721eee810fe71fa63dd1d15cc:828290468,92b97aff29aee81002f0018f0fa3289c:-13130623,c1d8b27382eee8109a8c8f35948ad751:-1134347770,7a52830b9e2e68105b234f51ddc40228:1146026474,7c79644227c32c10f8ad6e809d847011:1546582747,c5776002acc32c103256a93d42cb0837:195072113,7d74affce7cfe4104c1651e275aa6c1d:1733807973,37f240f46b07e410e1fc64e864d407c4:338378104,5df7b32cb9c3e4107dec0d79be8e264b:-1784177160,2717b7e8c4c3e41067e49427633cacad:1771550945,363d2b24f0c3e410260fdf6b2d20865b:-1564226613,bb65576c8743e410abe916de77cf90e6:1771550945,9c64132c3543e4109b790dba12c7e935:-1146967650,830217a82843e410d6561b4d97b6f7ef:748750657,8a70df280543e41027f7769bba06402b:1125348003,b68f47e4e643e41070260f6dabb904d0:-87357658,e3ce0fe4bf43e410001929c9f18f5ef0:433758649,7d4e83a4cc43e4102d4dc70382a310bd:191019937,4b9dcba46743e410d9e8ac8f17759fd7:2123176618,ce0b4b24b943e4100e262faf4fba6040:-153885106,1761c3680603e410cf696a1db2f723e3:-1751234174,3832a710be87a41084d3be44c33203fa:1022906318,edcfdb5cba47a4104fbc30b59f527aed:21674054,0cc142904f43a410b55e01c05af4925d:1022906318,db5182505c43a41094a4fd617c7caeec:-771489008,8e1e3d1cad03a4107ff12f1782975335:1105681002,1ea8651c18cf6410e136ad0f261d9338:-1535919305,e2f625585fcf6410c67501b24f36f3de:-642506237,0f702118c20f6410e286068acc4f1c5d:268562370,6cebcd90718b6410409e39218cfddc55:-1184001241,79d84d10938b6410f2b261c6f95a93c6:372349735,4fc23b789ae6609054bde04c88b04027:-1741995643,de72777821e66090c341c08d3992fde2:1366428215,6fa0866088a62810a090a8a5e943f489:1810769973,d82f0c83925eec90dd28dbab8ea40c2a:-1276550635,2a9b1f224d1eac9008c76a33d24dccc0:787098235,34aadb22e61eac90f62ee0344c857e52:1149860440,cda897ae07daac9013c7e738354aa30b:-604740172,e7c71b2ebddaac9079d6d475b4433fea:899349867,a7455f6ab8daac9029c575f8dfe61a29:424619257,0b6e07669cdaac903c51c489e84acee5:-480703404,74d033e8a5da68900406c0fa0478d28a:260404975,a910bba861da68907bc284a56117983b:1205021579,6fb26360bcda6890040389e12fd56b62:532985571,68fd97ac719a68900694edf883a73b26:957525766,3e1d976ca49a6890b477ae108d3db244:25202304,9edb976ca89a689098a78de127d3c63a:-1011200206,afa79f20099a6890436921d043936b26:-127147260,054168e4ecd26890ea6974c91947d38b:-167698895,866cdc24cfd268904cd8683254998df6:-1846101593,3485506078d268907aa4f0a6d4ff7e37:-982795628,3d24d420b5d26890a4debc33b1aaad63:-623142493,ebd467100bde2890dfd0e90cd3eb7962:1857183881,a8db97dc4e9e28900d0819d12b591269:433804183,0c091f5ce39e2890fbf4ba5198f6bc01:-1947824629,d4179b98fe9e289088092efec0f808aa:1901118312,3456dbd86b9e2890f99c6088a49b1b75:-2003992742,d1441798d09e28906633b8ffccd12d61:-756033208,c462df18b89e28908bf7d38e86ce4f0c:-3271705,595f8f94f39e2890b3d5c875019e7527:958201892,8e9c03509c9e289092a25d97e92d4fd7:2024453020,0c4bcb580e5e28908c33716307450d94:-1224079795,77e38714905e28903d90bf1fb1ebfdb9:-496306073,eb918750445e28908dbcc12c43e2a10e:-439056615,633f32dc041e28904b0d092918f5f511:1669752272,0a2ef2109f5e28908fd03ecc8beaf2f8:753475709,ccbcb6dc261e2890c56e0081035be440:-1883950518,5109325c761e2890dad99d044945621d:1838793392,aa98be989f1e28907c345f8ff9d122b6:-1419897874,64832a1c7dda28900de5584a6d383824:109085193,5f7cd21864da28908627c3d5fe2c6ec0:1037302775,b30a5a942bda289019ba2a12b1479d46:-569706163,88f3129096da2890f22809a1d897b0ab:-1314410171,7f325650ffda28909048beaee700cdd0:1816760356,b4d6b6f8e9c62850bb73d9cb584d14d6:684804781,6211feb8f5c628509ebf7a6056927388:-634398506,c7cebdaf40966c50a8bfb1d529c18500:731130697,60933ec0809aa810d658e1a12c74b929:-1841772096,1a540dc3b4b03300135ab7df18041327:-1170071680,27b38143b9b033007c95be60b7874b8f:1422649033,f8d20dc36ab03300e385868b9cb7332d:2030792538,59ea70cf8c7033007665788394975ffc:2050359268,4504344b407033002fdeccd57113d0c7:-1828464775,5f32f08b8f703300b04db7dff8cf0a89:1343351549,23e91443d030330036bedafc059fa9a5:101643997,5da8ec7258b43300a83554f20e1fc1ae:660977160,a6b6acbe08743300abdff979c672ed56:-1084596370,019cc87afcf033006583656b76e0f715:-1983741591,4d19c876cdf0330087e9afe3e97aee17:1890337193,dd9384365ef03300522bb9d5daea3cf5:501456305,452180b2e5f03300e54f54ab31e00a93:-1553790191,7cc95472874d6c5025f2bc731d929629:-1561155187,70bdf6c6becde8502e65c03adce4cdfd:-923926535,c766a3eab2812c10eb4976ff2867514f:1074009370,dcc683ae32012c10bd0597056f1f30ab:-1957425395,5e7683ae56012c101f3e605988d0b3ef:1071587405,95310bea49012c106998d556fd005b57:1929203727,e67745e20589e81067de27dd3e44a108:1285461753,ff1e4b5e46c1e8101b0da7df8d6a09d6:-1161081762,138c4fdaf5c1e810d451fd28ac5ac0db:1356365403,734c8bda79c1e8109caf177342211051:-2139550265,98bb0b1aafc1e8106e97081c1d83690c:-1870314720,a2aa079a3cc1e81056c887b0f31d76c7:-1012368058,f2c9cb5a0ec1e8106af0ac4ad2e23869:-540519425,fa19c35a43c1e810da7e958a75b5fa93:-1207715622,f1b88b1affc1e8101b6d56d65290b559:-114175867,6578071a49c1e81097b65b47b8ce9706:1667215688,6d28c31aa2c1e810ce964f5941a1affe:-968748541,5ea3b345118de450db7d209ed3e71e16:-1863409357,d08968300745a450541d9057a582bf7e:-986019383,0d266cfc1ac52010fb87a82f0dc97933:-1054464875,aa1188524cf0ec103fc03a0aa5ac7192:81458503,c452e382af70ec101bf287a68aea70f5:1211632348,928c9335adb4ac10a77d07c79b12acf4:1436260390,ce42068eb468e010bb0bad915ea3a4d4:-1054464875,b8683c0ea8a4e010f199f4d99f041f89:1040250668,8eb27c15731c20109cd553488e14532f:-1054464875,f33667c99218201031e59e3dbc53dba8:-1054464875,efad328df2542010bce823b1ae544bab:-1054464875,73201c410244a010827fd12a779dc86e:390999165,110af743f5ebd010783a340b4eee099c:1615450128,f4e9774308ebd0101f19e05f88dd1aea:-55193110,c396455af0a35410403c2e9c031460c9:159626126,1fda6c5678635410908f71df9182accf:2077034678,d580145adfef14103fada645d8d5c98b:1478282092,4cade58a272b14101a60f8f48f5bc39b:-1516576566,79cce90a222b141025bb43e613375573:1096647466,9c6c610ae62b14106bf7fbc5b7e61357:-1657422486,bd03910e34a71410d303108e9bfa0362:990805514,220bb4029da7141013fa9d645dda74a9:-341175455,df99b40283a7141015bc08b3ea74e8f8:-1887119476,98e87002a1a71410390e291a8076e0b8:-410785364,e66838cefd671410d4cf9db37fbd609f:-43289332,ced774ce92671410fe5440ab1946630a:-1461163284,f44decc6ae671410bfb6c6de8aa196b7:-1695202548,9ffcecc6e267141014eb279ed19a5814:2017645612,d267acc29c6714107df5a2de765bd0ea:1770329126,f1c6acc2de671410174fd5512fd26029:-285526534,f02418c234271410de7c7af842b337b1:-1402907686,1e7cb339d563141018bbca05e22898a9:-1284750144,9118defdffa7501059a36537fefdaa8f:-424760782,2d090c7575a7d0106bac4e88293c534b:-1141139908,aa77c4b56fa7d01039cace5329e84c8c:1450168327,50a348b17ca7d010d2162e4dee2472d4:-106181883,34310c317fa7d010b941011e4140db56:-1636819003,51a7632d5427d0106713e5e2b3176cdd:1220473605,4c422be54c27d010acb470d6ffc280be:-1429741654,08e8d3ade9e3d010e83434ce05be7bec:1220473605,1ca893ad30e3d010ea80d477ad5e1a1f:664171045,86d6972db8e3d010fc1dccc340cdbdf9:1220473605,caa1dbedd0a3d010c35d9017eedb39e3:664171045,5667f2a9aa63d0101ec5328f8be6b765:1220473605,7ecd429d1ca350101e4041262add452c:-1563515663,7173c2d5d3a350107bf7c06cbe2be138:-1437992680,e2801d999e2b101044028a66b369a64f:-419423868,4e56e618bae758502e7b19c0367c7859:131909381,f063aed0102b585097f315598e51faa0:-182210953,409f79d8e1a758505bbc4920e0fe9397:1907329001,7a5d44b38ad7d450af2aab2a06f1e428:1754205599,503d7879e4571410c56a76b3f2b8aba9:-1285364283,6fe329c530975010ac15b48cb50a6ba7:-156267737,6fe329c530975010ac15b48cb50a6ba7:-156267737,15406945ed975010df709290a1e10504:-1842291954,6a7f1145b8975010345d62f0878c1550:-156267737,8c7e95818d975010910c2cbac0408366:-1578370313,ce461430a3df1c1027f986f41d4fec49:1059591195,682650300bdf1c10ebdac4480b54a2ab:2127680379,7aa373a07b5f1c10ed5d44a9c7775efa:892862757,35963520aa1b1c10754e24446f6d9dc3:1389824356,a26d696819d71c10bfccf53434dc9972:-1818589708,1a8ce52840d71c1019bc23ed04a6b348:-1290059,c08b69e458d71c10ae9003f98d82c0bb:-162070324,293a25e460d71c109df933dbbc20b79f:-176911499,6659a1647ed71c10f201463400cc1c40:-682037236,941521242ad71c1079197dafb4739194:893554391,70e3e5a013d71c103a06693ce93c8fb7:501093402,1cc2e5a0a0d71c104705306cda9a75a6:169462570,edb95c6437d31c105d5174b3732a4f3e:-1987963846,1d69982465d31c10729f72a3bc04d08f:956922091,1597982448d31c10b3a484525709b789:-1228875229,af2a4b10321f101064960875d8c15ae4:1543546404,cb4b1a8c545394d0a9c143a0ec840ac4:-1997108955,08bb45ffbecf14d00eac7d627be23cf8:1542626462,85e64dfbc0cf14d08efe98e2f04d1769:-939698524,0f7501fb8ecf14d0e92ec0616d300a3d:1730554308,927405bb40cf14d03be43f5cf741cd34:1253164152,8f01c5f7aecf14d0a60716296ececa97:-1307537833,74aeb4775bcf14d0ab77d48ac7ef8d87:-814162685,2849e43b128f14d0686f4f63bb882b72:-1304879588,b7d728f7838f14d072ee824934f62f0c:-1919529937,409424776a8f14d04542fe48964ecb7c:2040717836,d082e0f39e8f14d0e1139a6a4b1e2106:1166596144,32c436afd54b14d02a5f584888621b60:-939698524,55ef66abd74b14d0927a8850214cae04:828884106,81cda66b3d4b14d057837063dbac9437:-1193165360,bbcbaee7f34b14d032b4c2a017e80c8f:-797765290,ba176e23a34b14d06937a73e3b287662:1855970005,a8185e6b9a0b14d06d6c6dcca1565cc4:1432230451,8347d26b750b14d0ffe8e2fc852a9601:-1177732035,ae45d6e7fe0b14d032387caab8a9c1e7:506188180,574906af3ac714d00ae3e490e7a72a9b:600189882,72b50e6ba3c714d0a5f3bebb75a35f89:111868821,36714aa74ec714d051211abc485dbd81:-455019881,85fbb9ef1c8714d08da8be5e63210891:1801941744,2cc7fd2fa68714d07c6d8b731cf6de46:-1158183517,b3d5b92f768714d092c698ac77ba5110:548831125,6cc375ab608714d07632216e6d3fcd7e:1213772012,e34231abba8714d05ac947e04e49491e:-1849435034,4aa03d2b748714d07a9727fcee94e6de:-1623852957,c10f69e71c8714d02c67be097b5c18a2:1315172489,635955a7344714d03ea516ae899052dd:1032076,cb67a0239fc314d0da924ac758344553:-534418883,cff4e2ddffbad090f23ba249f90b0406:1032076,92f3a61df9bad090d2b458092b174cdb:1030026200,6c0066d9b3bad09099eb9de3b78f531c:1032076,447b0ed9c77ad090feffb27e5ccce497:-646180332,ced7507407721090ba5354f095e7fdfc:1032076,90471c7045321090aabef76e55002443:890772602,726ff36c7bb69c50c54fe7a5c8cddb6a:791098952,352f7f2463b69c50f31505b3a8e9ddb7:-663059362,7938ef205cfa5c5020ccb2ab2c8504ba:1310420952,f5ed536ce57a5c503784b2ce79dac9f1:-738625132,0b7bdfa8bd7a5c5037a568bee581ba3d:1752835752,b424052cb6f25c50c50be9f71eb4f040:916064478,6272c1a040f25c5004b5dd9fd8caa65e:1752835752,c630328c947ed850051c283f26eb07b3:-663059362,fefe3d4c9ebad8508859c9bb65b3dd2d:1991454014,daa1085be72a18500e221c8d649fa07d:892773124,4d5b6f8b3ce61850c90f4b6db5824615:2112763808,b5075b0b14a61850d1f05761ed54e80b:-51532318,0ebec30b0ba61850524a930d8060be6a:375975200,de7e86cfe4e21850e8cf0dd4d9fb02e2:1433662399,78102d8f28221850b586d642e242b301:161289538,1fb462b2606ad450dc55f2d7b16418c7:995294380,ebe5c27eaae6d4504bab5180ab9b883f:1242783893,596aadba51a6d450d0fa58e9a4826f06:-984038265,b808297acaa6d450628e946954c0de86:-1529208654,08e465f671a6d4503e837cfd4c3ea7fe:616294025,b21445761826d450d2dcac6a125f4ff0:2026175691,444957cb85ae945057e4a5007ecf0043:1028010160,4e078d7dbdaa905028d7884b3598056f:-814407442,a520591d092290501ea490705bfef6bb:766539142,5df7f89962ee5050c15d73e4707a44ff:-1229850328,1b6571a922a2905043164005248ef221:-1253669063,e6b17701782e5050d4c6d7ce1b2d108f:-1051728509,fd7b280518a2505012998efeb2fa09c6:-288253643,d497627c8eaa105081587c12636b5c5a:1734891420,4b5c9e78ddaa105094bcf924cc2ee130:912534937,27d71ab453aa1050e721ff91b24948cc:-292752721,daceebe42ae21050a60ea8c5fd52195c:1734891420,e82f832446a210505fba885585e4ec8b:-1386638834,bcce0f60caa210504a0ffa6d8dd28754:1503845636,95668f2cf4621050d576c3bfe97d7ce8:-1386638834,d685cb6cf8621050f2d8ee903a91208d:663072604,58c343e8166210501121c91337b01476:-853603779,26fff92c5daedc1038dde426b5eb03ff:-1386638834,48d169a4fc6edc10df9a737dc9f6128a:-158595156,d1fe7420bd2edc1064bc06925ec5f969:1584855737,3c3befb93896d4106249b5e2ed8e2c86:-741850597,68a354f9251a941035e44fc33dc81c6a:-1551584823,134e7fe9a91e54108aa44c7abc4e5681:-1835444713,03a99ba988965410762e7e953e3bf63e:-268199531,fa429229a1d2541014b4c7264b12d767:-1495477754,48b0522935d25410707327ef6e701bf7:-268199531,8926e399701e1410cdd664a863273ff3:-1485096514,ae642b99a41e141015e77a00e8c5626b:1318098559,4a53e399541e141065309021cd19cac8:-1989721148,40206b95b71e141012eca7bcfc1c7a82:-294366339,f32d5f55a11e141053f664ef2c453f0f:-2114638538,8fbd0b1924da14101c07f9a9e09f696a:-73364520,90d1b9c1d05ed01018ad6ced4062ff37:-268199531,f4a8c485871ad010bd0ead4b5bea635b:441720674,19a04801391ad0102aa7a60adc06a10e:224858828,fbce67343bd6d010fee5b36d9e4dcc52:-1576432127,61f53a203d1a90101d35a85cb728848f:-488144902,1fbe5f18f5de5010769fc4f88b3cebe0:1819456939,51087a1cd45e5010e79423cfe7932803:-488144902,88f03e18fb5e50104d8d5355cf4c7ae4:-1852756497,58903e18fc5e5010904f1e68234c2268:-1303011546,f50f9ed82e1e5010e887039a42b701f3:-1994093654,2fdd9ed8661e5010359765f4499d4eca:-1701418367,b9d31e143d1e5010fab616c08d8c23eb:-396105221,31631a14661e5010390fe63d5a3a39ed:-1464357701,42c962404dde10101394c91f284be01c:1467463504,e8ada508d21e10101b02914b3e8dc530:-963868906,5f4a6d48e21e1010923cda7afb51b13d:-1767247513,8673e5408e1e10101d2e712de9c3d785:-491712662,6154fd980eb190101001742cd81a0787:-98669817,9914b9588cb190104b0f94dc4680a47f:449540957,677f6154a0b19010bff8f404b73d5162:-662216405,17eee15407b1901042b9731949546f01:1393608259,5a8bd9d879fd50104b5382e3e2d015cd:-471770069,e84bdd101cfd501087312573502cd7d1:2073574297,082ecdd883bd5010d7e098184e41071a:887478365,021d4118aebd5010b1bbb45ae6fb5044:-893898771,78264b06e9581410b0d2c65205a0df34:-1339647849,915959038f5b8010571f8e7c2e676e9c:-423693323,f5279d8f361b8010977413cad598cad8:436039412,ecb55f7605760410ecd111602103cd87:-2005500068,6db7a042affe4010139f3e61eaf2dbc8:951681904,038760826ffe401083721eee5e23354e:1625840687,9367608205fe401040d6d513a146ce48:-550121457,22be1ae18bbe001092480287ad573625:951681904,90ae1ea17fbe001095cd2e57c8c03570:-1612624555,42ea4a65627e001032ba4fd8d065dd44:-135863161,0eb5caa9a63e0010693d556e0ba0e5a1:468343573,dbaa9d321691001000d7ec80c3870b38:1893458377</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_page_a194ded4dbf32300bfa82a9a489619a9</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_page"&gt;&lt;sys_ui_page action="INSERT_OR_UPDATE"&gt;&lt;category&gt;general&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[var actSysId = '';
var appUUID = gel("app_id").value + "";
var act_var_JSON = "${JS:sysparm_actVarsArr}" + "";
var actionName = "${JS:sysparm_actName}";
var trigger_array = [];

new GlideModal().get("dialog_loading").destroy();

var $j = jQuery.noConflict();

function _set_values(arr_json) {
	
	var isDisabled = (arr_json.editables &amp;&amp; arr_json.editables.value) ? '' :'disabled';
	var data_type = arr_json.data_type + '';
	var val_type = arr_json.val_type + '';
	var type = arr_json.type + '';
	var placeHolder = (type == 'SECRET') ? 'placeholder="*******"' :'';
	var uuid_id = arr_json.uuid + '';
	var show_time = (val_type == 'DATE_TIME') ? true : false;

	var inputType = (arr_json.type == 'SECRET') ? 'password' : 'text';
	var multiple = (data_type == 'LIST' &amp;&amp; !(type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET')) ? 'multiple=""' : '';
	var input_return = '';var GWT_calm_format = {'DATE_TIME':'dd/MM/yyyy - HH:mm:ss','DATE':'dd/MM/yyyy','TIME':'HH:mm:ss'};
	
	if(data_type == 'LIST' || type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET' || (arr_json.options &amp;&amp; arr_json.options.choices &amp;&amp; arr_json.options.choices.length != 0)) {
		input_return = '&lt;select ' +placeHolder+ ' ' +isDisabled+ ' class="form-control select2-basic" style="height:auto;" id="'+uuid_id+'" '+multiple+'&gt;'+_option_handler(arr_json)+'&lt;/select&gt;';
	}
	else {
		if(val_type == 'DATE_TIME' || val_type == 'DATE')
			input_return = '&lt;span class="input-group"&gt;&lt;input type="text" id="'+uuid_id+'" class="form-control" style="background-color:white;" ReadOnly="true" value="'+_option_handler(arr_json)+'"/&gt;&lt;span class="input-group-btn"&gt;&lt;button class="btn btn-default" ' +isDisabled+ ' onclick="new GwtDateTimePicker(\''+uuid_id+'\', \''+GWT_calm_format[val_type]+'\', '+show_time+')"&gt;&lt;span class="icon-calendar icon"&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/span&gt;';
		else if(val_type == 'MULTILINE_STRING')
			input_return = '&lt;textarea ' +placeHolder+ ' ' +isDisabled+ ' class="form-control" id="'+uuid_id+'"&gt;'+_option_handler(arr_json)+'&lt;/textarea&gt;';
		else
			input_return = '&lt;input type="'+inputType+'" ' +placeHolder+ ' ' +isDisabled+ ' class="form-control" id="'+uuid_id+'" value="'+_option_handler(arr_json)+'"/&gt;';
	}

	return input_return;
}

function _option_handler(arr_json) {

	
	var options = '&lt;option value=""&gt;&lt;/option&gt;';
	if(arr_json.data_type == 'BASE' &amp;&amp; arr_json.options &amp;&amp; arr_json.options.choices &amp;&amp; arr_json.options.choices.length == 0) {
		/*if(arr_json.type == 'EXEC_LOCAL' || arr_json.type == 'HTTP_LOCAL' || arr_json.type == 'EXEC_SECRET' || arr_json.type == 'HTTP_SECRET') {
			_setRequestValues(arr_json);
		}
		else*/
			options = arr_json.value + '';
	}
	else {
		if(!(arr_json.type == 'EXEC_LOCAL' || arr_json.type == 'HTTP_LOCAL' || arr_json.type == 'EXEC_SECRET' || arr_json.type == 'HTTP_SECRET')) {
			for(var i = 0; i &lt; arr_json.options.choices.length; i++)
				options += '&lt;option value="' +arr_json.options.choices[i]+'"&gt;'+arr_json.options.choices[i]+'&lt;/option&gt;';
		}
	}

	return options;
}

function _setRequestValues() {
	
	//var label = ("label" in arr_json &amp;&amp; arr_json.label != '')? arr_json.label : arr_json.name;
	var loadingDialog = new GlideModal('variable_loader', true);
	loadingDialog.setTitle('Fetching dependent values...'); //Set the loading dialog title here...
	loadingDialog.renderWithContent('&lt;div class="loading-container"&gt;&lt;div class="loading-indicator icon-loading icon-lg"&gt;&lt;/div&gt;&lt;/div&gt;');
	
	var actJSON = _getCurrentValues(act_var_JSON);
	
	var gajax = new GlideAjax('Nutanix_ClientServerScriptBridge');
	gajax.addParam('sysparm_name', 'variableArrayParser');
	gajax.addParam('sysparm_type', 'apps');
	gajax.addParam('sysparm_parentUuid', appUUID + '');
	gajax.addParam('sysparm_varJson', actJSON);
	gajax.getXML(getVarResponse, null, actJSON);//, loadingDialog]);
	
}

function getVarResponse(response, arr_json) {//, loadingDialog) {
	
	var answer = response.responseXML.documentElement.getAttribute("answer");
	var parsedAnswer = JSON.parse(answer);
	var options = '';
	for(var i in parsedAnswer) {
		
		var data_type = parsedAnswer[i].data_type + "";
		var type = parsedAnswer[i].type + "";
		var uuid = parsedAnswer[i].uuid + "";
		
		if(type == "LOCAL") {
			
			$j("#"+uuid).val(parsedAnswer[i].value);
			
			if(data_type == "LIST" &amp;&amp; data_type == "LIST_SINGLE" ) {
				for(var j = 0; j &lt; parsedAnswer[i].options; j++)
					options += '&lt;option value="' +parsedAnswer[i].options[j]+'"&gt;'+parsedAnswer[i].options[j]+'&lt;/option&gt;';
				$j("#"+uuid).empty();
				$j("#"+uuid).append(options);
				$j("#"+uuid+" option[value='" + parsedAnswer[i].value + "']").attr("selected","selected");
			}
			
		}
		
		if(type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') {
			if(parsedAnswer[i].state == 'SUCCESS') {
				options = '&lt;option value=""&gt;&lt;/option&gt;';
				for(var j = 0; j &lt; parsedAnswer[i].value.length; j++)
					options += '&lt;option value="' +parsedAnswer[i].value[j]+'"&gt;'+parsedAnswer[i].value[j]+'&lt;/option&gt;';
				$j("#"+uuid).empty();
				$j("#"+uuid).append(options);
				$j("#"+uuid+" option[value='" + parsedAnswer[i].default_value + "']").attr("selected","selected");
			}
			else {
				var msg = '';
				for(var k = 0; k &lt; parsedAnswer[i].error.length; k++)
					msg += parsedAnswer[i].error[k];
				g_form.addErrorMessage("Failed fetching values for variable '"+parsedAnswer[i].name+"': "+msg);
			}
		}
	}
	
	new GlideModal().get('variable_loader').destroy();
}

function render_variables(answer){

	var parsed = JSON.parse(answer);
	var parsed_length = parsed.length;

	var containerString = '';
	
	var instance_type = (parsed[0].data_type) ? 'newer' : 'older';
	
	for (var i = 0; i &lt; parsed_length; i++) {
		
		if(instance_type == "newer") {
			if(!parsed[i].is_hidden) {
				var input_type = _set_values(parsed[i]);
			
				var description = (parsed[i].description) ? '&lt;div style="padding: 5px 1px; margin-bottom: 10px; background-color: #e8f0fa; color: #007eff; position: relative;"&gt;'+parsed[i].description+'&lt;/div&gt;' : '';
			
				var label = (parsed[i].label)? parsed[i].label : parsed[i].name;
			
				containerString = '&lt;div class="form-group"&gt;&lt;label style="margin-bottom: 7px;" class="control-label"&gt;&lt;strong&gt;'+label+'&lt;/strong&gt;&lt;/label&gt;'+description+input_type+'&lt;/div&gt;';
				$j(".bodyData").append(containerString);
				
				if(!(parsed[i].type == 'EXEC_LOCAL' || parsed[i].type == 'HTTP_LOCAL' || parsed[i].type == 'EXEC_SECRET' || parsed[i].type == 'HTTP_SECRET') &amp;&amp; parsed[i].value)
					$j("#"+parsed[i].uuid).val(parsed[i].value).trigger('change');
				if(parsed[i].data_type == 'LIST' &amp;&amp; parsed[i].options.type == 'PREDEFINED' &amp;&amp; parsed[i].value)
					$j("#"+parsed[i].uuid).val(parsed[i].value.split(',')).trigger('change');
				
				_createOnChangeTriggers(parsed[i]);
			}
		}
		else {
			var isDisabled =(parsed[i].editables &amp;&amp; parsed[i].editables.value) ? '' :'disabled';
			var inputType = (parsed[i].type == 'SECRET') ? 'password' : 'text';
			var placeHolder = (parsed[i].type == 'SECRET') ? 'placeholder="*******"' : '';
			var input_type = '&lt;input type="'+inputType+'" ' +placeHolder+ ' ' +isDisabled+ ' class="form-control" id="'+parsed[i].uuid+'" value="'+parsed[i].value+'"/&gt;';
			var label = (parsed[i].label)? parsed[i].label : parsed[i].name;
			containerString = '&lt;div class="form-group"&gt;&lt;label style="margin-bottom: 7px;" class="control-label"&gt;&lt;strong&gt;'+label+'&lt;/strong&gt;&lt;/label&gt;'+input_type+'&lt;/div&gt;';
			$j(".bodyData").append(containerString);
		}
	}
	
	$j('#runAct').mousedown(runAction);
	$j('#cancelAct').mousedown(cancelDialog);
	$j("input").click( function(){ $j(".error_body").html(''); } );
	$j('.select2-basic').select2({allowClear: true});
	
	_setRequestValues();
}

function _regexValid(actJSON) {

	var regex_validated = '';
	var var_name = (actJSON.label) ? actJSON.label + "" : actJSON.name + '';
	var field_val = $j("#"+actJSON.uuid).val() + '';
	var reg_exp_str = actJSON.regex.value;
	
	var msg_json = {
		"DATE_TIME": 'Please enter '+var_name+' in "DD/MM/YYYY - hh:mm:ss" format',
		"DATE": 'Please enter '+var_name+' in "DD/MM/YYYY" format',
		"TIME": 'Please enter '+var_name+' in "hh:mm:ss" format',
		"INT": 'Please enter a valid integer value for '+var_name
	};

	var msg = var_name+"'s value "+field_val+" doesn't match with specified regex '"+reg_exp_str+"'";
	
	if(actJSON.val_type == 'INT')
		field_val = parseInt(field_val);

	if(!actJSON.regex.should_validate &amp;&amp; (actJSON.val_type == 'DATE_TIME' || actJSON.val_type == 'DATE' || actJSON.val_type == 'TIME' || actJSON.val_type == 'INT')) {
		msg = msg_json[actJSON.val_type];
	}

	var reg_exp = new RegExp(reg_exp_str);
	if(reg_exp.test(field_val))
		regex_validated = true;
	else {
		regex_validated = false;
		var error_str = '&lt;div class="alert alert-danger" style="padding: 5px 16px; position: relative; margin: 5px 0px;"&gt;'+msg+'&lt;/div&gt;';
		$j(".error_body").append(error_str);
	}
	return regex_validated;
}

function runAction() {

	$j(".error_body").html('');
	var parsedActJSON = JSON.parse(act_var_JSON);
	var JSONlength = parsedActJSON.length;

	var regexValidationFlag = true;
	var isMandatoryFlag = true;

	var newJSON = [];

	for(var i = 0; i &lt; JSONlength ; i++) {

		if('regex' in parsedActJSON[i] &amp;&amp; !parsedActJSON[i].regex.should_validate &amp;&amp; (parsedActJSON.val_type == 'DATE_TIME' || parsedActJSON.val_type == 'DATE' || parsedActJSON.val_type == 'TIME' || parsedActJSON[i].val_type == 'INT') &amp;&amp; $j("#"+parsedActJSON[i].uuid).val()) {
			var regex_json = {
				"DATE_TIME": /^(((0[1-9]|[12][0-9]|3[01])([/])(0[13578]|10|12)([/])(\d{4}))|(([0][1-9]|[12][0-9]|30)([/])(0[469]|11)([/])(\d{4}))|((0[1-9]|1[0-9]|2[0-8])([/])(02)([/])(\d{4}))|((29)(\.|-|\/)(02)([/])([02468][048]00))|((29)([/])(02)([/])([13579][26]00))|((29)([/])(02)([/])([0-9][0-9][0][48]))|((29)([/])(02)([/])([0-9][0-9][2468][048]))|((29)([/])(02)([/])([0-9][0-9][13579][26])))(\s-\s)(?:[01]\d|2[0-3]):(?:[0-5]\d):(?:[0-5]\d)$/,
				"DATE":/^(((0[1-9]|[12][0-9]|3[01])([/])(0[13578]|10|12)([/])(\d{4}))|(([0][1-9]|[12][0-9]|30)([/])(0[469]|11)([/])(\d{4}))|((0[1-9]|1[0-9]|2[0-8])([/])(02)([/])(\d{4}))|((29)(\.|-|\/)(02)([/])([02468][048]00))|((29)([/])(02)([/])([13579][26]00))|((29)([/])(02)([/])([0-9][0-9][0][48]))|((29)([/])(02)([/])([0-9][0-9][2468][048]))|((29)([/])(02)([/])([0-9][0-9][13579][26])))$/,
				"TIME":/(?:[01]\d|2[0-3]):(?:[0-5]\d):(?:[0-5]\d)$/,
				"INT":/^(\d)*$/
	};
			parsedActJSON[i].regex.value = regex_json[parsedActJSON[i].val_type];
			parsedActJSON[i].value = $j("#"+parsedActJSON[i].uuid).val() + "";//changes done below
			if(!_regexValid(parsedActJSON[i])) {
				regexValidationFlag = false;
			}
		}
		
		if('regex' in parsedActJSON[i] &amp;&amp; parsedActJSON[i].regex.should_validate &amp;&amp; parsedActJSON[i].value) {
			if(!_regexValid(parsedActJSON[i])) {
				regexValidationFlag = false;
			}
		}
		
		var var_name = (parsedActJSON[i].label) ? parsedActJSON[i].label + "" : parsedActJSON[i].name + '';    //check the type
		//check Mandatory flag.
		if(parsedActJSON[i].is_mandatory) {
			if(!($j("#"+parsedActJSON[i].uuid).val())) {
				isMandatoryFlag = false;
				var msg =  "Variable '"+var_name+"' is marked as mandatory. Assign a value to it";
				var error_str = '&lt;div class="alert alert-danger" style="padding: 5px 16px; position: relative; margin: 5px 0px;"&gt;'+msg+'&lt;/div&gt;';
				//$j(".error_body").html('');
				$j(".error_body").append(error_str);
			}
		}
		
		if(parsedActJSON[i].is_hidden) {
			newJSON[i] = {"name":parsedActJSON[i].name,"value":parsedActJSON[i].value};
			continue;
		}
		
		if(parsedActJSON[i].type=='LOCAL' || parsedActJSON[i].type == 'EXEC_LOCAL' || parsedActJSON[i].type == 'HTTP_LOCAL' || parsedActJSON[i].type == 'EXEC_SECRET' || parsedActJSON[i].type == 'HTTP_SECRET') {
			
			if($j("#"+parsedActJSON[i].uuid).val())
				newJSON[i] = {"name":parsedActJSON[i].name,"value":$j("#"+parsedActJSON[i].uuid).val().toString()};
			else
				newJSON[i] = {"name":parsedActJSON[i].name,"value":""};
			
		}
		else {
			if($j("#"+parsedActJSON[i].uuid).val())
				newJSON[i] = {"name":parsedActJSON[i].name,"value":$j("#"+parsedActJSON[i].uuid).val().toString()};
			else
				newJSON[i] = {"name":parsedActJSON[i].name};
		}
	}

	if(regexValidationFlag &amp;&amp; isMandatoryFlag)
		callRunActions(JSON.stringify(newJSON));
}

function cancelDialog() {
	GlideModal.get().destroy();
}

function callRunActions(modVarString) {
	
	$j('#runAct').prop("disabled", true);
	$j('#cancelAct').prop("disabled", true);
	
	var gajax = new GlideAjax('Run_App_Actions');
	gajax.addParam('sysparm_name', 'runAction');
	gajax.addParam('sysparm_actionsysid', actSysId);
	gajax.addParam('sysparm_actionVars', modVarString);
	gajax.getXML(getResponse);

	function getResponse(response) {
		var answer = response.responseXML.documentElement.getAttribute("answer");
		GlideModal.get().destroy();
		g_form.addInfoMessage(answer);
	}
}

function submitActionVars() {
	actSysId = "${JS:sysparm_sysId}";
	var patt = new RegExp(/[0-9a-f]{32}/);
	if(!patt.test(actSysId)){
		return;
	}
	act_var_JSON = _appendDefaultValue(act_var_JSON);
	render_variables(act_var_JSON);
}

function _appendDefaultValue(act_json) {
	
	var actJSON = JSON.parse(act_json);
	for(var i = 0; i &lt; actJSON.length; i++) {
		actJSON[i].def_val = actJSON[i].value + "";
		_createTriggerArray(actJSON[i]);
	}
	
	return JSON.stringify(actJSON);
}

function _createTriggerArray(act_json) {
	
	var macroArray = getMacros(JSON.stringify(act_json));
	for(var i = 0; i &lt; macroArray.length; i++)
		if(trigger_array.indexOf(macroArray[i] + "") == -1)
			trigger_array.push(macroArray[i]);
}

function _createOnChangeTriggers(act_json) {
	
	var var_name = act_json.name + "";
	if(trigger_array.indexOf(var_name) != -1) {
		$j("#"+act_json.uuid).change(function() {
			_setRequestValues();
		});
	}
}

function getMacros(macro_string) {

	var split_macros = macro_string.split("@@{");
    var macro_array = [];
    for (var i = 0; i &lt; split_macros.length; i++) {
		if (split_macros[i].indexOf("}@@") != -1)
			macro_array.push(split_macros[i].split("}@@")[0] + "");
	}
	return macro_array;
}

function _getCurrentValues(actJSON) {
	
	var act_json = JSON.parse(actJSON);
	for(var i = 0; i &lt; act_json.length; i++) {
		if(act_json[i].data_type + "" == "LIST" &amp;&amp; act_json[i].type + "" == "LOCAL")
			act_json[i].value = $j("#"+act_json[i].uuid).val().toString();
		else
			act_json[i].value = $j("#"+act_json[i].uuid).val() + "";
	}
	
	return JSON.stringify(act_json);
}]]&gt;&lt;/client_script&gt;&lt;description&gt;This is used to set runtime action variables&lt;/description&gt;&lt;direct&gt;false&lt;/direct&gt;&lt;endpoint&gt;x_nuta2_nutanix_ca_Set_Runtime_Action_Variables.do&lt;/endpoint&gt;&lt;html&gt;&lt;![CDATA[&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null"&gt;
	
	&lt;j:set var="jvar_element_id" value="${JS:sysparm_sysId}"/&gt;
	&lt;g:evaluate var="jvar_not" object="true"&gt;
		var appUtil= new Nutanix_Calm_Utils();
		var not = new GlideRecordSecure(appUtil.configuration.table.NutanixCalmAction);
		if (not.get('${jvar_element_id}'))
		{
		var app_id = not.parent_uuid + '';
		app_id;
		}
	&lt;/g:evaluate&gt;
	
	&lt;input type="hidden" name="app_id" id="app_id" value="${JS:app_id}"/&gt;
	
	&lt;body&gt;
		&lt;script&gt;
			addLoadEvent( function() {
			submitActionVars();
			});
		&lt;/script&gt;
	&lt;/body&gt;
	 &lt;!--style="height: 450px; overflow-y: auto; overflow-x: hidden;"--&gt;
	&lt;div class="error_body"&gt;&lt;/div&gt;
	&lt;div class="bodyData"&gt;&lt;/div&gt;
	&lt;div class="modal-footer"&gt;&lt;div class="row"&gt;&lt;div class="col-sm-9 pull-right"&gt;&lt;button class="btn btn-primary" id="runAct"&gt;Run&lt;/button&gt;&lt;button class="btn btn-default" id="cancelAct"&gt;Cancel&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/j:jelly&gt;]]&gt;&lt;/html&gt;&lt;name&gt;Set_Runtime_Action_Variables&lt;/name&gt;&lt;processing_script/&gt;&lt;sys_class_name&gt;sys_ui_page&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-02-19 10:11:58&lt;/sys_created_on&gt;&lt;sys_id&gt;a194ded4dbf32300bfa82a9a489619a9&lt;/sys_id&gt;&lt;sys_mod_count&gt;748&lt;/sys_mod_count&gt;&lt;sys_name&gt;Set_Runtime_Action_Variables&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_page_a194ded4dbf32300bfa82a9a489619a9&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-16 15:47:16&lt;/sys_updated_on&gt;&lt;/sys_ui_page&gt;&lt;/record_update&gt;</payload>
<payload_hash>1123663727</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>495887e5dbcc7c103e3c6a5b8a961958</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98efb0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Set_Runtime_Action_Variables</target_name>
<type>UI Page</type>
<update_domain>global</update_domain>
<update_guid>a07fd03d03a3201081cd650ec0e006ce</update_guid>
<update_guid_history>a07fd03d03a3201081cd650ec0e006ce:1123663727,250bd03d85a320108bc5051145515632:616026191,574ad0f946a32010d20fb48197c9c611:248628289,ae2614f165a3201021967b5c7a8eb37e:1188447003,d595d4fdb2632010f3b94b9bddcf533a:-1574756605,b3ff80fdda6320102a2455c24d303c26:-1239412811,c18f44fdd16320106ec50bb709b13074:-2006185194,940f80fd2c632010b419276ec8a74983:-219733470,e36e08bd786320104a5264be4a0e528d:1260607515,164ec83daf632010aa170ecb47591129:-232936389,63fd08bdbb632010e3e9fc4d654d7793:1249461790,861dc4b93a6320103813f950b7680b8c:-1153869370,dce90cb91a6320100f986f76bd8c75d1:2090342483,22970839ed63201027ec3a025526f480:1903245156,1845c4b53b63201060694ef66c134dd7:-1309495257,5405c4b514632010f82a4268890ccac9:1260821418,4ea404f54663201009e982f452722188:-1702298815,b37304f5786320106cd9e21c23fdd683:-1876604054,902a9b6508676810916ec78bb24d827a:1083061733,a52e298f14056c10339a1b9d0a1c5b9f:403945387,2992a187f3056c10cb780d71df6b6612:-2065099990,0402e9c313056c10d9ec0bcf820f94f4:-354272118,5350a983b5056c100fd96c1567e71c44:47785050,de40a9c395056c10c588323df80cfefe:-1592890453,d9ee99c30a056c10b68a7c6e66294ce5:2144731468,7cdd198351056c10c0f579dc05e416da:1743613362,f4a6dd0f08c16c10df4a00f617fd6dec:403915009,bfc4dd0f77c16c10a107ac76b73fd69e:1216348254,b392518bc5c16c103fe0be0c67fd1d92:860097541,5c02118b2dc16c10365ca9f3b9e6b0fb:-1539915966,b821954b86c16c106110c72aea1091d8:-433803564,83461ac255496810213ce43a59babe92:-752990274,d5635e0673496810d7d2df57bdbb19c7:508621379,8f51b48a83c1681067f04555d27eaf1f:1675612259,856ddcac3a4d24107139f257d485bd56:-770250637,2dec10209b8d2410f668d500e0f94f11:-680095149,58705877afd7d450018618c43c547683:-1307812227,8f5ae7968a909410f8713e0ca00ba412:-1086252961,a379c786265814108b64c7058557212a:-76745528,d00f97c9c46ac010cb4fc262080824a9:1567701017,5cad9bc9f66ac0100d5f7ddc1251e823:870260075,11b61f458d6ac0100878914403d0e261:474619901,644298bb9d4e44508b0c00b9044ab32f:1882734485,592258bf104e44506735d5659d352585:2037802597,e70258bf974e4450a95253cd960d8c81:-1711164768,49d1dcbb9c4e4450851c8c47252f3173:397244833,0dac0cbbd54e44509ff85033ac77ae00:40967235,fc5c88bb134e44502ac945426b26d827:2049187176,612c40bb584e445054170ddc4ad890f5:227395272,8ba00c334a4e4450b6ae84ac9819febf:1882734485,5e5088b36b4e44503252e41639127120:-1478066024,de3000b3414e4450d17096b93d9d2448:974873665,9cffb3a3f04e445091cc985fe5eaa576:879107105,f7afbf63c54e44508fe7ed8636820bf7:293580292,b97f37afe90e4450b429a9e7a2ccf64e:339092706,02cd37af650e4450dbe9bfccfa2959bd:1064105045,49ad7b23b24e4450fbe6a5ff2bf6b81a:1475053739,c27db7af9f0e4450583f99257d007761:409632442,2ebcbbaf950e44509198922035dbebc8:2060383825,3f3cf3af6c0e445009101950647f98f0:511892706,b889b3eb9d0e445080409f5e74a170ab:-2085717846,8249f36f3f0e4450a9a200dad1f39cd9:754199306,2ec73f6b930e44506b36b174a3e5776c:-296152440,3c6603569e4680509ceea8330f5ce7d0:-1303824326,b68c769e670680501b135c2a072cb088:-1404244740,f5f636da100680501a01428478703126:-225891139,6446b69ad306805026b7ae1ba30fc045:649617823,e4b57a1a110680502d721331c9943cec:-1878733827,b5a087ca601500108384f6484e145182:1241431165,361d36a370b48c505cc5c8526b0fc0d9:1602466371,8b2c5b44034333006aa39813540baae1:-642618723,c8f993ccb1033300c9a621d435a99521:989077919,1ec997cc140333009d35747aa57f94f0:-1694885492,6f999b4cd50333002402fb9f9fb3537a:378940853,397997cc0b0333005677fa22ca6edbec:-1967327489,2149d700e8433300e8a187e4d3cb6af9:1819599223,f4b797ccf503330048bc0317a7e44f43:-1399921793,ab97d70043433300934cd84e5a4c39c3:-1357709886,3dd5938c7f0333003e3067f63807117d:-1425669816,24251b8c2c03330088f10ba5d5c1a1fb:1579843794,2fa41b8c3103330024143ea06bb2c0f7:-414302901,43149f4c3403330094cb9b40002a3910:-1565470256,2a045b4cf50333006b5aa1473521ca9e:192052929,f053d70c6d0333002a3fa42cb5848acd:-235475149,7b51d70c000333002ac6413328cd8f36:-500118329,c2419308050333004172afa44a79fb2d:1450647623,2dd0530c4d033300c9a31683fe30fcff:1696409052,a8a01b40b503330050bc23aec3975188:-963446740,016c8bc051033300a2da7482d2566593:709000318,828b03483c0333002e512a2533da8fe2:-872908852,26d90308fe0333005d87acc94c119dff:608796133,321ffaf7f4f23300412b994ad9d96a49:-522208113,25ee3637f0f23300392baa153c4401f4:684867771,1cae363763f233002b229c990db8e7ee:-373338132,51ad72f734f23300e09ea744b4982cc2:454454012,a6183aff0eb233005dc374018014896e:-577613481,3297f6335df233004704926dc8a630b5:-364703388,2d77baff7bb23300404ea7d6853d0a36:-577613481,5396fa33c2f23300389be0fb5ab7cc7c:-1244715529,9756faff33b233005eccb8a73c1f7a5f:-577613481,1c36faffbb72330039a9d2ba77676567:1939810007,82d476fffab2330059c88643ff9a1f4b:-577613481,469476f742b23300ff3b0c2b43afb3df:1939810007,1754b6f7a4b23300b5315477e03749ae:1251993762,a757eaff2a7233003a66955134d2ca5a:-1203185886,da9666f724b233008d60f4e71b8e3bda:1383250344,d74982b7c172330022d476035ed66b08:-1545269780,b7984277bd723300de80040e0f74a055:-1208785812,557706f36372330099554a4cfc5dee15:-906146899,e6a6827384723300a0f3158951f13a54:-1879008750,2674ceffd93233000a01dfcf3ef23998:-330286602,242db97fe5323300be97c80b5559fb4f:-557494401,65ccf5f7a0323300dc9fb4c00597308c:-1976248712,7f5c3d3b153233002073b1af91887a95:1413906357,43e731736e323300929b62bf589d0b4d:-1031626952,c149a7bafdf23300119560b0b05e380d:406539883,ec09a7ba34f233003395322797ba4a08:-708996302,ff886f7ad2f2330089f97e8a390c4e31:1890926717,cd68af7a3cf233003d59be753b939aef:-663864003,bdf76b7a94f23300755600e8a6cc0834:-36923324,8cf623f68bf23300bc60eac860a73f88:-1620695125,dcc6a73a15f233000ea47bebec03da8e:82325339,9c56a33a81f23300dfa5208cb4242860:1121604059,8406a33ac3f23300b3314c5b982a3d2e:-1382741734,34a5e7f600f23300aa3fbaf79aef8ef4:-1241480414,fd5527b673f23300b9cc3c05bf901c87:-730711104,2805a33692f23300e0394b20d69ccad0:1401856918,b8546bb698f2330062761ff3f2f447b5:-1379869852,50f3e3b692f23300bff7dcc99055bca1:1349205648,8fa3af769ff23300cea9a32661647756:-1654770810,1963af76c0f23300569468353afb130e:424779657,2413af7654f23300edd919573c684c08:76863781,5f926b72a1f2330096b745bad7cfeefd:-1667114072,bbd067720ff23300a82acd2d86bd4975:-171547495,631e13323bf233001dd1124d1943ef8c:-52806283,0b0e133241f23300bfecc93a502dbf88:-1918247472,300d5772cef23300fc39fef4284be454:1697388636,adbcd77246f233005abf17060105b1af:2120032131,f95c9f3e1ab23300944f2d4bb72cea1a:-680775101,c82c5bba05b23300307d888b7bd139ec:-1903528021,753b5f3e22b23300754d615c925c06e9:-629749380,db4a5f3e8db2330089f656e847d77fd3:-1852973254,6dd75f3e7eb23300ed675adaaa75ec7c:1855056138,06755f3e2eb233000fd22a379d5216cf:-732317910,63d45f3e5fb233001c7bacc5f975b377:1246652877,03121fbad1b2330080a1a8f94611103b:-380674112,fb219b3a17b2330084bba4dec8bca264:-1013087197,8d015bba48b233008620863c2bd774e2:-1993366717,0cf053bad1b233007c87274f2d916f6f:626976370,6600573afbb233009fcabb40a03c59db:-209424150,594dc73acfb2330055d73b6d2630f83e:-845232481,7e1d4fb6edb23300955e49673bc0d7be:1142812545,618cc7b657b2330056517686a9d5468b:1812383344,4b1c83f690b23300605aa9c3b5584742:1774398713,091bc7b6ebb233005c8edda5d7290d86:-1071309476,c2d9c3765eb23300f490b20c0b317715:-1946967050,5d090b7659b2330037aa452ada10c3e4:1333411203,b385437a78723300b39669db73ec0e97:784897892,f558cce16a0e8050b98b1233e3c938fa:-954062019,b648cce1510e8050d3d465b068b9c1f6:-447242880,f81804e1490e805033c67b59c2d491b1:-58678797,a6e7c8e1280e8050d330ca658ed5ec03:-1293035031,058788e1a30e80507773618df9ddb5ff:-378177717,5d6784e17b0e805004166e890864dbeb:-358103745,f5270021d50e80505a55ff7d1449aad3:1178739733,b6e644a19f0e8050ba5858d5e53336c5:-1027181815,8a95c861170e8050b3608955c62f9edf:812288579,ad358c21d10e80507f6e7c18ed69b217:905493204,fb048c21080e8050014010fb344b7c13:1678002665,bcb34c21a00e805036a8a5889d890977:-344294191,e303c0edabca8050511b4bddad48fef3:-197206446,a7c208ad7aca8050352bbb6037df91d0:643070287,e19200219c0e8050c01327f17dbc25e4:-833960326,a6a140edbeca805072629858eede944c:-1580492761,00a108adb8ca80503433e782546b5cad:1777036871,df6144ad37ca805065348b5a9ac6ac47:1464339599,9031486dacca8050a5924590a51116fe:56842642,498044ad22ca8050fd3b8f0e90fecc41:186129470,5040882dceca8050d3cb0b6bf1555507:-1459005794,f96f375d27ca80500f6f9556c283a266:-987648180,342f7b5dadca805024f58e3501b6674b:1325161877,daeeb71d63ca8050ab967a39e4887421:-493841423,20cebb1d38ca805038f18540dc7595b9:366803861,6e8e7b1dd9ca80505f46c6310111ceea:1569276578,957dbbd9c3ca8050fe57596e42df6647:-746566095,454dfbd9c7ca80503fc410d659339ddc:-1569564590,3bec33d964ca805095d1da48e351f808:961601640,c7ccfbd9a2ca80503535721a40eea2f1:-1953530536,0aacf399f0ca805059a3b429736f9263:-2085144889,36cb7799c3ca80501d6623fcf09dc7c7:-2126274407,591b3f11a8ca8050168bec6ca1165527:1525327737,90b9ff19f0ca8050a22adadfbc4f2011:96332251,d9e83b11b5ca80500f1b4efd12035021:-4612647,80e7b31958ca80504e6fa073e91d7324:-957350168,5ec773196bca805012eefe35f18503c0:1507768943,46b7f71112ca805049fb6ef845cdf71c:99572518,ce84b31114ca8050617e0dabe1e011c6:103586256,b662739d578a80507f004e6a79f0ec35:401272574,e022ff5d768a80504176fba76e6ebd77:-310233634,9f81fb5d188a8050122a0896dd3747dc:-1436217741,4511f75d3e8a8050875e17d220fc916e:1254818164,37c7aed956c6805007cd9ef98aff0564:-329505212,2e5726d91cc68050d7be37562f08cd47:185087556,91878d65c3b50810cbc284f08ca7837b:-920593812,01670565ceb508106c151aee3a502184:1117189177,2e35c9e1c1b50810b6bad810e7a695db:-920593812,91d9d7b8e93d841079521dae63e7ca85:1117189177,8e2097b04f3d84103db590ccbb0b74c8:-667898849,12347afcf5b9841021a87cb21b716937:2126545054,6af31c480b3504105195878ad78b1b75:237532144,78d35c48333504103613b4aa19d749a0:112194546,e3935c48823504104e7348b1dc84768b:-759398683,c983d848da350410a12a6c6e983be2fc:905323935,3e53d448e83504103ea33c4a3207aa73:-2056597852,ebb25808ef350410dc00aa00ca7644f4:1426733630,f3529cc4123504106330ea9b5ba01e91:-2060740088,d6f1dc84c7350410fd55b5d29974145f:-364780766,8bffc8444135041006724b5991070920:-1951354229,e9af0444cd350410c746a06a50702d0b:2038553984,894fc80454350410fb9384a894dd91a9:1393493757,0b9eccc0ef35041027f02c0820679f29:-881059191,ddbdc0c048350410155b32a5dbed79e0:-341121785,ab1a4400203504109f774f17fff45ab0:-352534557,41c9cc8c1ef10410cc7ee57334c348e2:-1296694171,a88844cca7f10410a00b8a68a950aa8d:473017559,575840cc74f10410dbc2cd64743618e9:892035477,52f7c88cd2f104102299c6734db924dc:-330853371,c067c08c9df1041054850c42d74907c2:41098134,cd278c4c53f1041000ab47d0bb36daa9:974424401,5cf6084c4ef10410be5ed78993f50708:-57958540,fb66080cd4f104101025fd84eca5bbe2:897381932,a2460c0c65f104100697acb763a1d9b8:563100189,a795440cc9f1041020544385487abb89:2079873578,c275800c3cf10410eb6efe74bc2cf541:-2080243412,f0f40c884cf1041093d5f74662648f06:543594752,84a44c88bff10410dc5945a5d1a3242e:359634028,055480889ff10410fa9a6e028b394e10:-498132804,e8344c88a8f10410cd3fc645806f7326:348005378,1293c448eef1041014aadb50747fe205:495431654,5cc2c44873f104108d292584bc4e1119:-787951132,30628448c2f1041061f9dc22329943fe:-1448368864,9a41c08441f1041060aae9dbd59bc23c:1017677370,aae008c41ff10410c00ea2a3cdaf0a4f:339099119,4ca008c416f104104b2905219d07da59:1844089665,607ff7b735e10410f9bbf814ecef3a75:-1568281047,4f5ef77706e104106bffc4aaf45daa92:496023723,19fdb7f3ace10410a4f8fa23db6abd5b:-1277810031,4b0df7772fe10410e970f47baf89a28e:1724313315,3abcb737b8e10410b425a1020d812144:-2105856714,656bb737f8e10410e63897e6f0c7d53f:-1430124363,fdea77b390e10410cf4b080082216601:1046385722,accabff32ee104100c19cc1f76a60921:1827029320,b96af7f3a9e1041063d594f8e78411d4:-278559760,365ab7f3c9e10410cdf07ddf4e20d6cf:187916045,3b27b333f5e1041066890274271d068b:-1742442765,f8c63b33fde10410c0d29b02cb461b8f:-27809099,6896f333d9e10410ff5bfabac81309df:-1569640180,14867bbf8ea104107ab7638b1e11e041:-27809099,cc6aebf78da104101511ebe5866517e4:-1569640180,fb4ae7f70da10410a304ebfe17d64cae:-27809099,071a6bf708a10410de0277e85eaf7e14:563791397,73f9e3f706a10410f9563f13fdefe129:106255100,c8f9a7f748a1041004f6b9817e7c2038:563791397,57d92bb717a104101eca61857b339c7d:1320756572,72c923f7d6a104107e9bc9e7a85560ca:-13303295,6ca92bb788a10410583daa3dc3ebd28a:197958277,f789a3f78aa104104e2dde750fc08114:877243918,1f792bb7a0a104109b6cefadd28ea485:197958277,8e696f7779a1041096b579b92a83c684:-1823879834,41e86f77e6a1041069756825dbde412d:375374797,b5b82377f4a10410b0c3f1fe0932d23f:-449534250,287823b762a10410e3df53d16c772d36:197958277,19c76f779ea104109e1054f59445dd25:134681022,93c6e7b399a10410f7040b0b464635b1:197958277,72c52b734ba10410208d017e825d8385:-445417188,9da0737c2833230036e1d81bd856b48e:1375503952,bd00ff3ca9332300dd6dbcf2910d5b73:-1721719408,59b66f303a3323008b7061413a028e33:193178002,6be56f30213323008f8f7277c288f23f:1680891916,c6b83f20b2736300b13026a3d761a3fc:463406962,5d18b720b7736300d604b04ca90d2f46:-997009229,4cd737ec9e33630090a3ab825cb562ae:-1141162174,2a5773ac18336300ab5b561c6dbfccf6:654597334,36f6bbec07336300bb7873549e2c5385:-1033209269,617637ec33336300fa220c7f0a3bcdf1:-1934576482,ed6673ac2b3363008641d432078b95ae:-1518792861,d52633a853336300a78bd4c3cdb71713:631762940,87413e2c387f230046b7caa98de6f5e6:1124444302,c7ab226ce27f230014a5c15d10f72740:1714485439,559bae2c657f23001175c9c8b452afb2:558395676,cb6bae2c3d7f23005ac3af9306c20f5e:-535275524,1eda6ae85f7f230067fb6f16f02add27:-1283060494,a9ca6e2c7b7f2300a5e89663d2daae0a:1026210138,f5aaa6e87e7f23003cbfad04be1fb6a7:660110292,5a8a6ae8247f23007deefa1f27528f22:12831058,c0d966a8207f2300190b5593796ee5de:383812587,bde866a8fd7f2300124b1f4b062836d9:-1513913161,842c36e18f99c810cc4433064eaff9d4:197958277,00c14774ba5948100831416f1a09ad35:-409533623,63edb02eb340cc10e2081f06c698103f:-48498417,d4ce54eeb5cc8c103b5b5e55cb6c2ec9:-388685999,48cf7b8ed6408c10e63364c6139a77d3:1199186485,47e03786d0408c1004ca1db02b31f475:713807735,ee695e28dbc448103ac35fc075b3779a:-1951600805,912916687cc44810a6b3c1b5ffc628a0:-1525995799,5ae8d2a044c4481003c587899b9e4343:435670022,30b8daa0b5c448109077f6e3635bc59f:-26721964,016816a010c448104358309e011d8cc1:1331313798,7c585e2882c44810ae8fdda8a8871a46:-66868973,0347d2a03bc44810aee4d4be355f363d:1675885491,5917daa0b7c44810d1db3e330441cc20:1281920707,5d769aa008c448107347d0d8fdd2e6ea:1732846919,9a3092a0f9c448100e6f992556ba8ac3:1618613695,d020daa016c44810c2a2b4dd52875b17:1764491754,a2bf06a009c44810f23b4aa7d12db94b:-1754149324,85af42a0b0c44810e1f6fb068b805ffc:-260388011,1f02e0946e0408102b76e02cdbbfa985:-1951600805,be51a894e30408102d7da96a8c348c0c:-340141724,8cf0ac100304081047532462c20ae229:1959362833,cc80ecd0b804081035b27972ad4f50a3:-1149505100,c47fd4d4d8c008103917f458b53e7463:2019809218,16941c001d08c410b803219e1daa46ae:-242958134,4f3bfbff4537f700bd6149f0c1ca3b53:-877338921,75dabf7f5d37f70013bce3357a520592:-548837169,a179b7ff8937f700cebc655a284cda2e:-407797974,0029b7ffb637f70052cae164dc8df42a:709169418,a908bf7f2337f700cf58fbae00ed7cdc:1664898874,a14777fb8937f700793a5bcb27fa3d79:241956034,abe5f33f3937f7000faeb101323ed780:709169418,d02577bb9f37f700bfdb7a7948ea8871:1623881162,53843bfbc537f7008339a88fed6a1522:1470878093,e43477fbfa37f700a1c2ce21d229ffab:-1476860830,b114b3bb3b37f700c3ebf7e967362761:714842053,449333772e37f70074c1c1c471a21561:662770730,a55ceb37cf37f700c3187e43d762e94e:2024533605,2abbab373337f7003c2a55e7c31383dd:21920679,0c0b2fb33037f70031d349897aeec5c7:888188670,523a27f34a37f700df7103a574f10939:-1302172301,2cc92fb34c37f700bfaa30e99b6e24b0:-1533249872,73a9673b94f3f7001e01a55260a35eb8:-1856463199,303927b769f3f70060d09f9c0def2576:1147008575,5318a7339f37f70085b7ae444196497c:888555703,f0a59b672df7b700103f3b462bfd0161:-1872330969,e6a45b6775f7b70086ee7f1deabeb1a7:545278802,1c7293e3acf7b70037f9ec0fa577b875:1153790698,e5e113e33bf7b70008d7a27206a8e15d:1766704556,99a09fe375f7b7008deadeb758ae481f:1868125492,790093e3f9f7b7009d993b035b960d70:611479287,f2ef0f23edf7b700d2954521b6037f6b:819468469,9e2f03e3b5f7b700c346e15653235d2f:-955249549,ea1e47677237b700c10d68b161ec336c:-55970417,4f5c0f2377f7b70014227aae69928e61:-1979175264,3f3ccbeba9b7b7004ce5874157e696cd:46332288,a466072f34b7b700da95276899dc7dd2:705403949,c84012e3f037b7007e5205250e90fdf8:1572492815,5fdf8eafa3f3b700b52e4fd7e1d23e6d:-2074478980,73af8a633a37b7002ff23a6310b850c8:1665448375,7f0f8a635537b700d1cf402fdcf627c2:-2074478980,6e5e8e63d337b700e9945d8c8780ae17:797292122,801ec6632437b700481045ee5dd4b11e:-1854583945,d5950e6b37f3b700f609f453fad0299e:-636633413,3da4cae398f3b700354bf20a267fb259:746774464,f264422b27f3b70034f5b265679893aa:-1810214821,eb90866749f3b7007ecd1c921ca26a9d:-1618290537,52ce690a75b77300f4af597650ea9983:192036208,9b9aa5c26b7773008888a6c24caf3372:691127200,0d4ae1c2dc7773000dbfb74b575294f6:1577616275,ce1aed827e777300b4dab967e5949139:1832277997,4bc925c27b777300b89ddf484c59880d:1316573279,0d792d82dd7773002ff2af641e9e7035:1068661542,ac49658e3e3773007d0ae1b15efab78f:1205213344,4235831d81373300700d803ac78fd177:1835299060,8f56db1c4b777300e4dd1d356ff30dff:-1282099954,0836d35c8e777300840497f1813b302f:-1022170407,c8c5d3582a777300f210b3d491340e38:-1282099954,cd3d8318487773000ce8fd1692972522:1211926508,f54c07181c777300a7cf2afa9d479d04:1081867539,dc2c8318a6777300ac642e372a3c4551:-1003837045,159b0bd4a177730024034cc47aa9aa00:427943383,d93bc7d49e777300dbb57dcc105aadf9:-2131911693,5f1b87d471777300019e0a1b2ac801c1:-1426504759,60eac7140a7773007c1aca865b14de90:1458392983,b94a0b94bf7773006a9f3203d360ce18:-1679125810,5589c714c9777300aedde18c8bc0c3c1:2098040092,1d198f5c90377300c9bfc92a23fe478d:-461280934,f3f70f5cef3773002464654b1c756986:-698849249,c8840750ad77730094b022131c679d52:-34264545,32e2f28c593b33008f463df10eaf4b8c:-863877833,e5b13a4cae3b3300046b48d31d88e207:-1456143200,3c411e086733b300484d0c38e5f85498:40805511,63784e4ca6ff730022d07f194acbdaa4:-16741241,658288634b273300d40c217220811c5e:983978759,d23d5f9626a3370060a9e54339551fde:197576801,686cdb5a52a337000e75400b5ac76dd0:482611249,ffbecf9ee863370029c687393be10230:-403615600,0f9e03de3563370031929e20f55edf01:-1678373879,fb30c342a4e7f300a1f7c83b762cd28f:994362847,cad183b1ad6fb3006f56deb08fb5e668:1928454837,d27183b1556fb300111abcd65f3c1864:-1580226381,48314771ca6fb3006a4579d71227a35b:-1848872774,58f00b31066fb3003ac1655bd90cc03d:-746961462,838fbef9f32fb30085cf2e2dbdb8023e:1928454837,922bbef9d72fb30022584a0a55ca984b:586344055,b53af639262fb30013f0b0fcb7430f67:-2027864586,cee8faf9742fb3001fc81abfe3a87c4b:852856686,f257f6399c2fb300d5b16986c452f961:-647661788,01273679112fb300da15e6c665c38157:-2027864586,3186fe79bc2fb300ef8de1f090ab582b:-647661788,5c25be39ce2fb3000cf4bff796c5c6ca:-1113040668,6e843af1932fb300f6cdb5a9ebd32d41:347808409,c78fa6f1042fb300ef7cba1c7faf56e1:2003602746,d46fe271ef2fb30021bbc3d0ea921ad7:1580413789,208c2671152fb3007fa879d4fa80fe33:-247857789,947c2e71292fb3001c9229d3e46e0cfb:695494192,df2ca6716c2fb300ae438401f3d53a31:-884937487,db0aee710e2fb3009c1e809fad34ad70:-919837272,99d92e71ca2fb3003da9a742642c2ff5:2102225563,5759e631c62fb30016a646a67c97d5d8:-221403219,e929aafd41ebb3001cb7387e16a13429:-160425386,07e8e271202fb300828983c88521f3d3:-1731300810,23386a31fc2fb300d857d6eac19c0f5d:-850235672,14e76afd4bebb30054771c4c108158c4:-375873345,b7b7aafddeebb3009ef2673802a87e4e:481508015,5f972efd65ebb300eebfc78d567298c3:572772643,b4772afd90ebb300cf0154399174a0cb:152669692,b947aafd1debb3003f9ce434c20c4523:1348244020,c5b6aebdb1ebb3003c587e37b8b6d164:-1514100888,6676a63d88ebb3008fbf09cd6682d82e:329794869,48662afd2bebb300838c45855741d6c5:-1567227945,674522392aebb3003803ff0a345ab0e6:-2064848324,3e94a6bdf6ebb30017ffd90037c5ef8c:-205574235,73f3a63d95ebb300b37823bb7e652a4c:52481957,b23066b1aeabb300a3c855a04f8fcc9f:117885004,b49fda39bfebb300bac58304ee7c43fe:-1952297383,80cbd6b5daebb300ff75b7c3128384bc:-1232305339,785bd63943ebb300e050a603cec6eaaa:-842913862,1cc41ce95eeb7300a83eab09b76c6af0:-1318491620,3f93d8e502ab7300cf61bca164f9adc8:-1220549652,46e8cce15aeb73007b07ffa5c8534585:959406404,0ecdd3d15baf3300d0d956eea76041f3:796921284,e61eabc10f27330031a2216cbd1fe2cc:-1202737820,676c2f4947237300b1ad6e6210fb9e42:-1691215420,71dba30de2237300543c7e55b2c9e080:-819771242,37d86f4943237300f71f317345caa5e1:-1252431414,5677a3097423730078be8f10ff2b88cc:-1150017234,72462f4584237300baa7e2623deda9ff:-1879087022,34262705c8237300df42951e6f8e34a9:-1961575775,c2d56b85562373004dd20ddafe01eca2:844090661,e4b52f8583237300f48785bfd5b877f7:-2112808071,df556f4569237300d4ea37506d4a5345:1744410552,9954a345112373009d18f1bfec974aa0:2019516479,0921e741dd2373004d0b9497c0478a35:-1902986908,f10d5fc93def3300177ddf3b9d38eeeb:1057425570,4dbaeeafdc1f730099b2d78e2a07cde9:-1902986908,fc7adaef66db7300bfa44268a08c9caf:-883705965,a25f06ab0bdb73003e0b9cb6b161a850:838890152,fececa2bc5db7300df04f1ecfbdfb12b:1934189083,0d3c06e7d7db73003759896a49008b90:716038864,1f2b0227e1db7300ba0ecebf70a326ff:-366468750,9aca4aa7aadb730001b320fdd89b7c79:-726772720,a5e9c2678bdb730092b80dd60111f7bb:-2047554178,d1898a67cedb730081668244e1f2249c:-1868768272,72f8c267cadb7300df34015a718fbc5e:1207730397,c8f70227a0db7300cb76308ad45513f6:-841958194,68470aa379db7300f1aca8e50c9cd7e1:-664860215,5cc60aa34adb730063be9e89547869dd:-1205092516,b7d582e306db7300279037ab5a958d7a:-2075408425,13a4c6efc09b7300c48aa317b4b2f0b5:-1576513543,12bf756ffb9b7300492427e1498955df:1889932270,f18ff16fdb9b7300c0e4c0314974b7da:1737714277,da1fb56f2d9b7300c69bfc3c1e31ef61:-431785659,1ade796fa49b7300de07256ff0e803dc:1537093994,569ebdeb239b73008d7315609e6190c9:1253210264,596ef92f3b9b7300fa2f3eac1bf00301:552290695,deedbdebd79b73008a9ef8cc31f43cc4:1315580520,adadb1eb3c9b73003e9717bee35da557:2089873894,6e7c79ebbd9b73005a9e727d96f59077:263206927,b8fbf5ebba9b7300b585767848f32ece:-1260303185,c28bb1eb899b730091123be56d67a745:1826675659,ac7bbd6b069b73001f62889afa7dc162:-2141579810,d73a75ab029b730000f6b389d0eca625:-1030035866,32d9316bde9b73002f80872e10290d3e:-584726001,0aa9f52b3e9b7300acf50fabe3551e97:-1901786471,9994fd27809b73007c0fdd35e5455226:2077805833,7364b9e3309b73009b2d03ed9ac704f4:-664282180,f7dfa163989b7300aa4a0da2a947d6f0:-1864224255,d6661523a65b7300eba060f6b800ae38:-2015075071,33d3c59faf5f3300280c96874e328a4a:-1623672728,4ec3c9df615f3300d56c5b4f3a9b8d91:560563436,3593c9df535f33008982c835d08fe7bf:1193212662,7a838d93f59f3300c377da403e860742:1160092194,9f438d931b9f33008af93de01fa6893e:-1623672728,01418913c49f3300dca56e16551edfb4:-2128014319,f5ff74138b9f3300a5179a04c0c68dbf:-1038247868,659ff8df465f3300e66f18de68d5c68a:1813370528,f77e709f3f5f3300b0f5adf4ebec4afb:866771872,831db89f075f33007812aa09c2696047:997362668,07ccfcd7485f33001abf3fdf48fd126e:-85784363,564c789be85f3300611467432968629a:-1268832220,3cab385b8e5f3300f249d1dd66d5aad6:1401614423,8c99b09bec5f3300973ace3958776f7f:-1653278302</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_aeeb29a72ff12010152959ab2799b6af</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_policy"><sys_ui_policy action="INSERT_OR_UPDATE"><active>true</active><conditions table="x_nuta2_nutanix_ca_calm_plugin_configuration">calm_saas_and_servicenow=true^EQ<item endquery="false" field="calm_saas_and_servicenow" goto="false" newquery="false" operator="=" or="false" value="true"/><item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/></conditions><description/><global>true</global><inherit>false</inherit><isolate_script>true</isolate_script><model_id/><model_table/><on_load>true</on_load><order>300</order><reverse_if_false>true</reverse_if_false><run_scripts>true</run_scripts><script_false/><script_true/><set_values/><short_description>Calm SaaS compatibility test without MID server</short_description><sys_class_name>sys_ui_policy</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-01-25 08:01:27</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>aeeb29a72ff12010152959ab2799b6af</sys_id><sys_mod_count>9</sys_mod_count><sys_name>Calm SaaS compatibility test without MID server</sys_name><sys_overrides/><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_aeeb29a72ff12010152959ab2799b6af</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-17 17:12:40</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_type>0</ui_type><view/></sys_ui_policy></record_update>]]></payload>
<payload_hash>-1509551663</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>495887e5dbcc7c103e3c6a5b8a96195b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e200000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Calm SaaS compatibility test without MID server</target_name>
<type>UI Policy</type>
<update_domain>global</update_domain>
<update_guid>4f431ac831c7e0109c409a2e9537e4cd</update_guid>
<update_guid_history>4f431ac831c7e0109c409a2e9537e4cd:-1509551663,5c540b1758be6810533f242700e6eec2:-1621142193,f9444b9327be681088b1f6daefc4c9d1:1482577818,53b8f697253e68105885e8b70fde33ef:274595633,fd21029ff2b6281093767b99eb8c226a:-608627034,eba38a6389d66c50c8035cf84b51dd0a:-1543598170,32e05d3c14162c10c94247a67f0fa745:-1732474590,089d8db89e162c10c78b3229dc4b43ad:-1347147123,be5b0d382e162c10ee351a48a05182b7:1291498037,94ea0d3838162c101db615e83391e670:-975268738,fa1805f41d162c10c9951371f503ef72:28573556,72206ec8481aa81045d5505eaf45c7d1:298769311,b710e248875aa810998f4faa2231c58b:-344580995,b0cfda08215aa81008d9eaaf1518d4f3:-1555793723,79bf1e08fe5aa81082986969b00f31e9:-1504221365,a74de8896516e010c48c41bc89265a78:1563748121,499b8e88a21aa810707d35cd4d74c61e:830836893,07a5cfce2a86641078fba5b9a4285192:-919743955,970ca9a791f12010192d4d1d128d212d:-1691448515</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_credential</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="credential" table="x_nuta2_nutanix_ca_calm_plugin_configuration"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;Credential&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;credential&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value="Reference"&gt;reference&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;32&lt;/max_length&gt;&lt;name&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference display_value="" name="sys_alias"&gt;sys_alias&lt;/reference&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-01-16 10:03:12&lt;/sys_created_on&gt;&lt;sys_id&gt;a82bf2f61b1ecc50ac43877ddc4bcbdb&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;Credential&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_credential&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-15 11:20:56&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>1188881378</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4958cb25dbcc7c103e3c6a5b8a96199b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98dc50000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Plugin Configuration.Credential</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>cb9f265757ba6810b98f5c6b50f87eb2</update_guid>
<update_guid_history>cb9f265757ba6810b98f5c6b50f87eb2:1188881378,63ac7c6dce474c5057982e93ecc0ec74:950524759,23ca08d3485e0090e45e1928efbc7b75:364529271,16bb7a7a721ecc505bb4c5f1a0c539be:1569791490</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_scope_privilege_e6ac7cd01b0b64107f2a8515ec4bcbc1</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_scope_privilege"><sys_scope_privilege action="INSERT_OR_UPDATE"><operation>execute</operation><source_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</source_scope><status>allowed</status><sys_class_name>sys_scope_privilege</sys_class_name><sys_created_by>system</sys_created_by><sys_created_on>2021-03-18 05:32:39</sys_created_on><sys_id>e6ac7cd01b0b64107f2a8515ec4bcbc1</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CatalogItemJS.availableForUserCriteria</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_scope_privilege_e6ac7cd01b0b64107f2a8515ec4bcbc1</sys_update_name><sys_updated_by>system</sys_updated_by><sys_updated_on>2021-03-18 05:32:39</sys_updated_on><target_name>CatalogItemJS.availableForUserCriteria</target_name><target_scope display_value="Global">global</target_scope><target_type>scriptable</target_type></sys_scope_privilege></record_update>]]></payload>
<payload_hash>-1663711455</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4958cb25dbcc7c103e3c6a5b8a96199e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e520000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>CatalogItemJS.availableForUserCriteria</target_name>
<type>Cross scope privilege</type>
<update_domain>global</update_domain>
<update_guid>a2ac7cd0480b6410f458db754e8700c2</update_guid>
<update_guid_history>a2ac7cd0480b6410f458db754e8700c2:-1663711455</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_37c15d5f37896300fdfc097973990e1a</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Nutanix_ImportApplicationProfiles&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Nutanix_ImportApplicationProfiles&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Nutanix_ImportApplicationProfiles = Class.create();
Nutanix_ImportApplicationProfiles.prototype = {
    initialize: function() {
		this.appUtil = new Nutanix_Calm_Utils();	
		this.logger = new Nutanix_Calm_Logger();	
		this.dateFormat = gs.getProperty('glide.sys.date_format');
		this.timeFormat = gs.getProperty('glide.sys.time_format');
		
		this.order = 1;
    },
	
	_invalidateCatalogItem: function(CatSysId) {
		var grCat = new GlideRecord("x_nuta2_nutanix_ca_nutanix_runtime_configuration");
		grCat.addQuery("blueprint", CatSysId);
		grCat.query();
		while(grCat.next()) {
			grCat.state = "inactive";
			grCat.update();
			this.logger.debug("Nutanix_ImportApplicationProfiles.processApplicationProfiles Deactivated catalog item "+grCat.name+"Logic associated profile deleted");
		}
	},
	
	_checkVarNegativeSync: function(profileVarArray, profileSysId, catSysId) {
		
		var arr_var_current = {};
		var arr_var_updated = {};
		
		var grCatVar = new GlideRecord(this.appUtil.configuration.table.variablesProperties+'');
		grCatVar.addQuery('application_profile', profileSysId);
		grCatVar.addQuery('type', 'Profile');
		grCatVar.addQuery('catalog_item', catSysId);
		grCatVar.query();
		while(grCatVar.next())
			arr_var_current[grCatVar.uuid] = {"variable": grCatVar.variable + "", "var_name": grCatVar.variable.question_text + ""};
		
		for(var i in profileVarArray)
			arr_var_updated[profileVarArray[i].uuid] = {"var_name":(profileVarArray[i].label &amp;&amp; (profileVarArray[i].label).trim() != "" )?profileVarArray[i].label+'':profileVarArray[i].name+'', "var_value": profileVarArray[i].value + ""};
		
		for(var uuid in arr_var_current) {
			
			if(!(uuid in arr_var_updated) || (uuid in arr_var_updated &amp;&amp; (arr_var_current[uuid].var_name + "" != arr_var_updated[uuid].var_name + ""))) {
				
 				this._invalidateCatalogItem(catSysId);
				
				var fieldGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
				if (fieldGR.get(arr_var_current[uuid].variable + ""))
				{
					fieldGR.cat_item = "";
					fieldGR.update();
				}
				var grCatVarDel = new GlideRecord(this.appUtil.configuration.table.variablesProperties+'');
				grCatVarDel.addQuery('catalog_item', catSysId + "");
				grCatVarDel.addQuery('uuid', uuid + "");
				grCatVarDel.query();
				while(grCatVarDel.next())
					grCatVarDel.deleteRecord();
			}
		}
	},
	
	processApplicationProfiles: function(current){
		try{
			this.logger.debug("Inside Nutanix_ImportApplicationProfiles.processApplicationProfiles");
			var payload = this.appUtil.parse(current.payload);

			var catSysId = current.parameter+'';
			
			var activeProfiles = [];
			
			this._createContainer(catSysId);
			var substrate = this.appUtil.parse(current.substrate);
			var sub_type_rel = [];
			if(substrate){
				for(var l=0; l&lt;substrate.length ;l++){
					var sub_entity = substrate[l];
					sub_type_rel[l] = {
						"uuid" : sub_entity.uuid+"",
						"type" : (sub_entity.type+"").replace("_VM","")
					};
				}
			}
			for(var i=0; i&lt;payload.length; i++){
				this.logger.info("Retrieved Number of Application Profiles "+payload.length);
				var profile = payload[i];
				
				activeProfiles.push(profile.uuid+'');
				
				var profileGR = new GlideRecord(this.appUtil.configuration.table.applicationProfiles+''); 
				profileGR.addQuery('uuid', profile.uuid+'');
				profileGR.query();
				
				var profileSysId;
				
				if(profileGR.next()){
					profileSysId = profileGR.sys_id;
					
					profileGR.name = profile.name+'';
					profileGR.description = profile.description+'';
					profileGR.update();
					
				} 
				else {
					profileGR.initialize();
					profileGR.name = profile.name+'';
					profileGR.description = profile.description+'';
					profileGR.uuid = (profile.uuid)?profile.uuid+'':'';
					profileSysId = profileGR.insert();
				}
				
				this.logger.debug("Successful record insertion in App Profile Table. Record name:- "+profile.name);
				var variablesList = profile.variable_list;
				
				this._checkVarNegativeSync(variablesList, profileSysId, current.parameter);
				
				for(var j=0; j&lt;variablesList.length; j++){
					
					var field = variablesList[j];
					var fieldSysd = '';
					
					var fieldGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
					fieldGR.addQuery('description', field.uuid+'');
					fieldGR.addQuery('cat_item', current.parameter+'');
					fieldGR.query();
					
					var varType = this._returnVarType(field);
					if(fieldGR.next()){
						
						fieldGR.type = varType.type+''; //(field.type+'' == 'SECRET') ? 25 : 6;
						//fieldGR.variable_set = profileSysId;
						fieldGR.cat_item = current.parameter+'';
						fieldGR.active = true;
						fieldGR.question_text = (field.label &amp;&amp; (field.label).trim() != "" ) ? field.label+'':field.name+'';
 						fieldGR.name = field.name+'_'+profileSysId;
// 						fieldGR.name = field.name+'';
					//	fieldGR.default_value = (field.value)?field.value+'':'';
						fieldGR.tooltip = field.description+'';
						fieldGR.variable_width = 50;
						fieldGR.order = 11;
						//field.uuid;
						fieldGR.description = field.uuid;
						/*Advance Variables*/
						fieldGR.show_help = true;
						fieldGR.help_text = (field.description+'') ? field.description+'' : '';
						fieldGR.mandatory = (field.is_mandatory+'') ? field.is_mandatory : '';
						if(varType.type == 21){
							fieldGR.list_table = this.appUtil.configuration.table.dropDownTable+'';
							fieldGR.attributes = "glide_list";
							
						}
						/*Advance Variables*/
						
						fieldSysd = fieldGR.update();
						this.logger.debug("Nutanix_ImportApplicationProfiles.processApplicationProfiles fieldSysd update: "+fieldSysd);
						if(varType.type+'' == '5' || varType.type+'' == '21'){
							this._updateOtions(fieldSysd ,varType.opt ,varType.type );
							
						}
							
						
					} 
					else {
						fieldGR.initialize();
						fieldGR.type = (varType).type+''; //(field.type+'' == 'SECRET') ? 25 : 6;
						//fieldGR.variable_set = profileSysId;
						fieldGR.cat_item = current.parameter+'';
						fieldGR.active = true;
						fieldGR.question_text = (field.label &amp;&amp; (field.label).trim() != "" )?field.label+'':field.name+'';
// 						fieldGR.name = field.name+'';
 						fieldGR.name = field.name+'_'+profileSysId;
				//		fieldGR.default_value = (field.value)?field.value+'':'';
						fieldGR.tooltip = field.description+'';
						fieldGR.variable_width = 50;
						fieldGR.order = 11;
						//field.uuid;
						fieldGR.description = field.uuid;
						/*Advance Variables*/
						fieldGR.show_help = true;
						fieldGR.help_text = (field.description+'') ? field.description+'' : '';
						fieldGR.mandatory = (field.is_mandatory+'') ? field.is_mandatory : '';
						if(varType.type == 21){
							fieldGR.list_table = this.appUtil.configuration.table.dropDownTable+'';
							fieldGR.attributes = "glide_list";
						}
						/*Advance Variables*/
						fieldSysd = fieldGR.insert();
						this.logger.debug("Nutanix_ImportApplicationProfiles.processApplicationProfiles insert fieldSysd : "+fieldSysd+" field.label : "+field.label+" field.label : "+field.label+" | "+(field.label &amp;&amp; (field.label).trim() != "" )?field.label+'':field.name+'');
						if(varType.type+'' == '5' || varType.type+'' == '21'){
							this._updateOtions(fieldSysd ,varType.opt ,varType.type );
						}
					}
					
					this._insertCatalogVariableProperties(profileSysId, field, fieldSysd, current.parameter+'', field.uuid);
					this.order++;
					this.logger.debug("Successful record insertion in App Profile Variable Set. Record Name:- "+field.name);
				}
				//////
				var deployment = profile.deployment_create_list;
				var provider = "";
				if(deployment){
					//var len = deployment.length-1;
					for(var k=0; k&lt;deployment.length ; k++){
						var dep_entity = deployment[k];
						var subs_entity = (dep_entity.substrate_local_reference) ? dep_entity.substrate_local_reference.uuid : "";
						for(var c=0; c&lt;sub_type_rel.length ; c++){
							var subs_rel_entity = sub_type_rel[c];
							if( subs_rel_entity.uuid == subs_entity &amp;&amp; !provider.includes(subs_rel_entity.type)){
								//provider = (k != (deployment.length-1) ) ? provider + subs_rel_entity.type + "," : provider + subs_rel_entity.type + "";
								provider = (k == 0) ? subs_rel_entity.type :  provider + "," + subs_rel_entity.type + "";
								break;
							}
						}
					}
					
				}
				
				///////
				var setProfileGR = new GlideRecord(this.appUtil.configuration.table.catalogProfileRelation+''); 
				setProfileGR.addQuery('application_profile', profileSysId+'');
				setProfileGR.addQuery('catalog_item', current.parameter+'');
				setProfileGR.query();
				
				if(!setProfileGR.hasNext()){
					setProfileGR.initialize();
					setProfileGR.application_profile = profileSysId+'';
					setProfileGR.catalog_item = current.parameter+'';
					setProfileGR.providers = provider;
					
					setProfileGR.state = 'active';
					
					setProfileGR.insert();	
					
					this.logger.info("Nutanix_ImportApplicationProfiles.processApplicationProfiles:"+setProfileGR.sys_id+" record inserted application_profile "+setProfileGR.application_profile+" catalog_item "+setProfileGR.catalog_item+" provider "+setProfileGR.providers+" state "+setProfileGR.state);
				}else if(setProfileGR.next()){
					
					setProfileGR.application_profile = profileSysId+'';
					setProfileGR.catalog_item = current.parameter+'';
					setProfileGR.providers = provider;
					
					setProfileGR.state = 'active';
					
					setProfileGR.update();
					this.logger.info("Nutanix_ImportApplicationProfiles.processApplicationProfiles:"+setProfileGR.sys_id+" record updated application_profile "+setProfileGR.application_profile+" catalog_item "+setProfileGR.catalog_item+" provider "+setProfileGR.providers+" state "+setProfileGR.state);
				}

			}	
			
			
			var queryString = 'state=active^catalog_item='+current.parameter;
			
			for(var i in activeProfiles)
				queryString += '^application_profile.uuid!='+activeProfiles[i];

			var inactiveProfileSysID = [];
			
			var gr = new GlideRecord(this.appUtil.configuration.table.catalogProfileRelation+"");
			gr.addEncodedQuery(queryString);
			gr.query();		

			while(gr.next()){
				gr.state = 'inactive';
				gr.update();
				inactiveProfileSysID.push(gr.application_profile+'');
				this.logger.info("Nutanix_ImportApplicationProfiles.processApplicationProfiles: Deactivated catalogProfileRelation "+gr.sys_id);
			}
			
			
// 			var inactiveCatItems = [];

// 			var catGr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig+'');
// 			catGr.addEncodedQuery('state!=inactive^state!=deleted^multiple_application_profileIN' + inactiveProfileSysID.toString());
// 			catGr.query();
			
// 			while(catGr.next()){
				
// 				inactiveCatItems.push(catGr.item_name.name);
				
// 				catGr.state = 'inactive';
// 				catGr.update();			
// 				this.logger.info("Nutanix_ImportApplicationProfiles.processApplicationProfiles: Deactivated catalog item "+catGr.item_name.name+" logic associated application profile mark inactive");
// 			}
			
// 			this.logger.info("Deactivated " + catGr.getRowCount() + " catalog items (" + inactiveCatItems.toString() + ") as there PRofiles got into a Non-Active State.");
			
		}catch(e){
			this.logger.error("Error Nutanix_ImportApplicationProfiles.processApplicationProfiles: Error:- "+e);
		}
		
	},
	
	_updateOtions : function( fieldSysid , opt , type){
		try{
			this.logger.debug("Inside Nutanix_ImportApplicationProfiles._updateOtions");
			if(type == 5){
				var grQust = new GlideRecord('question_choice');
				grQust.addQuery('question', fieldSysid );
				grQust.query();
				while(grQust.next()){
				  grQust.setValue('question','');
				  grQust.update();	
				}
				grQust.deleteMultiple();

				for(var i in opt){
					grQust = new GlideRecord('question_choice');
					grQust.initialize();
					grQust.sys_class_name = "question_choice";
					grQust.question = fieldSysid+'';
					grQust.text = opt[i]+'';
					grQust.value = opt[i]+'';
					grQust.insert();
				}
			}else if(type == 21) {
				var grQust = new GlideRecord(this.appUtil.configuration.table.dropDownTable);
				grQust.addQuery('variable', fieldSysid );
				grQust.deleteMultiple();
				
				for(var i in opt){
					grQust = new GlideRecord(this.appUtil.configuration.table.dropDownTable);
					grQust.initialize();
					grQust.variable = fieldSysid ;
					grQust.name = opt[i];
					grQust.value = opt[i];
					grQust.insert();
				}
				var fGR= new GlideRecord('item_option_new');
				fGR.addQuery('sys_id',fieldSysid);
				fGR.query();
				if(fGR.next()){
					fGR.reference_qual= "variable="+fieldSysid;
					fGR.update();
				}
				
			}
		}catch(e){
			this.logger.error("Inside Nutanix_ImportApplicationProfiles._updateOtions "+e);
		}
		
	},
	
	_returnVarType : function(field){
		try{
			this.logger.debug("Inside Nutanix_ImportApplicationProfiles._returnVarType");
			var options;
			if(field.data_type+'' == "BASE"){
				if(field.type+'' == "EXEC_LOCAL" || field.type+'' == "HTTP_SECRET" || field.type+'' == "EXEC_SECRET" || (field.type+'' == "HTTP_LOCAL"  ))
					options = { "type" : 5, "opt" : []};

				else if(field.type+'' == "LOCAL" &amp;&amp; field.options &amp;&amp;  field.options.type+'' == "PREDEFINED" &amp;&amp; (field.options.choices).length &gt; 0 )
						options = { "type" : 5 , "opt": field.options.choices };

				else if(field.type+'' == "SECRET" || field.attrs.type+'' == "SECRET") 
					options = { "type" : 25 , "opt": [] };
				
				else if(field.val_type+'' == 'MULTILINE_STRING')
					options = { "type" : 2 , "opt": [] };
				
				else if(field.val_type+'' == 'DATE')
					options = { "type" : 9 , "opt": [] };
				
				else if(field.val_type+'' == 'DATE_TIME')
					options = { "type" : 10 , "opt": [] };

				else 
					options = { "type" : 6 , "opt": [] };

			}else if(field.data_type+'' == "LIST"){

				if(field.type+'' == "EXEC_LOCAL" || field.type+'' == "HTTP_SECRET" || field.type+'' == "EXEC_SECRET" || (field.type+'' == "HTTP_LOCAL"  ))
					options = { "type" : 5, "opt" : []};

				else if(field.type+'' == "LOCAL" &amp;&amp; (field.options) &amp;&amp;  field.options.type+'' == "PREDEFINED" &amp;&amp; (field.options.choices).length &gt; 0 )
						options = { "type" : 21 , "opt": field.options.choices };
			}
			if(!options) options = {"type" : 6, "opt" : []};
				return options;
		}catch(e){
			this.logger.error("Inside Nutanix_ImportApplicationProfiles._returnVarType"+e);
		}
		
	},
	
	_createContainer: function( catSysId ){
		
		try{
			var containerCheck = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
			containerCheck.addEncodedQuery('name=profile_configuration^cat_item=' + catSysId);
			containerCheck.query();

			if(!containerCheck.hasNext()){
				this._createContainerStart(catSysId+'');
				this._createContainerEnd(catSysId+'');	
			}	
		}catch(e){
			this.logger.error("Error Nutanix_ImportApplicationProfiles._createContainer: Error:- "+e);
		}
		
	},
	
	_createContainerStart: function( catSysID ){
	
		try{
			this.logger.debug("Inside Nutanix_ImportApplicationProfiles._createContainerStart");
			var variable = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
			variable.initialize();
			variable.type = '19';
			variable.display_title = 'true';
			variable.cat_item = catSysID;
			variable.active = 'true';
			variable.order = 10;
			variable.question_text = 'Profile Configuration';
			variable.name = 'profile_configuration';
			variable.layout = 'normal';//2across';
			variable.insert();	
		}catch(e){
			this.logger.error("Error Nutanix_ImportApplicationProfiles._createContainerStart: Error:- "+e);
		}
		
	},
	
	_createContainerEnd: function( catSysID ){
	
		try{
			this.logger.debug("Inside Nutanix_ImportApplicationProfiles._createContainerEnd");
			var variable = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
			variable.initialize();
			variable.type = '20';
			variable.cat_item = catSysID;
			variable.active = 'true';
			variable.order = 12;
			variable.insert();	
		}catch(e){
			this.logger.error("Error Nutanix_ImportApplicationProfiles._createContainerEnd: Error:- "+e);
		}
	},
	
	_insertCatalogVariableProperties: function(profileSysId, field, fieldSysd, catalogSysId, field_uuid){
	
		try{
			this.logger.debug("Inside Nutanix_ImportApplicationProfiles._insertCatalogVariableProperties:\n profileSysId : "+profileSysId+"\n field : "+JSON.stringify(field)+"\n fieldSysd : "+fieldSysd+"\n catalogSysId : "+catalogSysId+"\n field_uuid : "+field_uuid);
			var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties+'');
			gr.addQuery('application_profile', profileSysId);
			gr.addQuery('catalog_item', catalogSysId);
			gr.addQuery('variable.description', field_uuid);
			gr.query();
			
			if(gr.next()){
				
				if(field.is_hidden &amp;&amp; (field.is_hidden+'' != gr.is_hidden + "")) {
					this._invalidateCatalogItem(catalogSysId);
					this.logger.info("Deactivated catalog due to a change in profile variable's private state!");
				}
				
				if(field &amp;&amp; field.editables &amp;&amp; field.editables.value) {
					if(field.editables.value + "" != gr.runtime_config + "") {
						this._invalidateCatalogItem(catalogSysId);
						this.logger.info("Deactivated catalog due to a change in profile variable's runtime-config!");
					}
				}
				
				if(gr.value_type + "" != field.val_type+'') {
					this._invalidateCatalogItem(catalogSysId);
					this.logger.info("Deactivated catalog due to a change in profile variable's type!");
				}
				
				gr.application_profile = profileSysId+'';
				gr.catalog_item = catalogSysId;
				gr.default_value = 
					(field.val_type+'' == 'DATE'|| field.val_type+'' == 'DATE_TIME') ? this._formttedDateTime(field.value+'', field.val_type+'') : ((field.value)?(field.value).includes("@@{")? "@@{"+this.appUtil._createMacroArray(field.value+ "")+"_"+profileSysId+"}@@" :field.value+'':'');
				//gr.runtime_config = (field.editables &amp;&amp; field.editables.value+'' == 'true' &amp;&amp; field.is_hidden+'' == 'false') ? "true" : "false"; //((field.value+'').indexOf('@@') != -1) ? false : field.editables.value+'';
				if(field.is_hidden &amp;&amp; field.is_hidden+'' == 'true')
					{
						gr.runtime_config = "false";
					}
				else 
					{
						gr.runtime_config = (field.editables &amp;&amp; field.editables.value+'' == 'true') ? "true" : "false";
					}
				gr.uuid = field.uuid+'';
				gr.variable = fieldSysd;
				gr.isprofilevariable = true;
				gr.type = "Profile";
				//gr.isdisabled = (field.editables &amp;&amp; field.editables.value+'' == 'true' &amp;&amp; field.is_hidden+'' == 'false') ? false : true;//((field.value+'').indexOf('@@') != -1) ? true : (field.editables.value+'' == 'true') ? false : true;
				/**advanced var**/
				if(field.is_hidden &amp;&amp; field.is_hidden+'' == 'true')
					{
						gr.isdisabled = true;
					}
				else
				{
					gr.isdisabled = (field.editables &amp;&amp; field.editables.value+'' == 'true') ? false : true;
				}
				gr.value_type = field.val_type+'';
				gr.data_type = (field.type+'' == "LOCAL" &amp;&amp; field.options &amp;&amp; field.options.type+'' == "PREDEFINED" &amp;&amp; field.options.choices &amp;&amp; (field.options.choices).length &gt; 0) ? "PREDEFINED" : field.type+'' ;
				//gr.field_regex = (field.regex &amp;&amp; field.regex.should_validate &amp;&amp; gr.data_type != "LOCAL" &amp;&amp; field.val_type != "DATE"  &amp;&amp; field.val_type != "DATE_TIME") ? field.regex.value+'' : this._fieldRegex(field);
				
				
				var k = (field.regex &amp;&amp; field.regex.should_validate) ? field.regex.value+'' : this._fieldRegex(field);
				
				if(gr.data_type+'' == "LOCAL" &amp;&amp; (field.val_type+'' == "DATE" || field.val_type+'' == "DATE_TIME") )
					k = this._fieldRegex(field);
				
				gr.field_regex = k;
				gr.is_hidden = (field.is_hidden+'' == 'true') ? true : false;
				
				if(field) {
					gr.field_json = JSON.stringify(field);
				}
				
				/**advanced var**/
				gr.update();
				
			}
			else {
				
				this._invalidateCatalogItem(catalogSysId);
				
				gr.initialize();
				gr.application_profile = profileSysId+'';
				gr.catalog_item = catalogSysId+'';
				gr.default_value = (field.val_type+'' == 'DATE'|| field.val_type+'' == 'DATE_TIME') ? this._formttedDateTime(field.value+'', field.val_type+'') :((field.value)? ((field.value).includes("@@{") ? "@@{"+this.appUtil._createMacroArray(field.value+ "")+"_"+profileSysId+"}@@" : (field.value)) : '');
				
				//gr.runtime_config = (field.editables &amp;&amp; field.editables.value+'' == 'true' &amp;&amp; field.is_hidden+'' == 'false') ? "true" : "false";//((field.value+'').indexOf('@@') != -1) ? false : field.editables.value+'';
				if(field.is_hidden &amp;&amp; field.is_hidden+'' == 'true')
					{
						gr.runtime_config = "false";
					}
				else 
					{
						gr.runtime_config = (field.editables &amp;&amp; field.editables.value+'' == 'true') ? "true" : "false";
					}
				gr.uuid = field.uuid+'';
				gr.variable = fieldSysd;
				
				gr.isprofilevariable = true;
				gr.type = "Profile";
				//gr.isdisabled = (field.editables &amp;&amp; field.editables.value+'' == 'true' &amp;&amp; field.is_hidden+'' == 'false') ? false : true;//((field.value+'').indexOf('@@') != -1) ? true : (field.editables.value+'' == 'true') ? false : true;
				if(field.is_hidden &amp;&amp; field.is_hidden+'' == 'true')
					{
						gr.isdisabled = true;
					}
				else
				{
					gr.isdisabled = (field.editables &amp;&amp; field.editables.value+'' == 'true') ? false : true;
				}
				/**advanced var**/
				
				gr.value_type = field.val_type+'';
				gr.data_type = (field.type+'' == "LOCAL" &amp;&amp; field.options &amp;&amp; field.options.type+'' == "PREDEFINED" &amp;&amp; field.options.choices &amp;&amp; (field.options.choices).length &gt; 0) ? "PREDEFINED" : field.type+'' ;
				
				var k = (field.regex &amp;&amp; field.regex.should_validate) ? field.regex.value+'' : this._fieldRegex(field);
				
				if(gr.data_type+'' == "LOCAL" &amp;&amp; (field.val_type+'' == "DATE" || field.val_type+'' == "DATE_TIME") )
					k = this._fieldRegex(field);
				
				gr.field_regex = k;
				
				gr.field_regex = (field.regex &amp;&amp; field.regex.should_validate &amp;&amp; gr.data_type != "LOCAL" &amp;&amp; field.val_type != "DATE"  &amp;&amp; field.val_type != "DATE_TIME") ? field.regex.value+'' : this._fieldRegex(field);
				gr.is_hidden = (field.is_hidden+'' == 'true') ? true : false;
				/**advanced var**/
				if(field) {
					gr.field_json = JSON.stringify(field);
				}
				
				gr.insert();
				
			}
			
		}catch(e){
			this.logger.error("Error Nutanix_ImportApplicationProfiles._insertCatalogVariableProperties: Error:- "+e);
		}
		
	},
	
	_fieldRegex : function(field){
		
		var reg = "";
		switch(field.val_type+''){
				
			case "INT" :  reg = '^[\\d]*$';
			break;

			case "STRING" : reg = '^.*$';
			break;

			case "DATE" : reg = '^.*$'; //'^((0[1-9]|[12]\\d|3[01])/(0[1-9]|1[0-2])/[12]\\d{3})$';
			break;
	
			case "TIME" : reg = '^([01]\\d|2[0-3]):[0-5][\\d]:[0-5][\\d]$';
			break;
			
			case "DATE_TIME" : reg = '^.*$'; //'^((0[1-9]|[12]\\d|3[01])/(0[1-9]|1[0-2])/[12]\\d{3})((T)|(\\s-\\s))[\\d]{2}:[\\d]{2}(:[0-5]\\d)?$';
			break;
				
			case "MULTILINE_STRING" : reg = '^(.|\n)*$';
			break;
				
		}
		return reg;
		
		
	},
	
	_formttedDateTime : function(value, type, getDate){
		
		var newVal = '';
		if(getDate === true){
			if(type == "DATE"){
				var gdt = new GlideDate();
				gdt.setValue(value);
				return gdt.getByFormat(this.dateFormat);
			}else{
				var gdt = new GlideDateTime();
				gdt.setValue(value);
				return gdt.getDate().getByFormat(this.dateFormat)+' '+gdt.getTime().getByFormat(this.timeFormat);
			}
		}else{
			var arr = value.split('/');
			if(type == "DATE"){
				newVal = arr[2]+'-'+arr[1]+'-'+arr[0];
				var gdt = new GlideDate();
				gdt.setValue(newVal);
				return gdt.getValue();
				//return gdt.getByFormat(this.dateFormat);
			}else{
				var year = arr[2].split(' ');
				newVal = year[0]+'-'+arr[1]+'-'+arr[0]+' '+year[2];
				var gdt = new GlideDateTime();
				gdt.setValue(newVal);
				return gdt.getValue();
				//return gdt.getDate().getByFormat(this.dateFormat)+' '+gdt.getTime().getByFormat(this.timeFormat);
			}
		}
	},
	
    type: 'Nutanix_ImportApplicationProfiles'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-14 20:00:23&lt;/sys_created_on&gt;&lt;sys_id&gt;37c15d5f37896300fdfc097973990e1a&lt;/sys_id&gt;&lt;sys_mod_count&gt;248&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_ImportApplicationProfiles&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_37c15d5f37896300fdfc097973990e1a&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-23 15:52:22&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1883155323</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4d5887e5dbcc7c103e3c6a5b8a961954</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d910000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_ImportApplicationProfiles</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>80fdac0197aa6090f60096831fa778c4</update_guid>
<update_guid_history>80fdac0197aa6090f60096831fa778c4:-1883155323,c53797f4f2e26090b27fe634f6e46e5f:2007027707,4309f278e3ae2090fadf882608c70afb:1339816561,63b71c0927d56490d2eb1d761e8189aa:377270829,7b0580494c9564907122eb27115719b3:1441679265,4f086d874709ec50425965af169be300:2086901641,3f2acc8f74c1ec50223862b2747ffb27:-960261328,02c90c8fb7c1ec5094dffbabd9d2ef58:-1565811695,c620be7209cdac50fd0845d9262e50ed:-724466431,04fe62fa888dac5008c5b59a2e0aa2e6:-1565811695,51b96af6218dac50e02437fef9bb2313:312776069,792962fa228dac506ef5521c466328d0:-2126445755,4c97eeb2198dac50362148cfbfb897e6:1111887475,feddd27ec94dac50d079f35a9f96d24a:1045179151,ccd35ebe270dac50938c93fe6e0c994b:-1920585764,3db09ebea40dac506995a40a817b1095:-1565811695,632342b6c985ac50a54761e315a6449e:848053873,e3311cc1e3112010cae03339dd8b1bd7:1482327027,e6f46b6259496c506a734329b65cdd6e:-1565811695,4f4c2a027849e8507c2c54dcdb2bf296:-700067246,323311a55b816850a6aeade82de39667:-139421799,65efa065160168502fc004b7cd58b1ae:-1464645174,0b4f2c255f01685099d5d81f0e38fd12:964282466,de5802c16309e450e420cf0c2f335d60:-1993663708,be57cec17c09e450748136e0e5b776a5:451653984,f9ef07b419cda450e8270cbbe50a3b58:542808854,769b0f786f4da4500f90e6a0cc68882a:-1870403804,ec460bfc84c9a45096ce9d988bfc66bf:206419004,3574d31e5d606410f4a1be1152415058:-1032211430,da74cbde0eec2410e2e0a7d7b19abee7:480167413,7083eed2002c2410aedb5f1aa699e6c4:-1095492845,c096ded6d1a82410c4c9e81da0b96e5a:1686449024,81111a120268241020c4253c027fcd59:-1539020747,8414ce1e5da424103aa5c3c5f5d3e029:337906057,106a3d5a38242410819cf4aa4ea34553:-296263169,d16040f0e12020100e7ea553332354ff:-1321649261,f59751ef391ca4104f77ca21490f30c6:1067480776,3a14d5ebe61ca41004a979ce696607d4:-373279188,8a5f4d27f21ca41056d894605ab08628:848812709,319ac1efd0d8a410048f8df8a66a9e73:1751282995,c309c16fdb98a410205d2b45f5c1173c:1718840041,b76eac67b898a410ab038fc7590dd07d:1639123235,7baae0276f98a410560269fad5e29aee:1751282995,b2596023eb98a410ad222959fd4de54d:-53449970,54f560eb6a58a4109107da5365eb4978:-569212911,729d18238a58a410a063b42e95b8d029:-959946543,673bbfdb77d4a4106304fa81c44bc5f8:1987960581,f4b513139594a4107aa3aa735f362083:792216682,c48fb6579914a410add8b2bbf3e388ee:-480346054,fc53c3474f986410653fdbcb76a22556:-637662231,748f56cb001864104050950b44736cb6:1009157974,e4a69e4f17d46410d042b26c4e95f9f7:-966012126,2b5560e8e0d31c10ec16bd1ee550cc34:-840807788,ff7a0f10251f1010a60744a6507d44e8:1444745442,cd6ca0d1f0839c90f1607700dffcdecd:-172346174,d4faa0d179839c908676e09d1ac54dc7:801029632,92198a74f2035c90365dd0ab6dbd4196:433462508,0524efe0f34b1c906831b7fc21ec757f:-329199832,db5f13e0bd0b1c90027d0eec3a64057b:128374118,9cc91a6c22071c9099fb3fd76ef3c4be:-424674786,a1eaaf1f0fe6585002fcd369bca01e9b:433462508,45a6a3dbf4e658508a1c7d0aec59a698:1703668928,86a535fad2229450957abe66c64200a9:247467084,9d457dba65229450c5ff97d05a45fe25:712709530,90c5c93d19aa9050ac6a83ff2816c9c5:1934991080,7a940db964aa9050c9ab80845c0df9c9:-2120453112,57bfd42883aadc1094bcd77cb2c0b4b6:181599598,8ca774988722dc1034e79044cd005ea0:-466447146,feb634583c22dc10d7a3c8de76b5b844:433817660,0144b090fe22dc101dd07a2c7c9b01ac:1560378414,dc047890e222dc10be4724ebbeba22ce:855338542,251378500b22dc10393d2074aec57068:605903798,9561f05cb6ee9c1058ef3e8a43ea10fe:-224009657,bb4f2c58b5ee9c10cb0fb379c5e23b4c:1595206427,6829a89038ae9c105a82f45043ec167e:2044126884,9384a094776e9c10ea28961a41a1b9bc:319969606,5f9e1814502e9c10c84a5621a832a35c:954721997,dd9c8c50d32e9c102d9b13c655a624f4:1355370362,51d688d8c5ea9c103976ddb3092abacc:1871587423,9765001c75ea9c10e35fe23dea469501:1937290360,5c04081882ea9c10a96415819bfb0988:-598590507,b492cc947bea9c10d52f0b6d8aafa617:-1770043703,c56f7380e9ea9c1024f8fbf1e91e3566:-1976799106,571bf74ca0aa9c1009827f9683104b8b:-2075758334,4b49bb0c30aa9c102dad04610e8feb9d:216218208,8ec8bbc86faa9c10a9ffa0b978fa06c0:1248244960,4214af08b36a9c1057945a6f6cf7ba52:1662318348,662b174c182a9c107bb08f02415b6f2c:187435944,8d481b48e32a9c10156194123c77a33f:-1359202343,9cfe4f48b9e69c1005921291e18d8ae3:-139687268,6c2ac74001e69c10dd8a915052a868fd:-1782711177,a3def0c4b2629c103764167d3b21623f:1863463918,6fac30043a629c10b302a50b1ece3157:1290353198,ca017c8026229c108045988fdb72ee68:2122650051,6e7c680c6eee5c10082f83e7dc174453:-995656445,bcf32004c7ee5c1093af3370c9ee7a24:1088774096,797394081f2e5c10546dd34bed68b967:859885639,0d6d840c97aa5c10a1b744b39ff5ddaf:50452162,4b090804acaa5c1044585928b7df6488:747355655,f256cc8c216a5c1010a757d9abba94e5:-1853860153,07d3c00ccb6a5c10644bdec45b6eb2aa:-824259292,0c320408276a5c106ef7a609fe468c83:-1362202617,e32c3f3fa51a5c10033ee03ee5ed35bb:-1653135430,c349f73bdd1a5c10d1dd93fa35b777b9:-1084297876,635733776b1a5c102da4f036d380b12e:-681252149,afd5bb33501a5c10bcc100007f68a549:315770260,ed15ff7fb0d65c10c8753d0153061a7b:-1660685554,836f6f7768d65c1002a804e1e3c0eb34:-1356699358,c34feb77f2d65c104b25fe26d1f17505:1310907333,71fd6f734dd65c1057331b8a6549b13e:372797545,51cd27b3fed65c10fa34796b6c3e0953:1884620491,a88b27bf81965c101b711e83cbdbfc19:1200760674,50986f3bb9965c106d85f6b9a9958964:1503966855,98ed03ffd6925c10dca85ec1da630fd7:44993841,95bd0fbfd9925c10dee73e634a0e7691:2108899025,a9440bfb5c525c105e8b28ead2ccaa5b:884635229,80bd7eb77d525c10851ca040d7e25e0b:-129438097,f3ac72b723525c100abfea1b24739611:-445345689,c3b4f2fb35125c10681f6b1e6b7024d4:-1806500904,98a27ef75f125c10b3230d157a8ab8ed:1126536187,3c3cd67ff55e1c102b28ccf2f0a5e474:-901643823,d5d092bbef1e1c101af2234c033b88d3:-1086392530,7dccc63ba11e1c10a9515f2ffbe79d05:-595555916,7042672b77561c10ad820c9db7396444:-1094962114,838f262f96121c10f67d0f129ef43a74:1851828289,80c7ec93181e98103421e11e38dfc698:1811537762,0eb60f8238581410080b710813966e78:-1133324793,6bad0683499f801068297daaaaf77a63:-745838657,5a4a0e0fd05f8010cd68802bb55f6980:748515876,78d80a47f95f801000c794b41ca17ca3:-382410123,bbb702430f5f80102ac1e936732a85d7:-428589692,d6950243425f8010c13904a01bdf99a9:-1589394447,04150a03975f801006123629e92a5f35:1362227930,0883c24f201f8010fad010a402e85842:1400628607,0a9fb947721f8010a5d452a65563249e:-217459256,d88a710f4edb80104eb9da18849cd772:738563201,b749fdcbb8db8010ef297044df10c6a8:-843879244,13437d8fba9b8010ac0595ad79304fdf:-1621699992,c655e1832a9b80103a52822a60577b4e:1905127185,ccc399075b1b8010634cc6287c8641dc:-924680854,466c221ed1dfc010921085c567d1973d:-2120355865,1a9d98caca97801047ad3ce8d429ccf3:1555431431,c11bd48a539780108a4658ef57b3b782:5989679,7f3c884e63578010438008a51541a5d6:1118744043,00037da3f00b08101e2df784c93fa949:1361197291,40713da3ff0b0810ed2e0d9c8f42bd94:-1015093601,c40175e38a0b08101002f0d4b0613d75:498950890,b2c89067c4030810a7c3d7b92308fd57:383698505,544794a3350308109ed15c2734197615:2144048023,6f16d82fefcfc4107ca54f67140ea5dd:-1156658929,6534946f26cfc4104df141e3bd49230b:1859487118,64d15c67e6cfc410104c4189348d632d:-1200550171,79409c27f5cfc41044b426bfdec2425a:-1577893423,1d105c672ccfc410eecb3afdd644afcc:-1062346961,8afd00a387cfc410b737b5fb56c86bc6:-2129340365,c8da48eb308fc410db5db63f9105fd68:-1103495805,a7f9cc2fab8fc410334d4692101b11c5:1064712808,2549c42f868fc41070deed6a767881cf:-1509427113,0be9ef13aa0fc41085e647e82be27c91:-863399276,d7b26fd332cbc4104722bed49812b56c:-1880696232,d21ffb82fb8704108402d3c2f3ebef39:-1435319240,51a6730ef9470410e7468c8310ecca67:917338101,0c66770aa6470410e061d69cd7ace6dd:-1604299613,7ac22338d38f00103ca2120a7c2c1114:1036472555,abf74778db4f00105db7f7ddb4cdf310:847633237,9707bfc3127e48500c1e3e7fde1f2d7b:577790486,76d39c4a4fb68450b225e939b592c660:393175031,d0658db01f2a8410d378a7df7359d2f1:55122764,057dbc3c6ee68410bdb9e940255fb33f:1571284275,4d2eab6f93ce4490831aca73dd41c25c:-502255941,2c15c3027055001012aaab97551f020e:-1860266920,2c15c3027055001012aaab97551f020e:-1860266920,2307228373790c103d3250925617becb:1571284275,19669ffe0e01041084abf942e8ee98a3:-1860266920,ba859ffe980104107d9308592dcc5b2d:-1464812316,42dfc3f64f010410e5787d42f64a51e7:2141686510,aa7a837e10cdc010568596d288f474ad:-1464812316,c43d8cf28833f300fb70f0aa5fc5079b:-1686970024,a2bb5bcaca7773002acbed12466960bc:295308306,06146798b877730095ba383d5d5f0d25:-1201165882,b5fd5a586e737300506a9f61df3aed1a:-1780380322,066ba68895bf7300a1cdbc63f47d6d2b:-2097618578,93f56e843ebf73004063d87b3a31760d:34621272,3acc19ff35237300efcf057089aa9314:-1382807800,26abc83f902f3300746ecfa007acef1c:365952913,ef6b086b3fe3330071cdfbd7cfed4041:1946039272,8bba086b20e33300609a3131ae7b8ea3:-1542663941,4f6484a7f8e333008c69e2b983ac0465:-391742540,fae6b3db07a33300bcbc56467114ba69:-1686337157,77fa0b1feb23330070f4b557b80a5fce:1127449479,ac47eaeaf61333009e2d038555b946bc:26038883,56cffb14305b3300a115a22ad68d43e0:182136071,f81bd7c31ac7f3006ce6eb774f471b69:799811645,31ba5fc3b4c7f300c7705d26e865325f:-1719314543,a35917c379c7f30058e7af678721c4b2:499227926,8071fac74f83f300ee5b429c9e9d1fb6:1474058765,0e8e664fce43f3000436ee12a3efb786:-621048838,8c29ea4bd203f3002f2c1c9d7dacb819:-1462493296,f5016e0b02cfb300fbc31770d9f46599:1105073700,286c1e8bb38fb3005a5460300b9b3e48:874423665,3b8bde4b948fb300e72dce839940118d:387273702,5cdc1c36d14f73000a4e120e2324046d:2006431194,fb4c5bc9d18373004b7d8d419b60eed7:-1724365334,64fade09408f3300e680b6cf8043524c:-158901688,ab0a06787407330030630f41381a558a:-440370374,3e8de5b0a7c3330083fbb128725f1e05:733133816,633b156801873300cd7ee944cdf2e2bc:173172334,50ccdca8e643330011eb9697cd5c9465:-1782310561,5f435ce4874333002e0f3a330593f711:-1229023784,d4018ca0e3033300dc85628f33d95fb7:-408735646,e8640372523e7300aa3efa25920ccdbd:-728704308,3bb0b27ac0ba7300c31e22486c7c8556:-1784940876,ac6d8552f0363300791deaaf2c7bdb5c:1349409602,442741daa2f2330010bb6827ede7e152:930029980,dbd5459a9af23300f63221af5fb14fee:-151352100,e553451ac1f23300ed590d4625e70593:-458290006,7b92c5d6b8f233006ed4c7bb72596424:545124248,30d18196e0f233008ba3d34156c112d0:-2118218564,3c8fd81295b2330083e95ba75b8c36d5:-611873875,d91d549e5372330098f342b265a8e252:-1293963652,c50c5cda47723300c8a0420757d7018b:2110613908,c4c9981e2f72330018dce665fd5a844a:979097532,dd779c9a4b7233009ef5ae4fd66b2e23:534923071,0d66d85a0d723300b41c6bda315123ea:-1057019605,ca83d01a16723300c1058920d736709b:1589256223,d030bf02f4323300d6b0f80e5835527a:1010573266,c7ca800a80363300701324aafef3ce5b:-358516873,c4794c06ff363300f2d07bc42073b2c6:609373333,7dceeb75abf23300c1fa95a7b1bf2222:-1423726537,d3ac6f757ef23300384af48a74bbebb1:-249681324,a698e3b9e9b23300d590cf78319cb591:1378098100,a6a66ff506b23300492b360c07860607:-2018613041,8855afb5deb233000ca864572a1801a4:-1322799556,9b9b9ffde3723300dff2fa46fdff2096:-1392010560,923bdf31ffb233009cbdebbff4c643fa:-756399541,2ba797fd3c723300be3df7e98f83174f:338120032,4e14d37dcd723300e84c599cd3b7611d:163823104,17f35775207233001ff2184fe9448bf7:500507025,c2fe4b7d6d32330071190b7b932d594e:1465445131,1b9d0b79d3723300090fd5d839f549d8:389006976,378683ac387e3300f744737add39935c:1943999882,0ce67ea0727e330037ee24a59fe4974c:-498607618,0ca76e20d73e3300dc39b1b3a300c49b:576795453,69f55660933e3300540ae6cbfee0f8d4:799544257,0e4bdb1cf89b330085be8af7bd6f2f01:-1410767874,18d953d4839b3300e529f1b753df702c:-139820260,f37c22d001d73300c2440435da6cb128:566784384,f07b791c6b573300240d48b807b8714b:-646484739,e9b049cf558233007c304a5ecbbacea1:1237272605,9e66f887aa8233001f1ed39c0913e831:139063087,05553cc71f823300a02928f76e91a93c:-799806103,9dc3f84fa6023300610f2363fb893596:280863367,0623b8879982330060be9d0cb460933d:-497626843,0dc5f532e3f13300c584c68c763fcd91:120475216,735552b078c0330061eefacd8b0e8c8e:1262380752,7f8b174cf1eb63003a0dbf6ba0365fb2:-1821348850,53f6fb3bef936300766a6d9872687d74:-387962898,0665b3f778936300ef3d7c4fb9faf948:1327874578,5c72f377e393630080b3cd6789fdcf28:-814573655,615b72b3101363000122721030d18d0c:1294995529,4031ed32d23223008ae31ba4cbd7876d:1972985704,1e63fde2fdb223006330105219069638:-1611251064,a761cf5077622300960a1606a11fdf0b:1290091683,debb36980b22230082b18afbd737b05c:1310990805,26daf650de222300e4d50bd1b292bd68:716978595,939bbb8f9b8a6300144051b4246d5916:915859770,627eda8f2782630043410345210f151d:594843244,4a825a9e29b923004beac7741833db6b:671547019,a1540abd2975e300caf21a668f48e30d:1748063407,cdd324759071e30045e692d508bd1475:264715999,b6ac10fd0931e30019276c29c5395b7f:-68706485,317d1a61213da30049799574cfb6484a:-1214544966,84fe8601f529230097ced6ddd49e2e60:2049584125,774e4ecd8be523006fc7f271fd34aa08:1295790229,3abaad0980a52300276bb218adf2aff6:1054477631,3db4e941e9a52300161ccfb4de3924da:-1340900555,aec0e54dae65230088ec788d2a8ea8ad:217617367,b7da9bb0b7212300d26b9b6db97a726f:932951285,6d8a559cc4e563004ed14b7807d2573c:1687944643,1a79a81cd0256300e29a2e9ae316a5a8:-1598614132,ff55d850dc256300220170886f7ed5bc:-1206829520,3c80109cc3e1630057ad52d65c7fcb7f:-368194477,b7fd48d89be16300d8ef1da2011899e5:1302333907,1aad84d420e163008366ed2aefc45f2b:1622577747,4b08fe480c216300882d0939c02f9bbe:-2082647491,1cd7ba4829216300cfef266adbdf287f:555611147,7156b6c44621630017bae87b1e092388:752533375,b702168860ad2300354b3f9372ce3199:-11273026,cfce0e8423ad2300192f15237598391c:1155992701,28250eccc66d2300ed30f74ea82430bf:-871238194,eb20aaf75e152300186f23d403bded91:2114851829,8a064cf9e1512300d843647942f598ee:1984140026,7bdaf1b4fbd1230025a1180b983a42d3:627950640,e41b68b8e3d96300cbf09df02e8dc085:1841904109,a4c7230c0915230037e84cd46d04a608:63173992,444a12087151230081b095718de82897:629803261,93f95284ae51230064094d407bf7db8b:-342796762,47d99e844d9123007f5decb4679cb41e:534193080,ea50b077894d230007230fe9594eeef2:-972693962,64bc0dabd9452300625ccb4eee1dfc61:668684258,6d55291f05c96300d14683523cc05767:1814973651,27442d5b56c96300a378d61710ba6e77:211521779,6c44219b48c963005c5ab1b6e7d95067:-1831112281,ce24a5db1dc96300bea7f8900fd63e32:1658269847,9c532d5b5ec96300f31c26c599077357:-1161246977,e1c2a55bf9c963003b7fc3f1027649e7:-1415557340,fcf0e9d7dac963005be6d0de7bb93a25:-1442731709,28b025d704c9630044a67dd6d3373c57:-892850893,05a061d75ec96300c66eacadde525e9f:-1926114035,ec7029d7fdc96300e87f7aef96706e96:168725665,d000a997a1c963002f810052bbc181f6:1239568554,443e9517e8c96300c547c800cb0373ac:-811368579,b2a2959fa2896300be970f7e92c5ca33:-1406358572</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_53cb0ce64f41a30065e48020a310c7e6</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;save_properties&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;false&lt;/client&gt;&lt;client_script_v2&gt;&lt;![CDATA[function onClick(g_form) {

}]]&gt;&lt;/client_script_v2&gt;&lt;comments/&gt;&lt;condition&gt;(gs.hasRole("admin") || gs.hasRole("x_nuta2_nutanix_ca.calm_admin") ) &amp;amp;&amp;amp; new Nutanix_ClientServerScriptBridge().checkQueue();&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;false&lt;/form_context_menu&gt;&lt;form_link&gt;false&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint/&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;messages/&gt;&lt;name&gt;Save Properties&lt;/name&gt;&lt;onclick/&gt;&lt;order&gt;100&lt;/order&gt;&lt;script&gt;&lt;![CDATA[try {

    gs.setProperty("x_nuta2_nutanix_ca.use_external_credential_system", current.use_external_credential_system + "");

    var catalogName = current.service_catalog + '';
    current.update();
	
	if(current.use_external_credential_system)
        gs.eventQueue("x_nuta2_nutanix_ca.refresh_token", "", "", "");

    //Set value for show unpublished
    var showUnpublished = current.show_published_blueprints + '';
    var gr = new GlideRecord('sc_category');
    gr.addQuery('sys_id', gs.getProperty('x_nuta2_nutanix_ca.nutanix_unpublishedBP_sysId'));
    gr.query();
    if (gr.next()) {
        //if(showUnpublished == 'true' || showUnpublished == true){
        //gr.sc_catalog = gs.getProperty('x_nuta2_nutanix_ca.nutanix_catalog_sysId');
        gr.active = true;
        /*	}else{
        		//gr.sc_catalog = '';
        		gr.active = false;
        	}*/
        gr.update();
    }

    action.setRedirectURL(current);

    gs.setProperty('x_nuta2_nutanix_ca.Log Verbosity', current.log_verbosity);
    gs.setProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id', current.sys_id); // sys_id: system will only perform query on current application properties sys_id in makeCalmApiCall.

    //Property - Stores workflow value that need to be triggered in main workflow 'Nutanix - Blueprint Launch to CALM' for approval/rejection activities to initiate Blueprint launch.
    gs.setProperty('x_nuta2_nutanix_ca.nutanix.workflow.user.approval', current.workflow.getDisplayValue());

    // Stores assignment group sys_id
    gs.setProperty('x_nuta2_nutanix_ca.assignment.group', current.assignment_group);

    //If true, incident will create on blueprint launch failed else not.
    gs.setProperty('x_nuta2_nutanix_ca.incident.blueprint.failed', current.create_alerts);

    //Set the version of calm		
	var previous_calm_vesrsion = parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version'));
    gs.setProperty('x_nuta2_nutanix_ca.calm_version', '');
	
	//Set the Calm SaaS and ServiceNow		
    gs.setProperty('x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow', current.calm_saas_and_servicenow);

    var logger = new Nutanix_Calm_Logger();
    var utils = new Nutanix_Calm_Utils();

    var authResp = utils.makeCalmApiCall("post", "/projects/list", '{"kind" : "project"}');
    var statusCode = authResp.getStatusCode();

    if (authResp.getStatusCode() == '200' || authResp.getStatusCode() == '201') {

        var verResp = utils.makeCalmApiVersionCall("get", "/apps/version", '');
        if (verResp.getStatusCode() == '200' || verResp.getStatusCode() == '201') {
            var response = verResp.getBody();
			
			/*
			  'x_nuta2_nutanix_ca.1_4_4' property use to make 1.4.4 plugin compatible with 3.2 calm version
			*/
			var new_calm_version = parseFloat(response.split('.')[0] + '.' + response.split('.')[1]);
			if((parseFloat(new_calm_version) == parseFloat("3.2")) &amp;&amp; (parseFloat(new_calm_version) &gt; parseFloat(previous_calm_vesrsion))){
					   gs.setProperty('x_nuta2_nutanix_ca.1_4_4', '0');
			}
			
            current.calm_version = response.split('.')[0] + '.' + response.split('.')[1];
            gs.setProperty('x_nuta2_nutanix_ca.calm_version', current.calm_version);
            logger.info('Nutanix Calm Version is ' + current.calm_version);

            current.datadelflag = 'yes';
            current.update();
            utils.showHideSyncUiAction('true');

        } else {
            current.calm_version = '';
            current.update();
            utils.showHideSyncUiAction('false');

            gs.addErrorMessage('Nutanix Calm Version cannot be detected.Please check the logs and retry saving properties.');
            logger.error('Calm Version cannot be detected. Error-&gt;' + verResp.getBody());
        }

        gs.setProperty('x_nuta2_nutanix_ca.check.authentication', 'true');

        utils.updateCatalogName(catalogName);

    } else {

        var codes = {
            "0": "Calm instance is not reachable",
            "400": "Bad request",
            "401": "Unauthorized / Bad Credentials",
            "403": "Request forbidden",
            "404": "Not found"

        };
        gs.addInfoMessage(codes[statusCode]);

        gs.setProperty('x_nuta2_nutanix_ca.check.authentication', 'false');
        utils.showHideSyncUiAction('false');
    }
} catch (e) {
    logger.error('Error while connecting to Calm. Error-&gt;' + e);
}]]&gt;&lt;/script&gt;&lt;show_insert&gt;true&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;nitin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-12 06:59:11&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;53cb0ce64f41a30065e48020a310c7e6&lt;/sys_id&gt;&lt;sys_mod_count&gt;164&lt;/sys_mod_count&gt;&lt;sys_name&gt;Save Properties&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_53cb0ce64f41a30065e48020a310c7e6&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-05-01 05:41:43&lt;/sys_updated_on&gt;&lt;table&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/table&gt;&lt;ui11_compatible&gt;true&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1325542677</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4d5887e5dbcc7c103e3c6a5b8a961957</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98f690000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Save Properties</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>98b4eb12f033a41092f29deccf1a4c1a</update_guid>
<update_guid_history>98b4eb12f033a41092f29deccf1a4c1a:-1325542677,4a32ef9e2dff6410ddd5a067c43d0f8c:104808938,bdb1679ef2ff64108357990c03a63329:450703479,94f0e35e9eff6410ba3a1ce6af010db3:-306931565,9c6fd7da9bff64104ddf630cd716091d:1550334840,431ed35a6dff6410d6e82257525faa22:1880091443,59acd35a0dff6410e147f9858655785d:273435567,a1fbd75ab7ff6410fa60e788d8dad0e7:704650410,1a2bd71a4eff641002a0e15d0c47a77e:219572253,513adf96c1ff6410115356d48ad7c92a:871405256,a0d864365342e410473a5428e0c52c99:450703479,bac8ccd27dca641049438edaa0274516:1419859118,d1032c595d009450ebb10b24fe8f8a9a:-1216673515,d1a12019640094503ea10da434643ba4:-935615575,72be5caa308700909dccaf9588ca43c1:1889171175,e78e542a09870090d892c7b8a6aa45f9:1233917416,9dda542edd87009013477bf5d8af2399:1866174771,4f72ed728eaa08101d25a86e04be72be:1918544638,005ebaeb964a44505c4ba046facd48c4:-1849025862,5c73e2e7440a445088433be0e4adc636:-795363134,7d412eaf1dc644509893d57058c30fc9:-1739459454,36869472f1c2c050f71c7ec30cd46f7f:-1562852855,d6be69237fe00010aaf83461917762e0:-1150846313,fe5e2defd2a00010de584039d76b905a:-262998452,df2e652355e0001082e317d1c889df1c:-1150846313,15ed65239de00010da1cb92cf0f6bb1e:-262998452,f55de1efeba0001038124d3762fa6a43:-668706622,f35bed6fb2a000101ea6cb8a3d054560:1906445079,72d6e1ab14a00010ff930f22574374db:-668706622,f756ade706a000102cbf58773fac2552:1906445079,dc0ed5e357a00010708d2b9968a05f69:-668706622,e34c9d63afa0001097c6d29fdb98330d:1479110648,8922516382600010548ec07b8be89196:1152360671,39cf016329600010f5148af8bde7eace:1595473444,a8298dabd92000103520a5830ca2fb37:-2077334670,82dca96e0cec0010bac860b934a275fa:-1084741211,6e48212630ec0010ce98873e95f05c67:1340366868,cee62d2250ec00104321f976f553167d:-1695004147,31f5652201ec0010ba7c33d26d092750:2036361465,f704e51a09e000101b667b550be7621a:191301390,c8f1619639e000104036d3bc44285b14:140250579,4891e956e0e0001030d0ebaf1fd9271a:354590479,c2af9d1631e00010a1c66b1eb1af9351:-1543064606,052f9d16a1e00010f6041f6d91b0314c:790823587,f3fd95da2aa00010081a46e4ee1107b9:-608176244,8b6d11165ae0001010c6996f4f788b06:381824650,540d11166ee00010865f1bb8472bc201:-1335574,96fb59da48a00010da622d7944ead53e:-1450706840,4c40991a2ea00010c7a31b82526dbf4a:1831424895,6eff8d9ac5a000106fa5a41b2e50679c:-1318270776,917f8d9a10a000105fefa7072bc7eb29:-1675263219,10de0d1a99a000104f8d84de10a051f3:-1089905264,82ac419201a00010c4ddf83550fb49b9:117752628,3dfbc516f1a0001002f437ca2b1f9223:-766886780,f183051250a00010462f80871a642a39:-851103820,8e53091286a000108b98be4cf95dfef1:1999073681,0302095226a000102f83953738352e22:2022321807,6ba0851279a00010818c5be51c1130d5:-1896852759,dfcffc5e1f600010de39c3d3e44e03cc:897311697,4da2a06475347300311592a884f09f5a:-1847867749,a00ea6c8bfb0330033ccfc6a65452148:-1448480321,8eeda2c8dab03300a188b3bacc8cdb7d:-1552785352,d3ad6a8831b03300e4a3ba02a7270a87:-1448480321,ff96624084b0330079bdca4fc1b583f8:670981889,01735f03d86c330086fc07f4022cc4c2:422547184,2b90670e812c7300101b43583979d273:2005019728,f3ecbc610760330078fa49d61eec6f79:-1797543636,0f9d861372dc330052ddd40ecf992d42:428750001,2bfa988ba55033005b2f21d5a63abb64:-866900116,95b29cc38a503300a155fd34a290aefa:1295070496,553eaf985d103300b62c0047e1687b5e:-866900116,b9d50e00e754330024a797667a690220:1295070496,ad8e350cf914330034d6e1e576cc694b:-866900116,cd0ef9c8c314330062e5cff8b04f1d70:1295070496,032e7c4c4110330090443ea1912cc486:-866900116,befc853f478033005c143ef830a9c0ff:1295070496,f1dff31279ec33002239d6047fbb144b:-1018254037,4bb9d05e50243300fa3e36ee571a7981:-1418746771,3c981c9af824330005ebcf19e7fb282a:-1018254037,1978d89a5e24330012c574537ff1ddfe:196801383,03bc9f4ed720330098b50af5c4d50afa:-1018254037,3d55da604aec7300b9483f5415cb39ad:-869708025,554a10c44c243300730979bf9ef550f0:1059660254,11caa065a8cc33006fe7455b535be58e:-866900116,179a206552cc330031543d1a5a0a4b57:1295070496,da3e5c2ddf8c33007a6dde7996775091:-866900116,1e1ed02dd84c33007e5c140ab9f8f9fb:1295070496,df83d69dcf7263005058cd854d88d197:-866900116,0fbd73b08cf2230088b8963f87ef2fe8:674345132,339db7f05ef223002ce0d03f1ee1decb:-461260704,71ef9b90afe22300d92f5fd1d82039ba:674345132,969f1790dae223002c8115456fe7cda7:-461260704,6dcc1710e1e22300fdd7b564cb3a06fd:674345132,368c9fdcd6a223004b28f0dfd823a235:-461260704,5ada5b58d4a22300db8d0ea30134d294:674345132,f96505f3a05ea300406162ebc345dfce:-1625565872,43556064569a2300f5f2a57e2da2bdf3:1186355848,9ddad42cce5a23001567bd41c2a731fd:236801602,1af4d8a4d05a230054ab3b35538fba93:675794882,a8bbd2373f8223005dff517df4634e68:872124117,2ccf79ef1906230081899d660526a035:174905579,192eb56fa60623005b183eeca13cdf1f:-1768292487,e5bcbdabf80623005f3ff8631ad87ce4:-1095414439,6882a3395a8223004f644115b2a9d03b:1410899146,eda35bb5ce42230085fa99d3e891d276:1829412555,22f257b552422300d6411507a6555fec:-1892416150,2e825b755e42230013a261120c58971e:-453268105,e3c11335484223006334e6e4a5e46167:-1424068969,77497c9147422300b55202ee1e6a051f:-1681766161,73b9689576022300caa72e0044abebde:-932172290,d2596095d70223003fa965bf5692f92b:1961216934,4d7209093c0ea300d4c18b527d4b2900:1018296794,b241cd855d0ea300b016276bc8879b4b:420847514,7b4f7c05e40ea300b47f3516338853c7:-944973576,261ff805fe0ea300e4887f8e4ff82b69:-1739355227,0aceb005a60ea30036db8d8595371e33:-1514218632,f58e7881ae0ea300adaea2334f364f94:2017717007,c78a3041640ea300bea8b6ed5a7dda84:-843677462,046ab801120ea3001df9b3efd3562d77:-1373111359,90f9384df7caa300bc6e774c700a8a36:1213421793,4354e48d0d8aa300639504114b55d8b0:1285276138,d7f3648d2d8aa300f9871af478d3012d:643190209,8052280d438aa300d8c372333995e92f:711993877,6dae8a1c72426300f90d54206a7f82f0:-67474241,2c4d82986c42630000f92533f7706198:1783977246,83a0e99c338e230068ff3edbd0b795eb:1752396577,a5d395043b06230019d2f8268f4db5fc:-1580438111,4f8b1243187523006ac23f31b391a3f7:681712257,3144da8b193523003f2ca8dec6942352:931918233,4e932d8765b1230007381e88fba3cb27:1505875839,5864476847e123001f8d493600efd8b4:-225783449,d9144f2874e123008bfd3e6b52befcc5:2006902750,9fbedc4125e123003487829d73db5187:566661286,439ed081c9e123005ea0a5009b746a7e:258184389,c56edc41aee123009e62bbdf3854552c:922364152,c14ed4c963a123006862d4bb985afe2f:745932686,82fd984189e123001b107a208b1eac03:2072753518,6b5d9041f6e1230091234cdb957312f9:-1491337460,1179a330ed61230008f5d3deaf3368a4:-703633333,198fd5d0672963002742ff2aaf1b62a7:653214133,286143162a512300179a9fa1149cb2b5:-1775750717,38097054e32d230066c153d89a7291f0:-1636200943,f90da0cec11d2300a789282db4c2adb4:-1550001264,5e2bec0e941d23003c6e4be6ea73647d:109465690,2c14240a931d23008f95c2656b79cb78:-756353963,d86bf034cfdd23007d1dc2bd4388f9b5:271861652,9c6a34f0e3dd2300ebb1c2d50a13a644:1614316610,24d9f0b0a0dd23002a789efd105eff34:1734769478,e2d8b4b002dd23008ebc5c8deba490b6:-108126077,2c82f8f8069d2300ad66e01a920ca8ca:-1724983683,3612b0b80a9d23008f9ed6d924fbebab:1540364315,42e7dc38935d2300e0de3f2187be1620:-1204231477,43d55438765d2300b45b4b40d5d3b5a8:805268130,e3455c38805d2300ba9a1d44f1804922:857438148,769498386c5d23008c4f4cb8fadcfdaa:-1621338520,7ff39cf4895d2300633e713eb421ff6a:-455666284,e0b318f4605d2300b10bfa56a982ce9e:-316314896,2c53dcb4ac5d2300b70f1da26c784820:-118295809,046e0030cf5d2300a24e1a51fdead2f8:-1385684051,5a788cfc611d2300834f2fa054f91816:-1359240877,6a3880b89f1d2300578725f4028d58dd:736222074,bef704f81c1d2300765aa299e7b18960:219317651,3778a35c2c9d23004a65a19087da4d1f:-1734151823,ee7c32903b5123009605089f4e6c41e6:1099110735,7032f2948b1123001c616915ab60ac94:-1973795082,da7aa294ba112300b82d085ec4d299e7:167166902,992962d48011230041dc3fe7fa285427:-1421300928,3af72254e0112300df0af591a557d7ec:-1813238366,28c7a294e5112300cfe623180e5170df:973855554,4429fa586f1123008c356343f1ee8a18:2132822927,5b187e94d71123000bea3a98b2fd7068:-1307038314,99b73618f4112300b27f5a6a2af81e15:-2042933398,0657f218cd11230072d7e7d6d338d97a:1648023869,fb8672d4761123007154290b730a49c2:249738484,bcf5b2d41e112300c937408694ab6d5b:-1452357570,e5d57e94b31123009aa00be49bc7c8f9:1434758410,36a5fa944011230028d31226edff39e0:-1452357570,70057694ad112300eeec48e8db0b9a7f:-748379148,dc243e148d112300e779c7af6f2f46fc:1749250996,18137e14c01123006f35f53d43d161cc:1366030069,fdd2fed0aa112300645889799a5aef9c:-924826859,d2513e5038112300cc0afe559cc7c569:906787000,d3ff1384d79123009de250047de407ba:1748273886,c27f9744ad91230077e1e88ac5da5a19:-1839780589,ac65707b334d23000d0dd694a833ae15:404346640,0880f077d04d23008ddcaef42728ee77:-925930928,b90d20673e052300b3878e6a48cef20b:-604739952,9bdce827d8052300168951dd9ade705b:-44265639,62cc20274e0523003b3f9084cb9705fe:-1214193021,9269d06bc1c123008ddb2cd9f1add7dd:442875045,8ee8d82beec1230076539f4a76353091:1483245893,4932c82b43812300caab0a4ba5786d37:2145505358,4171882baf8123003a97d0d738cae67f:-1392672512,35e76f9735412300c7c9f3643f2338b9:1228386291,1f95eb57814123005b31550c0a6cdb38:-1917638444,bf75eb57804123002bfb4259192493f4:1228386291,3055e797834123001d0bb75f96d54b7e:385956413,f98d406ab541a3000c48dccebd559719:1413015549,88bc442a8141a3007b868e8875d2b9ec:1470994925</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_ba15471b2fbe6810da242f2ef699b6b5</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="INSERT_OR_UPDATE"><cleared>false</cleared><disabled>ignore</disabled><field>use_external_credential_system</field><mandatory>ignore</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-15 12:55:13</sys_created_on><sys_id>ba15471b2fbe6810da242f2ef699b6b5</sys_id><sys_mod_count>0</sys_mod_count><sys_name>use_external_credential_system</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_ba15471b2fbe6810da242f2ef699b6b5</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-15 12:55:13</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Calm SaaS compatibility test without MID server">aeeb29a72ff12010152959ab2799b6af</ui_policy><visible>false</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>2026690676</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4d5887e5dbcc7c103e3c6a5b8a96195a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e000000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>use_external_credential_system</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>c43543976abe681039922fcb4c93a31a</update_guid>
<update_guid_history>c43543976abe681039922fcb4c93a31a:2026690676</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sysauto_script_86712ae337c5a300fdfc097973990eec</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sysauto_script"&gt;&lt;sysauto_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;business_calendar/&gt;&lt;condition/&gt;&lt;conditional&gt;false&lt;/conditional&gt;&lt;entered_time/&gt;&lt;name&gt;Nutanix_Import Inventories Job&lt;/name&gt;&lt;offset/&gt;&lt;offset_type/&gt;&lt;run_as/&gt;&lt;run_as_tz/&gt;&lt;run_dayofmonth&gt;1&lt;/run_dayofmonth&gt;&lt;run_dayofweek&gt;1&lt;/run_dayofweek&gt;&lt;run_period/&gt;&lt;run_start&gt;2018-10-15 20:23:09&lt;/run_start&gt;&lt;run_time&gt;1970-01-01 09:00:00&lt;/run_time&gt;&lt;run_type&gt;daily&lt;/run_type&gt;&lt;script&gt;&lt;![CDATA[var appUtil;
if(current.active+'' == 'false'){
	appUtil = new Nutanix_Calm_Logger();
	appUtil.error(current.name+' schedule job is in active false state. Please activate it before executing the same.');
}else{
	updateCalmVersion();
	if(new x_nuta2_nutanix_ca.Migration_Script().isCatalogItemsAvailable()){
		appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('startMigration_1_4_4', '', '', '', 'Migrating to v1.4.4', 'This process is migrating v1.4 to v1.4.4');
	}
	if(new x_nuta2_nutanix_ca.Migration_Script().isMigrationNeeded()){
		appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('startMigration', '', '', '', 'Migrating to v1.4', 'This process is migrating v1.3 to v1.4.');
	}
	if(gs.getProperty('x_nuta2_nutanix_ca.1_4_3')+'' == '0'){
		var appUtil = new Nutanix_Calm_Utils();
		appUtil.migrateV1_4_3();
	}
    else{
		appUtil = new Nutanix_Calm_Utils();
		appUtil.insertIntoQueue('startInventorySync', '', '', '', 'Start inventory sync', 'This process is invoking the import of all the inventories.');
	}
}
//to update the calm version on the execution of every Scheduled Job.
function updateCalmVersion(){
	var previous_calm_vesrsion = parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version'));
	var new_calm_version ;
	gs.setProperty('x_nuta2_nutanix_ca.calm_version', '');
	
	var plug_property = new GlideRecord('x_nuta2_nutanix_ca_calm_plugin_configuration');
	plug_property.get(gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id'));
	
	var logger = new Nutanix_Calm_Logger();
    var utils = new Nutanix_Calm_Utils();

    var authResp = utils.makeCalmApiCall("post", "/projects/list", '{"kind" : "project"}');
    var statusCode = authResp.getStatusCode();
   
    if (authResp.getStatusCode() == '200' || authResp.getStatusCode() == '201') {

        var verResp = utils.makeCalmApiVersionCall("get", "/apps/version", '');
        if (verResp.getStatusCode() == '200' || verResp.getStatusCode() == '201') {
            var response = verResp.getBody();
			
			new_calm_version = parseFloat(response.split('.')[0] + '.' + response.split('.')[1]);
			if((parseFloat(new_calm_version) == parseFloat("3.2")) &amp;&amp; (parseFloat(new_calm_version) &gt; parseFloat(previous_calm_vesrsion))){
				gs.setProperty('x_nuta2_nutanix_ca.1_4_4', '0');
			}
			
            plug_property.calm_version = response.split('.')[0] + '.' + response.split('.')[1];
            gs.setProperty('x_nuta2_nutanix_ca.calm_version', plug_property.calm_version);    
            plug_property.update();
			logger.info('Schedule Job Calm Version updated-&gt;' + plug_property.calm_version);
        } else {
            plug_property.calm_version = '';
            plug_property.update();

            gs.addErrorMessage('Nutanix Calm Version cannot be detected.Please check the logs and retry saving properties.');
            logger.error('Schedule Job Calm Version cannot be detected. Error-&gt;' + verResp.getBody());
        }
}
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sysauto_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-15 20:23:44&lt;/sys_created_on&gt;&lt;sys_id&gt;86712ae337c5a300fdfc097973990eec&lt;/sys_id&gt;&lt;sys_mod_count&gt;49&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_Import Inventories Job&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sysauto_script_86712ae337c5a300fdfc097973990eec&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-23 10:05:11&lt;/sys_updated_on&gt;&lt;time_zone/&gt;&lt;upgrade_safe&gt;false&lt;/upgrade_safe&gt;&lt;/sysauto_script&gt;&lt;/record_update&gt;</payload>
<payload_hash>-2076531287</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4d58cb25dbcc7c103e3c6a5b8a96199a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98f4f0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_Import Inventories Job</target_name>
<type>Scheduled Script Execution</type>
<update_domain>global</update_domain>
<update_guid>8bb45fbba76b2010a066cb3ae28dea38</update_guid>
<update_guid_history>8bb45fbba76b2010a066cb3ae28dea38:-2076531287,f0f2363b25efa0103ad9e43db1eee781:-672501994,6216db5b2549201066457bc6c8cfc82b:1317566638,26382a0fc0c9ec50d230cfd42e63ffa8:1631041166,70a77fbc5bc0a010d0d99fdc32a2f9ca:-643791617,fd17ec59f0a7101099c4e43c6e99324e:1059249552,a84646688d0a10108600bbff1fe7639e:149388791,adf1d5453b423300efd7591e2fc93e58:1075233700,adf1d5453b423300efd7591e2fc93e58:1075233700,faaf0cf0634e73003339e40aa173204f:-1548821773,a02c70bfe14033004b36e28116fd7049:-1358784723,32de5d76ef5223009c39603892521554:31952376,d2de2dfdfb122300393a95c77f95b312:-573038441,1b7ead1068d6230054f1dc278008ea21:380856702,d44d65dcad962300011786037f9b043b:392291058,e4532a778e8663005c806592b361b513:1644852760,c673e2bda60a630005bb12698cc6c3e8:551727958,64b79a758e0a630076dee1dfb95c6827:-1723359011,947abddc0082e700dc589dabbaaad2b8:324155052,ac42a01c1d4ea700daa9985af01c1cc9:783621195,ffac5ae834612300eb1d3d4f2d95a64f:-242358860,aa378e6cd12123008df41e96cb544720:-1289391876,ff35ccf9dd51230037da5fb64b6afa08:-1690682619,193746fc21d12300b1009d10d6df0b00:1801983291,00897574c7d12300a302387c737e2a69:140282053,bca32e27e0c5a300f140a7e32713acdd:-1947656956</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_scope_privilege_3aac7cd01b0b64107f2a8515ec4bcbcc</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_scope_privilege"><sys_scope_privilege action="INSERT_OR_UPDATE"><operation>execute</operation><source_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</source_scope><status>allowed</status><sys_class_name>sys_scope_privilege</sys_class_name><sys_created_by>system</sys_created_by><sys_created_on>2021-03-18 05:32:40</sys_created_on><sys_id>3aac7cd01b0b64107f2a8515ec4bcbcc</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CatalogClientScriptJS.create</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_scope_privilege_3aac7cd01b0b64107f2a8515ec4bcbcc</sys_update_name><sys_updated_by>system</sys_updated_by><sys_updated_on>2021-03-18 05:32:40</sys_updated_on><target_name>CatalogClientScriptJS.create</target_name><target_scope display_value="Global">global</target_scope><target_type>scriptable</target_type></sys_scope_privilege></record_update>]]></payload>
<payload_hash>1144411905</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>4d58cb25dbcc7c103e3c6a5b8a96199d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e390000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>CatalogClientScriptJS.create</target_name>
<type>Cross scope privilege</type>
<update_domain>global</update_domain>
<update_guid>f2ac7cd0270b6410c8014be80f31f7cd</update_guid>
<update_guid_history>f2ac7cd0270b6410c8014be80f31f7cd:1144411905</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_caeab4864f337300d8494ebf9310c73e</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Migration_Script&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;true&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Migration_Script&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Migration_Script = Class.create();
Migration_Script.prototype = {

    initialize: function() {
        this.appUtil = new Nutanix_Calm_Utils();
        this.logger = new Nutanix_Calm_Logger();
        this.createVariable = new Nutanix_CreateCatalogVariables();
        this.appScriptInstance = new Nutanix_ImportApplicationProfiles();
    },
	
    addEnvironmentVariableToAllCatalogs: function() {
    try {
		if((parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &gt;= parseFloat("3.2")) &amp;&amp; (gs.getProperty('x_nuta2_nutanix_ca.1_4_4') == '0') ){
			gs.info("13");
			var mpi_cat_item = new GlideRecord('x_nuta2_nutanix_ca_nutanix_marketplaceitems');
			mpi_cat_item.query();
			while(mpi_cat_item.next()){
				var grItem = new GlideRecord("item_option_new");
				grItem.addQuery('name','default_environment');
				grItem.addQuery('cat_item',mpi_cat_item.sys_id + "");
				grItem.query();
				if(!grItem.hasNext()){
					grItem.initialize();
					grItem.type = 5;
					grItem.cat_item = mpi_cat_item.sys_id + "";
					grItem.active = true;
					grItem.question_text = 'Environment';
					grItem.name = 'default_environment';
					grItem.order = 2;
					var env_SysID = grItem.insert();  
				}
			}
			gs.info("32");
			var bp_cat_item = new GlideRecord('x_nuta2_nutanix_ca_nutanix_blueprint');
			bp_cat_item.query();
			while(bp_cat_item.next()){
				var grItem = new GlideRecord("item_option_new");
				grItem.addQuery('name','default_environment');
				grItem.addQuery('cat_item', bp_cat_item.sys_id + "");
				grItem.query();
				if(!grItem.hasNext()){
					grItem.initialize();
					grItem.type = 5;
					grItem.cat_item = bp_cat_item.sys_id + "";
					grItem.active = true;
					grItem.question_text = 'Environment';
					grItem.name = 'default_environment';
					grItem.order = 2;
					var env_SysID = grItem.insert();
				}
			}
			gs.info("52");

			var cat_items = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
			cat_items.query();
			while (cat_items.next()) {
				var grItem = new GlideRecord("item_option_new");
				grItem.initialize();
				grItem.type = 5;
				grItem.cat_item = cat_items.item_name + "";
				grItem.active = true;
				grItem.question_text = 'Environment';
				grItem.name = 'default_environment';
				grItem.order = 2;
				grItem.sys_scope = "global";
				var env_SysID = grItem.insert();
				gs.info("67");



				//Creating new scripts:
				var projectSysID = "";
				var profileSysID = "";
				var app_name_SysID = "";
				var env_variable_SysID = "";
				gs.info("76");
				var grItemProf = new GlideRecord("item_option_new");
				grItemProf.addQuery("cat_item", cat_items.item_name);
				var qc = grItemProf.addQuery("name", "default_project");
				qc.addOrCondition('name', 'default_profile');
				qc.addOrCondition('name', 'default_app_name');
				qc.addOrCondition('name', 'default_environment');
				grItemProf.query();

				while (grItemProf.next()) {
					if (grItemProf.name + '' == "default_project")
						projectSysID = grItemProf.sys_id + "";
					if (grItemProf.name + '' == "default_profile")
						profileSysID = grItemProf.sys_id + "";
					if (grItemProf.name + '' == "default_app_name")
						app_name_SysID = grItemProf.sys_id + "";
					if (grItemProf.name + '' == "default_environment")
						env_variable_SysID = grItemProf.sys_id + "";
				}
				gs.info("92");
	//             gs.info("**************** projectSysID " + projectSysID + " profileSysID " + profileSysID);


				var onChangeCatalogProject = new sn_sc.CatalogClientScript();
				onChangeCatalogProject.setAttributes({
					"name": "On Change of Project",
					"type": "onChange",
					"applies_to": "item",
					"cat_item": cat_items.item_name + '',
					"cat_variable": "IO:" + projectSysID,
					"active": true,
					"order": 700,
					"description": "This script is auto created thorugh runtime module for getting variables on change of project.",
					"applies_catalog": true,
					"ui_type": "0",
					"applies_req_item": false,
					"applies_sc_task": false,

				});
				onChangeCatalogProject.appliesToCatalogItem(true);
				var onChangeProjectScript = "function onChange(control, oldValue, newValue, isLoading){if (isLoading || newValue == ''){return;}var project = g_form.getValue('default_project');var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchEnvironments');ga.addParam('sysparm_project', project);ga.getXML(parseResponse);function parseResponse(response){var answer = response.responseXML.documentElement.getAttribute('answer');var result = JSON.parse(answer);if (result.length == 0) {g_form.hideFieldMsg('default_environment', true);g_form.clearOptions('default_environment');g_form.showFieldMsg('default_environment', 'This Project has no valid Environments configured, you cannot proceed with the launch.  Please contact your administrator'); g_form.hideFieldMsg('default_profile', true);g_form.clearOptions('default_profile');g_form.setMandatory('default_profile', true);g_form.showFieldMsg('default_profile', 'There are no applicable Profile(s) that match the selected Environment.  Please choose a different Environment to proceed.');var elemen = g_form.elements;for (var i in elemen) { g_form.setDisplay(elemen[i].fieldName, false);} g_form.setDisplay('default_profile', true);g_form.setDisplay('default_project', true);g_form.setDisplay('default_environment', true);g_form.setMandatory('default_profile', true);}else{g_form.clearMessages();g_form.clearOptions('default_environment');for (var i = 0; i &lt; result.length; i++){var jsonObj = result[i];g_form.addOption('default_environment', jsonObj.UUID + '', jsonObj.Name + '');}}}}";
				onChangeCatalogProject.addScript(onChangeProjectScript);
				var OnChangeCatalogScriptId = onChangeCatalogProject.create();
				var gr = new GlideRecord('catalog_script_client');
				if (gr.get(OnChangeCatalogScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
	//             gs.info("catalog client script  71 " + OnChangeCatalogScriptId);
				gs.info("123");


				var onChangeCatalogEnvironment = new sn_sc.CatalogClientScript();
				onChangeCatalogEnvironment.setAttributes({
					"name": "On Change of Environment variable",
					"type": "onChange",
					"applies_to": "item",
					"cat_item": cat_items.item_name + '', 
					"cat_variable": "IO:" + env_variable_SysID,
					"active": true,
					"order": 700,
					"description": "This script is auto created thorugh runtime module for getting variables on change of project.",
					"applies_catalog": true,
					"ui_type": "0",
					"applies_req_item": false,
					"applies_sc_task": false,

				});
				onChangeCatalogEnvironment.appliesToCatalogItem(true);
				var onChangeEnvironmentScript = "function onChange(control, oldValue, newValue, isLoading){if (isLoading || newValue == '') {return;} var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\";var loadingDialog = new GlideModal('environment_loader', true);loadingDialog.setTitle('Fetching Profiles...');loadingDialog.renderWithContent('' + loadingHTML);var gUrl = new GlideURL();gUrl.setFromCurrent();var def_project;for (var i = 0; i &lt; g_form.getControl('default_project').options.length; i++){if (g_form.getControl('default_project').options[i].value == g_form.getValue('default_project')) {def_project = g_form.getControl('default_project').options[i].innerText;break;}}var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchProfilesBasisOnEnvironment');ga.addParam('sysparm_env', g_form.getValue('default_environment'));ga.addParam('sysparm_proValue', g_form.getValue('default_project'));ga.addParam('sysparm_pro', def_project + '');ga.addParam('sysparm_profile', gUrl.getParam('profileSysId'));ga.addParam('sysparm_blueprint', gUrl.getParam('uuid'));ga.addParam('sysparm_type', gUrl.getParam('type'));ga.getXML(parseData);function parseData(response) {var answer = response.responseXML.documentElement.getAttribute('answer');jslog(' On Change of Environment variable answer' + answer);answer = JSON.parse(answer);if (answer.length == 0) {g_form.hideFieldMsg('default_profile', true); g_form.clearOptions('default_profile');g_form.showFieldMsg('default_profile', 'There are no applicable Profile(s) that match the selected Environment.  Please choose a different Environment to proceed.');var elemen = g_form.elements;for (var i in elemen) {g_form.setDisplay(elemen[i].fieldName, false);}g_form.setDisplay('default_profile', true);g_form.setDisplay('default_project', true);g_form.setDisplay('default_environment', true);g_form.setMandatory('default_profile', true);}else{var elemen = g_form.elements;for (var i in elemen) {g_form.setDisplay(elemen[i].fieldName, true);}g_form.hideFieldMsg('default_profile', true);g_form.clearOptions('default_profile');for (var i = 0; i &lt; answer.length; i++) {g_form.addOption('default_profile', answer[i], answer[i]);}if (answer.length == 1) {g_form.setReadOnly('default_profile', true);}}new GlideModal().get('environment_loader').destroy();new GlideModal().get('environment_loader').destroy();new GlideModal().get('environment_loader').destroy();var cat_sys_id = g_form.getUniqueValue(); var profile = g_form.getValue('default_profile').trim();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchLaunchVars');ga.addParam('sysparm_catsysid', cat_sys_id);ga.addParam('sysparm_profile', profile);ga.getXML(varResponse);}function varResponse(response){var answer = response.responseXML.documentElement.getAttribute('answer');var varJSON = JSON.parse(answer);var prof_json = varJSON.profile;var serv_json = varJSON.service;var sess_json = {};var var_array = [];for (var i in prof_json){var field = prof_json[i];var curr_value = g_form.getValue('IO:' + i); var parsed_field = JSON.parse(field);parsed_field.value = curr_value; parsed_field.sys_id = i + '';sess_json['IO:' + i] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);for (var j in serv_json){var_array = [];for (var k in serv_json[j]){var field = serv_json[j][k];var curr_value = g_form.getValue('IO:' + k);parsed_field.value = curr_value;parsed_field.sys_id = k + '';sess_json['IO:' + k] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);}sessionStorage['varValues'] = JSON.stringify(sess_json);}}function getAdvancedVars(variable_json){var act_var_JSON = JSON.stringify(variable_json);var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); gajax.addParam('sysparm_name', 'variableArrayParser');gajax.addParam('sysparm_type', 'catalog');gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + '');gajax.addParam('sysparm_varJson', act_var_JSON);gajax.getXML(getVarResponse);}function getVarResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');if (answer + '' == '' || answer + '' == 'undefined' || answer + '' == 'null') return;var parsedResponse = JSON.parse(answer);for (var i in parsedResponse) {var row = parsedResponse[i];var sys_id = 'IO:' + row.sys_id;var type = row.type + '';if (row.state == 'SUCCESS'){if (type == 'LOCAL') g_form.setValue(sys_id, row.value);if (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET'){g_form.clearOptions(sys_id);for (var k = 0; k &lt; (row.value).length; k++){g_form.addOption(sys_id + '', row.value[k], row.value[k]);}}}if (row.state == 'ERROR') {g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]);}}}";
				onChangeCatalogEnvironment.addScript(onChangeEnvironmentScript);
				var OnChangeCatalogScriptId = onChangeCatalogEnvironment.create();
				var gr = new GlideRecord('catalog_script_client');
				if (gr.get(OnChangeCatalogScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
	//             gs.info("catalog client script  100 " + OnChangeCatalogScriptId);
				gs.info("152");

				var catalogScriptGR = new GlideRecord('catalog_script_client');
				catalogScriptGR.addQuery('cat_item', cat_items.item_name + '');
				catalogScriptGR.query();
				while (catalogScriptGR.next()) {
					//  gs.info(catalogScriptGR.name + "catalog client script updatated");
					if (catalogScriptGR.name + '' == "Get Project and Profile List onLoad") {
	//                     gs.info("final If " + catalogScriptGR.name + "catalog client script updatated");
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					if (catalogScriptGR.name + '' == "Fetch form data on change of profile") {
						this.logger.info(" final If " + catalogScriptGR.name + "catalog client script updatated");
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					if (catalogScriptGR.name + '' == "Check AppName OnChange") {
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					if (catalogScriptGR.name + '' == "Check AppName OnSubmit") {
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					if (catalogScriptGR.name + '' == "Hide Order details on request") {
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
				}
				gs.info("174");

				var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
				onLoadCatalogClientScript.setAttributes({
					"name": "Get Project and Profile List onLoad",
					"type": "onLoad",
					"applies_to": "item",
					"cat_item": cat_items.item_name + '',
					"active": "true",
					"order": "100",
					"description": "This script is auto created thorugh runtime module for getting projects and profile list.",
					"applies_catalog": "true",
					"ui_type": "0",
					"applies_req_item": false,
					"applies_sc_task": false
				});
				onLoadCatalogClientScript.appliesToCatalogItem(true);
				var onLoadScript = "function onLoad() {var cat_sys_id = g_form.getUniqueValue();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchProjectAndProfileList');ga.addParam('sysparm_catSysID', cat_sys_id);ga.getXML(parseResponse);function parseResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');var parsed = JSON.parse(answer);var projectList = parsed.projectList;g_form.clearOptions('default_project');for (var i = 0; i &lt; projectList.length; i++) {var project = projectList[i];g_form.addOption('default_project', project.uuid, project.name)} if (projectList.length == 1) { g_form.setReadOnly('default_project', true)}new GlideModal().get('loader').destroy();}}";
				onLoadCatalogClientScript.addScript(onLoadScript);
				var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();
				var gr = new GlideRecord('catalog_script_client');
				if (gr.get(onLoadCatalogClientScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
				gs.info("198");
	//             gs.info("catalog client script  140 " + onLoadCatalogClientScriptId);

				var catalogScriptGR = new sn_sc.CatalogClientScript();
				catalogScriptGR.setAttributes({
					"name": "Fetch form data on change of profile",
					"type": "onChange",
					"applies_to": "item",
					"cat_item": cat_items.item_name + '',
					"cat_variable": "IO:" + profileSysID,
					"active": true,
					"order": 100,
					"description": 'This script is auto created thorugh runtime module for fetching and setting form data and visibility.',
					"applies_catalog": true,
					"ui_type": "0",
					"applies_req_item": false,
					"applies_sc_task": false,
				});
				catalogScriptGR.appliesToCatalogItem(true);
				var script = "function onChange(control, oldValue, newValue, isLoading) { if (isLoading ) { return; } if(newValue == '') return; var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; } g_form.setDisplay(flds[i].prettyName, false); } g_form.setVariablesReadOnly(true); g_form.setDisplay('provider_icons', false); g_form.setReadOnly('default_project', false); g_form.setReadOnly('default_app_name', false); g_form.setReadOnly('default_profile', false); g_form.setDisplay('default_project', true); g_form.setDisplay('default_app_name', true); g_form.setDisplay('default_profile', true);g_form.setMandatory('default_profile', true); g_form.setDisplay('default_environment', true); g_form.setReadOnly('default_environment', false); var profile = newValue; var cat_sys_id = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchOrderFormData'); ga.addParam('sysparm_profile', profile); ga.addParam('sysparm_catSysID', cat_sys_id); ga.getXML(parseResponse); function parseResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } var nameTypeMap = {}; var flds = g_form.nameMap; for (var i in flds) { nameTypeMap[flds[i].prettyName + ''] = fldType[flds[i].realName + ''] + ''; } var fielVal = {}; var parsed = JSON.parse(answer); for (var i in parsed) { if (i.indexOf('cluster_name') == -1) { if (nameTypeMap[i + ''] + '' == 'masked') { fielVal[i] = parsed[i].value; g_form.setValue(i + '', ''); } else { g_form.setValue(i + '', parsed[i].value + ''); } g_form.setReadOnly(i + '', parsed[i].readOnly + ''); g_form.setDisplay(i + '', !parsed[i].readOnly); } else { g_form.setDisplay(i + '', !parsed[i].readOnly); g_form.setReadOnly(i + '', true); } } sessionStorage['fieldValues_' + g_form.getUniqueValue()] = JSON.stringify(fielVal); new GlideModal().get('loader').destroy(); var cat_sys_id = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchCredentialsList'); ga.addParam('sysparm_catSysID', cat_sys_id); ga.getXML(parseResponse); function parseResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); var credArr = {}; var parsed = JSON.parse(answer); for (var i in parsed) { var credential = parsed[i]; var name = (credential.actual_name + '').toLowerCase().replace(/ /g, '_'); g_form.setValue(name + '_credential_name', credential.name + ''); g_form.setReadOnly(name + '_credential_name', true); g_form.setValue(name + '_secret_type', credential.type + '', (credential.type + '' == 'KEY') ? 'SSH Private Key' : 'Password'); g_form.setReadOnly(name + '_secret_type', true); g_form.setValue(name + '_username', credential.username.value); g_form.setReadOnly(name + '_username', credential.username.readOnly); g_form.setDisplay(name + '_username', !credential.username.readOnly); if ((credential.type == 'KEY')) { g_form.setValue(name + '_ssh_private_key', credential.ssh_private_key.value); g_form.setReadOnly(name + '_ssh_private_key', credential.ssh_private_key.readOnly); g_form.setValue(name + '_passphrase', credential.passphrase.value); g_form.setReadOnly(name + '_passphrase', credential.passphrase.readOnly); g_form.setDisplay(name + '_password', 'false'); g_form.setDisplay(name + '_ssh_private_key', !credential.ssh_private_key.readOnly); g_form.setDisplay(name + '_passphrase', !credential.passphrase.readOnly); } else { g_form.setValue(name + '_password', ''); credArr[name + '_password'] = credential.password.value; g_form.setReadOnly(name + '_password', credential.password.readOnly); g_form.setDisplay(name + '_password', !credential.password.readOnly); g_form.setDisplay(name + '_ssh_private_key', 'false'); g_form.setDisplay(name + '_passphrase', 'false'); } g_form.setDisplay(name + '_credential_reference', 'false'); if (credential.credential_reference &amp;&amp; credential.credential_reference.name) { g_form.setDisplay(name + '_credential_reference', 'true'); g_form.addOption(name + '_credential_reference', credential.credential_reference.uuid + '', credential.credential_reference.name + ''); g_form.setReadOnly(name + '_credential_reference', credential.credential_reference.readOnly); g_form.setDisplay(name + '_credential_reference', !credential.credential_reference.readOnly); g_form.setDisplay(name + '_ssh_private_key', 'false'); g_form.setDisplay(name + '_passphrase', 'false'); g_form.setDisplay(name + '_password', 'false'); g_form.setDisplay(name + '_secret_type', 'false'); } } sessionStorage['credentials_' + g_form.getUniqueValue()] = JSON.stringify(credArr); new GlideModal().get('loader').destroy(); } }}";
				catalogScriptGR.addScript(script);
				var ScriptId = catalogScriptGR.create();
				if (gr.get(ScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
				gs.info("225");
			 //   gs.info("catalog client script  170 " + ScriptId);
				
				var onChangecatalogClientScript = new sn_sc.CatalogClientScript();
				onChangecatalogClientScript.setAttributes({
				      "name":"Check AppName OnChange",
				      "type":"onChange",
				      "applies_to":"item",
				      "cat_item":cat_items.item_name + '',
				      "cat_variable":"IO:"+app_name_SysID,
				      "active":true,
				      "order":100,
				      "description":"This script is auto created thorugh runtime module for checking application name.",
				      "applies_catalog":true,
				      "ui_type":"0",
				      "applies_req_item":false,
				      "applies_sc_task":false,

				});
				onChangecatalogClientScript.appliesToCatalogItem(true);
                var onChangeScript = "function onChange(control, oldValue, newValue, isLoading) {if (isLoading || newValue == '') {return;}var name = newValue; if ((newValue.length != ((newValue.trim()).length))  || (!(/^[_-\\w ]+$/.test(name) &amp;&amp; (name.trim().lastIndexOf('-') != (name.trim().length - 1))))) {g_form.clearValue('default_app_name'); g_form.showErrorBox('default_app_name', 'Only alphanumeric characters, underscores(_), hyphens(-) and in between spaces are allowed and cannot end with hyphens(-). Leading and trailing spaces are not allowed.');}}";
                onChangecatalogClientScript.addScript(onChangeScript);
                var OnChangeCatalogScriptId = onChangecatalogClientScript.create();
				var gr = new GlideRecord('catalog_script_client');
				if (gr.get(OnChangeCatalogScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
				gs.info("253");
				
				 var onSubmitcatalogScriptGR = new sn_sc.CatalogClientScript();
                onSubmitcatalogScriptGR.setAttributes({
                    "name": "Check AppName OnSubmit",
                    "type": "onSubmit",
                    "applies_to": "item",
                    "cat_item": cat_items.item_name + '',
                    "active": true,
                    "order": 100,
                    "description": "This script is auto created thorugh runtime module for checking application name on submit.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false,
                });
                onSubmitcatalogScriptGR.appliesToCatalogItem(true);
                var onSubmitscript = "function onSubmit() { var result = true; var name = g_form.getValue('default_app_name'); if (!(/^[_-\\w ]+$/.test(name) &amp;&amp; (name.trim().lastIndexOf('-') != (name.trim().length - 1)))) { g_form.showErrorBox('default_app_name', 'Only alphanumeric characters, underscores(_), hyphens(-) and spaces are allowed and cannot end with hyphens(-).'); result = false; } var errorFieldName = ''; var errorIntFieldName = ''; var parse = JSON.parse(sessionStorage.getItem('FieldRegex_' + g_form.getUniqueValue())); var keys = Object.keys(parse); for (var i = 0; i &lt; keys.length; i++) { var row = parse[keys[i] + '']; var patt = row.regex + ''; var reg = new RegExp(patt); var value = g_form.getValue(keys[i] + ''); var dataType = (row.data_type + '' == 'EXEC_SECRET' || row.data_type + '' == 'HTTP_SECRET' || row.data_type + '' == 'EXEC_LOCAL' || row.data_type + '' == 'HTTP_LOCAL') ? 'Dynamic' : row.data_type + ''; if (row.type + '' == 21) { var splitted = value.split(','); var actualVal = row.listRegex; var count = 0; for (var j = 0, n = splitted.length; j &lt; n; j++) { var listVal = actualVal[splitted[j] + ''];  if ((dataType + '' == 'Dynamic' || dataType + '' == 'PREDEFINED') &amp;&amp; j == n - 1 &amp;&amp; listVal.includes('\n')){ while(listVal.indexOf('\n') != -1){ listVal = listVal.replace('\n','');} if (reg.test(listVal)) { count++;} } if (count == n) row.status = true; } else { if ((dataType + '' == 'Dynamic' || dataType + '' == 'PREDEFINED') &amp;&amp; value.includes('\n')){while(value.indexOf('\n') != -1){value = value.replace('\n','');}} if (reg.test(value)) { row.status = true; } } if (value &amp;&amp; row.status == false) { result = false; g_form.hideFieldMsg(keys[i] + ''); if(dataType == ''){ errorIntFieldName += g_form.getLabelOf(keys[i] + '') + ','; g_form.showErrorBox(keys[i] + '', 'This is a Integer field.Please provide a integer value.'); } else{ errorFieldName += g_form.getLabelOf(keys[i] + '') + ','; g_form.showErrorBox(keys[i] + '', 'Value does not match specified regex: ' + row.regex); } }} if (result) {   var parse = JSON.parse(sessionStorage.getItem('fieldValues_' + g_form.getUniqueValue())); for(var i in parse){ if(g_form.getValue(i)+''=='') g_form.setValue(i, parse[i]); } 			 parse = JSON.parse(sessionStorage.getItem('credentials_' + g_form.getUniqueValue())); for(var i in parse){ if(g_form.getValue(i)+''=='') g_form.setValue(i, parse[i]); } 		 sessionStorage.removeItem('fieldValues_' + g_form.getUniqueValue()); sessionStorage.removeItem('credentials_' + g_form.getUniqueValue());      sessionStorage.removeItem('clusterName_' + g_form.getUniqueValue()); sessionStorage.removeItem('FieldRegex_' + g_form.getUniqueValue());var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\" ;var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Validating field value with regex..'); loadingDialog.renderWithContent(''+loadingHTML);} else { errorIntFieldName = (errorIntFieldName.endsWith(',')) ? errorIntFieldName.substr(0, errorIntFieldName.length - 1) : errorIntFieldName; errorFieldName = (errorFieldName.endsWith(',')) ? errorFieldName.substr(0, errorFieldName.length - 1) : errorFieldName; if(errorIntFieldName != '' ) g_form.addErrorMessage('Variables are Integer field.Please provide suitable values: ' + errorIntFieldName); if(errorFieldName != '' ) g_form.addErrorMessage('Variables value does not match specified Regex.Please provide suitable values: ' + errorFieldName); new GlideModal().get('loader').destroy(); return false; }var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Checking Blueprint Status...'); loadingDialog.renderWithContent(''+loadingHTML); var blueprintType = getParameterValue('type')+''; var blueprintUUID = getParameterValue('uuid')+''; var profileSysId = getParameterValue('profileSysId')+'';var profileName = (g_form.getValue('default_profile')+'').trim(); if(profileName == '') return; var projectUUID = (g_form.getValue('default_project')+'').trim(); if(projectUUID == '') return; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'checkCatalogValidity'); ga.addParam('blueprintType', blueprintType); ga.addParam('blueprintUUID', blueprintUUID); ga.addParam('profileSysId', profileSysId); ga.addParam('projectUUID', projectUUID); ga.addParam('profileName', profileName);ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var message=''; if (answer + '' == 'INACTIVE') { message= 'Project/Profile/Blueprint/MPI is not available at Calm. So, Catalog Item can\\'t be launched. Re-Directing back to catalog launch page.'; clearFieldValue(message); } else if (answer + '' == 'CANTCHECK') { message='Can\\'t check whether the Project/Profile/BP/MPI from which the catalog item was created is available or not. Please check the connection with Calm. Re-Directing back to catalog launch page.'; clearFieldValue(message); } new GlideModal().get('loader').destroy(); }  function clearFieldValue(message){ var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } alert(message); var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; }if(flds[i].label == \"Project\"  &amp;&amp; flds[i].prettyName == \"default_project\")continue;if(flds[i].label == \"Profile\"  &amp;&amp; flds[i].prettyName == \"default_profile\")continue;if (flds[i].prettyName.indexOf('cluster_name') == -1) g_form.clearValue(flds[i].prettyName);  /*	 self.location = '/x_nuta2_nutanix_ca_nutanix_runtime_configuration_list.do?sysparm_userpref_module=29d7d2e54f41230065e48020a310c7f6&amp;sysparm_view=catalog_view&amp;sysparm_query=GROUPBYitem_name.category&amp;sysparm_clear_stack=true'; 	*/			} }  function getParameterValue(name) {   name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");   var regexS = \"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\";   var regex = new RegExp(regexS);   var results = regex.exec(self.location);   if (results == null) {   return \"\";   } else {   return unescape(results[1]);   }   }}";
                onSubmitcatalogScriptGR.addScript(onSubmitscript);
                var onSubmitcatalogScriptId = onSubmitcatalogScriptGR.create();
				var gr = new GlideRecord('catalog_script_client');
				if (gr.get(onSubmitcatalogScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
				
				 var onLoadCatalogClientScriptGR = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScriptGR.setAttributes({
                    "name": "Hide Order details on request",
                    "type": "onLoad",
                    "applies_to": "item",
                    "cat_item": cat_items.item_name + '',
                    "active": true,
                    "order": 10,
                    "description": "Hide values on request details.",
                    "applies_catalog": "false",
                    "ui_type": "0",
                    "applies_req_item": "true",
                    "applies_sc_task": "false"
                });
                onLoadCatalogClientScriptGR.appliesToCatalogItem(false);
                onLoadCatalogClientScriptGR.appliesToRequestedItem(true);
                var onLoadScriptHide = "function onLoad() {if(g_form.getTableName() + '' == 'sc_req_item') {var fldType = {};var elemen = g_form.elements;for (var i in elemen) {fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var flds = g_form.nameMap;for (var i in flds) {if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') {continue;}g_form.setDisplay(flds[i].prettyName, false);}g_form.setVariablesReadOnly(true);g_form.setDisplay('provider_icons', 'false');g_form.setReadOnly('default_project', false);g_form.setReadOnly('default_environment', false);g_form.setReadOnly('default_app_name', false);g_form.setReadOnly('default_profile', false);g_form.setDisplay('default_project', true);g_form.setDisplay('default_environment', true);g_form.setDisplay('default_app_name', true);g_form.setDisplay('default_profile', true);var profile = g_form.getValue('default_profile') + '';var cat_sys_id = g_form.getValue('cat_item') + '';var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchOrderFormData');ga.addParam('sysparm_profile', profile + '');ga.addParam('sysparm_catSysID', cat_sys_id + '');ga.getXML(parseResponse);} function parseResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');var fldType = {};var elemen = g_form.elements;for (var i in elemen) {fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var nameTypeMap = {};var flds = g_form.nameMap;for (var i in flds) {nameTypeMap[flds[i].prettyName + ''] = fldType[flds[i].realName + ''] + '';}var fielVal = {};var parsed = JSON.parse(answer);for (var i in parsed) {if (i.indexOf('cluster_name') == -1) {if (nameTypeMap[i + ''] + '' == 'masked') {fielVal[i] = parsed[i].value;g_form.setValue(i + '', '');}g_form.setReadOnly(i + '', true); g_form.setDisplay(i + '', !parsed[i].readOnly);} else {g_form.setDisplay(i + '', !parsed[i].readOnly);g_form.setReadOnly(i + '', true);}}sessionStorage['fieldValues_' + g_form.getUniqueValue()] = JSON.stringify(fielVal);}}";
                onLoadCatalogClientScriptGR.addScript(onLoadScriptHide);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScriptGR.create();
				if (gr.get(onLoadCatalogClientScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
			}
		 this.fetchValuesOnChangeClientScript();
			
		}
		if((parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &lt; parseFloat("3.2")) &amp;&amp; (gs.getProperty('x_nuta2_nutanix_ca.1_4_4') == '0')){
			gs.info("inside calm version &lt; 3.2 219");
			var cat_items1 = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
			cat_items1.query();
			while (cat_items1.next()) {
 				gs.info("263");
				
				var grItemProf1 = new GlideRecord("item_option_new");
				grItemProf1.addQuery("cat_item", cat_items1.item_name);
				var qc = grItemProf1.addQuery("name", "default_profile");
				qc.addOrCondition('name', 'default_app_name');
				grItemProf1.query();
				var profileSysID,appSysID ;
				while (grItemProf1.next()) {
					if (grItemProf1.name + '' == "default_profile")
						profileSysID = grItemProf1.sys_id + "";
					if (grItemProf1.name + '' == "default_app_name")
						appSysID = grItemProf1.sys_id + "";
				}
 				gs.info("277");
				
				var catalogScriptGR = new GlideRecord('catalog_script_client');
				catalogScriptGR.addQuery('cat_item', cat_items1.item_name + '');
				catalogScriptGR.query();
				while (catalogScriptGR.next()) {
					if (catalogScriptGR.name + '' == "Fetch dependencies on change of profile") {
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					if (catalogScriptGR.name + '' == "Get Project and Profile List onLoad") {
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					if (catalogScriptGR.name + '' == "Check AppName OnChange") {
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					if (catalogScriptGR.name + '' == "Fetch form data on change of profile") {
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					if (catalogScriptGR.name + '' == "Check AppName OnSubmit") {
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					if (catalogScriptGR.name + '' == "Hide Order details on request") {
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
				}
 				gs.info("300");
				
				var catalogScriptGR = new sn_sc.CatalogClientScript();
                catalogScriptGR.setAttributes({
                    "name": "Fetch form data on change of profile",
                    "type": "onChange",
                    "applies_to": "item",
                    "cat_item": cat_items1.item_name + '',
                    "cat_variable": "IO:" + profileSysID,
                    "active": true,
                    "order": 100,
                    "description": 'This script is auto created thorugh runtime module for fetching and setting form data and visibility.',
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false,
                });
                catalogScriptGR.appliesToCatalogItem(true);
				var script =  "function onChange(control, oldValue, newValue, isLoading) {if (newValue == '') {return;} var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialogbox = new GlideModal('loader', true);loadingDialogbox.setTitle('Fetching Order Form Data...'); loadingDialogbox.renderWithContent(''+loadingHTML);var fldType = {};var elemen = g_form.elements;for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var flds = g_form.nameMap;for (var i in flds) {if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') {continue;} g_form.setDisplay(flds[i].prettyName, false);}g_form.setVariablesReadOnly(true);g_form.setDisplay('provider_icons', 'false');g_form.setReadOnly('default_project', false);g_form.setReadOnly('default_app_name', false);g_form.setReadOnly('default_profile', false);g_form.setDisplay('default_project', true);g_form.setDisplay('default_app_name', true);g_form.setDisplay('default_profile', true);var profile = newValue;var cat_sys_id = g_form.getUniqueValue();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchOrderFormData');ga.addParam('sysparm_profile', profile);ga.addParam('sysparm_catSysID', cat_sys_id);ga.getXML(parseResponse, null, loadingDialogbox);function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer');   var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; }  var nameTypeMap = {}; var flds = g_form.nameMap; for(var i in flds){ nameTypeMap[flds[i].prettyName+''] = fldType[flds[i].realName+'']+''; } 		  var fielVal = {};  var parsed = JSON.parse(answer);for (var i in parsed) {if(i.indexOf('cluster_name') == -1){ if(nameTypeMap[i+'']+'' == 'masked'){ fielVal[i] = parsed[i].value; g_form.setValue(i + '', ''); } else{ g_form.setValue(i + '', parsed[i].value + ''); }			 g_form.setReadOnly(i + '', parsed[i].readOnly + ''); g_form.setDisplay(i + '', !parsed[i].readOnly);	 }else{ g_form.setDisplay(i + '', !parsed[i].readOnly);	 g_form.setReadOnly(i + '', true);	 			}		}   sessionStorage['fieldValues_' + g_form.getUniqueValue()] = JSON.stringify(fielVal);		  new GlideModal().get('loader').destroy();var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\";var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching Credentials List...'); loadingDialog.renderWithContent(''+loadingHTML); var cat_sys_id = g_form.getUniqueValue();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchCredentialsList');ga.addParam('sysparm_catSysID', cat_sys_id);ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) {var answer = response.responseXML.documentElement.getAttribute('answer'); var credArr = {}; var parsed = JSON.parse(answer);for (var i in parsed) { var credential = parsed[i]; var name = (credential.actual_name + '').toLowerCase().replace(/ /g, '_');g_form.setValue(name + '_credential_name', credential.name + ''); g_form.setReadOnly(name + '_credential_name', true); g_form.setValue(name + '_secret_type', credential.type + '', (credential.type + '' == 'KEY') ? 'SSH Private Key' : 'Password'); g_form.setReadOnly(name + '_secret_type', true); g_form.setValue(name + '_username', credential.username.value); g_form.setReadOnly(name + '_username', credential.username.readOnly); g_form.setDisplay(name + '_username', !credential.username.readOnly); if ((credential.type == 'KEY')) {g_form.setValue(name + '_ssh_private_key', credential.ssh_private_key.value); g_form.setReadOnly(name + '_ssh_private_key', credential.ssh_private_key.readOnly); g_form.setValue(name + '_passphrase', credential.passphrase.value); g_form.setReadOnly(name + '_passphrase', credential.passphrase.readOnly); g_form.setDisplay(name + '_password', 'false'); g_form.setDisplay(name + '_ssh_private_key', !credential.ssh_private_key.readOnly); g_form.setDisplay(name + '_passphrase', !credential.passphrase.readOnly); } else { g_form.setValue(name + '_password', ''); credArr[name + '_password'] = credential.password.value; g_form.setReadOnly(name + '_password', credential.password.readOnly); g_form.setDisplay(name + '_password', !credential.password.readOnly); g_form.setDisplay(name + '_ssh_private_key', 'false'); g_form.setDisplay(name + '_passphrase', 'false');}g_form.setDisplay(name + '_credential_reference', 'false'); if (credential.credential_reference &amp;&amp; credential.credential_reference.name) {g_form.setDisplay(name + '_credential_reference', 'true');g_form.addOption(name + '_credential_reference', credential.credential_reference.uuid + '', credential.credential_reference.name + '');g_form.setReadOnly(name + '_credential_reference', credential.credential_reference.readOnly);g_form.setDisplay(name + '_credential_reference', !credential.credential_reference.readOnly);g_form.setDisplay(name + '_ssh_private_key', 'false');g_form.setDisplay(name + '_passphrase', 'false');g_form.setDisplay(name + '_password', 'false');g_form.setDisplay(name + '_secret_type', 'false');}} sessionStorage['credentials_' + g_form.getUniqueValue()] = JSON.stringify(credArr); new GlideModal().get('loader').destroy();}}}";
				catalogScriptGR.addScript(script);
                var ScriptId = catalogScriptGR.create();
			    var gr = new GlideRecord('catalog_script_client');
				if (gr.get(ScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
 			   gs.info("326");
			
				var onChangecatalogClientScript3 = new sn_sc.CatalogClientScript();
				onChangecatalogClientScript3.setAttributes({
						 "name":"Fetch dependencies on change of profile",
						 "type":"onChange",
						 "applies_to":"item",
						 "cat_item": cat_items1.item_name + '',
						 "cat_variable":"IO:"+profileSysID,
						 "active":true,
						 "order":700,
						 "description":"This script is auto created thorugh runtime module for getting variables on change of profile.",
						 "applies_catalog":true,
						 "ui_type":"0",
						 "applies_req_item":false,
						 "applies_sc_task":false,

				});
				onChangecatalogClientScript3.appliesToCatalogItem(true);
                var onChangeScriptVars= "function onChange(control, oldValue, newValue, isLoading) { if (isLoading || newValue == '') { return; } var cat_sys_id = g_form.getUniqueValue(); var profile = (newValue + '').trim(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchLaunchVars'); ga.addParam('sysparm_catsysid', cat_sys_id); ga.addParam('sysparm_profile', profile); ga.getXML(varResponse);}function varResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); console.log(answer); var varJSON = JSON.parse(answer); var prof_json = varJSON.profile; var serv_json = varJSON.service; var sess_json = {}; var var_array = []; for (var i in prof_json) { var field = prof_json[i]; var curr_value = g_form.getValue('IO:' + i); var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value; parsed_field.sys_id = i + ''; sess_json['IO:' + i] = curr_value; var_array.push(parsed_field); } getAdvancedVars(var_array); for (var j in serv_json) { var_array = []; for (var k in serv_json[j]) { var field = serv_json[j][k]; var curr_value = g_form.getValue('IO:' + k); var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value; parsed_field.sys_id = k + ''; sess_json['IO:' + k] = curr_value; var_array.push(parsed_field); } getAdvancedVars(var_array); } sessionStorage['varValues'] = JSON.stringify(sess_json);}function getAdvancedVars(variable_json) { var act_var_JSON = JSON.stringify(variable_json); var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); gajax.addParam('sysparm_name', 'variableArrayParser'); gajax.addParam('sysparm_type', 'catalog'); gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + ''); gajax.addParam('sysparm_varJson', act_var_JSON); gajax.getXML(getVarResponse);}function getVarResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); if (answer + '' == '' || answer + '' == 'undeined' || answer + '' == 'null') return; var parsedResponse = JSON.parse(answer); for (var i in parsedResponse) {var row = parsedResponse[i]; var sys_id = 'IO:' + row.sys_id; var type = row.type + ''; if (row.state == 'SUCCESS') { if (type == 'LOCAL') g_form.setValue(sys_id, row.value); if (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') { g_form.clearOptions(sys_id); for (var k = 0; k &lt; (row.value).length; k++) { g_form.addOption(sys_id + '', row.value[k], row.value[k]); } } } if (row.state == 'ERROR') { g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]); } new GlideModal().get('variables_loader').destroy(); }}";
                onChangecatalogClientScript3.addScript(onChangeScriptVars);
                var OnChangeCatalogScriptId = onChangecatalogClientScript3.create();			
			    var gr = new GlideRecord('catalog_script_client');
				if (gr.get(OnChangeCatalogScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
 				gs.info("353");
				
				var project_load = new sn_sc.CatalogClientScript();
				project_load.setAttributes({
					 "name":"Get Project and Profile List onLoad",
				     "type":"onLoad",
				     "applies_to":"item",
				     "cat_item":cat_items1.item_name + '',
				     "active":"true",
				     "order":"100",
				     "description":"This script is auto created thorugh runtime module for getting projects and profile list.",
				     "applies_catalog":"true",
				     "ui_type":"0",
					 "applies_req_item":false,
				     "applies_sc_task":false
				});
                project_load.appliesToCatalogItem(true);
				var onLoadScript = "function onLoad() { var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching Project And Profile'); loadingDialog.renderWithContent(''+loadingHTML); var cat_sys_id = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchProjectAndProfileList'); ga.addParam('sysparm_catSysID', cat_sys_id); ga.getXML(parseResponse, null , loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var parsed = JSON.parse(answer);var projectList = parsed.projectList; g_form.clearOptions('default_project');for (var i = 0; i &lt; projectList.length; i++) { var project = projectList[i]; g_form.addOption('default_project', project.uuid, project.name);}var profileList = parsed.profileList.split(','); g_form.clearOptions('default_profile'); for (i = 0; i &lt; profileList.length; i++) { g_form.addOption('default_profile', profileList[i] + '', profileList[i] + ''); } g_form.setValue('default_profile', profileList[0]);if (projectList.length == 1) { g_form.setReadOnly('default_project', true);} if (profileList.length == 1) { g_form.setReadOnly('default_profile', true);} new GlideModal().get('loader').destroy();var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\";var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching variables...'); loadingDialog.renderWithContent(''+loadingHTML);var cat_sys_id = g_form.getUniqueValue();var profile = g_form.getValue('default_profile').trim(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchLaunchVars');ga.addParam('sysparm_catsysid', cat_sys_id);ga.addParam('sysparm_profile', profile);ga.getXML(varResponse, null, loadingDialog);}function varResponse(response, loadingDialog) {var answer = response.responseXML.documentElement.getAttribute('answer');var varJSON = JSON.parse(answer);var prof_json = varJSON.profile;var serv_json = varJSON.service; var sess_json = {};var var_array = [];for (var i in prof_json) {var field = prof_json[i];var curr_value = g_form.getValue('IO:' + i);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = i + '';sess_json['IO:'+i] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);for (var j in serv_json) {var_array = [];for (var k in serv_json[j]) {var field = serv_json[j][k];var curr_value = g_form.getValue('IO:' + k);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = k + '';sess_json['IO:'+k] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);}sessionStorage['varValues'] = JSON.stringify(sess_json);}}function getAdvancedVars(variable_json) {var act_var_JSON = JSON.stringify(variable_json);var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');gajax.addParam('sysparm_name', 'variableArrayParser');gajax.addParam('sysparm_type', 'catalog');gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + '');gajax.addParam('sysparm_varJson', act_var_JSON);gajax.getXML(getVarResponse);}function getVarResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');if (answer + '' == '' || answer + '' == 'undeined' || answer + '' == 'null')return;var parsedResponse = JSON.parse(answer);for (var i in parsedResponse) {var row = parsedResponse[i];var sys_id = 'IO:' + row.sys_id;var type = row.type + '';if (row.state == 'SUCCESS') {if(type == 'LOCAL')g_form.setValue(sys_id, row.value);if (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') {g_form.clearOptions(sys_id);for (var k = 0; k &lt; (row.value).length; k++) {g_form.addOption(sys_id + '', row.value[k], row.value[k]);}}}if (row.state == 'ERROR') {g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]);}}}";
				 project_load.addScript(onLoadScript);
                var project_load_ScriptId = project_load.create();
				var gr = new GlideRecord('catalog_script_client');
				if (gr.get(project_load_ScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
 				gs.info("378");
				
				var onChangecatalogClientScript = new sn_sc.CatalogClientScript();
				onChangecatalogClientScript.setAttributes({
				      "name":"Check AppName OnChange",
				      "type":"onChange",
				      "applies_to":"item",
				      "cat_item":cat_items1.item_name + '',
				      "cat_variable":"IO:"+appSysID,
				      "active":true,
				      "order":100,
				      "description":"This script is auto created thorugh runtime module for checking application name.",
				      "applies_catalog":true,
				      "ui_type":"0",
				      "applies_req_item":false,
				      "applies_sc_task":false,

				});
				onChangecatalogClientScript.appliesToCatalogItem(true);
                var onChangeScript = "function onChange(control, oldValue, newValue, isLoading) {if (isLoading || newValue == '') {return;}var name = newValue; if ((newValue.length != ((newValue.trim()).length))  || (!(/^[_-\\w ]+$/.test(name) &amp;&amp; (name.trim().lastIndexOf('-') != (name.trim().length - 1))))) {g_form.clearValue('default_app_name'); g_form.showErrorBox('default_app_name', 'Only alphanumeric characters, underscores(_), hyphens(-) and in between spaces are allowed and cannot end with hyphens(-). Leading and trailing spaces are not allowed.');}}";
                onChangecatalogClientScript.addScript(onChangeScript);
                var OnChangeCatalogScriptId = onChangecatalogClientScript.create();
				var gr = new GlideRecord('catalog_script_client');
				if (gr.get(OnChangeCatalogScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
 				gs.info("405");
				
				var onSubmitcatalogScriptGR = new sn_sc.CatalogClientScript();
                onSubmitcatalogScriptGR.setAttributes({
                    "name": "Check AppName OnSubmit",
                    "type": "onSubmit",
                    "applies_to": "item",
                    "cat_item": cat_items1.item_name + '',
                    "active": true,
                    "order": 100,
                    "description": "This script is auto created thorugh runtime module for checking application name on submit.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false,
                });
                onSubmitcatalogScriptGR.appliesToCatalogItem(true);
                var onSubmitscript = "function onSubmit() { var result = true; var name = g_form.getValue('default_app_name'); if (!(/^[_-\\w ]+$/.test(name) &amp;&amp; (name.trim().lastIndexOf('-') != (name.trim().length - 1)))) { g_form.showErrorBox('default_app_name', 'Only alphanumeric characters, underscores(_), hyphens(-) and spaces are allowed and cannot end with hyphens(-).'); result = false; } var errorFieldName = ''; var errorIntFieldName = ''; var parse = JSON.parse(sessionStorage.getItem('FieldRegex_' + g_form.getUniqueValue())); var keys = Object.keys(parse); for (var i = 0; i &lt; keys.length; i++) { var row = parse[keys[i] + '']; var patt = row.regex + ''; var reg = new RegExp(patt); var value = g_form.getValue(keys[i] + ''); var dataType = (row.data_type + '' == 'EXEC_SECRET' || row.data_type + '' == 'HTTP_SECRET' || row.data_type + '' == 'EXEC_LOCAL' || row.data_type + '' == 'HTTP_LOCAL') ? 'Dynamic' : row.data_type + ''; if (row.type + '' == 21) { var splitted = value.split(','); var actualVal = row.listRegex; var count = 0; for (var j = 0, n = splitted.length; j &lt; n; j++) { var listVal = actualVal[splitted[j] + ''];  if ((dataType + '' == 'Dynamic' || dataType + '' == 'PREDEFINED') &amp;&amp; j == n - 1 &amp;&amp; listVal.includes('\n')){ while(listVal.indexOf('\n') != -1){ listVal = listVal.replace('\n','');} if (reg.test(listVal)) { count++;} } if (count == n) row.status = true; } else { if ((dataType + '' == 'Dynamic' || dataType + '' == 'PREDEFINED') &amp;&amp; value.includes('\n')){while(value.indexOf('\n') != -1){value = value.replace('\n','');}} if (reg.test(value)) { row.status = true; } } if (value &amp;&amp; row.status == false) { result = false; g_form.hideFieldMsg(keys[i] + ''); if(dataType == ''){ errorIntFieldName += g_form.getLabelOf(keys[i] + '') + ','; g_form.showErrorBox(keys[i] + '', 'This is a Integer field.Please provide a integer value.'); } else{ errorFieldName += g_form.getLabelOf(keys[i] + '') + ','; g_form.showErrorBox(keys[i] + '', 'Value does not match specified regex: ' + row.regex); } }} if (result) {   var parse = JSON.parse(sessionStorage.getItem('fieldValues_' + g_form.getUniqueValue())); for(var i in parse){ if(g_form.getValue(i)+''=='') g_form.setValue(i, parse[i]); } 			 parse = JSON.parse(sessionStorage.getItem('credentials_' + g_form.getUniqueValue())); for(var i in parse){ if(g_form.getValue(i)+''=='') g_form.setValue(i, parse[i]); } 		 sessionStorage.removeItem('fieldValues_' + g_form.getUniqueValue()); sessionStorage.removeItem('credentials_' + g_form.getUniqueValue());      sessionStorage.removeItem('clusterName_' + g_form.getUniqueValue()); sessionStorage.removeItem('FieldRegex_' + g_form.getUniqueValue());var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\" ;var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Validating field value with regex..'); loadingDialog.renderWithContent(''+loadingHTML);} else { errorIntFieldName = (errorIntFieldName.endsWith(',')) ? errorIntFieldName.substr(0, errorIntFieldName.length - 1) : errorIntFieldName; errorFieldName = (errorFieldName.endsWith(',')) ? errorFieldName.substr(0, errorFieldName.length - 1) : errorFieldName; if(errorIntFieldName != '' ) g_form.addErrorMessage('Variables are Integer field.Please provide suitable values: ' + errorIntFieldName); if(errorFieldName != '' ) g_form.addErrorMessage('Variables value does not match specified Regex.Please provide suitable values: ' + errorFieldName); new GlideModal().get('loader').destroy(); return false; }var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Checking Blueprint Status...'); loadingDialog.renderWithContent(''+loadingHTML); var blueprintType = getParameterValue('type')+''; var blueprintUUID = getParameterValue('uuid')+''; var profileSysId = getParameterValue('profileSysId')+'';var profileName = (g_form.getValue('default_profile')+'').trim(); if(profileName == '') return; var projectUUID = (g_form.getValue('default_project')+'').trim(); if(projectUUID == '') return; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'checkCatalogValidity'); ga.addParam('blueprintType', blueprintType); ga.addParam('blueprintUUID', blueprintUUID); ga.addParam('profileSysId', profileSysId); ga.addParam('projectUUID', projectUUID); ga.addParam('profileName', profileName);ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var message=''; if (answer + '' == 'INACTIVE') { message= 'Project/Profile/Blueprint/MPI is not available at Calm. So, Catalog Item can\\'t be launched. Re-Directing back to catalog launch page.'; clearFieldValue(message); } else if (answer + '' == 'CANTCHECK') { message='Can\\'t check whether the Project/Profile/BP/MPI from which the catalog item was created is available or not. Please check the connection with Calm. Re-Directing back to catalog launch page.'; clearFieldValue(message); } new GlideModal().get('loader').destroy(); }  function clearFieldValue(message){ var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } alert(message); var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; }if(flds[i].label == \"Project\"  &amp;&amp; flds[i].prettyName == \"default_project\")continue;if(flds[i].label == \"Profile\"  &amp;&amp; flds[i].prettyName == \"default_profile\")continue;if (flds[i].prettyName.indexOf('cluster_name') == -1) g_form.clearValue(flds[i].prettyName);  /*	 self.location = '/x_nuta2_nutanix_ca_nutanix_runtime_configuration_list.do?sysparm_userpref_module=29d7d2e54f41230065e48020a310c7f6&amp;sysparm_view=catalog_view&amp;sysparm_query=GROUPBYitem_name.category&amp;sysparm_clear_stack=true'; 	*/			} }  function getParameterValue(name) {   name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");   var regexS = \"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\";   var regex = new RegExp(regexS);   var results = regex.exec(self.location);   if (results == null) {   return \"\";   } else {   return unescape(results[1]);   }   }}";
                onSubmitcatalogScriptGR.addScript(onSubmitscript);
                var onSubmitcatalogScriptId = onSubmitcatalogScriptGR.create();
				var gr = new GlideRecord('catalog_script_client');
				if (gr.get(onSubmitcatalogScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
				 var onLoadCatalogClientScriptGR = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScriptGR.setAttributes({
                    "name": "Hide Order details on request",
                    "type": "onLoad",
                    "applies_to": "item",
                    "cat_item": cat_items1.item_name + '',
                    "active": true,
                    "order": 10,
                    "description": "Hide values on request details.",
                    "applies_catalog": "false",
                    "ui_type": "0",
                    "applies_req_item": "true",
                    "applies_sc_task": "false"
                });
                onLoadCatalogClientScriptGR.appliesToCatalogItem(false);
                onLoadCatalogClientScriptGR.appliesToRequestedItem(true);
                var onLoadScriptHide = "function onLoad() {if(g_form.getTableName() + '' == 'sc_req_item') {var fldType = {};var elemen = g_form.elements;for (var i in elemen) {fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var flds = g_form.nameMap;for (var i in flds) {if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') {continue;}g_form.setDisplay(flds[i].prettyName, false);}g_form.setVariablesReadOnly(true);g_form.setDisplay('provider_icons', 'false');g_form.setReadOnly('default_project', false);g_form.setReadOnly('default_environment', false);g_form.setReadOnly('default_app_name', false);g_form.setReadOnly('default_profile', false);g_form.setDisplay('default_project', true);g_form.setDisplay('default_environment', true);g_form.setDisplay('default_app_name', true);g_form.setDisplay('default_profile', true);var profile = g_form.getValue('default_profile') + '';var cat_sys_id = g_form.getValue('cat_item') + '';var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchOrderFormData');ga.addParam('sysparm_profile', profile + '');ga.addParam('sysparm_catSysID', cat_sys_id + '');ga.getXML(parseResponse);} function parseResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');var fldType = {};var elemen = g_form.elements;for (var i in elemen) {fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var nameTypeMap = {};var flds = g_form.nameMap;for (var i in flds) {nameTypeMap[flds[i].prettyName + ''] = fldType[flds[i].realName + ''] + '';}var fielVal = {};var parsed = JSON.parse(answer);for (var i in parsed) {if (i.indexOf('cluster_name') == -1) {if (nameTypeMap[i + ''] + '' == 'masked') {fielVal[i] = parsed[i].value;g_form.setValue(i + '', '');}g_form.setReadOnly(i + '', true); g_form.setDisplay(i + '', !parsed[i].readOnly);} else {g_form.setDisplay(i + '', !parsed[i].readOnly);g_form.setReadOnly(i + '', true);}}sessionStorage['fieldValues_' + g_form.getUniqueValue()] = JSON.stringify(fielVal);}}";
                onLoadCatalogClientScriptGR.addScript(onLoadScriptHide);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScriptGR.create();
				if (gr.get(onLoadCatalogClientScriptId)) {
					gr.setValue("sys_scope", "global");
					gr.update();
				}
				
			}
		 this.fetchValuesOnChangeClientScript();
		}
		
		gs.setProperty('x_nuta2_nutanix_ca.1_4_4', '1');
	} catch (e) {
        this.logger.error("Exception caught inside migraation_script.addEnvironmentVariableToAllCatalogs : " + e);
    }
},
    
    isCatalogItemsAvailable: function() {
        var cat_items = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
        cat_items.query();
        if (cat_items.hasNext() &amp;&amp; (gs.getProperty('x_nuta2_nutanix_ca.1_4_4') == '0')) {
            this.logger.info("Migration to V 1_4_4 require");
            return true;
        }
        this.logger.info("Migration to V 1_4_4 not require");
        return false;
    },
	fetchValuesOnChangeClientScript: function() {
		gs.info("427");
		var cat_items1 = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
		cat_items1.query();
		while (cat_items1.next()) {
				gs.info("431");
				var catalogScriptGR = new GlideRecord('catalog_script_client');
				catalogScriptGR.addQuery('cat_item', cat_items1.item_name + '');
				catalogScriptGR.query();
				while (catalogScriptGR.next()) {
					if (catalogScriptGR.name + '' == "Fetch values OnChange") {
						
						var field = (catalogScriptGR.cat_variable+'').replace("IO:",'');
						
								var onChangecatalogClientScript = new sn_sc.CatalogClientScript();
								onChangecatalogClientScript.setAttributes({
									"name":"Fetch values OnChange",
									"type":"onChange",
									"applies_to":"item",
									"cat_item":cat_items1.item_name+'',
									"cat_variable":"IO:"+field,
									"active":true,
									"order":1000,
									"description":"This script is auto created thorugh runtime module for fetching values.",
									"applies_catalog":"true",
									"ui_type":"0",
									"applies_req_item":false,
									"applies_sc_task":false,
								});
								onChangecatalogClientScript.appliesToCatalogItem(true);
								var onChangeScript = "function onChange(control, oldValue, newValue, isLoading) { if(!sessionStorage['varValues'])return; var varValues = JSON.parse(sessionStorage['varValues']);oldValue = varValues[control.id + '']; if (isLoading || newValue == '' || oldValue + '' == newValue + '') {new GlideModal().get('loader').destroy(); return; }jslog(oldValue);jslog(newValue); function varResponse(response,loadingDialog){var answer=response.responseXML.documentElement.getAttribute('answer');var varJSON=JSON.parse(answer);var prof_json=varJSON.profile;var serv_json=varJSON.service;var var_array=[];for(var i in prof_json){var field=prof_json[i];var curr_value=g_form.getValue('IO:'+i);varValues['IO:' + i] = curr_value + '';var parsed_field=JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value=curr_value,parsed_field.sys_id=i+'',var_array.push(parsed_field);}getAdvancedVars(var_array);for(var j in serv_json){var_array=[];for(var k in serv_json[j]){var field=serv_json[j][k];var curr_value=g_form.getValue('IO:'+k);varValues['IO:' + k] = curr_value + '';var parsed_field=JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value=curr_value,parsed_field.sys_id=k+'',var_array.push(parsed_field);}getAdvancedVars(var_array);}sessionStorage['varValues'] = JSON.stringify(varValues);}function getAdvancedVars(variable_json){var act_var_JSON=JSON.stringify(variable_json);var gajax=new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');gajax.addParam('sysparm_name','variableArrayParser'),gajax.addParam('sysparm_type','catalog'),gajax.addParam('sysparm_parentUuid',g_form.getUniqueValue()+''),gajax.addParam('sysparm_varJson',act_var_JSON),gajax.getXML(getVarResponse);}function getVarResponse(response){ new GlideModal().get('loader').destroy(); var answer=response.responseXML.documentElement.getAttribute('answer');if(answer+''==''||answer+''=='undefined'||answer+''=='null')return;var parsedResponse=JSON.parse(answer);for(var i in parsedResponse){var row=parsedResponse[i];var sys_id='IO:'+row.sys_id;var type=row.type+'';if(row.state=='SUCCESS'&amp;&amp; (type=='EXEC_LOCAL'||type=='HTTP_LOCAL'||type=='EXEC_SECRET'||type=='HTTP_SECRET')){g_form.clearOptions(sys_id);for(var k=0;k&lt;row.value.length;k++)g_form.addOption(sys_id+'',row.value[k],row.value[k]); g_form.setValue(sys_id,row.value);} else {if(row.data_type + '' != 'BASE'){g_form.clearOptions(sys_id); for (var k = 0; k &lt; row.options.length; k++) g_form.addOption(sys_id + '', row.options[k], row.options[k]);} g_form.setValue(sys_id, row.value);}row.state=='ERROR'&amp;&amp;g_form.addErrorMessage('Error in variable: '+row.name+': '+row.error[0]);}}var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching variables...'); loadingDialog.renderWithContent(''+loadingHTML);var cat_sys_id=g_form.getUniqueValue();var profile=g_form.getValue('default_profile').trim();var ga=new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name','fetchLaunchVars'),ga.addParam('sysparm_catsysid',cat_sys_id),ga.addParam('sysparm_profile',profile),ga.getXML(varResponse,null,loadingDialog);}";
								onChangecatalogClientScript.addScript(onChangeScript);
								var OnChangeCatalogScriptId = onChangecatalogClientScript.create();
								var gr = new GlideRecord('catalog_script_client');
								if (gr.get(OnChangeCatalogScriptId)) {
									gr.setValue("sys_scope", "global");
									gr.update();
								}
						gs.info("462");
						var catalogClientScript = new sn_sc.CatalogClientScript();
						catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
					}
					gs.info("465");
				}
		}
		
	},
    isMigrationNeeded: function() {
        var cat_items = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
        cat_items.addEncodedQuery('multiple_application_profileISEMPTY^multiple_projectsISEMPTY^state=active^ORstate=draft');
        cat_items.query();
        if (cat_items.hasNext()) {
            this.logger.info("Migration to V 1_4 require");
            return true;
        }
        this.logger.info("Migration to V 1_4 not require");
        return false;
    },

    updateCatalog: function() {
        this.logger.info("Migration to V1_4 Started");

        gs.setProperty('x_nuta2_nutanix_ca.migration.script.ran', 'true');

        this.catalogItem_1_4();
        var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
        gr.query();
        while (gr.next()) {
            try {
                this.clientScript_1_4(gr.item_name);
                this.logger.info(gr.item_name.name + " Catalog client script succesfully migrated.");
            } catch (e) {
                this.logger.error(gr.item_name.name + " Catalog Item was not migrated due to issue in catalog client script.");
            }
        }
    },


    clientScript_1_4: function(catSysId) {
        var catalogScriptGR = new GlideRecord(this.appUtil.configuration.table.catalogClientScript + '');
        catalogScriptGR.addQuery('cat_item', catSysId);
        catalogScriptGR.query();
        this.logger.info("ctalog client Script " + catalogScriptGR.getRowCount() + "to be updatated");
        while (catalogScriptGR.next()) {
            this.logger.info(catalogScriptGR.name + "catalog client script updatated");
            if (catalogScriptGR.name + '' == "Fetch form data on change of profile") {
                this.logger.info("If " + catalogScriptGR.name + "catalog client script updatated");
                var catalogClientScript = new sn_sc.CatalogClientScript();
                catalogClientScript.deleteRecord(catalogScriptGR.sys_id);

            }
            if (catalogScriptGR.name + '' == "Get Project and Profile List onLoad") {
                this.logger.info("If " + catalogScriptGR.name + "catalog client script updatated");
                var catalogClientScript = new sn_sc.CatalogClientScript();
                catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
            }
            if (catalogScriptGR.name + '' == "Hide Order details on request") {
                this.logger.info("If " + catalogScriptGR.name + "catalog client script updatated");
                var catalogClientScript = new sn_sc.CatalogClientScript();
                catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
            }
            if (catalogScriptGR.name + '' == "Get Subnet Info") {
                this.logger.info("If " + catalogScriptGR.name + "catalog client script updatated");
                var catalogClientScript = new sn_sc.CatalogClientScript();
                catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
            }
            if (catalogScriptGR.name + '' == "Get Subnet Info on project change") {
                this.logger.info("If " + catalogScriptGR.name + "catalog client script updatated");
                var catalogClientScript = new sn_sc.CatalogClientScript();
                catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
            }
            if (catalogScriptGR.name + '' == "Check Catalog Item Validity") {
                this.logger.info("If " + catalogScriptGR.name + "catalog client script updatated");
                var catalogClientScript = new sn_sc.CatalogClientScript();
                catalogClientScript.deleteRecord(catalogScriptGR.sys_id);
            }

        }
        var profileSysID = new GlideRecord('item_option_new');
        profileSysID.addEncodedQuery('cat_item=' + catSysId + '^nameLIKEdefault_profile');
        profileSysID.query();
        profileSysID.next();
        var catalogScriptGR = new sn_sc.CatalogClientScript();
        catalogScriptGR.setAttributes({
            "name": "Fetch form data on change of profile",
            "type": "onChange",
            "applies_to": "item",
            "cat_item": "" + catSysId,
            "cat_variable": "IO:" + profileSysID.sys_id,
            "active": true,
            "order": 100,
            "description": 'This script is auto created thorugh runtime module for fetching and setting form data and visibility.',
            "applies_catalog": true,
            "ui_type": "0",
            "applies_req_item": false,
            "applies_sc_task": false,
            "sys_scope": "global"
        });
        catalogScriptGR.appliesToCatalogItem(true);
        var Script = "function onChange(control, oldValue, newValue, isLoading) {if (newValue == '') {return;} var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialogbox = new GlideModal('loader', true);loadingDialogbox.setTitle('Fetching Order Form Data...'); loadingDialogbox.renderWithContent(''+loadingHTML);var fldType = {};var elemen = g_form.elements;for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var flds = g_form.nameMap;for (var i in flds) {if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') {continue;} g_form.setDisplay(flds[i].prettyName, false);}g_form.setVariablesReadOnly(true);g_form.setDisplay('provider_icons', 'false');g_form.setReadOnly('default_project', false);g_form.setReadOnly('default_app_name', false);g_form.setReadOnly('default_profile', false);g_form.setDisplay('default_project', true);g_form.setDisplay('default_app_name', true);g_form.setDisplay('default_profile', true);var profile = newValue;var cat_sys_id = g_form.getUniqueValue();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchOrderFormData');ga.addParam('sysparm_profile', profile);ga.addParam('sysparm_catSysID', cat_sys_id);ga.getXML(parseResponse, null, loadingDialogbox);function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer');   var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; }  var nameTypeMap = {}; var flds = g_form.nameMap; for(var i in flds){ nameTypeMap[flds[i].prettyName+''] = fldType[flds[i].realName+'']+''; } 		  var fielVal = {};  var parsed = JSON.parse(answer);for (var i in parsed) {if(i.indexOf('cluster_name') == -1){ if(nameTypeMap[i+'']+'' == 'masked'){ fielVal[i] = parsed[i].value; g_form.setValue(i + '', ''); } else{ g_form.setValue(i + '', parsed[i].value + ''); }			 g_form.setReadOnly(i + '', parsed[i].readOnly + ''); g_form.setDisplay(i + '', !parsed[i].readOnly);	 }else{ g_form.setDisplay(i + '', !parsed[i].readOnly);	 g_form.setReadOnly(i + '', true);	 			}		}   sessionStorage['fieldValues_' + g_form.getUniqueValue()] = JSON.stringify(fielVal);		  new GlideModal().get('loader').destroy();}} var cat_sys_id = g_form.getUniqueValue();	var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchProjectAndProfileList');ga.addParam('sysparm_catSysID', cat_sys_id);ga.getXML(parseResponse); function parseResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); var parsed = JSON.parse(answer); var projectList = parsed.projectList; if (projectList.length == 1) { g_form.setReadOnly('default_project', true);}}";
        catalogScriptGR.addScript(Script);
        var ScriptId = catalogScriptGR.create();
        this.logger.info("V1.4 migration, " + catSysId + " \'Fetch form data on change of profile\' catalog client script created.");
        var gr = new GlideRecord('catalog_script_client');
        if (gr.get(ScriptId)) {
            gr.setValue("sys_scope", "global");
            gr.update();
        }


        var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
        onLoadCatalogClientScript.setAttributes({
            "name": "Get Project and Profile List onLoad",
            "type": "onLoad",
            "applies_to": "item",
            "cat_item": '' + catSysId,
            "active": "true",
            "order": "100",
            "description": "This script is auto created thorugh runtime module for getting projects and profile list.",
            "applies_catalog": "true",
            "ui_type": "0",
            "applies_req_item": false,
            "applies_sc_task": false,
            "sys_scope": "global"
        });
        onLoadCatalogClientScript.appliesToCatalogItem(true);
        var onLoadScript = "function onLoad() { var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching Project And Profile'); loadingDialog.renderWithContent(''+loadingHTML); var cat_sys_id = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchProjectAndProfileList'); ga.addParam('sysparm_catSysID', cat_sys_id); ga.getXML(parseResponse, null , loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var parsed = JSON.parse(answer);var projectList = parsed.projectList; g_form.clearOptions('default_project');for (var i = 0; i &lt; projectList.length; i++) { var project = projectList[i]; g_form.addOption('default_project', project.uuid, project.name);}var profileList = parsed.profileList.split(','); g_form.clearOptions('default_profile'); for (i = 0; i &lt; profileList.length; i++) { g_form.addOption('default_profile', profileList[i] + '', profileList[i] + ''); } g_form.setValue('default_profile', profileList[0]);if (projectList.length == 1) { g_form.setReadOnly('default_project', true);} if (profileList.length == 1) { g_form.setReadOnly('default_profile', true);} new GlideModal().get('loader').destroy();var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\";var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching variables...'); loadingDialog.renderWithContent(''+loadingHTML);var cat_sys_id = g_form.getUniqueValue();var profile = g_form.getValue('default_profile').trim(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchLaunchVars');ga.addParam('sysparm_catsysid', cat_sys_id);ga.addParam('sysparm_profile', profile);ga.getXML(varResponse, null, loadingDialog);}function varResponse(response, loadingDialog) {var answer = response.responseXML.documentElement.getAttribute('answer');var varJSON = JSON.parse(answer);var prof_json = varJSON.profile;var serv_json = varJSON.service; var sess_json = {};var var_array = [];for (var i in prof_json) {var field = prof_json[i];var curr_value = g_form.getValue('IO:' + i);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = i + '';sess_json['IO:'+i] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);for (var j in serv_json) {var_array = [];for (var k in serv_json[j]) {var field = serv_json[j][k];var curr_value = g_form.getValue('IO:' + k);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = k + '';sess_json['IO:'+k] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);}sessionStorage['varValues'] = JSON.stringify(sess_json);}}function getAdvancedVars(variable_json) {var act_var_JSON = JSON.stringify(variable_json);var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');gajax.addParam('sysparm_name', 'variableArrayParser');gajax.addParam('sysparm_type', 'catalog');gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + '');gajax.addParam('sysparm_varJson', act_var_JSON);gajax.getXML(getVarResponse);}function getVarResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');if (answer + '' == '' || answer + '' == 'undeined' || answer + '' == 'null')return;var parsedResponse = JSON.parse(answer);for (var i in parsedResponse) {var row = parsedResponse[i];var sys_id = 'IO:' + row.sys_id;var type = row.type + '';if (row.state == 'SUCCESS') {if(type == 'LOCAL')g_form.setValue(sys_id, row.value);if (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') {g_form.clearOptions(sys_id);for (var k = 0; k &lt; (row.value).length; k++) {g_form.addOption(sys_id + '', row.value[k], row.value[k]);}}}if (row.state == 'ERROR') {g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]);}}}";
        onLoadCatalogClientScript.addScript(onLoadScript);
        var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();
        this.logger.info("V1.4 migration, " + catSysId + " \'Get Project and Profile List onLoad\' catalog client script created.");
        var gr = new GlideRecord('catalog_script_client');
        if (gr.get(onLoadCatalogClientScriptId)) {
            gr.setValue("sys_scope", "global");
            gr.update();
        }

        var onLoadCatalogClientScriptGR = new sn_sc.CatalogClientScript();
        onLoadCatalogClientScriptGR.setAttributes({
            "name": "Hide Order details on request",
            "type": "onLoad",
            "applies_to": "item",
            "cat_item": '' + catSysId,
            "active": true,
            "order": 10,
            "description": "Hide values on request details.",
            "applies_catalog": "false",
            "ui_type": "0",
            "applies_req_item": "true",
            "applies_sc_task": "false",
            "sys_scope": "global"
        });
        onLoadCatalogClientScriptGR.appliesToCatalogItem(false);
        onLoadCatalogClientScriptGR.appliesToRequestedItem(true);
        var onLoadScriptHide = "function onLoad() {if(g_form.getTableName() + '' == 'sc_req_item') {var fldType = {};var elemen = g_form.elements;for (var i in elemen) {fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var flds = g_form.nameMap;for (var i in flds) {if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') {continue;}g_form.setDisplay(flds[i].prettyName, false);}g_form.setVariablesReadOnly(true);g_form.setDisplay('provider_icons', 'false');g_form.setReadOnly('default_project', false);g_form.setReadOnly('default_environment', false);g_form.setReadOnly('default_app_name', false);g_form.setReadOnly('default_profile', false);g_form.setDisplay('default_project', true);g_form.setDisplay('default_environment', true);g_form.setDisplay('default_app_name', true);g_form.setDisplay('default_profile', true);var profile = g_form.getValue('default_profile') + '';var cat_sys_id = g_form.getValue('cat_item') + '';var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchOrderFormData');ga.addParam('sysparm_profile', profile + '');ga.addParam('sysparm_catSysID', cat_sys_id + '');ga.getXML(parseResponse);} function parseResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');var fldType = {};var elemen = g_form.elements;for (var i in elemen) {fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var nameTypeMap = {};var flds = g_form.nameMap;for (var i in flds) {nameTypeMap[flds[i].prettyName + ''] = fldType[flds[i].realName + ''] + '';}var fielVal = {};var parsed = JSON.parse(answer);for (var i in parsed) {if (i.indexOf('cluster_name') == -1) {if (nameTypeMap[i + ''] + '' == 'masked') {fielVal[i] = parsed[i].value;g_form.setValue(i + '', '');}g_form.setReadOnly(i + '', true); g_form.setDisplay(i + '', !parsed[i].readOnly);} else {g_form.setDisplay(i + '', !parsed[i].readOnly);g_form.setReadOnly(i + '', true);}}sessionStorage['fieldValues_' + g_form.getUniqueValue()] = JSON.stringify(fielVal);}}";
        onLoadCatalogClientScriptGR.addScript(onLoadScriptHide);
        var onLoadCatalogClientScriptId = onLoadCatalogClientScriptGR.create();
        this.logger.info("V1.4 migration, " + catSysId + " \'Hide values on request details.\' catalog client script created.");
        var gr = new GlideRecord('catalog_script_client');
        if (gr.get(onLoadCatalogClientScriptId)) {
            gr.setValue("sys_scope", "global");
            gr.update();
        }

        /*Insert new Scripts Get Subnet Info on project change*/
        var oldGR = new GlideRecord('item_option_new');
        oldGR.addEncodedQuery('cat_item=' + catSysId + '^nameLIKEdefault_project');
        oldGR.query();
        oldGR.next();
        var onChangecatalogClientScript1 = new sn_sc.CatalogClientScript();
        onChangecatalogClientScript1.setAttributes({
            "name": "Get Subnet Info on project change",
            "type": "onChange",
            "applies_to": "item",
            "cat_item": '' + catSysId,
            "cat_variable": "IO:" + oldGR.sys_id,
            "active": true,
            "order": 600,
            "description": "This script is auto created thorugh runtime module for checking application name on submit.",
            "applies_catalog": true,
            "ui_type": "0",
            "applies_req_item": false,
            "applies_sc_task": false,
            "sys_scope": "global"
        });
        onChangecatalogClientScript1.appliesToCatalogItem(true);
        var onChangeScript = "function onChange(control, oldValue, newValue, isLoading) { if (newValue == '') { return; }var clusterJSON = {}; var catalogSysId = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'getSubnet');ga.addParam('sysparm_catSysID', catalogSysId);ga.addParam('sysparm_ProjectUuid', newValue);ga.getXML(processAnswer);function processAnswer(response) {var ans = response.responseXML.documentElement.getAttribute('answer');sessionStorage['clusterName_' + g_form.getUniqueValue()] = ans;ans = JSON.parse(ans);var catalog_clusterJSON = ans.catalog_data;clusterJSON = ans.cluster_info;var nicList = [];for(var m in clusterJSON){nicList.push(clusterJSON[m].subnet);}for (var k in catalog_clusterJSON) {for (var i in catalog_clusterJSON[k].nics) {if (catalog_clusterJSON[k].value + '') {for (var l in clusterJSON) {var subnetList = clusterJSON[l].subnet;if (l != catalog_clusterJSON[k].value + '')for (var s in subnetList){ /*g_form.removeOption(catalog_clusterJSON[k].nics[i] + '', s);*/}}}{var opt = g_form.getElement(catalog_clusterJSON[k].nics[i] + '');for (var x=1, n = opt.options.length; x &lt; n; x++) {var present = false;var val = opt.options[x].value+'';for(var s=0; s &lt; nicList.length ;s++){if (nicList[s][val]) {present =true;break;}} if(!present){g_form.removeOption(catalog_clusterJSON[k].nics[i] + '', opt.options[x].value+''); x--;n--; } }} }}}}";
        onChangecatalogClientScript1.addScript(onChangeScript);
        var OnChangeCatalogScriptId = onChangecatalogClientScript1.create();
        this.logger.info("V1.4 migration, " + catSysId + " \'Get Subnet Info on project change\' catalog client script created.");
        var gr = new GlideRecord('catalog_script_client');
        if (gr.get(OnChangeCatalogScriptId)) {
            gr.setValue("sys_scope", "global");
            gr.update();
        }

        var projectSysID = new GlideRecord('item_option_new');
        projectSysID.addEncodedQuery('cat_item=' + catSysId + '^nameLIKEdefault_project');
        projectSysID.query();
        projectSysID.next();
        var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
        onLoadCatalogClientScript.setAttributes({
            "name": "Check Catalog Item Validity project",
            "type": "onChange",
            "applies_to": "item",
            "cat_item": '' + catSysId,
            "cat_variable": "IO:" + projectSysID,
            "active": true,
            "order": 1,
            "description": 'This script is auto created thorugh runtime module for checking BP validity from which this catalog item was created.',
            "applies_catalog": true,
            "ui_type": "0",
            "applies_req_item": false,
            "applies_sc_task": false,
            "sys_scope": "global"
        });
        onLoadCatalogClientScript.appliesToCatalogItem(true);
        var onLoadScript = "function onChange(control, oldValue, newValue, isLoading) {if (isLoading || newValue == '') { return;} var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Checking Blueprint Status...'); loadingDialog.renderWithContent(''+loadingHTML); var blueprintType = getParameterValue('type')+''; var blueprintUUID = getParameterValue('uuid')+''; var profileSysId = getParameterValue('profileSysId')+''; var profileName = (g_form.getValue('default_profile')+'').trim();if(profileName == '') return;var projectUUID = (newValue+'').trim();if(projectUUID == '')return; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'checkCatalogValidity'); ga.addParam('blueprintType', blueprintType); ga.addParam('blueprintUUID', blueprintUUID); ga.addParam('profileSysId', profileSysId); ga.addParam('projectUUID', projectUUID); ga.addParam('profileName', profileName); ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var message=''; if (answer + '' == 'INACTIVE') { message= 'Project/Profile/Blueprint/MPI is not available at Calm. So, Catalog Item can\\'t be launched. Re-Directing back to catalog launch page.'; clearFieldValue(message); } else if (answer + '' == 'CANTCHECK') { message='Can\\'t check whether the Project/Profile/BP/MPI from which the catalog item was created is available or not. Please check the connection with Calm. Re-Directing back to catalog launch page.'; clearFieldValue(message); } new GlideModal().get('loader').destroy(); }  function clearFieldValue(message){ var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } alert(message); var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; }  if(flds[i].label == \"Project\"  &amp;&amp; flds[i].prettyName == \"default_project\")continue;if(flds[i].label == \"Profile\"  &amp;&amp; flds[i].prettyName == \"default_profile\")continue;if (flds[i].prettyName.indexOf('cluster_name') == -1) g_form.clearValue(flds[i].prettyName);/* self.location = '/x_nuta2_nutanix_ca_nutanix_runtime_configuration_list.do?sysparm_userpref_module=29d7d2e54f41230065e48020a310c7f6&amp;sysparm_view=catalog_view&amp;sysparm_query=GROUPBYitem_name.category&amp;sysparm_clear_stack=true'; */			}	 }  function getParameterValue(name) {   name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");   var regexS = \"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\";   var regex = new RegExp(regexS);   var results = regex.exec(self.location);   if (results == null) {   return \"\";   } else {   return unescape(results[1]);   }   } }";
        onLoadCatalogClientScript.addScript(onLoadScript);
        var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();
        this.logger.info("V1.4 migration, " + catSysId + " \'Check Catalog Item Validity project\' catalog client script created.");
        var gr = new GlideRecord('catalog_script_client');
        if (gr.get(onLoadCatalogClientScriptId)) {
            gr.setValue("sys_scope", "global");
            gr.update();
        }


        var profileSysID = new GlideRecord('item_option_new');
        profileSysID.addEncodedQuery('cat_item=' + catSysId + '^nameLIKEdefault_profile');
        profileSysID.query();
        profileSysID.next();
        var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
        onLoadCatalogClientScript.setAttributes({
            "name": "Check Catalog Item Validity profile",
            "type": "onChange",
            "applies_to": "item",
            "cat_item": '' + catSysId,
            "cat_variable": "IO:" + profileSysID.sys_id,
            "active": true,
            "order": 1,
            "description": 'This script is auto created thorugh runtime module for checking BP validity from which this catalog item was created.',
            "applies_catalog": true,
            "ui_type": "0",
            "applies_req_item": false,
            "applies_sc_task": false,
            "sys_scope": "global"
        });
        onLoadCatalogClientScript.appliesToCatalogItem(true);
        var onLoadScript = "function onChange(control, oldValue, newValue, isLoading) {if (isLoading || newValue == '') { return;} var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Checking Blueprint Status...'); loadingDialog.renderWithContent(''+loadingHTML); var blueprintType = getParameterValue('type')+''; var blueprintUUID = getParameterValue('uuid')+''; var profileSysId = getParameterValue('profileSysId')+'';var profileName = (newValue+'').trim(); if(profileName == '') return; var projectUUID = (g_form.getValue('default_project')+'').trim(); if(projectUUID == '') return; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'checkCatalogValidity'); ga.addParam('blueprintType', blueprintType); ga.addParam('blueprintUUID', blueprintUUID); ga.addParam('profileSysId', profileSysId); ga.addParam('projectUUID', projectUUID); ga.addParam('profileName', profileName);ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var message=''; if (answer + '' == 'INACTIVE') { message= 'Project/Profile/Blueprint/MPI is not available at Calm. So, Catalog Item can\\'t be launched. Re-Directing back to catalog launch page.'; clearFieldValue(message); } else if (answer + '' == 'CANTCHECK') { message='Can\\'t check whether the Project/Profile/BP/MPI from which the catalog item was created is available or not. Please check the connection with Calm. Re-Directing back to catalog launch page.'; clearFieldValue(message); } new GlideModal().get('loader').destroy(); }  function clearFieldValue(message){ var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } alert(message); var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; } if(flds[i].label == \"Project\"  &amp;&amp; flds[i].prettyName == \"default_project\")continue;if(flds[i].label == \"Profile\"  &amp;&amp; flds[i].prettyName == \"default_profile\")continue;if (flds[i].prettyName.indexOf('cluster_name') == -1) g_form.clearValue(flds[i].prettyName);/*	 self.location = '/x_nuta2_nutanix_ca_nutanix_runtime_configuration_list.do?sysparm_userpref_module=29d7d2e54f41230065e48020a310c7f6&amp;sysparm_view=catalog_view&amp;sysparm_query=GROUPBYitem_name.category&amp;sysparm_clear_stack=true'; 	*/			 }}  function getParameterValue(name) {   name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");   var regexS = \"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\";   var regex = new RegExp(regexS);   var results = regex.exec(self.location);   if (results == null) {   return \"\";   } else {   return unescape(results[1]);   }   } }";
        onLoadCatalogClientScript.addScript(onLoadScript);
        var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();
        this.logger.info("V1.4 migration, " + catSysId + " \'Check Catalog Item Validity profile\' catalog client script created.");
        var gr = new GlideRecord('catalog_script_client');
        if (gr.get(onLoadCatalogClientScriptId)) {
            gr.setValue("sys_scope", "global");
            gr.update();
        }


    },
	
    catalogItem_1_4: function() {
        var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
        gr.addEncodedQuery('multiple_application_profileISEMPTY^multiple_projectsISEMPTY^state=active^ORstate=draft');
        gr.query();
        while (gr.next()) {
            try {
                gr.multiple_projects = gr.project;
                gr.multiple_application_profile = gr.application_profile;
                gr.update();
                this.logger.info("V1.4 migration, " + gr.item_name.name + " Catalog Item was migrated.");
            } catch (e) {
                this.logger.error("V1.4 migration, " + gr.item_name.name + " Catalog Item was not migrated due to issue in some field type and the value it contained.");
            }
        }
    },

    copyFieldJson: function() {

        this.logger.info("V1.4 migration: Migrating old variables");
        var gr = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
        gr.addQuery("state", "active");
        gr.query();
        while (gr.next()) {
            this._createOnChangeSessionScript(gr.item_name.sys_id);
            var grVars = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
            grVars.addEncodedQuery('catalog_item=' + gr.item_name.sys_id + '^isprofilevariable=true^ORisservicevariable=true');
            grVars.query();
            while (grVars.next()) {
                var grVarsBp = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
                grVarsBp.addQuery('catalog_item', gr.blueprint + "");
                grVarsBp.addQuery('uuid', grVars.uuid + "");
                grVarsBp.query();
                if (grVarsBp.next()) {
                    this._createOnChangeScript(grVars.variable.sys_id + "", gr.item_name.sys_id + "");
                    grVars.field_json = grVarsBp.field_json + '';
                    grVars.update();
                }
            }
        }

    },

    _createOnChangeSessionScript: function(catSysId) {

        var profileSysID = new GlideRecord('item_option_new');
        profileSysID.addEncodedQuery('cat_item=' + catSysId + '^nameLIKEdefault_profile');
        profileSysID.query();
        profileSysID.next();

        var onChangecatalogClientScript3 = new sn_sc.CatalogClientScript();
        onChangecatalogClientScript3.setAttributes({
            "name": "Fetch dependencies on change of profile",
            "type": "onChange",
            "applies_to": "item",
            "cat_item": '' + catSysId,
            "cat_variable": "IO:" + profileSysID.sys_id,
            "active": true,
            "order": 700,
            "description": "This script is auto created thorugh runtime module for getting variables on change of profile.",
            "applies_catalog": true,
            "ui_type": "0",
            "applies_req_item": false,
            "applies_sc_task": false,

        });
        onChangecatalogClientScript3.appliesToCatalogItem(true);
        var onChangeScriptVars = "function onChange(control, oldValue, newValue, isLoading) { if (isLoading || newValue == '') { return; } var cat_sys_id = g_form.getUniqueValue(); var profile = (newValue + '').trim(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchLaunchVars'); ga.addParam('sysparm_catsysid', cat_sys_id); ga.addParam('sysparm_profile', profile); ga.getXML(varResponse);}function varResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); console.log(answer); var varJSON = JSON.parse(answer); var prof_json = varJSON.profile; var serv_json = varJSON.service; var sess_json = {}; var var_array = []; for (var i in prof_json) { var field = prof_json[i]; var curr_value = g_form.getValue('IO:' + i); var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value; parsed_field.sys_id = i + ''; sess_json['IO:' + i] = curr_value; var_array.push(parsed_field); } getAdvancedVars(var_array); for (var j in serv_json) { var_array = []; for (var k in serv_json[j]) { var field = serv_json[j][k]; var curr_value = g_form.getValue('IO:' + k); var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value; parsed_field.sys_id = k + ''; sess_json['IO:' + k] = curr_value; var_array.push(parsed_field); } getAdvancedVars(var_array); } sessionStorage['varValues'] = JSON.stringify(sess_json);}function getAdvancedVars(variable_json) { var act_var_JSON = JSON.stringify(variable_json); var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); gajax.addParam('sysparm_name', 'variableArrayParser'); gajax.addParam('sysparm_type', 'catalog'); gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + ''); gajax.addParam('sysparm_varJson', act_var_JSON); gajax.getXML(getVarResponse);}function getVarResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); if (answer + '' == '' || answer + '' == 'undeined' || answer + '' == 'null') return; var parsedResponse = JSON.parse(answer); for (var i in parsedResponse) {var row = parsedResponse[i]; var sys_id = 'IO:' + row.sys_id; var type = row.type + ''; if (row.state == 'SUCCESS') { if (type == 'LOCAL') g_form.setValue(sys_id, row.value); if (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') { g_form.clearOptions(sys_id); for (var k = 0; k &lt; (row.value).length; k++) { g_form.addOption(sys_id + '', row.value[k], row.value[k]); } } } if (row.state == 'ERROR') { g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]); } new GlideModal().get('variables_loader').destroy(); }}";
        onChangecatalogClientScript3.addScript(onChangeScriptVars);
        var OnChangeCatalogScriptId = onChangecatalogClientScript3.create();
        var gr = new GlideRecord('catalog_script_client');
        if (gr.get(OnChangeCatalogScriptId)) {
            gr.setValue("sys_scope", "global");
            gr.update();
        }

        var onChangecatalogClientScript2 = new sn_sc.CatalogClientScript();
        onChangecatalogClientScript2.setAttributes({
            "name": "Set Session Vars",
            "type": "onChange",
            "applies_to": "item",
            "cat_item": '' + catSysId,
            "cat_variable": "IO:" + profileSysID.sys_id,
            "active": true,
            "order": 700,
            "description": "This script is auto created thorugh runtime module for setting session json.",
            "applies_catalog": true,
            "ui_type": "0",
            "applies_req_item": false,
            "applies_sc_task": false,
            "sys_scope": "global"
        });
        onChangecatalogClientScript2.appliesToCatalogItem(true);
        var onChangeScriptSess = "function onChange(control, oldValue, newValue, isLoading) {if (isLoading || newValue == '') {return;}var cat_sys_id = g_form.getUniqueValue();var profile = (newValue + '').trim();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchLaunchVars');ga.addParam('sysparm_catsysid', cat_sys_id);ga.addParam('sysparm_profile', profile);ga.getXML(varResponse);function varResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');jslog(answer);var varJSON = JSON.parse(answer);var prof_json = varJSON.profile;var serv_json = varJSON.service;var sess_json = {};for (var i in prof_json) {var field = prof_json[i];var curr_value = g_form.getValue('IO:' + i);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = i + '';sess_json['IO:' + i] = curr_value;}for (var j in serv_json) {for (var k in serv_json[j]) {var field = serv_json[j][k];var curr_value = g_form.getValue('IO:' + k);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = k + '';sess_json['IO:' + k] = curr_value;}}sessionStorage['varValues'] = JSON.stringify(sess_json);}}";
        onChangecatalogClientScript2.addScript(onChangeScriptSess);
        var OnChangeCatalogScriptId = onChangecatalogClientScript2.create();
        var gr = new GlideRecord('catalog_script_client');
        if (gr.get(OnChangeCatalogScriptId)) {
            gr.setValue("sys_scope", "global");
            gr.update();
        }

        this.logger.debug("Created onChange script to set Session variables ");
    },

    _createOnChangeScript: function(varSysId, catSysId) {
        try {
            this.logger.info("V1.4 migration: Creating onChange Scripts");
            var onChangecatalogClientScript = new sn_sc.CatalogClientScript();
            onChangecatalogClientScript.setAttributes({
                "name": "Fetch values OnChange",
                "type": "onChange",
                "applies_to": "item",
                "cat_item": '' + catSysId,
                "cat_variable": "IO:" + varSysId,
                "active": true,
                "order": 100,
                "description": "This script is auto created thorugh runtime module for fetching values.",
                "applies_catalog": "true",
                "ui_type": "0",
                "applies_req_item": false,
                "applies_sc_task": false,
                "sys_scope": "global"
            });
            onChangecatalogClientScript.appliesToCatalogItem(true);
            var onChangeScript = "function onChange(control, oldValue, newValue, isLoading) { if(!sessionStorage['varValues'])return; var varValues = JSON.parse(sessionStorage['varValues']);oldValue = varValues[control.id + '']; if (isLoading || newValue == '' || oldValue + '' == newValue + '') {new GlideModal().get('loader').destroy(); return; }jslog(oldValue);jslog(newValue); function varResponse(response,loadingDialog){var answer=response.responseXML.documentElement.getAttribute('answer');var varJSON=JSON.parse(answer);var prof_json=varJSON.profile;var serv_json=varJSON.service;var var_array=[];for(var i in prof_json){var field=prof_json[i];var curr_value=g_form.getValue('IO:'+i);varValues['IO:' + i] = curr_value + '';var parsed_field=JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value=curr_value,parsed_field.sys_id=i+'',var_array.push(parsed_field);}getAdvancedVars(var_array);for(var j in serv_json){var_array=[];for(var k in serv_json[j]){var field=serv_json[j][k];var curr_value=g_form.getValue('IO:'+k);varValues['IO:' + k] = curr_value + '';var parsed_field=JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value=curr_value,parsed_field.sys_id=k+'',var_array.push(parsed_field);}getAdvancedVars(var_array);}sessionStorage['varValues'] = JSON.stringify(varValues);}function getAdvancedVars(variable_json){var act_var_JSON=JSON.stringify(variable_json);var gajax=new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');gajax.addParam('sysparm_name','variableArrayParser'),gajax.addParam('sysparm_type','catalog'),gajax.addParam('sysparm_parentUuid',g_form.getUniqueValue()+''),gajax.addParam('sysparm_varJson',act_var_JSON),gajax.getXML(getVarResponse);}function getVarResponse(response){ new GlideModal().get('loader').destroy(); var answer=response.responseXML.documentElement.getAttribute('answer');if(answer+''==''||answer+''=='undefined'||answer+''=='null')return;var parsedResponse=JSON.parse(answer);for(var i in parsedResponse){var row=parsedResponse[i];var sys_id='IO:'+row.sys_id;var type=row.type+'';if(row.state=='SUCCESS'&amp;&amp; (type=='EXEC_LOCAL'||type=='HTTP_LOCAL'||type=='EXEC_SECRET'||type=='HTTP_SECRET')){g_form.clearOptions(sys_id);for(var k=0;k&lt;row.value.length;k++)g_form.addOption(sys_id+'',row.value[k],row.value[k]); g_form.setValue(sys_id,row.value);} else {if(row.data_type + '' != 'BASE'){g_form.clearOptions(sys_id); for (var k = 0; k &lt; row.options.length; k++) g_form.addOption(sys_id + '', row.options[k], row.options[k]);} g_form.setValue(sys_id, row.value);}row.state=='ERROR'&amp;&amp;g_form.addErrorMessage('Error in variable: '+row.name+': '+row.error[0]);}}var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching variables...'); loadingDialog.renderWithContent(''+loadingHTML);var cat_sys_id=g_form.getUniqueValue();var profile=g_form.getValue('default_profile').trim();var ga=new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name','fetchLaunchVars'),ga.addParam('sysparm_catsysid',cat_sys_id),ga.addParam('sysparm_profile',profile),ga.getXML(varResponse,null,loadingDialog);}";
            onChangecatalogClientScript.addScript(onChangeScript);
            var OnChangeCatalogScriptId = onChangecatalogClientScript.create();
            this.logger.info("V1.4 migration, " + catSysId + " Fetch values OnChange catalog client script created.");
            var gr = new GlideRecord('catalog_script_client');
            if (gr.get(OnChangeCatalogScriptId)) {
                gr.setValue("sys_scope", "global");
                gr.update();
            }
        } catch (e) {
            this.logger.error("Exception caught inside Migration_Script._createOnChangeScript. Error:- " + e);
        }
    },

    type: 'Migration_Script'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-09-11 10:09:24&lt;/sys_created_on&gt;&lt;sys_id&gt;caeab4864f337300d8494ebf9310c73e&lt;/sys_id&gt;&lt;sys_mod_count&gt;119&lt;/sys_mod_count&gt;&lt;sys_name&gt;Migration_Script&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_caeab4864f337300d8494ebf9310c73e&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-05-01 06:17:17&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1469873954</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>815887e5dbcc7c103e3c6a5b8a961956</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98f5b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Migration_Script</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>d9dc2fd24fb3a410fe9fcc9d62222f50</update_guid>
<update_guid_history>d9dc2fd24fb3a410fe9fcc9d62222f50:-1469873954,fd93ce5f8fe36010f8c94281d1e907cc:160055078,4b51ce9bbee36010b6f82541f72a287f:-575326538,ef8fb55b2be36010bd6ddeae5169c0b0:1366020,2eac399752e360106fa3c126a7b8dbd0:-1988079278,ca2bf197a3e3601010653a38e39a8bba:1949172809,e41fa95fcca3601087110000b30cae81:1624193497,41a9e5d701a360109fe99f4c0e48f69a:118896578,db88e646215328502a302a7ba650c4d7:-968929448,2be66282185328501e4c31f3dfd9855f:-978935699,dd13059913dfe01048ab85fed9a8b407:2130190675,e2db7c99fe1fe010052d4c603789092c:1175978801,ae6e9bc9a6df24501b2d6d924f56cdb1:-815861837,d0691fc9d6dba010a42a58717226f2ba:-359754939,c11e1788fa5f24508ed093a3684ca2e3:-1096120895,ea0917445d5f24505fa91859ed7e5637:1614014441,2d1487440a1f2450cd31913520a38d15:148956159,26b4c6fa7acf205001d442dcb2e5e35c:-1822618430,0f193ae25bcbac107a3437976f9e8f50:1576682166,3c9d577498cfe4101a45a013dda6b794:2018940530,9cfa97bca58fe410696adb3330839baf:106374574,03b817bc628fe410186ba17a476dc778:1741628813,a9be433ce04fe4108e955b93ee172e89:-1764988119,645b03b0318fe410ac2c3fbdf7a5ed09:-1159529184,74f703b0d88fe4104ce63bdf59e96201:302834688,bdcf363cdf4fe410a5c2ad1cfe263f54:120077110,2c6f3238954fe410ec13af9440db65b4:-2087249129,f104f2b05b4fe4102598b192f3d6f9dd:1780587574,bf613abca20fe4102413f9bbb06fd252:-1728770921,0d603ebcac0fe4106fa127ea9beab149:-324153062,6709d270730fe410251987f1abf5b097:846296896,f48892303a0fe410049b833e6779627e:-22190541,e522563c49cbe4105c25970c37a60ff2:-1617558480,f5f1c134400be410fc78212be6757903:1443369704,868bccfc3307e410ba754bd463b37f23:860664901,edf356ec674fa4100078e74afd17c072:1152600773,39455c20880ba410a804ba4d27132eea:-1999482427,5ef4dc24520ba41029393b3fdec119df:88895795,8bcfd65c0d83a410cfdbb3a7d375ef7e:142322403,e09e921c4983a410b8a36c83f2512565:-176275878,aa2cde988283a410606c08b8502ef47e:1683341362,e2269214c183a4100b1d716544355dae:-1085842769,92359a541783a41009b85fb2563db52c:423638413,85f7cc8da595649049a5f92a39515a38:-1671888124,a50cc04d0304a010d9e06307ee334b0a:-1435386113,20e7800d5304a010e25bf925369f0997:2069133929,9a314da67e6f54106849e7642e6e92b6:175809751,a799715618675410d72ca6b5433c3031:2114252140,8d25cdd630a35410a9c4b394f93d421c:634838339,025ab502246b141092561d35ebcf395f:-1070049925,249214c250e31410c0f5c7cc8b582da8:1541575440,13d75efdd3a750109bd9a5857eef766d:2140628624,66c52031d12bd0107741bda29317207b:812274704,a5f46c312b2bd010a9324c1a97cb6a79:-2088715855,d7fbd4b5e6e7d010977039698d86385a:-1845678258,fdba54f573e7d010d0fbc3255a827352:1712006664,b0990c39bda7d0106693c68f6285ad93:163655485,ada4f3259267d010e307908d3856c9f0:745814570,5a158204172b9010f0ef7bb83ba779b6:869112296,247dc508e6679010115cd078465f1a9d:-1108733538,8d56a101f41750102e39357d41da928a:-993732319,cf04e84d01135010dd3401cc9cd40f56:-947411583,c33a1c056213501027b75accf99002b4:1592620463,46c75c055a1350101aaebed65445e27c:1471297535,b40bf9706ad710103440c5aaae477384:1933924403,53022024d21350109bdc074d55bd8bf6:350800390,479294284bdf1010b37ded70cf7c21fc:1105798470,369f0864a4df10109a37324f02e536ac:1151522099,3d8a8f10df1f101058d18586073f1b69:-1687325504,08b89c0163c75c908290bf7147f54842:901634930,66786d50ee83d89027e982b625aa6619:-1217183196,443319949f87d0104c96842f47285f5d:-804901250,fc25415c1147d010cfde50e1cad46aef:-1852353262,8cf14d98ee47d01073d2af49e4e581fa:1481362477,3351c5987347d0109e0071da0819f5de:-50525092,1c9db094ec47d010f3dc881df45e612c:-1874550043,66e7b410a547d0104b11948a9abb313d:849508809,d033f4106947d010ba51dd0066299872:2052980060,061f68909407d010d07bdfc3bde72dfb:-276613048,f5bbe4dcefc3d0107eb2e582eea2a0a3:927928773,df96a4d818c3d0106955cd2460128be0:-805653090,8c25a45896c3d010bd40cf31680e6ed2:-2091770536,a983ec582cc3d010aa1842bafb8a9b60:1328227568,06c1189c3e83d0107fc9cff8189b52d2:-1901943432,3bdf4018b483d01064c13aa922d1dc1c:934422790,d60b059fb7ba5010e540b304a8d9f10e:1500667199,fb790d5b4c7a50100ec0a46114923695:806665422,1a2ac2cffbb25010655dd9a7144de1a7:1521625119,32b1e16f972298503552fe8fefd8b8d9:-551997769,c76b1f26783b84101699a4e185cba18b:-753688393,097b64f2a41100103d297aa02e5c1a8d:-912298074,470bb568d71908104151472ef344ea38:-741977356,e8b97d2867190810ced38c88647e1927:867468443,72bd17fe6c41041045fca46ec9ce8b74:1563531241,c694e3b73c7f330077f703ee6df280c0:907140764,af00f5aefd3bb300d33393d88e1ec300:-931762699,9c8795a61ff7b3009da79fc6d24e2fe4:909114287,80b9f06670b7b300a0dc0713f4a1201c:-1866674801,d143b8eacebb3300a9b26b1f21873d8d:-1840373311,9fd0b82689bb3300e81365b9698843c5:210928253,8fd9a0e215bb330064f496ab81075243:-630791341,a70df396e43b330039398af0d931612b:1631528564,2f9aa6da0f37330088be1cd81c61cf6b:185703213,127aa6daff373300429261ee6d857564:-1848709098,cf3aaa9abf3733000042c1b2f32cb215:-304031332,ff2aae9a5a3733002a5c8c2a06ec8ccf:344153237,e5e4a696e0373300423e76365a56f98c:-2078374087,18a6d25a95f33300e3097677b4d030d3:489118318,8c96521e2ff33300a084c7c921fc9116:-2111722977,562196d63fb33300c2baf2d26a8f0b75:-896639251,a4f2ca96dbb33300ac3ce7d0e49b826a:-1385597839,25c1429257b333000e63959788a73a41:-940423726,4ab1b95a3e333300409bc2c1f0615602:546104125,b920355a5f7333006d2374e3d4d84234:527834964,60642d1afa333300deab36de8709c65a:-1575383558,fdfad51693333300f0aba0a5886da3cc:612375769,c709d5928d333300db64d85c27324fef:-548422816,f71bda4abb37730041004c07e4f84ef4:-293315480,40159a4666f37300332d5ff896b245f7:2037898708,e9f30e4a26f373007bbfe229bc083bc9:-1598826147,45152dce777373007b61d0fd0d7b6348:1031060289,034269424db373000478953c57913805:574640253,57b1a1428fb373003e7f8a5c292ce8b4:-1118767405,3ea1614251b37300ce5fd7d09f82f6fa:-81791376,46afd1ce8f737300fe6c21326add9110:-1812907213,c7ee5542777373009ce66e45d66d3cb4:1275437037,0f8acd0a7e3373009915d4ad8a677bff:81599683,763bf0427f3373004bc5657665a53663:616933246</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_867a58dfdb9254500315f28239961930</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_policy"&gt;&lt;sys_ui_policy action="INSERT_OR_UPDATE"&gt;&lt;active&gt;false&lt;/active&gt;&lt;conditions/&gt;&lt;description/&gt;&lt;global&gt;true&lt;/global&gt;&lt;inherit&gt;false&lt;/inherit&gt;&lt;isolate_script&gt;true&lt;/isolate_script&gt;&lt;model_id/&gt;&lt;model_table/&gt;&lt;on_load&gt;true&lt;/on_load&gt;&lt;order&gt;100&lt;/order&gt;&lt;reverse_if_false&gt;true&lt;/reverse_if_false&gt;&lt;run_scripts&gt;true&lt;/run_scripts&gt;&lt;script_false&gt;&lt;![CDATA[function onCondition() 
{
	g_form.setValue('show_help_text',false);
}]]&gt;&lt;/script_false&gt;&lt;script_true&gt;&lt;![CDATA[function onCondition() 
{
	g_form.setValue('show_help_text',true);
}]]&gt;&lt;/script_true&gt;&lt;set_values/&gt;&lt;short_description&gt;Set Show Help Text true&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ui_policy&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-08-03 07:48:03&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;867a58dfdb9254500315f28239961930&lt;/sys_id&gt;&lt;sys_mod_count&gt;26&lt;/sys_mod_count&gt;&lt;sys_name&gt;Set Show Help Text true&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_policy_867a58dfdb9254500315f28239961930&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-19 04:48:02&lt;/sys_updated_on&gt;&lt;table&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/table&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;view/&gt;&lt;/sys_ui_policy&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1182115826</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>815887e5dbcc7c103e3c6a5b8a961959</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d780000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Set Show Help Text true</target_name>
<type>UI Policy</type>
<update_domain>global</update_domain>
<update_guid>6d8fa5eb375a24103cb7285839de6309</update_guid>
<update_guid_history>6d8fa5eb375a24103cb7285839de6309:-1182115826,239adfa7ca4dac103c66cbebff82b703:-1028406333,b88ad3e74e4dac10b3e8b5cf2bdb7a4d:-1182115826,4c3a13e7b74dac1056d1acd4e9d89011:-63630889,4e0a53a7c74dac10840192db50fd4be7:-1182115826,27e9d3a74f4dac10815ae19dedcba881:-1934470563,ecd2b00e13c16810d0a003ea245d266f:-383801731,ad94ab956f89e410f266fe259a83c6ed:-702762028,1844af55e989e4104adfc63d0aba1911:230320498,b721afd1d889e410bea110f65825b632:1466196504,b44f1391bc89e410b3bc48fc2b2eb328:1192525,e5aedf512189e410240af820a96464f1:1466196504,627ed751fa89e410b3c958f5fd83e31d:-1716756018,81ed5751df89e41068df4582ee0e4b32:985630794,9d4dd7110889e410700eba160eeb8a5e:-1335272566,382d531dd649e410b0d245c831f8f56e:-1927808617,7e579b913349e4101d26d755fedc6648:-1335272566,79765f51ca49e410ac780797fe9845b2:1907605089,d5e3adda340c64102e3b28a666f31d6a:-1635152321,6fc369da260c641063c64e100a9370d6:1201267276,ce33219aa90c6410c71869672a001d84:1102026052,64d2659a650c641082b5c0012da05b84:1648922871,6892259abe0c6410b4829a4811f9244e:989832211,c2422d5ab70c6410df682e6816c2efb1:2145052072,3e41215afd0c64105ac998e7ae44ecce:290802496,3a0c1512770c641068659a2ccc96cfc9:-408858049,24eb5912370c6410f0d9076c08237a97:-751682923,5e9a91de7ec8641012979d208f88b953:203652486,60ca1cdf07925450ec422d2fd9a43d23:-732550277</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_074a5d8bdbd1230084249235ca9619cc</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="" section_id="074a5d8bdbd1230084249235ca9619cc" sys_domain="global" table="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" version="3" view=""><sys_ui_element action="INSERT_OR_UPDATE"><element>x_nuta2_nutanix_ca_Nutanix_logo_on_config.xml</element><position>0</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>9c7a29113742ab00fdfc097973990e5d</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter display_value="Nutanix Staging Marketplace Items">d99be87737756700fdfc097973990eee</sys_ui_formatter><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type>formatter</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.begin_split</element><position>1</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>d07a29113742ab00fdfc097973990e5e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type>.begin_split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>name</element><position>2</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>547a29113742ab00fdfc097973990e5e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>categories</element><position>3</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>d47a29113742ab00fdfc097973990e5e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>project_reference_list</element><position>4</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>587a29113742ab00fdfc097973990e5e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>owner_reference</element><position>5</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>d87a29113742ab00fdfc097973990e5e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>author</element><position>6</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>5c7a29113742ab00fdfc097973990e5e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.split</element><position>7</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>dc7a29113742ab00fdfc097973990e5e</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type>.split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>state</element><position>8</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>507a29113742ab00fdfc097973990e5f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>app_state</element><position>9</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>d07a29113742ab00fdfc097973990e5f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>creation_time</element><position>10</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>547a29113742ab00fdfc097973990e5f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>last_update_time</element><position>11</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>d47a29113742ab00fdfc097973990e5f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.end_split</element><position>12</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>587a29113742ab00fdfc097973990e5f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type>.end_split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>icon_reference_list</element><position>13</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>d87a29113742ab00fdfc097973990e5f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>description</element><position>14</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>5c7a29113742ab00fdfc097973990e5f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>app_blueprint_template</element><position>15</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>dc7a29113742ab00fdfc097973990e5f</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>execution_context</element><position>16</position><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-11-27 09:39:11</sys_created_on><sys_id>507a29113742ab00fdfc097973990e60</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-11-27 09:39:11</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>support_status</element><position>17</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-26 08:03:15</sys_created_on><sys_id>30d1744fdba95010033fbd51399619f2</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-26 08:03:15</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>deprecation_reason</element><position>18</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-06-26 08:05:18</sys_created_on><sys_id>0b42b08fdba95010033fbd51399619f7</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-06-26 08:05:18</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>type</element><position>19</position><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-18 13:38:33</sys_created_on><sys_id>075f56932fdee010962a877cf699b64a</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items" sys_domain="global" view="Default view">074a5d8bdbd1230084249235ca9619cc</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-18 13:38:33</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_section action="INSERT_OR_UPDATE"><caption/><header>false</header><name>x_nuta2_nutanix_ca_nutanix_staging_marketplace_items</name><roles/><sys_class_name>sys_ui_section</sys_class_name><sys_created_by>nikita.kumari</sys_created_by><sys_created_on>2018-10-26 12:10:55</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>074a5d8bdbd1230084249235ca9619cc</sys_id><sys_mod_count>0</sys_mod_count><sys_name>x_nuta2_nutanix_ca_nutanix_staging_marketplace_items</sys_name><sys_overrides/><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_section_074a5d8bdbd1230084249235ca9619cc</sys_update_name><sys_updated_by>nikita.kumari</sys_updated_by><sys_updated_on>2018-10-26 12:10:55</sys_updated_on><sys_user/><title>true</title><view display_value="Default view" name="NULL">Default view</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>1664581846</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>815887e5dbcc7c103e3c6a5b8a96195c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d3d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_staging_marketplace_items</table>
<target_name>Nutanix Staging Marketplace Items</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>075fd693c4dee0107ed156133affe464</update_guid>
<update_guid_history>075fd693c4dee0107ed156133affe464:1664581846,4f42b08f13a950101c96dd8cff376ef9:1055394748,4f42b08f13a950101c96dd8cff376ef9:1055394748,30d1744fbda9501023d81a9e125600f5:-1263497566,947a2911fe42ab00b6b47bac89bb6b88:1400915160,143a25112d42ab00b2e10ebd77028afe:1314765319,88924d480ece6700f340ba0ceac2275c:507127421,af52c9485ece67004c3bc376f23ac229:-500370458,4d4c28b79d7567002899912fdcf03080:152954408,a38d1431db71e300e2aee60a50fd7845:727652078,8f4a9d8ba4d123004a14f640fceec4e8:2115719117,0f4a9d8bbad12300d3889b0e0a25c7df:222366251</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_x_nuta2_nutanix_ca_nutanix_marketplaceitems_bp_type</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="bp_type" table="x_nuta2_nutanix_ca_nutanix_marketplaceitems"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;BP Type&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;bp_type&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value="String"&gt;string&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;40&lt;/max_length&gt;&lt;name&gt;x_nuta2_nutanix_ca_nutanix_marketplaceitems&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-02-18 13:42:56&lt;/sys_created_on&gt;&lt;sys_id&gt;d84066932fdee010962a877cf699b632&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;BP Type&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_x_nuta2_nutanix_ca_nutanix_marketplaceitems_bp_type&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-18 13:42:56&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>195047393</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>8158cb25dbcc7c103e3c6a5b8a96199c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d1c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_marketplaceitems</table>
<target_name>Marketplace Items.BP Type</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>9a6026d37ddee010d7016d9f9337c228</update_guid>
<update_guid_history>9a6026d37ddee010d7016d9f9337c228:195047393</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_601324d32fab2410764c2c6df699b68d</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;true&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;x_nuta2_nutanix_ca_catalog_variables_properties&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition table="x_nuta2_nutanix_ca_catalog_variables_properties"&gt;isprofilevariable=true^EQ&lt;item endquery="false" field="isprofilevariable" goto="false" newquery="false" operator="=" or="false" value="true"/&gt;&lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;&lt;/filter_condition&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;Profile Variable Field JSON update&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var field_json = current.field_json;
    var array = field_json.split("}@@");
    var profile = current.application_profile + "";
    var temp = "";
    var index = 0;

    for (var i = 0; i &lt; (array.length - 1); i++) {

        if (array[i].endsWith(profile)) {
            temp = temp + array[i] + "}@@";
        } else {
            temp = temp + array[i] + "_" + profile + "}@@";
        }
        index++;
    }
    temp = temp + array[index];

    var field_json1 = JSON.parse(temp);
    var name = field_json1.name + '';
    if (!name.includes("_" + current.application_profile)) {

        name = name + "_" + current.application_profile;
        field_json1.name = name;
    }
    current.field_json = JSON.stringify(field_json1);

})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Priyanka&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-04-21 07:57:00&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;601324d32fab2410764c2c6df699b68d&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Profile Variable Field JSON update&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_601324d32fab2410764c2c6df699b68d&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-21 10:47:58&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=601324d32fab2410764c2c6df699b68d"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>1522622238</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>8158cb25dbcc7c103e3c6a5b8a96199f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98f3d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_catalog_variables_properties</table>
<target_name>Profile Variable Field JSON update</target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>b8ea81df55e724947ea884ef5bcfe97f</update_guid>
<update_guid_history>b8ea81df55e724947ea884ef5bcfe97f:1522622238,a8c328930cab2410cd407858a807e861:-1993049530</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_75c3833837fd2300fdfc097973990e2f</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Nutanix_ConfigureSettingScripts&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Nutanix_ConfigureSettingScripts&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Nutanix_ConfigureSettingScripts = Class.create();
Nutanix_ConfigureSettingScripts.prototype = {
    initialize: function() {
        this.appUtil = new Nutanix_Calm_Utils();
        this.logger = new Nutanix_Calm_Logger();
        this.appScriptInstance = new Nutanix_ImportApplicationProfiles();
    },
    _updateOptions: function(fieldSysid, opt, type) {
		gs.info("Called update options:"+fieldSysid);
        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._updateOptions");
            if (type == 5) {
                var grQust = new GlideRecord('question_choice');
                grQust.addQuery('question', fieldSysid);
                grQust.query();
                while (grQust.next()) {
                    grQust.setValue('question', '');
                    grQust.update();
                }
                grQust.deleteMultiple();

                for (var i in opt) {
                    grQust = new GlideRecord('question_choice');
                    grQust.initialize();
                    grQust.sys_class_name = "question_choice";
                    grQust.question = fieldSysid + '';
                    grQust.text = opt[i] + '';
                    grQust.value = opt[i] + '';
                    grQust.insert();
                }
            } else if (type == 21) {
                var grQust = new GlideRecord(this.appUtil.configuration.table.dropDownTable);
                grQust.addQuery('variable', fieldSysid);
                grQust.deleteMultiple();

                for (var i in opt) {
                    grQust = new GlideRecord(this.appUtil.configuration.table.dropDownTable);
                    grQust.initialize();
                    grQust.variable = fieldSysid;
                    grQust.name = opt[i];
                    grQust.value = opt[i];
                    grQust.insert();
                }
                var fGR = new GlideRecord('item_option_new');
                fGR.addQuery('sys_id', fieldSysid);
                fGR.query();
                if (fGR.next()) {
                    fGR.reference_qual = "variable=" + fieldSysid;
                    fGR.update();
                }

            }
        } catch (e) {
            this.logger.error("Inside Nutanix_ConfigureSettingScripts._updateOptions " + e);
        }

    },

    setServiceVariables: function(current) {
        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts.setServiceVariables.");

            var performAction = current.variables.type + '';
            var catName = '';

            if (performAction == 'new') {
//priyanka More 
                var profile = current.variables.multiple_application_profile + "";
				gs.info("Abh chaljayega" + profile + current.variables.multiple_application_profile);
				var profile_arr = profile.split(",");
				
                var blueprint = current.variables.blueprint;
                var catSysId = current.description;
                var service_data = JSON.parse(current.variables.service_data);

                this.logger.debug("Got Profile:- " + profile + " Blueprint:- " + blueprint + " Catalog Item:- " + catSysId + " and Service Variables Data:- " + current.variables.service_data + " for setting service variables");

                var fieldGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable + '');
                fieldGR.addEncodedQuery('cat_item=' + catSysId);
                fieldGR.query();

                var fieldInfo = {};

                while (fieldGR.next()) {
                    fieldInfo[fieldGR.name] = fieldGR.sys_id + '';
                }


                this.logger.debug("Fethed the mapping of fields to sysIds. JSON string:- " + JSON.stringify(fieldInfo));

                var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');

                for (var i in service_data) {
                    var serviceName = i;
                    var categoryList = service_data[i];

                    for (var j in categoryList) {
                        var categoryName = j;
                        var category = categoryList[j];

                        var keys = Object.keys(category);

                        if (!category[keys[0]].notCmplx || category[keys[0]].notCmplx + '' == 'false') {

                            this.logger.debug("Mapping PortList variables " + JSON.stringify(category[keys[0]]) + " in Varaibles properties table");

                            gr.initialize();
                            gr.variable = fieldInfo[categoryName + ''] + '';
                            gr.application_profile = profile + '';
                            gr.catalog_item = catSysId + '';
                            gr.default_value = JSON.stringify(category[keys[0]]);
                            gr.isprofilevariable = 'false';
                            gr.runtime_config = 'false';
                            gr.uuid = '';
                            gr.service_name = fieldInfo[serviceName + ''] + '';
                            gr.category_name = fieldInfo[categoryName + ''] + '';
                            gr.insert();

                        } else {
                            for (var k in category) {
                                var varia = category[k];

                                this.logger.debug("Mapping service variable " + varia.name + " with value " + varia.value + " and runtime config as " + varia.runtime_config + " againsts service " + serviceName + " and category " + categoryName + " in Varaibles properties table");

                                if (varia.data_type + '' == 'LOCAL' &amp;&amp; (varia.val_type + '' == 'DATE_TIME' || varia.val_type + '' == 'DATE'))
                                    varia.value = this.appScriptInstance._formttedDateTime(varia.value + '', varia.val_type + '', true);


                                gr.initialize();
                                gr.variable = fieldInfo[varia.name + ''] + '';
                                gr.application_profile = profile + '';
                                gr.catalog_item = catSysId + '';
                                gr.default_value = varia.value + '';
                                gr.isprofilevariable = varia.isprofilevariable + '';
                                gr.runtime_config = varia.runtime_config + '';
                                gr.uuid = varia.uuid + '';
                                gr.service_name = fieldInfo[serviceName + ''] + '';
                                gr.category_name = fieldInfo[categoryName + ''] + '';

                                gr.isdisabled = varia.isdisabled + '';
                                gr.issupported = varia.isSupported + '';
                                gr.isservicevariable = varia.isservicevariable + '';


                                gr.type = varia.type;
                                gr.value_type = varia.val_type + '';
                                gr.field_regex = varia.regex + '';
                                gr.data_type = varia.data_type + '';
                                gr.uuid = varia.uuid + '';

                                gr.field_json = varia.field + "";
                                gr.is_hidden = (varia.isHidden + "" == 'true') ? true : false;

                                gr.insert();

                                catName = gr.catalog_item.name + '';


//                                 if (varia.isservicevariable + '' == 'true')
//                                     this._createOnChangeScript(fieldInfo[varia.name + ''] + '', catSysId + "");
                            }
                        }

                    }
                }
//priyanka More 
//                 this.logger.info("Set service variables values for " + catName + ".");
// 				this.logger.debug("Prince Logs outside for :::   " + profile_arr + " ::: " + profile_arr.length);
// 				for(var i = 0 ; i &lt; profile_arr.length ; i++){
// 					this.logger.debug("Prince Logs calling ... _createOnChangeScriptForDependee ");
// 					this._createOnChangeScriptForDependee(catSysId , profile_arr[i], true, "serviceVar" );
// 				}

            } 
			else {

                var profile = current.variables.application_profile + '';
                var catSysId = current.variables.cat_item + '';

                var service_data = JSON.parse(current.variables.service_data + '');

                this.logger.debug("Got Profile:- " + profile + " Catalog Item:- " + catSysId + " and Service Variables Data:- " + current.variables.service_data + " to update service variables.");

                var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
                gr.addQuery('catalog_item', catSysId);
                gr.addQuery('application_profile', profile);
                gr.addQuery('isprofilevariable', false);
                gr.query();

                while (gr.next()) {
                    /*if((gr.category_name.name+'').indexOf('storage') != -1){
                    	gr.default_value = JSON.stringify(service_data[gr.service_name.name+''][gr.category_name.name+''][gr.sys_id+'']);
                    	gr.update();	
                    	this.logger.debug("Updated service storage variable "+ gr.default_value);
                    }else if((gr.category_name.name+'').indexOf('port') != -1){
                    	gr.default_value = JSON.stringify(service_data[gr.service_name.name+''][gr.category_name.name+''][gr.sys_id+'']);
                    	gr.update();	
                    	this.logger.debug("Updated service port list "+ gr.default_value);
                    }*/


                    var jsonData = service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''];

                    if (!jsonData.notCmplx || jsonData.notCmplx + '' == 'false') {
                        gr.default_value = JSON.stringify(service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + '']);
                        gr.update();
                        this.logger.debug("Updated service port list " + gr.default_value);
                    } else {
                        if (service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''].data_type + '' == 'LOCAL' &amp;&amp; (service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''].val_type + '' == 'DATE_TIME' || service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''].val_type + '' == 'DATE'))
                            service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''].value = this.appScriptInstance._formttedDateTime(service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''].value + '', service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''].val_type + '', true);

                        gr.default_value = service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''].value + '';
                        gr.runtime_config = service_data[gr.service_name.name + ''][gr.category_name.name + ''][gr.sys_id + ''].runtime_config + '';
                        gr.update();

                        this.logger.debug("Updated service variable " + gr.variable.name + " with value " + gr.default_value + " and runtime config as " + gr.runtime_config + " againsts service " + gr.service_name.name + " and category " + gr.category_name.name + " in Variables properties table");
                        catName = gr.catalog_item.name + '';

                    }
                }

                this.logger.info("Updated service variables values for " + catName + ".");
            }

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts.setServiceVariables. Error:- " + e);
        }
    },

    setProfileVariables: function(current) {
        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts.setProfileVariables.");
            this.logger.info("Setting profile variables properties." + JSON.stringify(current));

            var performAction = current.variables.type + '';
            var catName = '';

            if (performAction == 'new') {
//priyanka More			
                var profile = current.variables.multiple_application_profile + "";
				gs.info("Abh chaljayega" + profile + current.variables.multiple_application_profile);
				var profile_arr = profile.split(",");
				
                var blueprint = current.variables.blueprint;
                var catSysId = current.description;
                var variable_data = JSON.parse(current.variables.variable_data);

                this.logger.debug("Got Profile:- " + profile + " Blueprint:- " + blueprint + " Catalog Item:- " + catSysId + " and Service Variables Data:- " + current.variables.variable_data + " for setting profile variables");

                var fieldGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable + '');
                fieldGR.addEncodedQuery('cat_item=' + catSysId + '^type!=19^type!=20');
                fieldGR.query();

                var fieldInfo = {};

                while (fieldGR.next()) {
                    fieldInfo[fieldGR.name] = fieldGR.sys_id + '';
                }

                this.logger.debug("Fethed the mapping of fields to sysIds. JSON string:- " + JSON.stringify(fieldInfo));

                var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
				
                for (var i in variable_data) {
                    var varia = variable_data[i];

                    if (varia.data_type + '' == 'LOCAL' &amp;&amp; (varia.val_type + '' == 'DATE_TIME' || varia.val_type + '' == 'DATE'))
                        varia.value = this.appScriptInstance._formttedDateTime(varia.value + '', varia.val_type + '', true);

                    gr.initialize();
                    gr.application_profile = varia.application_profile + '';
                    gr.catalog_item = catSysId + '';
                    gr.default_value = varia.value + '';
                    gr.isprofilevariable = varia.isprofilevariable + '';
                    gr.runtime_config = varia.runtime_config + '';
                    gr.uuid = varia.uuid + '';
                    gr.variable = fieldInfo[varia.name + ''] + '';
							gs.info("priyanka BP varable "+fieldInfo[varia.name + '']+" new catalog item variable "+gr.variable);
                    gr.isdisabled = varia.isdisabled + '';
                    gr.type = varia.type;
                    gr.value_type = varia.val_type + '';
                    gr.field_regex = varia.regex + '';
                    gr.data_type = varia.data_type + '';
                    gr.uuid = varia.uuid + '';
                    gr.field_json = varia.field + "";
                    gr.is_hidden = (varia.isHidden + "" == 'true') ? true : false;
                    gr.insert();
                    catName = gr.catalog_item.name + '';
                    this.logger.debug("Mapping profile variable " + varia.name + " with value " + varia.value + " and runtime config as " + varia.runtime_config + " againsts profile " + gr.application_profile.name + " in Variables properties table");


                    //if(varia.isprofilevariable+'' == "true")
                    //	this._createOnChangeScript(fieldInfo[varia.name+'']+'' , catSysId + "");
					
					
                }
				
//priyanka More				
			
				for(var i = 0 ; i &lt; profile_arr.length ; i++){
					
					this._createOnChangeScriptForDependee(catSysId , profile_arr[i], "profileVar" );
				}
				
                this.logger.info("Set profile variables values for " + catName + ".");
            }
			else {

               var profile = current.variables.multiple_application_profile + "";
				gs.info("Abh chaljayega" + profile + current.variables.multiple_application_profile);
				var profile_arr = profile.split(",");
                var catSysId = current.variables.cat_item + '';
                var delta_profile = (current.variables.delta_profiles + '').split(',');
                var variable_data = JSON.parse(current.variables.variable_data + '');

                var variable_data = JSON.parse(current.variables.variable_data + '');
                for (var c in variable_data) {
                    var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
                    gr.addQuery('catalog_item', catSysId);
                    gr.addQuery('application_profile', variable_data[c].application_profile);
                    gr.addQuery('isprofilevariable', true);
                    gr.query();

                    while (gr.next()) {
                        if (variable_data[gr.sys_id + ''].data_type + '' == 'LOCAL' &amp;&amp; (variable_data[gr.sys_id + ''].val_type + '' == 'DATE_TIME' || variable_data[gr.sys_id + ''].val_type + '' == 'DATE'))
                            variable_data[gr.sys_id + ''].value = this.appScriptInstance._formttedDateTime(variable_data[gr.sys_id + ''].value + '', variable_data[gr.sys_id + ''].val_type + '', true);

                        gr.default_value = variable_data[gr.sys_id + ''].value + '';
                        gr.runtime_config = variable_data[gr.sys_id + ''].runtime_config + '';
                        gr.update();
                        catName = gr.catalog_item.name + '';
                        this.logger.debug("Updated profile variable " + gr.variable.name + " with value " + gr.default_value + " and runtime config as " + gr.runtime_config + " againsts profile " + gr.application_profile.name + " in Variables properties table");
                    }
                }
                this.logger.info("Updated profile variables values for " + catName + ".");

                var fieldGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable + '');
                fieldGR.addEncodedQuery('cat_item=' + catSysId + '^type!=19^type!=20');
                fieldGR.query();

                var fieldInfo = {};

                while (fieldGR.next()) {
                    fieldInfo[fieldGR.name] = fieldGR.sys_id + '';
                }

                for (var c in variable_data) {
                    for (var k in delta_profile) {
                        if (variable_data[c].application_profile == delta_profile[k]) {
                            var varia = variable_data[c];

                            if (varia.data_type + '' == 'LOCAL' &amp;&amp; (varia.val_type + '' == 'DATE_TIME' || varia.val_type + '' == 'DATE'))
                                varia.value = this.appScriptInstance._formttedDateTime(varia.value + '', varia.val_type + '', true);

                            gr.initialize();
                            gr.application_profile = varia.application_profile + '';
                            gr.catalog_item = catSysId + '';
                            gr.default_value = varia.value + '';
                            gr.isprofilevariable = varia.isprofilevariable + '';
                            gr.runtime_config = varia.runtime_config + '';
                            gr.uuid = varia.uuid + '';
                            gr.variable = fieldInfo[varia.name + ''] + '';
                            gr.isdisabled = varia.isdisabled + '';
                            gr.type = varia.type;
                            gr.value_type = varia.val_type + '';
                            gr.field_regex = varia.regex + '';
                            gr.data_type = varia.data_type + '';
                            gr.uuid = varia.uuid + '';
                            gr.field_json = varia.field + "";
                            gr.is_hidden = (varia.isHidden + "" == 'true') ? true : false;
                            gr.insert();
                            catName = gr.catalog_item.name + '';
                            this.logger.debug("Mapping profile variable " + varia.name + " with value " + varia.value + " and runtime config as " + varia.runtime_config + " againsts profile " + gr.application_profile.name + " in Variables properties table");


//                             if (varia.isprofilevariable + '' == "true")
//                                 this._createOnChangeScript(fieldInfo[varia.name + ''] + '', catSysId + "");

                        }
                    }
                }
				
				for(var i = 0 ; i &lt; profile_arr.length ; i++){
					
					this._createOnChangeScriptForDependee(catSysId , profile_arr[i], "profileVar" );
				}
            }

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts.setProfileVariables. Error:- " + e);
        }
    },

    _createOnChangeScriptForDependee: function(catSysId, profileSysID , type) {
		try{
		
        var clientScriptVar = [];
        var variableProperty = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
        variableProperty.addQuery('catalog_item', catSysId);
		variableProperty.addNotNullQuery('field_json');
  //      variableProperty.addQuery('application_profile', profileSysID);
			
			if(type+'' == 'profileVar')
				variableProperty.addQuery('isprofilevariable', true);
			if(type+'' == 'serviceVar')
				variableProperty.addQuery('isservicevariable', true);
			
		variableProperty.query();
        while (variableProperty.next()) {
            var depend_on = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
            depend_on.addQuery('catalog_item', catSysId);
			depend_on.addNotNullQuery('field_json');
//            depend_on.addQuery('application_profile', profileSysID);
			
				if(type+'' == 'profileVar')
					depend_on.addQuery('isprofilevariable', true);
				if(type+'' == 'serviceVar')
					depend_on.addQuery('isservicevariable', true);
			
            depend_on.query();
            while (depend_on.next()) {
				var dependent_var = '';
				if(type+'' == 'serviceVar'){
					
					dependent_var = '@@{' + variableProperty.variable.question_text + '}@@';
					gs.info("!!!!! serviceVar "+dependent_var);
				}
				if(type+'' == 'profileVar'){	
					
					dependent_var = '@@{' + variableProperty.variable.name + '}@@';
					gs.info("!!!!! profileVar "+dependent_var);
				}
				var field_json = depend_on.field_json+'';
				gs.info("Priyanka log dependent_var "+dependent_var+" "+field_json+" "+field_json.indexOf(dependent_var));
				if(field_json != '{}'){
					if (field_json.indexOf(dependent_var) != -1) {
						if (clientScriptVar.indexOf(variableProperty.variable.sys_id) === -1) {
							gs.info("!!!!! varaible push to array "+variableProperty.variable.name);
							clientScriptVar.push(variableProperty.variable.sys_id);
						}
						break;
					}
				}
            }
        }
		
        for (var j in clientScriptVar) {
			if(this._clientScriptExist(clientScriptVar[j] + '', catSysId + ""))
				continue;
			else
				this._createOnChangeScript(clientScriptVar[j] + '', catSysId + "");
        }
		}catch(e){
			this.logger.error("Inside _createOnChangeScriptForDependee caught exception :::: " + e)
		}
    },
    _clientScriptExist: function(clientScriptVar, catSysId){
		var gr = new GlideRecord('catalog_script_client');
		gr.addQuery('name', 'Fetch values OnChange');
		gr.addQuery('cat_item', catSysId);
		gr.addQuery('cat_variable', clientScriptVar);
		gr.query();
		if(gr.next())
			return true;
		else
			return false;
	},
    setCredentialsData: function(current) {

        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts.setCredentialsData.");





            var catSysId = current.description;
            var catName = '';
            var performAction = current.variables.type + '';

            if (performAction == 'new') {
                var blueprint = current.variables.blueprint;
                var variable_data = JSON.parse(current.variables.credentials_data);

                this.logger.debug("Got Blueprint:- " + blueprint + " Catalog Item:- " + catSysId + " and Credentials Data:- " + current.variables.credentials_data + " for setting credetnails.");

                var gr = new GlideRecord(this.appUtil.configuration.table.Credentials + '');

                for (var i in variable_data) {
                    var varia = variable_data[i];

                    gr.initialize();

                    gr.catalog_item = catSysId + '';
                    gr.actual_name = i + '';
                    gr.description = varia.description + '';
                    gr.is_default = varia.is_default + '';
                    gr.is_secret_modified = varia.is_secret_modified + '';
                    gr.name = varia.credential_name.value + '';
                    gr.passphrase = (varia.passphrase) ? varia.passphrase.value + '' : '';
                    gr.passphrase_editable = (varia.passphrase) ? varia.passphrase.runtime_config + '' : '';
                    gr.password = (varia.password) ? varia.password.value + '' : '';
                    gr.secret_editable = (varia.password) ? varia.password.runtime_config + '' : '';
                    gr.ssh_private_key = (varia.ssh_private_key) ? varia.ssh_private_key.value + '' : '';
                    gr.ssh_private_key_editable = (varia.ssh_private_key) ? varia.ssh_private_key.runtime_config + '' : '';
                    gr.state = varia.state + '';
                    gr.type = varia.secret_type.value + '';
                    gr.username = varia.username.value + '';
                    gr.username_editable = varia.username.runtime_config + '';
                    gr.uuid = varia.uuid + '';

                    gr.username_isdisabled = varia.username_isdisabled + '';
                    gr.secret_isdisabled = varia.secret_isdisabled + '';
                    gr.ssh_private_key_isdisabled = varia.ssh_private_key_isdisabled + '';
                    gr.passphrase_isdisabled = varia.passphrase_isdisabled + '';

                    gr.credential_reference = varia.credential_reference.value + '';
                    gr.runtime = varia.runtime + '';

                    gr.insert();

                    catName = gr.catalog_item.name + '';
                    this.logger.debug("Mapped credentials data against catalog item " + gr.catalog_item);
                }

                // 				var gr = new GlideRecord(this.appUtil.configuration.table.variableSetTable+'');
                // 				gr.addQuery('variable_set', gs.getProperty('x_nuta2_nutanix_ca.credentials.variable.set')+'');
                // 				gr.addQuery('sc_cat_item', catSysId+'');
                // 				gr.query();

                // 				if(!gr.hasNext()){
                // 					gr.initialize();
                // 					gr.variable_set = gs.getProperty('x_nuta2_nutanix_ca.credentials.variable.set')+'';
                // 					gr.sc_cat_item = catSysId+''; 
                // 					gr.order = '51001';
                // 					gr.insert();	
                // 				}

                var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
                gr.addQuery('variable', gs.getProperty('x_nuta2_nutanix_ca.credentials.mapping.variable.sys.id') + '');
                gr.addQuery('catalog_item', catSysId + '');
                gr.query();

                if (gr.next()) {
                    gr.default_value = current.variables.environment_mapping;
                    gr.update();
                } else {
                    gr.initialize();
                    gr.variable = gs.getProperty('x_nuta2_nutanix_ca.credentials.mapping.variable.sys.id') + '';
                    gr.application_profile = '';
                    gr.catalog_item = catSysId + '';
                    gr.default_value = current.variables.environment_mapping;
                    gr.isprofilevariable = false;
                    gr.runtime_config = false;
                    gr.uuid = '';
                    gr.service_name = '';
                    gr.category_name = '';
                    gr.insert();
                }

                // 				if(current.variables.environment_mapping+'' == 'true'){
                // 					var mapping_data = JSON.parse(current.variables.credentials_mapping);

                // 					for(var i in mapping_data){

                // 						var varia = mapping_data[i];

                // 						var gr = new GlideRecord(this.appUtil.configuration.table.Credentials+'');
                // 						gr.addQuery('catalog_item', catSysId+'');
                // 						gr.addQuery('environment', varia.environment+'');
                // 						gr.addQuery('project', varia.project+'');
                // 						gr.query();

                // 						if(!gr.hasNext()){
                // 							gr.initialize();

                // 							gr.catalog_item = catSysId+'';
                // 							gr.actual_name = i+'';
                // 							gr.description = varia.description+'';
                // 							gr.is_default = varia.is_default+'';
                // 							gr.is_secret_modified = varia.is_secret_modified+'';
                // 							gr.name = varia.credential_name.value+'';
                // 							gr.passphrase = (varia.passphrase)?varia.passphrase.value+'':'';
                // 							gr.passphrase_editable = (varia.passphrase)?varia.passphrase.runtime_config+'':'';
                // 							gr.password = (varia.password)?varia.password.value+'':'';
                // 							gr.secret_editable = (varia.password)?varia.password.runtime_config+'':'';
                // 							gr.ssh_private_key = (varia.ssh_private_key)?varia.ssh_private_key.value+'':'';
                // 							gr.ssh_private_key_editable = (varia.ssh_private_key)?varia.ssh_private_key.runtime_config+'':'';
                // 							gr.state = varia.state+'';
                // 							gr.type = varia.secret_type.value+'';
                // 							gr.username = varia.username.value+'';
                // 							gr.username_editable = varia.username.runtime_config+'';
                // 							gr.uuid = varia.uuid+'';
                // 							gr.environment = varia.environment+'';
                // 							gr.project = varia.project+'';

                // 							gr.username_isdisabled = varia.username_isdisabled+'';
                // 							gr.secret_isdisabled = varia.secret_isdisabled+'';
                // 							gr.ssh_private_key_isdisabled = varia.ssh_private_key_isdisabled+'';
                // 							gr.passphrase_isdisabled = varia.passphrase_isdisabled+'';				 

                // 							gr.insert();	
                // 						}
                // 					}
                // 				}

                this.logger.info("Set profile variables values for " + catName + ".");
            } else {
                var catSysId = current.variables.cat_item + '';
                var variable_data = JSON.parse(current.variables.credentials_data);

                for (var i in variable_data) {
                    var varia = variable_data[i];

                    var gr = new GlideRecord(this.appUtil.configuration.table.Credentials + '');
                    gr.addQuery('catalog_item=' + catSysId + '^uuid=' + varia.uuid);
                    gr.query();

                    if (gr.next()) {
                        gr.catalog_item = catSysId + '';
                        gr.description = varia.description + '';
                        gr.is_default = varia.is_default + '';
                        gr.is_secret_modified = varia.is_secret_modified + '';
                        gr.name = varia.credential_name.value + '';
                        gr.passphrase = (varia.passphrase) ? varia.passphrase.value + '' : '';
                        gr.passphrase_editable = (varia.passphrase) ? varia.passphrase.runtime_config + '' : '';
                        gr.password = (varia.password) ? varia.password.value + '' : '';
                        gr.secret_editable = (varia.password) ? varia.password.runtime_config + '' : '';
                        gr.ssh_private_key = (varia.ssh_private_key) ? varia.ssh_private_key.value + '' : '';
                        gr.ssh_private_key_editable = (varia.ssh_private_key) ? varia.ssh_private_key.runtime_config + '' : '';
                        gr.state = varia.state + '';
                        gr.type = varia.secret_type.value + '';
                        gr.username = varia.username.value + '';
                        gr.username_editable = varia.username.runtime_config + '';
                        gr.uuid = varia.uuid + '';

                        gr.username_isdisabled = varia.username_isdisabled + '';
                        gr.secret_isdisabled = varia.secret_isdisabled + '';
                        gr.ssh_private_key_isdisabled = varia.ssh_private_key_isdisabled + '';
                        gr.passphrase_isdisabled = varia.passphrase_isdisabled + '';

                        gr.credential_reference = varia.credential_reference.value + '';
                        gr.runtime = varia.runtime + '';

                        gr.update();
                        catName = gr.catalog_item.name + '';
                        this.logger.debug("Updated credentials data against catalog item " + gr.catalog_item);
                    }
                }

                // 				var gr = new GlideRecord(this.appUtil.configuration.table.variableSetTable+'');
                // 				gr.addQuery('variable_set', gs.getProperty('x_nuta2_nutanix_ca.credentials.variable.set')+'');
                // 				gr.addQuery('sc_cat_item', catSysId+'');
                // 				gr.query();

                // 				if(!gr.hasNext()){
                // 					gr.initialize();
                // 					gr.variable_set = gs.getProperty('x_nuta2_nutanix_ca.credentials.variable.set')+'';
                // 					gr.sc_cat_item = catSysId+''; 
                // 					gr.order = '51001';
                // 					gr.insert();	
                // 				}

                var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
                gr.addQuery('variable', gs.getProperty('x_nuta2_nutanix_ca.credentials.mapping.variable.sys.id') + '');
                gr.addQuery('catalog_item', catSysId + '');
                gr.query();

                if (gr.next()) {
                    gr.default_value = current.variables.environment_mapping;
                    gr.update();
                } else {
                    gr.initialize();
                    gr.variable = gs.getProperty('x_nuta2_nutanix_ca.credentials.mapping.variable.sys.id') + '';
                    gr.application_profile = '';
                    gr.catalog_item = catSysId + '';
                    gr.default_value = current.variables.environment_mapping;
                    gr.isprofilevariable = false;
                    gr.runtime_config = false;
                    gr.uuid = '';
                    gr.service_name = '';
                    gr.category_name = '';
                    gr.insert();
                }

                // 				if(current.variables.environment_mapping+'' == 'true'){
                // 					var mapping_data = JSON.parse(current.variables.credentials_mapping);

                // 					for(var i in mapping_data){

                // 						var varia = mapping_data[i];

                // 						var gr = new GlideRecord(this.appUtil.configuration.table.Credentials+'');
                // 						gr.addQuery('catalog_item', catSysId+'');
                // 						gr.addQuery('environment', varia.environment+'');
                // 						gr.addQuery('project', varia.project+'');
                // 						gr.query();

                // 						if(!gr.hasNext()){
                // 							gr.initialize();

                // 							gr.catalog_item = catSysId+'';
                // 							gr.actual_name = i+'';
                // 							gr.description = varia.description+'';
                // 							gr.is_default = varia.is_default+'';
                // 							gr.is_secret_modified = varia.is_secret_modified+'';
                // 							gr.name = varia.credential_name.value+'';
                // 							gr.passphrase = (varia.passphrase)?varia.passphrase.value+'':'';
                // 							gr.passphrase_editable = (varia.passphrase)?varia.passphrase.runtime_config+'':'';
                // 							gr.password = (varia.password)?varia.password.value+'':'';
                // 							gr.secret_editable = (varia.password)?varia.password.runtime_config+'':'';
                // 							gr.ssh_private_key = (varia.ssh_private_key)?varia.ssh_private_key.value+'':'';
                // 							gr.ssh_private_key_editable = (varia.ssh_private_key)?varia.ssh_private_key.runtime_config+'':'';
                // 							gr.state = varia.state+'';
                // 							gr.type = varia.secret_type.value+'';
                // 							gr.username = varia.username.value+'';
                // 							gr.username_editable = varia.username.runtime_config+'';
                // 							gr.uuid = varia.uuid+'';
                // 							gr.environment = varia.environment+'';
                // 							gr.project = varia.project+'';

                // 							gr.username_isdisabled = varia.username_isdisabled+'';
                // 							gr.secret_isdisabled = varia.secret_isdisabled+'';
                // 							gr.ssh_private_key_isdisabled = varia.ssh_private_key_isdisabled+'';
                // 							gr.passphrase_isdisabled = varia.passphrase_isdisabled+'';				 

                // 							gr.insert();	
                // 						}
                // 					}
                // 				}

                this.logger.info("Updated credentials values for " + catName + ".");
            }
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts.setCredentialsData. Error:- " + e);
        }
    },

    _groupsToUsers: function(current) {

        var groups = (current.variables.assign_groups) ? (current.variables.assign_groups + "") : "";
        var users = (current.variables.assign_users) ? (current.variables.assign_users + "").split(",") : [];

        var grMembers = new GlideRecord("sys_user_grmember");
        grMembers.addEncodedQuery("group.sys_idIN" + groups);
        grMembers.query();
        while (grMembers.next()) {
            if (users.indexOf(grMembers.user.sys_id + "") == -1)
                users.push(grMembers.user.sys_id + "");
        }

        current.variables.assign_users = users.toString();

        return current;
    },

    configBPGeneralSettings: function(current, clientData, nonFilteredClientData) {

        try {

            this.logger.debug("Inside Nutanix_ConfigureSettingScripts.configBPGeneralSettings.");
            var lg = new x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge();
            var status = lg.hideAccessLocalGroupOption(); //to check if the given option is for local groups.

            if (status + "" == "false")
                current = this._groupsToUsers(current);

            var performAction = current.variables.type + '';

            if (performAction == 'new') {
                var blueprint = current.variables.blueprint + '';
                var blueprintType = current.variables.type_of_blueprint + '';
                var createCatalog = current.variables.create_catalog + '';

                this.logger.debug("Got Blueprint:- " + blueprint + " Blueprint Type:- " + blueprintType + " and Create Catalog:- " + createCatalog + " for configuring new catalog item.");

                var targetCatTable = 'x_nuta2_nutanix_ca_nutanix_catalog_items';
                var sourceCatTable = '';
                if (blueprintType == 'unpublished')
                    sourceCatTable = 'x_nuta2_nutanix_ca_nutanix_blueprint';
                else
                    sourceCatTable = 'x_nuta2_nutanix_ca_nutanix_marketplaceitems';

                var ans;
                if (createCatalog == 'yes')
                    ans = this._copyCatalogItem(sourceCatTable, targetCatTable, blueprint, current, blueprintType, clientData, nonFilteredClientData);
                else
                    ans = this._updateCatalogItem(sourceCatTable, targetCatTable, blueprint, current);

                this._insertIntoRuntimeConfigTable(ans, current);
                this._updateUserOverCalm(current);
                if (status + "" == "false") //updated version check the flag for referense.
                {
                    this._updateGroupOverCalm(current);
                } else {
                    this._updateGroupSnowRole(current);
                }

                return ans[0] + '';
            } else {

                var cat_item = current.variables.cat_item + '';

                this.logger.debug("Got Catalog Item:- " + cat_item + " for updating existing catalog item.");

                var gr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
                gr.addQuery('item_name', cat_item);
                gr.query();

                if (gr.next()) {
                    var cat = gr.item_name.getRefRecord();
                    cat.sys_name = current.variables.item_name + '';
                    cat.name = current.variables.item_name + '';
                    cat.short_description = current.variables.item_name + '';
                    cat.description_markdown = current.variables.description + '';
                    cat.description = this.appUtil.markdown_renderer(current.variables.description + '');
                    cat.update();

                    // 					var user_criteria = gr.user_criteria.getRefRecord();
                    // 					user_criteria.user = current.variables.assign_users;
                    var group = '';
                    if (status + "" == "false") {
                        group = current.variables.assign_groups;
                    } else {
                        group = current.variables.assign_local_groups;
                    }
                    var user_criteria = new sn_uc.UserCriteria(gr.user_criteria.sys_id);
                    user_criteria.update({
                        "user": "" + current.variables.assign_users,
                        "group": "" + group
                    }, "Update user criteria user Group");
                    //	user_criteria.update();

                    this._updateUserOverCalm(current);

                    if (status + "" == "false") {
                        this._updateGroupOverCalm(current);
                    } else {
                        this._updateGroupSnowRole(current);
                    }
                    gr.multiple_application_profile = current.variables.multiple_application_profile;
                    gr.multiple_projects = current.variables.multiple_project;
                    gr.update();
                    return gr.item_name + '';
                }

            }

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts.configBPGeneralSettings. Error:- " + e);
        }
    },

    _checkUsersUUID: function(current) {
        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._checkUsersUUID.");

            var userGr = new GlideRecord('sys_user');
            userGr.addEncodedQuery('sys_idIN' + current.variables.assign_users + '^x_nuta2_nutanix_ca_nutanix_uuidISEMPTY');
            userGr.query();

            var taskUUIDList = [];

            while (userGr.next()) {

                var ldapGR = new GlideRecord('ldap_server_config');
                if (ldapGR.get(userGr.ldap_server + '')) {
                    var LDAPName = '';
                    var LDAPUuid = '';
                    // 				var ldap_rdn = ldapGR.rdn+'';
                    // 				ldap_rdn = ldap_rdn.replace(/DC=/g,"").replace(/,/g,".");
                    var dir_body = {
                        "kind": "directory_service",
                        "filter": 'url==' + ldapGR.server_url //+";domain_name=="+ldap_rdn
                    }

                    this.logger.debug("Body for directory services:: :: " + JSON.stringify(dir_body));

                    var response = this.appUtil.makeCalmApiCall("POST", this.appUtil.configuration.api.directoryServices + "", JSON.stringify(dir_body));
                    this.logger.debug("Response Body for directory :: " + response.getBody());

                    if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {

                        var parsed = JSON.parse(response.getBody());
                        parsed = parsed.entities;
                        for (var p in parsed) {
                            var par_entity = parsed[p];
                            var domain_name = par_entity.status.resources.domain_name + "";
                            //						if(domain_name == ldap_rdn){
                            if (par_entity.status.resources.url + '' == ldapGR.server_url + '' || par_entity.status.resources.url + '' == ldapGR.server_url + '/' || par_entity.status.resources.url + '/' == ldapGR.server_url + '') {
                                LDAPName = par_entity.status.name + '';
                                LDAPUuid = par_entity.metadata.uuid + '';
                                break;
                            }
                        }

                        //LDAPName = parsed.entities[0].status.name+'';
                        //LDAPUuid = parsed.entities[0].metadata.uuid+'';

                    } else {
                        this.logger.error("Nutanix_ConfigureSettingScripts._checkUsersUUID :- Error while updating directory:- " + response.haveError() + " Status code :- " + response.getStatusCode() + " Error :: " + response.getBody());
                    }

                    var body = {
                        "spec": {
                            "resources": {
                                "directory_service_user": {
                                    "user_principal_name": userGr.email + '',
                                    "directory_service_reference": {
                                        "kind": "directory_service",
                                        "name": LDAPName,
                                        "uuid": LDAPUuid

                                    }
                                }
                            }
                        },
                        "metadata": {
                            "kind": "user",
                            "name": userGr.name + ''
                        }
                    };
                    this.logger.debug("Body send for user :: " + JSON.stringify(body));
                    var response = this.appUtil.makeCalmApiCall("POST", "/users", JSON.stringify(body));
                    var res = JSON.parse(response.getBody());
                    if (response.getStatusCode() == '200' || response.getStatusCode() == '201' || response.getStatusCode() == '202') {

                        userGr.x_nuta2_nutanix_ca_nutanix_uuid = JSON.parse(response.getBody()).metadata.uuid + '';
                        userGr.update();

                        taskUUIDList.push(JSON.parse(response.getBody()).status.execution_context.task_uuid + '');

                    } else if (response.getStatusCode() == '400' &amp;&amp; res.message_list[0].reason == "DUPLICATE_ENTITY") {

                        var payload = {
                            "kind": "user",
                            "filter": "username==" + userGr.email + ''
                        };


                        var response = this.appUtil.makeCalmApiCall("POST", this.appUtil.configuration.api.getUsersList + "", this.appUtil.stringify(payload));

                        if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {

                            var parsedJSON = this.appUtil.parse(response.getBody());
                            var entities = parsedJSON.entities;
                            var entity = entities[0];
                            var uuid = entity.metadata.uuid + '';
                            userGr.x_nuta2_nutanix_ca_nutanix_uuid = uuid;
                            userGr.update();

                        } else {

                            this.logger.debug("Nutanix_ImportUsers.importUsers:- Connection users/list not established :- " + response.haveError() + " Status code :- " + response.getStatusCode());
                        }
                        ///

                    } else {
                        this.logger.error("Nutanix_ConfigureSettingScripts._checkUsersUUID :- Error while creating user entity in calm:- " + response.haveError() + " Status code :- " + response.getStatusCode() + " Error :: " + response.getBody());
                    }
                }
            }

            var taskComplete = true;
            var i = 0;
            do {
                if (i &gt;= taskUUIDList.length) {
                    i = 0;
                    taskComplete = true;
                }

                var response = this.appUtil.makeCalmApiCall("GET", "/tasks/" + taskUUIDList[i], '');
                var parsedTask = JSON.parse(response.getBody());
                if (parsedTask.status + '' == 'QUEUED' || parsedTask.status + '' == 'RUNNING') {
                    taskComplete = false;
                    i++;
                } else {
                    taskUUIDList.splice(i, 1);
                }

                if (taskUUIDList.length &lt; 1)
                    break;

            } while (taskComplete == false);

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._checkUsersUUID. Error:- " + e);
        }
    },

    _updateSnowRole: function(current) {

        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._updateSnowRole.");
            var users = (current.variables.assign_users + '').split(',');
            for (var i in users) {
                var gr = new GlideRecord("sys_user");
                gr.addQuery('sys_id', users[i] + '');
                gr.query();
                if (gr.next()) {
                    r = ['3376fd254f452b001200e5201310c717', 'e098ecf6c0a80165002aaec84d906014'];

                    /*var grProp = new GlideRecord('x_nuta2_nutanix_ca_calm_plugin_configuration');
		            if (grProp.get(gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id')))
					{	
		            if(grProp.use_external_credential_system)
		                  r.push('e76b74ba0ab3015700a3263b26e5e9d5');
					}*/
                    for (var i = 0; i &lt; r.length; i++) {
                        var grd = new GlideRecord('sys_user_has_role');
                        grd.addQuery('user', gr.sys_id);
                        grd.addQuery('role', r[i]);
                        grd.query();

                        if (!grd.hasNext()) {
                            grd.user = gr.sys_id;
                            grd.role = r[i];
                            grd.insert();
                        }
                    }
                }
            }
            var catSysId = current.variables.cat_item + '';
            var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
            gr.addQuery('catalog_item', catSysId);
            gr.query();
            var catName = "";
            if (gr.next())
                catName = gr.catalog_item.name + '';

            this.logger.info("Required plugin roles given to all the assigned users for catalog item::" + catName);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._updateSnowRole. Error:- " + e);
        }

    },

    _updateUserOverCalm: function(current) {
        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._updateUserOverCalm.");

            if (!current.variables.assign_users)
                return;

            this._checkUsersUUID(current); //this create ldap user in calm and updates ldap user uuid in SNOW if user uuid is not present in calm.

            var projects = current.variables.multiple_project.toString();
            var project_array = projects.split(',');
            for (var k = 0; k &lt; project_array.length; k++) {
                this.logger.debug('Inside Nutanix_ConfigureSettingScripts._updateUserOverCalm. projects sys_id' + project_array[k]);
                var projectGR = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');
                if (projectGR.get(project_array[k])) {
                    var projectUUID = projectGR.uuid;
                    this.logger.debug('Inside Nutanix_ConfigureSettingScripts._updateUserOverCalm. projects UUID ' + projectUUID);
                    var response = this.appUtil.makeCalmApiCall("GET", this.appUtil.configuration.api.projectInternal + "/" + projectUUID, '');
                }
                if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {

                    var parsed = this.appUtil.parse(response.getBody());
                    var acpRoles = parsed.spec.access_control_policy_list;

                    var acpConsumerRoleIndex = '';

                    for (var i in acpRoles) {
                        if (acpRoles[i].acp.resources.role_reference.uuid + '' == gs.getProperty('x_nuta2_nutanix_ca.cosumer.role.uuid') + '') {
                            acpConsumerRoleIndex = i;
                        }
                        parsed.spec.access_control_policy_list[i].operation = "UPDATE";
                    }

                    var userGr = new GlideRecord('sys_user');
                    userGr.addEncodedQuery('sys_idIN' + current.variables.assign_users);
                    userGr.query();

                    var userArr = {};

                    while (userGr.next()) {
                        userArr[userGr.sys_id + ''] = {
                            "uuid": (userGr) ? userGr.x_nuta2_nutanix_ca_nutanix_uuid + '' : '',
                            "email": (userGr) ? userGr.email + '' : ''
                        };
                    }

                    if (acpConsumerRoleIndex) { //if consumer role is there in project

                        var users = (current.variables.assign_users + '').split(',');
                        for (var i in users) {
                            parsed.spec.access_control_policy_list[acpConsumerRoleIndex].acp.resources.user_reference_list.push({
                                "name": (userArr[users[i] + '']) ? userArr[users[i] + ''].email + '' : '',
                                "kind": "user",
                                "uuid": (userArr[users[i] + '']) ? userArr[users[i] + ''].uuid + '' : ''
                            });

                            parsed.spec.project_detail.resources.user_reference_list.push({
                                "name": (userArr[users[i] + '']) ? userArr[users[i] + ''].email + '' : '',
                                "kind": "user",
                                "uuid": (userArr[users[i] + '']) ? userArr[users[i] + ''].uuid + '' : ''
                            });
                        }

                    } else { //pushes consumer role in project

                        var projectSubnet;
                        var project = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');
                        project.addQuery('uuid', projectUUID + '');
                        project.setLimit(1);
                        project.query();
                        if (project.next()) {
                            projectSubnet = project.subnet + '';
                        }

                        var arr = [];

                        var gr = new GlideRecord('x_nuta2_nutanix_ca_subnet');
                        gr.addEncodedQuery('sys_idIN' + projectSubnet);
                        gr.query();
                        while (gr.next()) {
                            arr.push(gr.cluster_uuid + '');
                        }

                        var clusterEntitle = {
                            "left_hand_side": {
                                "entity_type": "cluster"
                            },
                            "operator": "IN",
                            "right_hand_side": {
                                "uuid_list": arr
                            }
                        };


                        var tmp = {
                            "acp": {
                                "name": "nuSnowAcp-" + projectUUID,
                                "resources": {
                                    "role_reference": {
                                        "name": "Consumer",
                                        "uuid": "49e8f061-0948-4705-953b-88915397bd60",
                                        "kind": "role"
                                    },
                                    "user_group_reference_list": [],
                                    "user_reference_list": [],
                                    "filter_list": {
                                        "context_list": [{
                                            "scope_filter_expression_list": [{
                                                "operator": "IN",
                                                "left_hand_side": "PROJECT",
                                                "right_hand_side": {
                                                    "uuid_list": [projectUUID + '']
                                                }
                                            }],
                                            "entity_filter_expression_list": [{
                                                "operator": "IN",
                                                "left_hand_side": {
                                                    "entity_type": "ALL"
                                                },
                                                "right_hand_side": {
                                                    "collection": "ALL"
                                                }
                                            }]
                                        }, {
                                            "entity_filter_expression_list": []
                                        }]
                                    }
                                },
                                "description": ""
                            },
                            "metadata": {
                                "kind": "access_control_policy"
                            },
                            "operation": "ADD"
                        };

                        var consumerFilter = JSON.parse(gs.getProperty('x_nuta2_nutanix_ca.consumer.entitlement.filter'));
                        tmp.acp.resources.filter_list.context_list[1].entity_filter_expression_list = consumerFilter["2.9"]; //gs.getProperty('x_nuta2_nutanix_ca.calm_version')];

                        tmp.acp.resources.filter_list.context_list[1].entity_filter_expression_list.push(clusterEntitle);

                        tmp.acp.resources.role_reference = {
                            "name": "Consumer",
                            "uuid": gs.getProperty('x_nuta2_nutanix_ca.cosumer.role.uuid') + '',
                            "kind": "role"
                        };

                        tmp.acp.resources.user_reference_list = [];

                        var users = (current.variables.assign_users + '').split(',');
                        for (var i in users) {

                            tmp.acp.resources.user_reference_list.push({
                                "name": (userArr[users[i] + '']) ? userArr[users[i] + ''].email + '' : '',
                                "kind": "user",
                                "uuid": (userArr[users[i] + '']) ? userArr[users[i] + ''].uuid + '' : ''
                            });

                            parsed.spec.project_detail.resources.user_reference_list.push({
                                "name": (userArr[users[i] + '']) ? userArr[users[i] + ''].email + '' : '',
                                "kind": "user",
                                "uuid": (userArr[users[i] + '']) ? userArr[users[i] + ''].uuid + '' : ''
                            });
                        }
                        parsed.spec.access_control_policy_list.push(tmp);

                    }

                    var requestBody = {
                        "spec": parsed.spec,
                        "api_version": parsed.api_version,
                        "metadata": parsed.metadata
                    }

                    var response = this.appUtil.makeCalmApiCall("PUT", this.appUtil.configuration.api.projectInternal + "/" + projectUUID, JSON.stringify(requestBody));

                    if (response.getStatusCode() == '200' || response.getStatusCode() == '201' || response.getStatusCode() == '202') {

                        this.logger.info("Nutanix_ConfigureSettingScripts._updateUserOverCalm:- Users successfuly updated in calm.");
                        this._updateSnowRole(current);
                    } else {
                        this.logger.error("Nutanix_ConfigureSettingScripts._updateUserOverCalm :- Error while updating users onto calm :- " + response.haveError() + " Status code :- " + response.getStatusCode() + " Error :: " + response.getBody());
                    }
                } else {
                    this.logger.error("Nutanix_ConfigureSettingScripts._updateUserOverCalm :- Connection to /projects_internal not established :- " + response.haveError() + " Status code :- " + response.getStatusCode());
                }
            }


        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._updateUserOverCalm. Error:- " + e);
        }
    },

    ///changes
    _checkGroupUUID: function(current) {
        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._checkGroupsUUID.");
            var groupGr = new GlideRecord('sys_user_group');
            groupGr.addEncodedQuery('sys_idIN' + current.variables.assign_groups + '^x_nuta2_nutanix_ca_nutanix_group_uuidISEMPTY');
            groupGr.query();

            var taskUUIDList = [];

            while (groupGr.next()) {
                var groups = (current.variables.assign_groups.getDisplayValue() + '').split(',');

                var distinguishedName = groupGr.source.replace(/ldap:/g, ""); //"CN="+groups[i]+",CN=Users,DC=calsoftcalm,DC=com";

                var body = {
                    "api_version": "3.0",
                    "metadata": {
                        "kind": "user_group"
                    },
                    "spec": {
                        "resources": {
                            "directory_service_user_group": {
                                "distinguished_name": distinguishedName
                            }
                        }
                    }
                };
                this.logger.debug("Body send for group :: " + JSON.stringify(body));
                var response = this.appUtil.makeCalmApiCall("POST", "/user_groups", JSON.stringify(body));
                var res = JSON.parse(response.getBody());
                if (response.getStatusCode() == '200' || response.getStatusCode() == '201' || response.getStatusCode() == '202') {

                    groupGr.x_nuta2_nutanix_ca_nutanix_group_uuid = JSON.parse(response.getBody()).metadata.uuid + '';
                    groupGr.update();

                    taskUUIDList.push(JSON.parse(response.getBody()).status.execution_context.task_uuid + '');

                } else if (response.getStatusCode() == '400' &amp;&amp; res.message_list[0].reason == "DUPLICATE_ENTITY") {

                    var payload = {
                        "kind": "user_group",
                        "filter": "group_name==" + groupGr.name + ''
                    };


                    var response = this.appUtil.makeCalmApiCall("POST", this.appUtil.configuration.api.getGroupsList + "", this.appUtil.stringify(payload));

                    if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {

                        var parsedJSON = this.appUtil.parse(response.getBody());
                        var entities = parsedJSON.entities;
                        var entity = entities[0];
                        var uuid = entity.metadata.uuid + '';
                        groupGr.x_nuta2_nutanix_ca_nutanix_group_uuid = uuid;
                        groupGr.update();

                    } else {

                        this.logger.debug("Nutanix_ImportUsers.importUsers:- Connection users/list not established :- " + response.haveError() + " Status code :- " + response.getStatusCode());
                    }
                    ///
                } else {
                    this.logger.error("Nutanix_ConfigureSettingScripts._checkGroupsUUID :- Error while creating group entity in calm:- " + response.haveError() + " Status code :- " + response.getStatusCode() + " Error :: " + response.getBody());
                }
                //}
                //} 

                //} 
            }

            var taskComplete = true;
            var i = 0;
            do {
                if (i &gt;= taskUUIDList.length) {
                    i = 0;
                    taskComplete = true;
                }

                var response = this.appUtil.makeCalmApiCall("GET", "/tasks/" + taskUUIDList[i], '');
                var parsedTask = JSON.parse(response.getBody());
                if (parsedTask.status + '' == 'QUEUED' || parsedTask.status + '' == 'RUNNING') {
                    taskComplete = false;
                    i++;
                } else {
                    taskUUIDList.splice(i, 1);
                }

                if (taskUUIDList.length &lt; 1)
                    break;

            } while (taskComplete == false);

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._checkGroupUUID. Error:- " + e);
        }
    },

    _updateGroupSnowRole: function(current) {

        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._updateGroupSnowRole.");
            var groups = "";
            //Check ldap or local group to pick
            var lg = new x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge();
            var status = lg.hideAccessLocalGroupOption(); //to check if the given option is for local groups.
            if (status + "" == "false")
                groups = (current.variables.assign_groups + '').split(',');
            else
                groups = (current.variables.assign_local_groups + '').split(',');

            for (var i in groups) {
                var gr = new GlideRecord("sys_user_group");
                gr.addQuery('sys_id', groups[i] + '');
                gr.query();
                if (gr.next()) {
                    r = ['3376fd254f452b001200e5201310c717', 'e098ecf6c0a80165002aaec84d906014'];

                    var grProp = new GlideRecord('x_nuta2_nutanix_ca_calm_plugin_configuration');
                    if (grProp.get(gs.getProperty('x_nuta2_nutanix_ca.nutanix.application.properties.sys_id'))) {
                        if (grProp.use_external_credential_system)
                            r.push('e76b74ba0ab3015700a3263b26e5e9d5');
                    }
                    for (var i = 0; i &lt; r.length; i++) {
                        var grd = new GlideRecord('sys_group_has_role');
                        grd.addQuery('group', gr.sys_id);
                        grd.addQuery('role', r[i]);
                        grd.query();

                        if (!grd.hasNext()) {
                            grd.group = gr.sys_id;
                            grd.role = r[i];
                            grd.insert();
                        }
                    }
                }
            }
            var catSysId = current.variables.cat_item + '';
            var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
            gr.addQuery('catalog_item', catSysId);
            gr.query();
            var catName = "";
            if (gr.next())
                catName = gr.catalog_item.name + '';

            this.logger.info("Required plugin roles given to all the assigned groups for catalog item::" + catName);
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._updateGroupSnowRole. Error:- " + e);
        }

    },

    _updateGroupOverCalm: function(current) {
        try {

            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._updateGroupOverCalm.");

            if (!current.variables.assign_groups)
                return;

            this._checkGroupUUID(current); //this create ldap group in calm and updates ldap group uuid in SNOW if group uuid is not present in calm.
            var projects = current.variables.multiple_project.toString();
            var project_array = projects.split(',');
            for (var k = 0; k &lt; project_array.length; k++) {
                this.logger.debug('Inside Nutanix_ConfigureSettingScripts._updateGroupOverCalm. projects sys_id' + project_array[k]);
                var projectGR = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');
                if (projectGR.get(project_array[k])) {
                    var projectUUID = projectGR.uuid;
                    var response = this.appUtil.makeCalmApiCall("GET", this.appUtil.configuration.api.projectInternal + "/" + projectUUID, '');
                }
                if (response.getStatusCode() == '200' || response.getStatusCode() == '201') {
                    var parsed = this.appUtil.parse(response.getBody());
                    var acpRoles = parsed.spec.access_control_policy_list;
                    var acpConsumerRoleIndex = '';

                    for (var i in acpRoles) {
                        if (acpRoles[i].acp.resources.role_reference.uuid + '' == gs.getProperty('x_nuta2_nutanix_ca.cosumer.role.uuid') + '') {
                            acpConsumerRoleIndex = i;
                        }
                        parsed.spec.access_control_policy_list[i].operation = "UPDATE";
                    }

                    var groupGr = new GlideRecord('sys_user_group');
                    groupGr.addEncodedQuery('sys_idIN' + current.variables.assign_groups);
                    groupGr.query();

                    var groupArr = {};

                    while (groupGr.next()) {
                        groupArr[groupGr.sys_id + ''] = {
                            "uuid": (groupGr) ? groupGr.x_nuta2_nutanix_ca_nutanix_group_uuid + '' : '',
                            "name": (groupGr) ? groupGr.name + '' : ''
                        };
                    }
                    if (acpConsumerRoleIndex) { //if consumer role is there in project

                        var groups = (current.variables.assign_groups + '').split(',');
                        for (var i in groups) {
                            parsed.spec.access_control_policy_list[acpConsumerRoleIndex].acp.resources.user_group_reference_list.push({
                                "name": (groupArr[groups[i] + '']) ? groupArr[groups[i] + ''].name + '' : '',
                                "kind": "user_group",
                                "uuid": (groupArr[groups[i] + '']) ? groupArr[groups[i] + ''].uuid + '' : ''
                            });

                            parsed.spec.project_detail.resources.external_user_group_reference_list.push({
                                "name": (groupArr[groups[i] + '']) ? groupArr[groups[i] + ''].name + '' : '',
                                "kind": "user_group",
                                "uuid": (groupArr[groups[i] + '']) ? groupArr[groups[i] + ''].uuid + '' : ''
                            });
                        }


                    } else { //pushes consumer role in project

                        //var tmp = {"acp":{"name":"nuSnowAcp-"+current.variables.project,"resources":{"role_reference":{"name":"Consumer","uuid":"49e8f061-0948-4705-953b-88915397bd60","kind":"role"},"user_group_reference_list":[],"user_reference_list":[],"filter_list":{"context_list":[{"scope_filter_expression_list":[{"operator":"IN","left_hand_side":"PROJECT","right_hand_side":{"uuid_list":[current.variables.project+'']}}],"entity_filter_expression_list":[{"operator":"IN","left_hand_side":{"entity_type":"ALL"},"right_hand_side":{"collection":"ALL"}}]},{"entity_filter_expression_list":[]}]}},"description":"untitledAcp-e3c568f8-e11b-71e3-a916-493940647e79"},"metadata":{"kind":"access_control_policy"},"operation":"ADD"};

                        var projectSubnet;
                        var project = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');
                        project.addQuery('uuid', projectUUID + '');
                        project.setLimit(1);
                        project.query();
                        if (project.next()) {
                            projectSubnet = project.subnet + '';
                        }

                        var arr = [];

                        var gr = new GlideRecord('x_nuta2_nutanix_ca_subnet');
                        gr.addEncodedQuery('sys_idIN' + projectSubnet);
                        gr.query();
                        while (gr.next()) {
                            arr.push(gr.cluster_uuid + '');
                        }

                        var clusterEntitle = {
                            "left_hand_side": {
                                "entity_type": "cluster"
                            },
                            "operator": "IN",
                            "right_hand_side": {
                                "uuid_list": arr
                            }
                        };


                        var tmp = {
                            "acp": {
                                "name": "nuSnowAcp-" + current.variables.project,
                                "resources": {
                                    "role_reference": {
                                        "name": "Consumer",
                                        "uuid": "49e8f061-0948-4705-953b-88915397bd60",
                                        "kind": "role"
                                    },
                                    "user_group_reference_list": [],
                                    "user_reference_list": [],
                                    "filter_list": {
                                        "context_list": [{
                                            "scope_filter_expression_list": [{
                                                "operator": "IN",
                                                "left_hand_side": "PROJECT",
                                                "right_hand_side": {
                                                    "uuid_list": [current.variables.project + '']
                                                }
                                            }],
                                            "entity_filter_expression_list": [{
                                                "operator": "IN",
                                                "left_hand_side": {
                                                    "entity_type": "ALL"
                                                },
                                                "right_hand_side": {
                                                    "collection": "ALL"
                                                }
                                            }]
                                        }, {
                                            "entity_filter_expression_list": []
                                        }]
                                    }
                                },
                                "description": ""
                            },
                            "metadata": {
                                "kind": "access_control_policy"
                            },
                            "operation": "ADD"
                        };

                        var consumerFilter = JSON.parse(gs.getProperty('x_nuta2_nutanix_ca.consumer.entitlement.filter'));
                        tmp.acp.resources.filter_list.context_list[1].entity_filter_expression_list = consumerFilter["2.9"]; //gs.getProperty('x_nuta2_nutanix_ca.calm_version')];

                        tmp.acp.resources.filter_list.context_list[1].entity_filter_expression_list.push(clusterEntitle);



                        tmp.acp.resources.role_reference = {
                            "name": "Consumer",
                            "uuid": gs.getProperty('x_nuta2_nutanix_ca.cosumer.role.uuid') + '',
                            "kind": "role"
                        };

                        tmp.acp.resources.user_group_reference_list = [];

                        var groups = (current.variables.assign_groups + '').split(',');
                        for (var i in groups) {

                            tmp.acp.resources.user_group_reference_list.push({
                                "name": (groupArr[groups[i] + '']) ? groupArr[groups[i] + ''].name + '' : '',
                                "kind": "user_group",
                                "uuid": (groupArr[groups[i] + '']) ? groupArr[groups[i] + ''].uuid + '' : ''
                            });

                            parsed.spec.project_detail.resources.external_user_group_reference_list.push({
                                "name": (groupArr[groups[i] + '']) ? groupArr[groups[i] + ''].name + '' : '',
                                "kind": "user_group",
                                "uuid": (groupArr[groups[i] + '']) ? groupArr[groups[i] + ''].uuid + '' : ''
                            });
                        }
                        parsed.spec.access_control_policy_list.push(tmp);
                    }

                    var requestBody = {
                        "spec": parsed.spec,
                        "api_version": parsed.api_version,
                        "metadata": parsed.metadata
                    }

                    var response = this.appUtil.makeCalmApiCall("PUT", this.appUtil.configuration.api.projectInternal + "/" + projectUUID, JSON.stringify(requestBody));


                    if (response.getStatusCode() == '200' || response.getStatusCode() == '201' || response.getStatusCode() == '202') {
                        this.logger.info("Nutanix_ConfigureSettingScripts._updateGroupOverCalm:- Groups successfuly updated in calm.");
                        this._updateGroupSnowRole(current);
                    } else {
                        this.logger.error("Nutanix_ConfigureSettingScripts._updateGroupOverCalm :- Error while updating groups onto calm :- " + response.haveError() + " Status code :- " + response.getStatusCode() + " Error :: " + response.getBody());
                    }
                } else {
                    this.logger.error("Nutanix_ConfigureSettingScripts._updateGroupOverCalm :- Connection to /projects_internal not established :- " + response.haveError() + " Status code :- " + response.getStatusCode());
                }
            }

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._updateGroupOverCalm. Error:- " + e);
        }
    },
    ////changes over

    _updateCatalogItem: function(source, target, bpSys_id, current) {

        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._updateCatalogItem.");
            var catItemSysId = current.variables.cat_item + '';

            var lg = new x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge();
            var status = lg.hideAccessLocalGroupOption(); //to check if the given option is for local groups.

            var ans = [];

            var assignCriteria = new GlideRecord(this.appUtil.configuration.table.catalogUserCriteria + '');
            assignCriteria.addQuery('sc_cat_item', catItemSysId);
            assignCriteria.query();

            this.logger.info("Updated user &amp; group entitlement to " + current.variables.assign_users + " :: " + current.variables.assign_groups);

            if (assignCriteria.next()) {
                var user_criteria = assignCriteria.user_criteria.getRefRecord();

                user_criteria.user = current.variables.assign_users;
                if (status + "" == "false") {
                    user_criteria.group = current.variables.assign_groups;
                } else {
                    user_criteria.group = current.variables.assign_local_groups;
                }

                var criteriaSysId = user_criteria.update();

                ans.push(catItemSysId);
                ans.push(criteriaSysId);
            }

            return ans;
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._updateCatalogItem. Error:- " + e);
        }
    },

    _copyCatalogItem: function(source, target, bpSys_id, current, blueprintType, clientData, nonFilteredClientData) {
        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._copyCatalogItem.");

            var sourceGR = new GlideRecord(source);
            sourceGR.addQuery('sys_id', bpSys_id);
            sourceGR.query();

            var ans = [];
            var nicSysIdList = [];

            if (sourceGR.next()) {

                var profileSysID = '';
                var appSysID = '';
                var targetGr = sourceGR;
                var projectSysID = '';
                var environmentSysId = '';

                targetGr.sys_name = current.variables.item_name + '';
                targetGr.name = current.variables.item_name + '';
                targetGr.short_description = current.variables.item_name + '';
                targetGr.description_markdown = current.variables.description + '';
                targetGr.description = this.appUtil.markdown_renderer(current.variables.description + '');
                targetGr.active = true;
                targetGr.blueprint_name = bpSys_id + '';
                targetGr.sys_class_name = target + '';
                if (blueprintType == "published") {

                    var parsedClientData = JSON.parse(clientData);

                    targetGr.cloned_bp_json = nonFilteredClientData;
                    targetGr.cloned_bp_uuid = (parsedClientData.uuid + '') ? parsedClientData.uuid + '' : "";
                    targetGr.cloned_bp_name = (parsedClientData.name + '') ? parsedClientData.name + '' : "";
                }

                var catItemSysId = targetGr.insert();

                var imageBase64Str = gs.getProperty('x_nuta2_nutanix_ca.default.image');

                var gr = new GlideRecord('sys_attachment');
                gr.addQuery('table_sys_id', catItemSysId); //tablesys_id of the record
                gr.query();
                if (gr.next()) {
                    var kk = new GlideSysAttachment();
                    imageBase64Str = kk.getContentBase64(gr);
                }

                var attachGR = new GlideSysAttachment();
                attachGR.writeBase64(targetGr, 'picture', 'image/png', imageBase64Str);

                attachGR = new GlideSysAttachment();
                attachGR.writeBase64(targetGr, 'icon', 'image/png', gs.getProperty('x_nuta2_nutanix_ca.default.icons'));




                this.logger.debug("Created catalog item with sysId " + catItemSysId);
                this.logger.info("Catalog item " + current.variables.item_name + " creating.");

                var fieldGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable + '');
                fieldGR.addEncodedQuery('cat_item=' + bpSys_id);
                fieldGR.query();

                while (fieldGR.next()) {

                    var oldSysId = fieldGR.sys_id + '';

                    var newField = fieldGR;
                    newField.cat_item = catItemSysId + '';
                    var fieldSysId = newField.insert();

                    /**Advance variable Select box choices**/
                    if (fieldGR.type + '' == 5) {
                        var glideRec = new GlideRecord('question_choice');
                        glideRec.addQuery('question', oldSysId + '');
                        glideRec.query();
                        while (glideRec.next()) {
                            glideRec.question = fieldSysId;
                            var x = glideRec.insert();

                        }
                    }
					// Multiple value insert code
					if (fieldGR.type + '' == 21) {
						
						var grOptions = new GlideRecord("x_nuta2_nutanix_ca_generic_table_for_dropdown");
						grOptions.addQuery("variable", oldSysId + "");
						grOptions.query();
						var grNewOptions = new GlideRecord("x_nuta2_nutanix_ca_generic_table_for_dropdown");
						while(grOptions.next()) {
							grNewOptions.initialize();
							grNewOptions.variable = fieldSysId + "";
							grNewOptions.name = grOptions.name + "";
							grNewOptions.value = grOptions.value + "";
							grNewOptions.insert();
						}
						
						newField.reference_qual = "variable=" + fieldSysId;
						newField.update();
					}

                    /**Advance variable Select box choices**/
                    if (fieldGR.name + '' == 'default_project')
                        projectSysID = fieldSysId;

                    if (fieldGR.name + '' == 'default_profile')
                        profileSysID = fieldSysId;

                    if (fieldGR.name + '' == 'default_app_name')
                        appSysID = fieldSysId;

                    if (parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &gt;= parseFloat("3.2")) {
                        if (fieldGR.name + '' == 'default_environment')
                            environmentSysId = fieldSysId;
                    }


                    if ((fieldGR.name + '').indexOf('_nic_') != -1) {
                        nicSysIdList.push(fieldGR.sys_id + '');

                    }
                }

                this.logger.debug("Created variables for catalog item " + current.variables.item_name);

                /*var insVar = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+''); //Inserts variable to check sync or delete
                insVar.addQuery('cat_item', catItemSysId);
                insVar.query();
                if(insVar.next()) {
                	insVar.initialize();
                	insVar.type = 6;
                	insVar.cat_item = catItemSysId+'';
                	insVar.active = true;
                	insVar.question_text = 'sync_flag';
                	insVar.name = 'sync_flag';
                	insVar.mandatory = 'false';
                	insVar.order = 0;
                	insVar.insert();
                }*/

                //Hide containers on order page
                var hideGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable + '');
                hideGR.addQuery('cat_item', catItemSysId);
                hideGR.addQuery('active', true);
                hideGR.orderBy('order');
                var previousGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable + '');
                previousGR.addQuery('cat_item', catItemSysId);
                previousGR.addQuery('active', true);
                previousGR.orderBy('order');
                hideGR.query();
                previousGR.query();
                while (hideGR.next()) {
                    if (hideGR.type == 20 &amp;&amp; previousGR.type == 19) {
                        hideGR.active = false;
                        previousGR.active = false;
                        previousGR.update();
                        hideGR.update();
                    }
                    previousGR.next();
                }


                var lg = new x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge();
                var status = lg.hideAccessLocalGroupOption(); //to check if the given option is for local groups.
                // 				var user_criteria = new GlideRecord(this.appUtil.configuration.table.userCriteria+'');
                // 				user_criteria.initialize();
                // 				user_criteria.name = "Nutanix_"+current.variables.item_name+"_Entitlement";
                // 				user_criteria.user = current.variables.assign_users;
                // 				if(status+"" == "false")
                // 					{
                // 						user_criteria.group = current.variables.assign_groups;
                // 					}
                // 				else
                // 					{
                // 						user_criteria.group = current.variables.assign_local_groups;
                // 					}				
                // 				user_criteria.role = gs.getProperty('x_nuta2_nutanix_ca.admin.role.sysId');
                // 				user_criteria.active = true;
                // 				user_criteria.advanced = true;
                // 				user_criteria.match_all = false;
                // 				user_criteria.script = "answer = false;";
                // 				var criteriaSysId = user_criteria.insert(); 
                // 				gs.info('user_criteria.group '+user_criteria.group);


                var user_criteria = new sn_uc.UserCriteria();
                user_criteria.setName("Nutanix_" + current.variables.item_name + "_Entitlement");
                user_criteria.setUsers(current.variables.assign_users);
                var group = '';
                if (status + "" == "false") {
                    group = current.variables.assign_groups;
                } else {
                    group = current.variables.assign_local_groups;
                }
                user_criteria.setGroups(group);
                user_criteria.setRoles(gs.getProperty('x_nuta2_nutanix_ca.admin.role.sysId'));
                user_criteria.setActive(true);
                user_criteria.setAdvanced(true);
                user_criteria.setMatchAll(false);
                user_criteria.setScript("answer = false;");
                var criteriaSysId = user_criteria.create();


                this.logger.debug("Entitled users &amp; groups to catalog item " + current.variables.item_name);

                /*				var assignCriteria = new GlideRecord(this.appUtil.configuration.table.catalogUserCriteria+'');
                				assignCriteria.initialize();
                				assignCriteria.sc_cat_item = catItemSysId+'';
                				assignCriteria.user_criteria = criteriaSysId+'';
                				assignCriteria.insert();*/

                var assignCriteria = new sn_sc.CatItem(catItemSysId);
                assignCriteria.availableForUserCriteria("add", [criteriaSysId]);

                ans.push(catItemSysId);
                ans.push(criteriaSysId);

                /*var onLoadclientScript = new GlideRecord(this.appUtil.configuration.table.catalogClientScript+'');
                onLoadclientScript.initialize();
                onLoadclientScript.name = "Get sync status on load";
                onLoadclientScript.type = "onLoad";
                onLoadclientScript.applies_to = "item";
                onLoadclientScript.cat_item = catItemSysId;
                onLoadclientScript.active = true;
                onLoadclientScript.order=100;
                //onLoadclientScript.sys_policy=protected;

                onLoadclientScript.description = 'This script is auto created thorugh runtime module for saving sync status.';

                onLoadclientScript.applies_catalog = true;
                onLoadclientScript.ui_type = "0";
                onLoadclientScript.applies_req_item = false;
                onLoadclientScript.applies_sc_task = false;
                onLoadclientScript.script = "function onLoad() { g_form.setValue('sync_flag', ''); var a=new GlideAjax('Nutanix_ClientServerScriptBridge');a.addParam('sysparm_name','checkQueue');a.getXML(responseParse);} function responseParse(response) {var b=response.responseXML.documentElement.getAttribute('answer');g_form.setValue('sync_flag', b);}";
                onLoadclientScript.insert();

                this.logger.debug("Created onLoad get sync value script on catalog item "+current.variables.item_name);

                var onSubmitclientScript = new GlideRecord(this.appUtil.configuration.table.catalogClientScript+'');
                onSubmitclientScript.initialize();
                onSubmitclientScript.name = "Prevent form submit";
                onSubmitclientScript.type = "onSubmit";
                onSubmitclientScript.applies_to = "item";
                onSubmitclientScript.cat_item = catItemSysId;
                onSubmitclientScript.active = true;
                onSubmitclientScript.order=100;
                //onLoadclientScript.sys_policy=protected;

                onSubmitclientScript.description = 'This script is auto created thorugh runtime module for preventing submission of form during a sync or delete.';

                onSubmitclientScript.applies_catalog = true;
                onSubmitclientScript.ui_type = "0";
                onSubmitclientScript.applies_req_item = false;
                onSubmitclientScript.applies_sc_task = false;
                onSubmitclientScript.script = "function onSubmit() { var sync_stat = g_form.getValue('sync_flag'); if(sync_stat == 'true'){return true;}else{return false;} }";
                onSubmitclientScript.insert();

                this.logger.debug("Created onSubmit validation script on catalog item "+current.variables.item_name);*/




                var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScript.setAttributes({
                    "name": "Check Catalog Item Validity",
                    "type": "onLoad",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "active": false,
                    "order": 1,
                    "description": 'This script is auto created thorugh runtime module for checking BP validity from which this catalog item was created.',
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false
                });
                onLoadCatalogClientScript.appliesToCatalogItem(true);
                var onLoadScript = "function onLoad() { var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Checking Blueprint Status...'); loadingDialog.renderWithContent(''+loadingHTML); var blueprintType = getParameterValue('type')+''; var blueprintUUID = getParameterValue('uuid')+''; var profileSysId = getParameterValue('profileSysId')+''; var projectUUID = getParameterValue('projectUUID') + ''; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'checkCatalogValidity'); ga.addParam('blueprintType', blueprintType); ga.addParam('blueprintUUID', blueprintUUID); ga.addParam('profileSysId', profileSysId); ga.addParam('projectUUID', projectUUID); ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var message=''; if (answer + '' == 'INACTIVE') { message= 'Project/Profile/Blueprint/MPI is not available at Calm. So, Catalog Item can\\'t be launched. Re-Directing back to catalog launch page.'; clearFieldValue(message); } else if (answer + '' == 'CANTCHECK') { message='Can\\'t check whether the Project/Profile/BP/MPI from which the catalog item was created is available or not. Please check the connection with Calm. Re-Directing back to catalog launch page.'; clearFieldValue(message); } new GlideModal().get('loader').destroy(); }  function clearFieldValue(message){ var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } alert(message); var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; } if (flds[i].prettyName.indexOf('cluster_name') == -1) g_form.clearValue(flds[i].prettyName); } 				 self.location = '/x_nuta2_nutanix_ca_nutanix_runtime_configuration_list.do?sysparm_userpref_module=29d7d2e54f41230065e48020a310c7f6&amp;sysparm_view=catalog_view&amp;sysparm_query=GROUPBYitem_name.category&amp;sysparm_clear_stack=true'; 				 }  function getParameterValue(name) {   name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");   var regexS = \"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\";   var regex = new RegExp(regexS);   var results = regex.exec(self.location);   if (results == null) {   return \"\";   } else {   return unescape(results[1]);   }   } }";
                onLoadCatalogClientScript.addScript(onLoadScript);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();







                var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScript.setAttributes({
                    "name": "Get Project and Profile List onLoad",
                    "type": "onLoad",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "active": "true",
                    "order": "100",
                    "description": "This script is auto created thorugh runtime module for getting projects and profile list.",
                    "applies_catalog": "true",
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false
                });
                onLoadCatalogClientScript.appliesToCatalogItem(true);
                var onLoadScript = "";
                if (parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &gt;= parseFloat("3.2")) {
                    onLoadScript = "function onLoad() {var cat_sys_id = g_form.getUniqueValue();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchProjectAndProfileList');ga.addParam('sysparm_catSysID', cat_sys_id);ga.getXML(parseResponse);function parseResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');var parsed = JSON.parse(answer);var projectList = parsed.projectList;g_form.clearOptions('default_project');for (var i = 0; i &lt; projectList.length; i++) {var project = projectList[i];g_form.addOption('default_project', project.uuid, project.name)} if (projectList.length == 1) { g_form.setReadOnly('default_project', true)}new GlideModal().get('loader').destroy();}}";
                } else {
                    onLoadScript = "function onLoad() { var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching Project And Profile'); loadingDialog.renderWithContent(''+loadingHTML); var cat_sys_id = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchProjectAndProfileList'); ga.addParam('sysparm_catSysID', cat_sys_id); ga.getXML(parseResponse, null , loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var parsed = JSON.parse(answer);var projectList = parsed.projectList; g_form.clearOptions('default_project');for (var i = 0; i &lt; projectList.length; i++) { var project = projectList[i]; g_form.addOption('default_project', project.uuid, project.name);}var profileList = parsed.profileList.split(','); g_form.clearOptions('default_profile'); for (i = 0; i &lt; profileList.length; i++) { g_form.addOption('default_profile', profileList[i] + '', profileList[i] + ''); } g_form.setValue('default_profile', profileList[0]);if (projectList.length == 1) { g_form.setReadOnly('default_project', true);} if (profileList.length == 1) { g_form.setReadOnly('default_profile', true);} new GlideModal().get('loader').destroy();var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\";var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching variables...'); loadingDialog.renderWithContent(''+loadingHTML);var cat_sys_id = g_form.getUniqueValue();var profile = g_form.getValue('default_profile').trim(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchLaunchVars');ga.addParam('sysparm_catsysid', cat_sys_id);ga.addParam('sysparm_profile', profile);ga.getXML(varResponse, null, loadingDialog);}function varResponse(response, loadingDialog) {var answer = response.responseXML.documentElement.getAttribute('answer');var varJSON = JSON.parse(answer);var prof_json = varJSON.profile;var serv_json = varJSON.service; var sess_json = {};var var_array = [];for (var i in prof_json) {var field = prof_json[i];var curr_value = g_form.getValue('IO:' + i);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = i + '';sess_json['IO:'+i] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);for (var j in serv_json) {var_array = [];for (var k in serv_json[j]) {var field = serv_json[j][k];var curr_value = g_form.getValue('IO:' + k);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = k + '';sess_json['IO:'+k] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);}sessionStorage['varValues'] = JSON.stringify(sess_json);}}function getAdvancedVars(variable_json) {var act_var_JSON = JSON.stringify(variable_json);var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');gajax.addParam('sysparm_name', 'variableArrayParser');gajax.addParam('sysparm_type', 'catalog');gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + '');gajax.addParam('sysparm_varJson', act_var_JSON);gajax.getXML(getVarResponse);}function getVarResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');if (answer + '' == '' || answer + '' == 'undeined' || answer + '' == 'null')return;var parsedResponse = JSON.parse(answer);for (var i in parsedResponse) {var row = parsedResponse[i];var sys_id = 'IO:' + row.sys_id;var type = row.type + '';if (row.state == 'SUCCESS') {if(type == 'LOCAL')g_form.setValue(sys_id, row.value);if (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') {g_form.clearOptions(sys_id);for (var k = 0; k &lt; (row.value).length; k++) {g_form.addOption(sys_id + '', row.value[k], row.value[k]);}}}if (row.state == 'ERROR') {g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]);}}}";
                }
                onLoadCatalogClientScript.addScript(onLoadScript);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();

                //			this.logger.debug("Created onLoad script to get project and profile list on catalog item "+current.variables.item_name);

                var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScript.setAttributes({
                    "name": "Get Credentials OnLoad",
                    "type": "onLoad",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "active": true,
                    "order": 900,
                    "description": "This script is auto created thorugh runtime module for getting Credentials list.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false
                });
                onLoadCatalogClientScript.appliesToCatalogItem(true);
                var onLoadScript = "function onLoad() { var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\";var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching Credentials List...'); loadingDialog.renderWithContent(''+loadingHTML); var cat_sys_id = g_form.getUniqueValue();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchCredentialsList');ga.addParam('sysparm_catSysID', cat_sys_id);ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) {var answer = response.responseXML.documentElement.getAttribute('answer'); var credArr = {}; var parsed = JSON.parse(answer);for (var i in parsed) { var credential = parsed[i]; var name = (credential.actual_name + '').toLowerCase().replace(/ /g, '_');g_form.setValue(name + '_credential_name', credential.name + ''); g_form.setReadOnly(name + '_credential_name', true); g_form.setValue(name + '_secret_type', credential.type + '', (credential.type + '' == 'KEY') ? 'SSH Private Key' : 'Password'); g_form.setReadOnly(name + '_secret_type', true); g_form.setValue(name + '_username', credential.username.value); g_form.setReadOnly(name + '_username', credential.username.readOnly); g_form.setDisplay(name + '_username', !credential.username.readOnly); if ((credential.type == 'KEY')) {g_form.setValue(name + '_ssh_private_key', credential.ssh_private_key.value); g_form.setReadOnly(name + '_ssh_private_key', credential.ssh_private_key.readOnly); g_form.setValue(name + '_passphrase', credential.passphrase.value); g_form.setReadOnly(name + '_passphrase', credential.passphrase.readOnly); g_form.setDisplay(name + '_password', 'false'); g_form.setDisplay(name + '_ssh_private_key', !credential.ssh_private_key.readOnly); g_form.setDisplay(name + '_passphrase', !credential.passphrase.readOnly); } else { g_form.setValue(name + '_password', ''); credArr[name + '_password'] = credential.password.value; g_form.setReadOnly(name + '_password', credential.password.readOnly); g_form.setDisplay(name + '_password', !credential.password.readOnly); g_form.setDisplay(name + '_ssh_private_key', 'false'); g_form.setDisplay(name + '_passphrase', 'false');}g_form.setDisplay(name + '_credential_reference', 'false'); if (credential.credential_reference &amp;&amp; credential.credential_reference.name) {g_form.setDisplay(name + '_credential_reference', 'true');g_form.addOption(name + '_credential_reference', credential.credential_reference.uuid + '', credential.credential_reference.name + '');g_form.setReadOnly(name + '_credential_reference', credential.credential_reference.readOnly);g_form.setDisplay(name + '_credential_reference', !credential.credential_reference.readOnly);g_form.setDisplay(name + '_ssh_private_key', 'false');g_form.setDisplay(name + '_passphrase', 'false');g_form.setDisplay(name + '_password', 'false');g_form.setDisplay(name + '_secret_type', 'false');}} sessionStorage['credentials_' + g_form.getUniqueValue()] = JSON.stringify(credArr); new GlideModal().get('loader').destroy();}}";
                onLoadCatalogClientScript.addScript(onLoadScript);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();

                //			this.logger.debug("Created onLoad script to get credentials data on catalog item "+current.variables.item_name);	

                /* Fetching Dynamic values for advance variable*/

                var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScript.setAttributes({
                    "name": "Fetch dynamic value for advance variables onload",
                    "type": "onLoad",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "active": true,
                    "order": 10,
                    "description": "This script is created for fetching dynamic values for advance variables onload.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false
                });
                onLoadCatalogClientScript.appliesToCatalogItem(true);
                var onLoadScript = " function onLoad() { var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true);  loadingDialog.setTitle('Fetching Dynamic values for advance variables...'); loadingDialog.renderWithContent(''+loadingHTML); var cat_sys_id = g_form.getUniqueValue(); var elemen = g_form.nameMap; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'advanceVariableDynamicOptions'); ga.addParam('sysparm_catSysID', cat_sys_id); ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var parse = JSON.parse(answer); var keys = Object.keys(parse[0]); var fieldRegex = parse[1]; parse = parse[0]; sessionStorage['FieldRegex_' + g_form.getUniqueValue()] = JSON.stringify(fieldRegex); for (var i = 0; i &lt; keys.length; i++) { var row = parse[keys[i] + '']; if (row.options.state == 'SUCCESS') { g_form.clearOptions(keys[i] + ''); for (var k = 0; k &lt; (row.options.values).length; k++) { g_form.addOption(keys[i] + '', row.options.values[k], row.options.values[k]); }} else { g_form.addErrorMessage('Error in variable: ' + keys[i] + ': ' + row.options.values[0]); }} new GlideModal().get('loader').destroy();}}";
                onLoadCatalogClientScript.addScript(onLoadScript);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();

                //	this.logger.debug("Created onLoad script to fetch dynamic values for advance variable on catalog item "+current.variables.item_name);
                /* Fetching Dynamic values for advance variable*/


                var catalogScriptGR = new sn_sc.CatalogClientScript();
                catalogScriptGR.setAttributes({
                    "name": "Fetch form data on change of profile",
                    "type": "onChange",
                    "applies_to": "item",
                    "cat_item": "" + catItemSysId,
                    "cat_variable": "IO:" + profileSysID,
                    "active": true,
                    "order": 100,
                    "description": 'This script is auto created thorugh runtime module for fetching and setting form data and visibility.',
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false,
                });
                catalogScriptGR.appliesToCatalogItem(true);
                var script = '';
                if (parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &gt;= parseFloat("3.2")) {
                    script = "function onChange(control, oldValue, newValue, isLoading) { if (isLoading ) { return; } if(newValue == '') return; var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; } g_form.setDisplay(flds[i].prettyName, false); } g_form.setVariablesReadOnly(true); g_form.setDisplay('provider_icons', false); g_form.setReadOnly('default_project', false); g_form.setReadOnly('default_app_name', false); g_form.setReadOnly('default_profile', false); g_form.setDisplay('default_project', true); g_form.setDisplay('default_app_name', true); g_form.setDisplay('default_profile', true);g_form.setMandatory('default_profile', true); g_form.setDisplay('default_environment', true); g_form.setReadOnly('default_environment', false); var profile = newValue; var cat_sys_id = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchOrderFormData'); ga.addParam('sysparm_profile', profile); ga.addParam('sysparm_catSysID', cat_sys_id); ga.getXML(parseResponse); function parseResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } var nameTypeMap = {}; var flds = g_form.nameMap; for (var i in flds) { nameTypeMap[flds[i].prettyName + ''] = fldType[flds[i].realName + ''] + ''; } var fielVal = {}; var parsed = JSON.parse(answer); for (var i in parsed) { if (i.indexOf('cluster_name') == -1) { if (nameTypeMap[i + ''] + '' == 'masked') { fielVal[i] = parsed[i].value; g_form.setValue(i + '', ''); } else { g_form.setValue(i + '', parsed[i].value + ''); } g_form.setReadOnly(i + '', parsed[i].readOnly + ''); g_form.setDisplay(i + '', !parsed[i].readOnly); } else { g_form.setDisplay(i + '', !parsed[i].readOnly); g_form.setReadOnly(i + '', true); } } sessionStorage['fieldValues_' + g_form.getUniqueValue()] = JSON.stringify(fielVal); new GlideModal().get('loader').destroy(); var cat_sys_id = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchCredentialsList'); ga.addParam('sysparm_catSysID', cat_sys_id); ga.getXML(parseResponse); function parseResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); var credArr = {}; var parsed = JSON.parse(answer); for (var i in parsed) { var credential = parsed[i]; var name = (credential.actual_name + '').toLowerCase().replace(/ /g, '_'); g_form.setValue(name + '_credential_name', credential.name + ''); g_form.setReadOnly(name + '_credential_name', true); g_form.setValue(name + '_secret_type', credential.type + '', (credential.type + '' == 'KEY') ? 'SSH Private Key' : 'Password'); g_form.setReadOnly(name + '_secret_type', true); g_form.setValue(name + '_username', credential.username.value); g_form.setReadOnly(name + '_username', credential.username.readOnly); g_form.setDisplay(name + '_username', !credential.username.readOnly); if ((credential.type == 'KEY')) { g_form.setValue(name + '_ssh_private_key', credential.ssh_private_key.value); g_form.setReadOnly(name + '_ssh_private_key', credential.ssh_private_key.readOnly); g_form.setValue(name + '_passphrase', credential.passphrase.value); g_form.setReadOnly(name + '_passphrase', credential.passphrase.readOnly); g_form.setDisplay(name + '_password', 'false'); g_form.setDisplay(name + '_ssh_private_key', !credential.ssh_private_key.readOnly); g_form.setDisplay(name + '_passphrase', !credential.passphrase.readOnly); } else { g_form.setValue(name + '_password', ''); credArr[name + '_password'] = credential.password.value; g_form.setReadOnly(name + '_password', credential.password.readOnly); g_form.setDisplay(name + '_password', !credential.password.readOnly); g_form.setDisplay(name + '_ssh_private_key', 'false'); g_form.setDisplay(name + '_passphrase', 'false'); } g_form.setDisplay(name + '_credential_reference', 'false'); if (credential.credential_reference &amp;&amp; credential.credential_reference.name) { g_form.setDisplay(name + '_credential_reference', 'true'); g_form.addOption(name + '_credential_reference', credential.credential_reference.uuid + '', credential.credential_reference.name + ''); g_form.setReadOnly(name + '_credential_reference', credential.credential_reference.readOnly); g_form.setDisplay(name + '_credential_reference', !credential.credential_reference.readOnly); g_form.setDisplay(name + '_ssh_private_key', 'false'); g_form.setDisplay(name + '_passphrase', 'false'); g_form.setDisplay(name + '_password', 'false'); g_form.setDisplay(name + '_secret_type', 'false'); } } sessionStorage['credentials_' + g_form.getUniqueValue()] = JSON.stringify(credArr); new GlideModal().get('loader').destroy(); } }}";
                } else {
                    script = "function onChange(control, oldValue, newValue, isLoading) {if (newValue == '') {return;} var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialogbox = new GlideModal('loader', true);loadingDialogbox.setTitle('Fetching Order Form Data...'); loadingDialogbox.renderWithContent(''+loadingHTML);var fldType = {};var elemen = g_form.elements;for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var flds = g_form.nameMap;for (var i in flds) {if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') {continue;} g_form.setDisplay(flds[i].prettyName, false);}g_form.setVariablesReadOnly(true);g_form.setDisplay('provider_icons', 'false');g_form.setReadOnly('default_project', false);g_form.setReadOnly('default_app_name', false);g_form.setReadOnly('default_profile', false);g_form.setDisplay('default_project', true);g_form.setDisplay('default_app_name', true);g_form.setDisplay('default_profile', true);var profile = newValue;var cat_sys_id = g_form.getUniqueValue();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchOrderFormData');ga.addParam('sysparm_profile', profile);ga.addParam('sysparm_catSysID', cat_sys_id);ga.getXML(parseResponse, null, loadingDialogbox);function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer');   var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; }  var nameTypeMap = {}; var flds = g_form.nameMap; for(var i in flds){ nameTypeMap[flds[i].prettyName+''] = fldType[flds[i].realName+'']+''; } 		  var fielVal = {};  var parsed = JSON.parse(answer);for (var i in parsed) {if(i.indexOf('cluster_name') == -1){ if(nameTypeMap[i+'']+'' == 'masked'){ fielVal[i] = parsed[i].value; g_form.setValue(i + '', ''); } else{ g_form.setValue(i + '', parsed[i].value + ''); }			 g_form.setReadOnly(i + '', parsed[i].readOnly + ''); g_form.setDisplay(i + '', !parsed[i].readOnly);	 }else{ g_form.setDisplay(i + '', !parsed[i].readOnly);	 g_form.setReadOnly(i + '', true);	 			}		}   sessionStorage['fieldValues_' + g_form.getUniqueValue()] = JSON.stringify(fielVal);		  new GlideModal().get('loader').destroy();var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\";var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching Credentials List...'); loadingDialog.renderWithContent(''+loadingHTML); var cat_sys_id = g_form.getUniqueValue();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchCredentialsList');ga.addParam('sysparm_catSysID', cat_sys_id);ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) {var answer = response.responseXML.documentElement.getAttribute('answer'); var credArr = {}; var parsed = JSON.parse(answer);for (var i in parsed) { var credential = parsed[i]; var name = (credential.actual_name + '').toLowerCase().replace(/ /g, '_');g_form.setValue(name + '_credential_name', credential.name + ''); g_form.setReadOnly(name + '_credential_name', true); g_form.setValue(name + '_secret_type', credential.type + '', (credential.type + '' == 'KEY') ? 'SSH Private Key' : 'Password'); g_form.setReadOnly(name + '_secret_type', true); g_form.setValue(name + '_username', credential.username.value); g_form.setReadOnly(name + '_username', credential.username.readOnly); g_form.setDisplay(name + '_username', !credential.username.readOnly); if ((credential.type == 'KEY')) {g_form.setValue(name + '_ssh_private_key', credential.ssh_private_key.value); g_form.setReadOnly(name + '_ssh_private_key', credential.ssh_private_key.readOnly); g_form.setValue(name + '_passphrase', credential.passphrase.value); g_form.setReadOnly(name + '_passphrase', credential.passphrase.readOnly); g_form.setDisplay(name + '_password', 'false'); g_form.setDisplay(name + '_ssh_private_key', !credential.ssh_private_key.readOnly); g_form.setDisplay(name + '_passphrase', !credential.passphrase.readOnly); } else { g_form.setValue(name + '_password', ''); credArr[name + '_password'] = credential.password.value; g_form.setReadOnly(name + '_password', credential.password.readOnly); g_form.setDisplay(name + '_password', !credential.password.readOnly); g_form.setDisplay(name + '_ssh_private_key', 'false'); g_form.setDisplay(name + '_passphrase', 'false');}g_form.setDisplay(name + '_credential_reference', 'false'); if (credential.credential_reference &amp;&amp; credential.credential_reference.name) {g_form.setDisplay(name + '_credential_reference', 'true');g_form.addOption(name + '_credential_reference', credential.credential_reference.uuid + '', credential.credential_reference.name + '');g_form.setReadOnly(name + '_credential_reference', credential.credential_reference.readOnly);g_form.setDisplay(name + '_credential_reference', !credential.credential_reference.readOnly);g_form.setDisplay(name + '_ssh_private_key', 'false');g_form.setDisplay(name + '_passphrase', 'false');g_form.setDisplay(name + '_password', 'false');g_form.setDisplay(name + '_secret_type', 'false');}} sessionStorage['credentials_' + g_form.getUniqueValue()] = JSON.stringify(credArr); new GlideModal().get('loader').destroy();}}}";
                }
                catalogScriptGR.addScript(script);
                var ScriptId = catalogScriptGR.create();


                /*Onload script for subnet*/

                /*		var onLoadclientScript = new GlideRecord(this.appUtil.configuration.table.catalogClientScript+'');
                		onLoadclientScript.initialize();
                		onLoadclientScript.name = "Get Subnet Info";
                		onLoadclientScript.type = "onLoad";
                		onLoadclientScript.applies_to = "item";
                		onLoadclientScript.cat_item = catItemSysId;
                		onLoadclientScript.active = true;
                		onLoadclientScript.order=50;

                		onLoadclientScript.description = 'This script is created for getting subnet list.';

                		onLoadclientScript.applies_catalog = true;
                		onLoadclientScript.ui_type = "0";
                		onLoadclientScript.applies_req_item = false;
                		onLoadclientScript.applies_sc_task = false;
                		onLoadclientScript.script = "function onLoad() { var clusterJSON = {}; var catalogSysId = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'getSubnet');ga.addParam('sysparm_catSysID', catalogSysId);ga.getXML(processAnswer);function processAnswer(response) {var ans = response.responseXML.documentElement.getAttribute('answer');sessionStorage['clusterName_' + g_form.getUniqueValue()] = ans;ans = JSON.parse(ans);var catalog_clusterJSON = ans.catalog_data;clusterJSON = ans.cluster_info;var nicList = [];for(var m in clusterJSON){nicList.push(clusterJSON[m].subnet);}for (var k in catalog_clusterJSON) {for (var i in catalog_clusterJSON[k].nics) {if (catalog_clusterJSON[k].value + '') {for (var l in clusterJSON) {var subnetList = clusterJSON[l].subnet;if (l != catalog_clusterJSON[k].value + '')for (var s in subnetList) g_form.removeOption(catalog_clusterJSON[k].nics[i] + '', s);}}else{var opt = g_form.getElement(catalog_clusterJSON[k].nics[i] + '');for (var x=1, n = opt.options.length; x &lt; n; x++) {var present = false;var val = opt.options[x].value+'';for(var s=0; s &lt; nicList.length ;s++){if (nicList[s][val]) {present =true;break;}} if(!present){ g_form.removeOption(catalog_clusterJSON[k].nics[i] + '', opt.options[x].value+''); x--;n--; } }} }}}}";
                		onLoadclientScript.insert();*/

                var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScript.setAttributes({
                    "name": "Get Subnet Info",
                    "type": "onLoad",
                    "applies_to": "item",
                    "cat_item": "" + catItemSysId,
                    "active": false,
                    "order": 50,
                    "description": "This script is created for getting subnet list.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false
                });
                onLoadCatalogClientScript.appliesToCatalogItem(true);
                var onLoadScript = "function onLoad() { var clusterJSON = {}; var catalogSysId = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'getSubnet');ga.addParam('sysparm_catSysID', catalogSysId);ga.getXML(processAnswer);function processAnswer(response) {var ans = response.responseXML.documentElement.getAttribute('answer');sessionStorage['clusterName_' + g_form.getUniqueValue()] = ans;ans = JSON.parse(ans);var catalog_clusterJSON = ans.catalog_data;clusterJSON = ans.cluster_info;var nicList = [];for(var m in clusterJSON){nicList.push(clusterJSON[m].subnet);}for (var k in catalog_clusterJSON) {for (var i in catalog_clusterJSON[k].nics) {if (catalog_clusterJSON[k].value + '') {for (var l in clusterJSON) {var subnetList = clusterJSON[l].subnet;if (l != catalog_clusterJSON[k].value + '')for (var s in subnetList){ /*g_form.removeOption(catalog_clusterJSON[k].nics[i] + '', s);*/}}}{var opt = g_form.getElement(catalog_clusterJSON[k].nics[i] + '');for (var x=1, n = opt.options.length; x &lt; n; x++) {var present = false;var val = opt.options[x].value+'';for(var s=0; s &lt; nicList.length ;s++){if (nicList[s][val]) {present =true;break;}} if(!present){g_form.removeOption(catalog_clusterJSON[k].nics[i] + '', opt.options[x].value+''); x--;n--; } }} }}}}";
                onLoadCatalogClientScript.addScript(onLoadScript);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();

                /*End of Onload script for subnet*/
                /**/

                for (var x = 0; x &lt; nicSysIdList.length; x++) {
                    var onChangecatalogClientScript = new sn_sc.CatalogClientScript();
                    onChangecatalogClientScript.setAttributes({
                        "name": "Populate Nic on change of Nic Sys_id : " + x,
                        "type": "onChange",
                        "applies_to": "item",
                        "cat_item": '' + catItemSysId,
                        "cat_variable": "IO:" + nicSysIdList[x],
                        "active": true,
                        "order": 400,
                        "description": "This script is created for onChange of Nic",
                        "applies_catalog": true,
                        "ui_type": "0",
                        "applies_req_item": false,
                        "applies_sc_task": false
                    });
                    onChangecatalogClientScript.appliesToCatalogItem(true);
                    var onChangeScript = "function onChange(control, oldValue, newValue, isLoading) { if (isLoading || newValue == '') { return; } var clusterJson = JSON.parse(sessionStorage.getItem( 'clusterName_'+g_form.getUniqueValue() )); var catCluster = clusterJson.catalog_data; var clusterInfo = clusterJson.cluster_info; var clusterVal;for (var i in clusterInfo) {for (var k in clusterInfo[i].subnet) {if (k == newValue) {clusterVal = i + ''; }}}var clustername, relatedNic;for (var i in catCluster) {var nic = catCluster[i].nics; for (var k in nic) { var nicElem = nic[k]; if ('" + nicSysIdList[x] + "' == k) { if (!catCluster[i].value) { g_form.setValue(catCluster[i].name, clusterVal); relatedNic = catCluster[i].nics; addNicOptions(relatedNic);}else{g_form.setValue(catCluster[i].name, clusterVal);relatedNic = catCluster[i].nics;}}}} function addNicOptions(relatedNic) {for (var n in relatedNic) {for (var l in clusterInfo) {if (l != clusterVal &amp;&amp; clusterVal) for (var j in clusterInfo[l].subnet) { g_form.removeOption(relatedNic[n], j); }}}}}";
                    onChangecatalogClientScript.addScript(onChangeScript);
                    var onChangeCatalogClientScriptId = onChangecatalogClientScript.create();
                    this.logger.debug("Created onChange script to populate Nic SYS id  " + catalogScriptGR.cat_variable);

                }

                /**/
                this.logger.debug("Created onChange script to get form data on catalog item " + current.variables.item_name);


                var onChangecatalogClientScript = new sn_sc.CatalogClientScript();
                onChangecatalogClientScript.setAttributes({
                    "name": "Check AppName OnChange",
                    "type": "onChange",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "cat_variable": "IO:" + appSysID,
                    "active": true,
                    "order": 100,
                    "description": "This script is auto created thorugh runtime module for checking application name.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false,

                });
                onChangecatalogClientScript.appliesToCatalogItem(true);
                var onChangeScript = "function onChange(control, oldValue, newValue, isLoading) {if (isLoading || newValue == '') {return;}var name = newValue; if ((newValue.length != ((newValue.trim()).length))  || (!(/^[_-\\w ]+$/.test(name) &amp;&amp; (name.trim().lastIndexOf('-') != (name.trim().length - 1))))) {g_form.clearValue('default_app_name'); g_form.showErrorBox('default_app_name', 'Only alphanumeric characters, underscores(_), hyphens(-) and in between spaces are allowed and cannot end with hyphens(-). Leading and trailing spaces are not allowed.');}}";
                onChangecatalogClientScript.addScript(onChangeScript);
                var OnChangeCatalogScriptId = onChangecatalogClientScript.create();

                this.logger.debug("Created onChange script to check application name on " + current.variables.item_name);

                var onSubmitcatalogScriptGR = new sn_sc.CatalogClientScript();
                onSubmitcatalogScriptGR.setAttributes({
                    "name": "Check AppName OnSubmit",
                    "type": "onSubmit",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "active": true,
                    "order": 100,
                    "description": "This script is auto created thorugh runtime module for checking application name on submit.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false,
                });
                onSubmitcatalogScriptGR.appliesToCatalogItem(true);
                var onSubmitscript = "function onSubmit() { var result = true; var name = g_form.getValue('default_app_name'); if (!(/^[_-\\w ]+$/.test(name) &amp;&amp; (name.trim().lastIndexOf('-') != (name.trim().length - 1)))) { g_form.showErrorBox('default_app_name', 'Only alphanumeric characters, underscores(_), hyphens(-) and spaces are allowed and cannot end with hyphens(-).'); result = false; } var errorFieldName = ''; var errorIntFieldName = ''; var parse = JSON.parse(sessionStorage.getItem('FieldRegex_' + g_form.getUniqueValue())); var keys = Object.keys(parse); for (var i = 0; i &lt; keys.length; i++) { var row = parse[keys[i] + '']; var patt = row.regex + ''; var reg = new RegExp(patt); var value = g_form.getValue(keys[i] + ''); var dataType = (row.data_type + '' == 'EXEC_SECRET' || row.data_type + '' == 'HTTP_SECRET' || row.data_type + '' == 'EXEC_LOCAL' || row.data_type + '' == 'HTTP_LOCAL') ? 'Dynamic' : row.data_type + ''; if (row.type + '' == 21) { var splitted = value.split(','); var actualVal = row.listRegex; var count = 0; for (var j = 0, n = splitted.length; j &lt; n; j++) { var listVal = actualVal[splitted[j] + ''];  if ((dataType + '' == 'Dynamic' || dataType + '' == 'PREDEFINED') &amp;&amp; j == n - 1 &amp;&amp; listVal.includes('\n')){ while(listVal.indexOf('\n') != -1){ listVal = listVal.replace('\n','');} if (reg.test(listVal)) { count++;} } if (count == n) row.status = true; } else { if ((dataType + '' == 'Dynamic' || dataType + '' == 'PREDEFINED') &amp;&amp; value.includes('\n')){while(value.indexOf('\n') != -1){value = value.replace('\n','');}} if (reg.test(value)) { row.status = true; } } if (value &amp;&amp; row.status == false) { result = false; g_form.hideFieldMsg(keys[i] + ''); if(dataType == ''){ errorIntFieldName += g_form.getLabelOf(keys[i] + '') + ','; g_form.showErrorBox(keys[i] + '', 'This is a Integer field.Please provide a integer value.'); } else{ errorFieldName += g_form.getLabelOf(keys[i] + '') + ','; g_form.showErrorBox(keys[i] + '', 'Value does not match specified regex: ' + row.regex); } }} if (result) {   var parse = JSON.parse(sessionStorage.getItem('fieldValues_' + g_form.getUniqueValue())); for(var i in parse){ if(g_form.getValue(i)+''=='') g_form.setValue(i, parse[i]); } 			 parse = JSON.parse(sessionStorage.getItem('credentials_' + g_form.getUniqueValue())); for(var i in parse){ if(g_form.getValue(i)+''=='') g_form.setValue(i, parse[i]); } 		 sessionStorage.removeItem('fieldValues_' + g_form.getUniqueValue()); sessionStorage.removeItem('credentials_' + g_form.getUniqueValue());      sessionStorage.removeItem('clusterName_' + g_form.getUniqueValue()); sessionStorage.removeItem('FieldRegex_' + g_form.getUniqueValue());var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\" ;var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Validating field value with regex..'); loadingDialog.renderWithContent(''+loadingHTML);} else { errorIntFieldName = (errorIntFieldName.endsWith(',')) ? errorIntFieldName.substr(0, errorIntFieldName.length - 1) : errorIntFieldName; errorFieldName = (errorFieldName.endsWith(',')) ? errorFieldName.substr(0, errorFieldName.length - 1) : errorFieldName; if(errorIntFieldName != '' ) g_form.addErrorMessage('Variables are Integer field.Please provide suitable values: ' + errorIntFieldName); if(errorFieldName != '' ) g_form.addErrorMessage('Variables value does not match specified Regex.Please provide suitable values: ' + errorFieldName); new GlideModal().get('loader').destroy(); return false; }var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Checking Blueprint Status...'); loadingDialog.renderWithContent(''+loadingHTML); var blueprintType = getParameterValue('type')+''; var blueprintUUID = getParameterValue('uuid')+''; var profileSysId = getParameterValue('profileSysId')+'';var profileName = (g_form.getValue('default_profile')+'').trim(); if(profileName == '') return; var projectUUID = (g_form.getValue('default_project')+'').trim(); if(projectUUID == '') return; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'checkCatalogValidity'); ga.addParam('blueprintType', blueprintType); ga.addParam('blueprintUUID', blueprintUUID); ga.addParam('profileSysId', profileSysId); ga.addParam('projectUUID', projectUUID); ga.addParam('profileName', profileName);ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var message=''; if (answer + '' == 'INACTIVE') { message= 'Project/Profile/Blueprint/MPI is not available at Calm. So, Catalog Item can\\'t be launched. Re-Directing back to catalog launch page.'; clearFieldValue(message); } else if (answer + '' == 'CANTCHECK') { message='Can\\'t check whether the Project/Profile/BP/MPI from which the catalog item was created is available or not. Please check the connection with Calm. Re-Directing back to catalog launch page.'; clearFieldValue(message); } new GlideModal().get('loader').destroy(); }  function clearFieldValue(message){ var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } alert(message); var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; }if(flds[i].label == \"Project\"  &amp;&amp; flds[i].prettyName == \"default_project\")continue;if(flds[i].label == \"Profile\"  &amp;&amp; flds[i].prettyName == \"default_profile\")continue;if (flds[i].prettyName.indexOf('cluster_name') == -1) g_form.clearValue(flds[i].prettyName);  /*	 self.location = '/x_nuta2_nutanix_ca_nutanix_runtime_configuration_list.do?sysparm_userpref_module=29d7d2e54f41230065e48020a310c7f6&amp;sysparm_view=catalog_view&amp;sysparm_query=GROUPBYitem_name.category&amp;sysparm_clear_stack=true'; 	*/			} }  function getParameterValue(name) {   name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");   var regexS = \"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\";   var regex = new RegExp(regexS);   var results = regex.exec(self.location);   if (results == null) {   return \"\";   } else {   return unescape(results[1]);   }   }}";
                onSubmitcatalogScriptGR.addScript(onSubmitscript);
                var onSubmitcatalogScriptId = onSubmitcatalogScriptGR.create();

                this.logger.debug("Created onSubmit script to check application name on " + current.variables.item_name);

                var onLoadCatalogClientScriptGR = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScriptGR.setAttributes({
                    "name": "Hide Order details on request",
                    "type": "onLoad",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "active": true,
                    "order": 10,
                    "description": "Hide values on request details.",
                    "applies_catalog": "false",
                    "ui_type": "0",
                    "applies_req_item": "true",
                    "applies_sc_task": "false"
                });
                onLoadCatalogClientScriptGR.appliesToCatalogItem(false);
                onLoadCatalogClientScriptGR.appliesToRequestedItem(true);
                var onLoadScriptHide = "function onLoad() {if(g_form.getTableName() + '' == 'sc_req_item') {var fldType = {};var elemen = g_form.elements;for (var i in elemen) {fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var flds = g_form.nameMap;for (var i in flds) {if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') {continue;}g_form.setDisplay(flds[i].prettyName, false);}g_form.setVariablesReadOnly(true);g_form.setDisplay('provider_icons', 'false');g_form.setReadOnly('default_project', false);g_form.setReadOnly('default_environment', false);g_form.setReadOnly('default_app_name', false);g_form.setReadOnly('default_profile', false);g_form.setDisplay('default_project', true);g_form.setDisplay('default_environment', true);g_form.setDisplay('default_app_name', true);g_form.setDisplay('default_profile', true);var profile = g_form.getValue('default_profile') + '';var cat_sys_id = g_form.getValue('cat_item') + '';var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchOrderFormData');ga.addParam('sysparm_profile', profile + '');ga.addParam('sysparm_catSysID', cat_sys_id + '');ga.getXML(parseResponse);} function parseResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');var fldType = {};var elemen = g_form.elements;for (var i in elemen) {fldType[elemen[i].fieldName + ''] = elemen[i].type + '';}var nameTypeMap = {};var flds = g_form.nameMap;for (var i in flds) {nameTypeMap[flds[i].prettyName + ''] = fldType[flds[i].realName + ''] + '';}var fielVal = {};var parsed = JSON.parse(answer);for (var i in parsed) {if (i.indexOf('cluster_name') == -1) {if (nameTypeMap[i + ''] + '' == 'masked') {fielVal[i] = parsed[i].value;g_form.setValue(i + '', '');}g_form.setReadOnly(i + '', true); g_form.setDisplay(i + '', !parsed[i].readOnly);} else {g_form.setDisplay(i + '', !parsed[i].readOnly);g_form.setReadOnly(i + '', true);}}sessionStorage['fieldValues_' + g_form.getUniqueValue()] = JSON.stringify(fielVal);}}";
                onLoadCatalogClientScriptGR.addScript(onLoadScriptHide);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScriptGR.create();



                var onChangecatalogClientScript1 = new sn_sc.CatalogClientScript();
                onChangecatalogClientScript1.setAttributes({
                    "name": "Get Subnet Info on project change",
                    "type": "onChange",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "cat_variable": "IO:" + projectSysID,
                    "active": true,
                    "order": 600,
                    "description": "This script is auto created thorugh runtime module for checking application name on submit.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false,

                });
                onChangecatalogClientScript1.appliesToCatalogItem(true);
                var onChangeScript = "function onChange(control, oldValue, newValue, isLoading) { if (newValue == '') { return; }var clusterJSON = {}; var catalogSysId = g_form.getUniqueValue(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'getSubnet');ga.addParam('sysparm_catSysID', catalogSysId);ga.addParam('sysparm_ProjectUuid', newValue);ga.getXML(processAnswer);function processAnswer(response) {var ans = response.responseXML.documentElement.getAttribute('answer');sessionStorage['clusterName_' + g_form.getUniqueValue()] = ans;ans = JSON.parse(ans);var catalog_clusterJSON = ans.catalog_data;clusterJSON = ans.cluster_info;var nicList = [];for(var m in clusterJSON){nicList.push(clusterJSON[m].subnet);}for (var k in catalog_clusterJSON) {for (var i in catalog_clusterJSON[k].nics) {if (catalog_clusterJSON[k].value + '') {for (var l in clusterJSON) {var subnetList = clusterJSON[l].subnet;if (l != catalog_clusterJSON[k].value + '')for (var s in subnetList){ /*g_form.removeOption(catalog_clusterJSON[k].nics[i] + '', s);*/}}}{var opt = g_form.getElement(catalog_clusterJSON[k].nics[i] + '');for (var x=1, n = opt.options.length; x &lt; n; x++) {var present = false;var val = opt.options[x].value+'';for(var s=0; s &lt; nicList.length ;s++){if (nicList[s][val]) {present =true;break;}} if(!present){g_form.removeOption(catalog_clusterJSON[k].nics[i] + '', opt.options[x].value+''); x--;n--; } }} }}}}";
                onChangecatalogClientScript1.addScript(onChangeScript);
                var OnChangeCatalogScriptId = onChangecatalogClientScript1.create();

                this.logger.debug("Created onChange script to check application name on " + current.variables.item_name);

                var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScript.setAttributes({
                    "name": "Check Catalog Item Validity project",
                    "type": "onChange",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "cat_variable": "IO:" + projectSysID,
                    "active": true,
                    "order": 1,
                    "description": 'This script is auto created thorugh runtime module for checking BP validity from which this catalog item was created.',
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false
                });
                onLoadCatalogClientScript.appliesToCatalogItem(true);
                var onLoadScript = "function onChange(control, oldValue, newValue, isLoading) {if (isLoading || newValue == '') { return;} var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Checking Blueprint Status...'); loadingDialog.renderWithContent(''+loadingHTML); var blueprintType = getParameterValue('type')+''; var blueprintUUID = getParameterValue('uuid')+''; var profileSysId = getParameterValue('profileSysId')+''; var profileName = (g_form.getValue('default_profile')+'').trim();if(profileName == '') return;var projectUUID = (newValue+'').trim();if(projectUUID == '')return; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'checkCatalogValidity'); ga.addParam('blueprintType', blueprintType); ga.addParam('blueprintUUID', blueprintUUID); ga.addParam('profileSysId', profileSysId); ga.addParam('projectUUID', projectUUID); ga.addParam('profileName', profileName); ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var message=''; if (answer + '' == 'INACTIVE') { message= 'Project/Profile/Blueprint/MPI is not available at Calm. So, Catalog Item can\\'t be launched. Re-Directing back to catalog launch page.'; clearFieldValue(message); } else if (answer + '' == 'CANTCHECK') { message='Can\\'t check whether the Project/Profile/BP/MPI from which the catalog item was created is available or not. Please check the connection with Calm. Re-Directing back to catalog launch page.'; clearFieldValue(message); } new GlideModal().get('loader').destroy(); }  function clearFieldValue(message){ var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } alert(message); var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; }  if(flds[i].label == \"Project\"  &amp;&amp; flds[i].prettyName == \"default_project\")continue;if(flds[i].label == \"Profile\"  &amp;&amp; flds[i].prettyName == \"default_profile\")continue;if (flds[i].prettyName.indexOf('cluster_name') == -1) g_form.clearValue(flds[i].prettyName);/* self.location = '/x_nuta2_nutanix_ca_nutanix_runtime_configuration_list.do?sysparm_userpref_module=29d7d2e54f41230065e48020a310c7f6&amp;sysparm_view=catalog_view&amp;sysparm_query=GROUPBYitem_name.category&amp;sysparm_clear_stack=true'; */			}	 }  function getParameterValue(name) {   name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");   var regexS = \"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\";   var regex = new RegExp(regexS);   var results = regex.exec(self.location);   if (results == null) {   return \"\";   } else {   return unescape(results[1]);   }   } }";
                onLoadCatalogClientScript.addScript(onLoadScript);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();


                var onLoadCatalogClientScript = new sn_sc.CatalogClientScript();
                onLoadCatalogClientScript.setAttributes({
                    "name": "Check Catalog Item Validity profile",
                    "type": "onChange",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "cat_variable": "IO:" + profileSysID,
                    "active": true,
                    "order": 1,
                    "description": 'This script is auto created thorugh runtime module for checking BP validity from which this catalog item was created.',
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false
                });
                onLoadCatalogClientScript.appliesToCatalogItem(true);
                var onLoadScript = "function onChange(control, oldValue, newValue, isLoading) {if (isLoading || newValue == '') { return;} var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Checking Blueprint Status...'); loadingDialog.renderWithContent(''+loadingHTML); var blueprintType = getParameterValue('type')+''; var blueprintUUID = getParameterValue('uuid')+''; var profileSysId = getParameterValue('profileSysId')+'';var profileName = (newValue+'').trim(); if(profileName == '') return; var projectUUID = (g_form.getValue('default_project')+'').trim(); if(projectUUID == '') return; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'checkCatalogValidity'); ga.addParam('blueprintType', blueprintType); ga.addParam('blueprintUUID', blueprintUUID); ga.addParam('profileSysId', profileSysId); ga.addParam('projectUUID', projectUUID); ga.addParam('profileName', profileName);ga.getXML(parseResponse, null, loadingDialog); function parseResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var message=''; if (answer + '' == 'INACTIVE') { message= 'Project/Profile/Blueprint/MPI is not available at Calm. So, Catalog Item can\\'t be launched. Re-Directing back to catalog launch page.'; clearFieldValue(message); } else if (answer + '' == 'CANTCHECK') { message='Can\\'t check whether the Project/Profile/BP/MPI from which the catalog item was created is available or not. Please check the connection with Calm. Re-Directing back to catalog launch page.'; clearFieldValue(message); } new GlideModal().get('loader').destroy(); }  function clearFieldValue(message){ var fldType = {}; var elemen = g_form.elements; for (var i in elemen) { fldType[elemen[i].fieldName + ''] = elemen[i].type + ''; } alert(message); var flds = g_form.nameMap; for (var i in flds) { if (fldType[flds[i].realName + ''] + '' == 'formatter' || fldType[flds[i].realName + ''] + '' == 'container' || fldType[flds[i].realName + ''] + '' == 'checkbox_container' || fldType[flds[i].realName + ''] + '' == 'undefined') { continue; } if(flds[i].label == \"Project\"  &amp;&amp; flds[i].prettyName == \"default_project\")continue;if(flds[i].label == \"Profile\"  &amp;&amp; flds[i].prettyName == \"default_profile\")continue;if (flds[i].prettyName.indexOf('cluster_name') == -1) g_form.clearValue(flds[i].prettyName);/*	 self.location = '/x_nuta2_nutanix_ca_nutanix_runtime_configuration_list.do?sysparm_userpref_module=29d7d2e54f41230065e48020a310c7f6&amp;sysparm_view=catalog_view&amp;sysparm_query=GROUPBYitem_name.category&amp;sysparm_clear_stack=true'; 	*/			 }}  function getParameterValue(name) {   name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");   var regexS = \"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\";   var regex = new RegExp(regexS);   var results = regex.exec(self.location);   if (results == null) {   return \"\";   } else {   return unescape(results[1]);   }   } }";
                onLoadCatalogClientScript.addScript(onLoadScript);
                var onLoadCatalogClientScriptId = onLoadCatalogClientScript.create();

                var onChangecatalogClientScript2 = new sn_sc.CatalogClientScript();
                onChangecatalogClientScript2.setAttributes({
                    "name": "Set Session Vars",
                    "type": "onChange",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "cat_variable": "IO:" + profileSysID,
                    "active": true,
                    "order": 700,
                    "description": "This script is auto created thorugh runtime module for setting session json.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false,

                });
                onChangecatalogClientScript2.appliesToCatalogItem(true);
                var onChangeScriptSess = "function onChange(control, oldValue, newValue, isLoading) {if (isLoading || newValue == '') {return;}var cat_sys_id = g_form.getUniqueValue();var profile = (newValue + '').trim();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchLaunchVars');ga.addParam('sysparm_catsysid', cat_sys_id);ga.addParam('sysparm_profile', profile);ga.getXML(varResponse);function varResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');jslog(answer);var varJSON = JSON.parse(answer);var prof_json = varJSON.profile;var serv_json = varJSON.service;var sess_json = {};for (var i in prof_json) {var field = prof_json[i];var curr_value = g_form.getValue('IO:' + i);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = i + '';sess_json['IO:' + i] = curr_value;}for (var j in serv_json) {for (var k in serv_json[j]) {var field = serv_json[j][k];var curr_value = g_form.getValue('IO:' + k);var parsed_field = JSON.parse(field);parsed_field.value = curr_value;parsed_field.sys_id = k + '';sess_json['IO:' + k] = curr_value;}}sessionStorage['varValues'] = JSON.stringify(sess_json);}}";
                onChangecatalogClientScript2.addScript(onChangeScriptSess);
                var OnChangeCatalogScriptId = onChangecatalogClientScript2.create();

                this.logger.debug("Created onChange script to set Session variables " + current.variables.item_name);

                var onChangecatalogClientScript3 = new sn_sc.CatalogClientScript();
                onChangecatalogClientScript3.setAttributes({
                    "name": "Fetch dependencies on change of profile",
                    "type": "onChange",
                    "applies_to": "item",
                    "cat_item": '' + catItemSysId,
                    "cat_variable": "IO:" + profileSysID,
                    "active": true,
                    "order": 700,
                    "description": "This script is auto created thorugh runtime module for getting variables on change of profile.",
                    "applies_catalog": true,
                    "ui_type": "0",
                    "applies_req_item": false,
                    "applies_sc_task": false,

                });
                onChangecatalogClientScript3.appliesToCatalogItem(true);
                var onChangeScriptVars = "function onChange(control, oldValue, newValue, isLoading) { if (isLoading || newValue == '') { return; } var cat_sys_id = g_form.getUniqueValue(); var profile = (newValue + '').trim(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchLaunchVars'); ga.addParam('sysparm_catsysid', cat_sys_id); ga.addParam('sysparm_profile', profile); ga.getXML(varResponse);}function varResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); console.log(answer); var varJSON = JSON.parse(answer); var prof_json = varJSON.profile; var serv_json = varJSON.service; var sess_json = {}; var var_array = []; for (var i in prof_json) { var field = prof_json[i]; var curr_value = g_form.getValue('IO:' + i); var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value; parsed_field.sys_id = i + ''; sess_json['IO:' + i] = curr_value; var_array.push(parsed_field); } getAdvancedVars(var_array); for (var j in serv_json) { var_array = []; for (var k in serv_json[j]) { var field = serv_json[j][k]; var curr_value = g_form.getValue('IO:' + k); var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value; parsed_field.sys_id = k + ''; sess_json['IO:' + k] = curr_value; var_array.push(parsed_field); } getAdvancedVars(var_array); } sessionStorage['varValues'] = JSON.stringify(sess_json);}function getAdvancedVars(variable_json) { var act_var_JSON = JSON.stringify(variable_json); var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); gajax.addParam('sysparm_name', 'variableArrayParser'); gajax.addParam('sysparm_type', 'catalog'); gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + ''); gajax.addParam('sysparm_varJson', act_var_JSON); gajax.getXML(getVarResponse);}function getVarResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); if (answer + '' == '' || answer + '' == 'undeined' || answer + '' == 'null') return; var parsedResponse = JSON.parse(answer); for (var i in parsedResponse) {var row = parsedResponse[i]; var sys_id = 'IO:' + row.sys_id; var type = row.type + ''; if (row.state == 'SUCCESS') { if (type == 'LOCAL') g_form.setValue(sys_id, row.value); if (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') { g_form.clearOptions(sys_id); for (var k = 0; k &lt; (row.value).length; k++) { g_form.addOption(sys_id + '', row.value[k], row.value[k]); } } } if (row.state == 'ERROR') { g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]); } new GlideModal().get('variables_loader').destroy(); }}";
                onChangecatalogClientScript3.addScript(onChangeScriptVars);
                var OnChangeCatalogScriptId = onChangecatalogClientScript3.create();

                this.logger.debug("Created onChange script to set Session variables " + current.variables.item_name);

                if (parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &gt;= parseFloat("3.2")) {
                    this.logger.debug("Created On Change of Project (calm evirment 3.2) client script on  " + current.variables.item_name);
                    var onChangeCatalogProject = new sn_sc.CatalogClientScript();
                    onChangeCatalogProject.setAttributes({
                        "name": "On Change of Project",
                        "type": "onChange",
                        "applies_to": "item",
                        "cat_item": '' + catItemSysId,
                        "cat_variable": "IO:" + projectSysID,
                        "active": true,
                        "order": 700,
                        "description": "This script is auto created thorugh runtime module for getting variables on change of project.",
                        "applies_catalog": true,
                        "ui_type": "0",
                        "applies_req_item": false,
                        "applies_sc_task": false,

                    });
                    onChangeCatalogProject.appliesToCatalogItem(true);
                    var onChangeProjectScript = "function onChange(control, oldValue, newValue, isLoading){if (isLoading || newValue == ''){return;}var project = g_form.getValue('default_project');var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchEnvironments');ga.addParam('sysparm_project', project);ga.getXML(parseResponse);function parseResponse(response){var answer = response.responseXML.documentElement.getAttribute('answer');var result = JSON.parse(answer);if (result.length == 0) {g_form.hideFieldMsg('default_environment', true);g_form.clearOptions('default_environment');g_form.showFieldMsg('default_environment', 'This Project has no valid Environments configured, you cannot proceed with the launch.  Please contact your administrator'); g_form.hideFieldMsg('default_profile', true);g_form.clearOptions('default_profile');g_form.setMandatory('default_profile', true);g_form.showFieldMsg('default_profile', 'There are no applicable Profile(s) that match the selected Environment.  Please choose a different Environment to proceed.');var elemen = g_form.elements;for (var i in elemen) { g_form.setDisplay(elemen[i].fieldName, false);} g_form.setDisplay('default_profile', true);g_form.setDisplay('default_project', true);g_form.setDisplay('default_environment', true);g_form.setMandatory('default_profile', true);}else{g_form.clearMessages();g_form.clearOptions('default_environment');for (var i = 0; i &lt; result.length; i++){var jsonObj = result[i];g_form.addOption('default_environment', jsonObj.UUID + '', jsonObj.Name + '');}}}}";
                    onChangeCatalogProject.addScript(onChangeProjectScript);
                    var OnChangeCatalogScriptId = onChangeCatalogProject.create();
                    this.logger.debug("Created On Change of Project (calm evirment 3.2) client script on  " + current.variables.item_name);


                    this.logger.debug("Created On Change of Environment (calm evirment 3.2) client script on  " + current.variables.item_name);
                    var onChangeCatalogEnvironment = new sn_sc.CatalogClientScript();
                    onChangeCatalogEnvironment.setAttributes({
                        "name": "On Change of Environment variable",
                        "type": "onChange",
                        "applies_to": "item",
                        "cat_item": '' + catItemSysId,
                        "cat_variable": "IO:" + environmentSysId,
                        "active": true,
                        "order": 700,
                        "description": "This script is auto created thorugh runtime module for getting variables on change of project.",
                        "applies_catalog": true,
                        "ui_type": "0",
                        "applies_req_item": false,
                        "applies_sc_task": false,

                    });
                    onChangeCatalogEnvironment.appliesToCatalogItem(true);
                    var onChangeEnvironmentScript = "function onChange(control, oldValue, newValue, isLoading){if (isLoading || newValue == '') {return;} var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\";var loadingDialog = new GlideModal('environment_loader', true);loadingDialog.setTitle('Fetching Profiles...');loadingDialog.renderWithContent('' + loadingHTML);var gUrl = new GlideURL();gUrl.setFromCurrent();var def_project;for (var i = 0; i &lt; g_form.getControl('default_project').options.length; i++){if (g_form.getControl('default_project').options[i].value == g_form.getValue('default_project')) {def_project = g_form.getControl('default_project').options[i].innerText;break;}}var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchProfilesBasisOnEnvironment');ga.addParam('sysparm_env', g_form.getValue('default_environment'));ga.addParam('sysparm_proValue', g_form.getValue('default_project'));ga.addParam('sysparm_pro', def_project + '');ga.addParam('sysparm_profile', gUrl.getParam('profileSysId'));ga.addParam('sysparm_blueprint', gUrl.getParam('uuid'));ga.addParam('sysparm_type', gUrl.getParam('type'));ga.getXML(parseData);function parseData(response) {var answer = response.responseXML.documentElement.getAttribute('answer');jslog(' On Change of Environment variable answer' + answer);answer = JSON.parse(answer);if (answer.length == 0) {g_form.hideFieldMsg('default_profile', true); g_form.clearOptions('default_profile');g_form.showFieldMsg('default_profile', 'There are no applicable Profile(s) that match the selected Environment.  Please choose a different Environment to proceed.');var elemen = g_form.elements;for (var i in elemen) {g_form.setDisplay(elemen[i].fieldName, false);}g_form.setDisplay('default_profile', true);g_form.setDisplay('default_project', true);g_form.setDisplay('default_environment', true);g_form.setMandatory('default_profile', true);}else{var elemen = g_form.elements;for (var i in elemen) {g_form.setDisplay(elemen[i].fieldName, true);}g_form.hideFieldMsg('default_profile', true);g_form.clearOptions('default_profile');for (var i = 0; i &lt; answer.length; i++) {g_form.addOption('default_profile', answer[i], answer[i]);}if (answer.length == 1) {g_form.setReadOnly('default_profile', true);}}new GlideModal().get('environment_loader').destroy();new GlideModal().get('environment_loader').destroy();new GlideModal().get('environment_loader').destroy();var cat_sys_id = g_form.getUniqueValue(); var profile = g_form.getValue('default_profile').trim();var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name', 'fetchLaunchVars');ga.addParam('sysparm_catsysid', cat_sys_id);ga.addParam('sysparm_profile', profile);ga.getXML(varResponse);}function varResponse(response){var answer = response.responseXML.documentElement.getAttribute('answer');var varJSON = JSON.parse(answer);var prof_json = varJSON.profile;var serv_json = varJSON.service;var sess_json = {};var var_array = [];for (var i in prof_json){var field = prof_json[i];var curr_value = g_form.getValue('IO:' + i); var parsed_field = JSON.parse(field);parsed_field.value = curr_value; parsed_field.sys_id = i + '';sess_json['IO:' + i] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);for (var j in serv_json){var_array = [];for (var k in serv_json[j]){var field = serv_json[j][k];var curr_value = g_form.getValue('IO:' + k);parsed_field.value = curr_value;parsed_field.sys_id = k + '';sess_json['IO:' + k] = curr_value;var_array.push(parsed_field);}getAdvancedVars(var_array);}sessionStorage['varValues'] = JSON.stringify(sess_json);}}function getAdvancedVars(variable_json){var act_var_JSON = JSON.stringify(variable_json);var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); gajax.addParam('sysparm_name', 'variableArrayParser');gajax.addParam('sysparm_type', 'catalog');gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + '');gajax.addParam('sysparm_varJson', act_var_JSON);gajax.getXML(getVarResponse);}function getVarResponse(response) {var answer = response.responseXML.documentElement.getAttribute('answer');if (answer + '' == '' || answer + '' == 'undefined' || answer + '' == 'null') return;var parsedResponse = JSON.parse(answer);for (var i in parsedResponse) {var row = parsedResponse[i];var sys_id = 'IO:' + row.sys_id;var type = row.type + '';if (row.state == 'SUCCESS'){if (type == 'LOCAL') g_form.setValue(sys_id, row.value);if (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET'){g_form.clearOptions(sys_id);for (var k = 0; k &lt; (row.value).length; k++){g_form.addOption(sys_id + '', row.value[k], row.value[k]);}}}if (row.state == 'ERROR') {g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]);}}}";
                    onChangeCatalogEnvironment.addScript(onChangeEnvironmentScript);
                    var OnChangeCatalogScriptId = onChangeCatalogEnvironment.create();
                    this.logger.debug("Created On Change of Environment (calm evirment 3.2) client script on  " + current.variables.item_name);
                }



                var cat_ui_policy = new GlideRecord(this.appUtil.configuration.table.catalogUIPolicy + '');
                cat_ui_policy.initialize();
                cat_ui_policy.catalog_item = catItemSysId;
                cat_ui_policy.short_description = 'Make Variables RITM ReadOnly';
                cat_ui_policy.applies_catalog = false;
                cat_ui_policy.applies_sc_task = false;
                cat_ui_policy.applies_req_item = true;
                cat_ui_policy.run_scripts = true;
                cat_ui_policy.script_true = 'function onCondition() { g_form.setVariablesReadOnly(true); }';
                cat_ui_policy.insert();



                this.logger.debug("Created ui policy to make field readonly on RITM on catalog item " + current.variables.item_name);

            }

            this.logger.info("New Catalog item " + current.variables.item_name + " creation completed.");
            return ans;

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._copyCatalogItem. Error:- " + e);
        }
    },

    _insertIntoRuntimeConfigTable: function(ans, current) {
        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts._insertIntoRuntimeConfigTable.");

            var createCatalog = current.variables.create_catalog + '';

            if (createCatalog == 'yes') {

                // 				var project = new GlideRecord(this.appUtil.configuration.table.Project+'');
                // 				project.addQuery('sys_id', current.variables.project+'');
                // 				project.setLimit(1);
                // 				project.query();
                // 				project.next();

                var gr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
                gr.initialize();
                gr.multiple_application_profile = current.variables.multiple_application_profile + '';
                //gr.assigned_users = current.variables.assign_users+'';
                gr.user_criteria = ans[1];
                gr.blueprint = current.variables.blueprint + '';
                //gr.description = current.variables.description+'';
                gr.item_name = ans[0] + '';
                gr.multiple_projects = current.variables.multiple_project + '';
                gr.insert();

                this.logger.info("Inserting value and runtime value of fields into variable proerpteis table.");
            } else {
                var gr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig + '');
                gr.addQuery('item_name', current.variables.cat_item + '');
                gr.query();
                if (gr.next()) {
                    gr.application_profile = gr.application_profile + ',' + current.variables.application_profile + '';
                    gr.update();
                }

                this.logger.info("Updating value and runtime value of fields into variable proerpteis table.");
            }

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._insertIntoRuntimeConfigTable. Error:- " + e);
        }

    },

    setMultiProfileServiceVariables: function(current) {
        try {
            this.logger.debug("Inside Nutanix_ConfigureSettingScripts.setMultiProfileServiceVariables.");

            var performAction = current.variables.type + '';
            var catName = '';


            if (performAction == 'new') {
                var profile = current.variables.multiple_application_profile+'';
				var profile_arr = profile.split(",");
                var blueprint = current.variables.blueprint;
                var catSysId = current.description;
                var multiprofile_service_data = JSON.parse(current.variables.service_data);

                this.logger.debug("Got Profile:- " + profile + " Blueprint:- " + blueprint + " Catalog Item:- " + catSysId + " and Service Variables Data:- " + current.variables.service_data + " for setting service variables");

                var fieldGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable + '');
                fieldGR.addEncodedQuery('cat_item=' + catSysId);
                fieldGR.query();

                var fieldInfo = {};

                while (fieldGR.next()) {
                    fieldInfo[fieldGR.name] = fieldGR.sys_id + '';
                }


                this.logger.debug("Fethed the mapping of fields to sysIds. JSON string:- " + JSON.stringify(fieldInfo));
                for (var c in multiprofile_service_data) {
                    var profile = multiprofile_service_data[c].profile_sys_id;
                    var profile_gr = new GlideRecord('x_nuta2_nutanix_ca_application_profile');
                    if (profile_gr.get(profile)) {}


                    var service_data = multiprofile_service_data[c].service_configuration;

                    var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');

                    for (var i in service_data) {
                        var serviceName = i;
                        var categoryList = service_data[i];

                        for (var j in categoryList) {
                            var categoryName = j;
                            var category = categoryList[j];

                            var keys = Object.keys(category);

                            if (!category[keys[0]].notCmplx || category[keys[0]].notCmplx + '' == 'false') {

                                this.logger.debug("Mapping PortList variables " + JSON.stringify(category[keys[0]]) + " in Varaibles properties table");

                                gr.initialize();
                                var temp1 = categoryName.replace(profile_gr.name + '_', '');
                                gr.variable = fieldInfo[temp1 + ''] + '';
                                gr.application_profile = profile + '';
                                gr.catalog_item = catSysId + '';
                                gr.default_value = JSON.stringify(category[keys[0]]);
                                gr.isprofilevariable = 'false';
                                gr.runtime_config = 'false';
                                gr.uuid = '';
                                var temp2 = serviceName.replace(profile_gr.name + '_', '');
                                gr.service_name = fieldInfo[temp2 + ''] + '';
                                var temp3 = categoryName.replace(profile_gr.name + '_', '');
                                gr.category_name = fieldInfo[temp3 + ''] + '';
                                gr.insert();

                            } else {
                                for (var k in category) {
                                    var varia = category[k];

                                    this.logger.debug("Mapping service variable " + varia.name + " with value " + varia.value + " and runtime config as " + varia.runtime_config + " againsts service " + serviceName + " and category " + categoryName + " in Varaibles properties table");

                                    if (varia.data_type + '' == 'LOCAL' &amp;&amp; (varia.val_type + '' == 'DATE_TIME' || varia.val_type + '' == 'DATE'))
                                        varia.value = this.appScriptInstance._formttedDateTime(varia.value + '', varia.val_type + '', true);


                                    gr.initialize();
                                    var temp1 = (varia.name).replace(profile_gr.name + '_', '');

                                    gr.variable = fieldInfo[temp1 + ''] + '';
                                    gr.application_profile = profile + '';
                                    gr.catalog_item = catSysId + '';
                                    gr.default_value = varia.value + '';
                                    gr.isprofilevariable = varia.isprofilevariable + '';
                                    gr.runtime_config = varia.runtime_config + '';
                                    gr.uuid = varia.uuid + '';
                                    var temp = serviceName.replace(profile_gr.name + '_', '');
                                    gr.service_name = fieldInfo[temp + ''] + '';
                                    var temp1 = categoryName.replace(profile_gr.name + '_', '');
                                    gr.category_name = fieldInfo[temp1 + ''] + '';

                                    gr.isdisabled = varia.isdisabled + '';
                                    gr.issupported = varia.isSupported + '';
                                    gr.isservicevariable = varia.isservicevariable + '';


                                    gr.type = varia.type;
                                    gr.value_type = varia.val_type + '';
                                    gr.field_regex = varia.regex + '';
                                    gr.data_type = varia.data_type + '';
                                    gr.uuid = varia.uuid + '';

                                    gr.field_json = varia.field + "";
                                    gr.is_hidden = (varia.isHidden + "" == 'true') ? true : false;


                                    gr.insert();

                                    catName = gr.catalog_item.name + '';

//                                     if (varia.isservicevariable + '' == 'true')
//                                         this._createOnChangeScript(fieldInfo[varia.name + ''] + '', catSysId + "");
                                }
                            }

                        }
                    }

                    this.logger.info("Set service variables values for " + catName + ".");
                }
				
				this.logger.info("Set service variables values for " + catName + ".");
			
				for(var i = 0 ; i &lt; profile_arr.length ; i++){
				
					this._createOnChangeScriptForDependee(catSysId , profile_arr[i], "serviceVar" );
				}
            }
			else {

                var profile = current.variables.multiple_application_profile+'';
				var profile_arr = profile.split(",");
                var blueprint = current.variables.blueprint;
                var catSysId = current.description;
                var multiprofile_service_data = JSON.parse(current.variables.service_data);
                var delta_profiles = ((current.variables.delta_profiles).toString()).split(',');

                // 				gs.info("##### Profile : "+profile+" blueprint "+blueprint+" catSysId "+catSysId+"  multiprofile_service_data "+multiprofile_service_data+" delta_profiles "+delta_profiles+"type of delta profile "+typeof delta_profiles+" delta_profiles [0] "+delta_profiles[0]);

                var service_data = JSON.parse(current.variables.service_data + '');


                for (var c in multiprofile_service_data) {
                    var profile = multiprofile_service_data[c].profile_sys_id;

                    var profile_gr = new GlideRecord('x_nuta2_nutanix_ca_application_profile');
                    if (profile_gr.get(profile)) {}
                    var service_data = multiprofile_service_data[c].service_configuration;

                    var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');
                    gr.addQuery('catalog_item', catSysId);
                    gr.addQuery('application_profile', profile);
                    gr.addQuery('isprofilevariable', false);
                    gr.query();

                    while (gr.next()) {
                        var jsonData = service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + ''];

                        if (!jsonData.notCmplx || jsonData.notCmplx + '' == 'false') {
                            gr.default_value = JSON.stringify(service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + '']);
                            gr.update();
                            this.logger.debug("Updated service port list " + gr.default_value);
                        } else {
                            if (service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + ''].data_type + '' == 'LOCAL' &amp;&amp; (service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + ''].val_type + '' == 'DATE_TIME' || service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + ''].val_type + '' == 'DATE'))
                                service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + ''].value = this.appScriptInstance._formttedDateTime(service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + ''].value + '', service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + ''].val_type + '', true);

                            gr.default_value = service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + ''].value + '';
                            gr.runtime_config = service_data[profile_gr.name + '_' + gr.service_name.name + ''][profile_gr.name + '_' + gr.category_name.name + ''][gr.sys_id + ''].runtime_config + '';
                            gr.update();

                            this.logger.debug("Updated service variable " + gr.variable.name + " with value " + gr.default_value + " and runtime config as " + gr.runtime_config + " againsts service " + gr.service_name.name + " and category " + gr.category_name.name + " in Variables properties table");
                            catName = gr.catalog_item.name + '';

                        }
                    }
                }
                this.logger.info("Updated service variables values for " + catName + ".");

                var multiprofile_service_data = JSON.parse(current.variables.service_data);
                var fieldGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable + '');
                fieldGR.addEncodedQuery('cat_item=' + catSysId);
                fieldGR.query();

                var fieldInfo = {};

                while (fieldGR.next()) {
                    fieldInfo[fieldGR.name] = fieldGR.sys_id + '';
                }

                for (var c in multiprofile_service_data) {
                    var profile = multiprofile_service_data[c].profile_sys_id;
                    var profile_gr = new GlideRecord('x_nuta2_nutanix_ca_application_profile');
                    if (profile_gr.get(profile)) {}

                    var service_data = multiprofile_service_data[c].service_configuration;
                    for (var i in delta_profiles) {
                        if (profile + '' == delta_profiles[i] + '') {
                            var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties + '');

                            for (var i in service_data) {
                                var serviceName = i;
                                var categoryList = service_data[i];

                                for (var j in categoryList) {
                                    var categoryName = j;
                                    var category = categoryList[j];

                                    var keys = Object.keys(category);

                                    if (!category[keys[0]].notCmplx || category[keys[0]].notCmplx + '' == 'false') {

                                        this.logger.debug("Mapping PortList variables " + JSON.stringify(category[keys[0]]) + " in Varaibles properties table");

                                        gr.initialize();
                                        var temp1 = categoryName.replace(profile_gr.name + '_', '');
                                        gr.variable = fieldInfo[temp1 + ''] + '';
                                        gr.application_profile = profile + '';
                                        gr.catalog_item = catSysId + '';
                                        gr.default_value = JSON.stringify(category[keys[0]]);
                                        gr.isprofilevariable = 'false';
                                        gr.runtime_config = 'false';
                                        gr.uuid = '';
                                        var temp2 = serviceName.replace(profile_gr.name + '_', '');
                                        gr.service_name = fieldInfo[temp2 + ''] + '';
                                        var temp3 = categoryName.replace(profile_gr.name + '_', '');
                                        gr.category_name = fieldInfo[temp3 + ''] + '';
                                        gr.insert();

                                    } else {
                                        for (var k in category) {
                                            var varia = category[k];

                                            this.logger.debug("Mapping service variable " + varia.name + " with value " + varia.value + " and runtime config as " + varia.runtime_config + " againsts service " + serviceName + " and category " + categoryName + " in Varaibles properties table");

                                            if (varia.data_type + '' == 'LOCAL' &amp;&amp; (varia.val_type + '' == 'DATE_TIME' || varia.val_type + '' == 'DATE'))
                                                varia.value = this.appScriptInstance._formttedDateTime(varia.value + '', varia.val_type + '', true);


                                            gr.initialize();
                                            var temp1 = (varia.name).replace(profile_gr.name + '_', '');
                                            gr.variable = fieldInfo[temp1 + ''] + '';
                                            gr.application_profile = profile + '';
                                            gr.catalog_item = catSysId + '';
                                            gr.default_value = varia.value + '';
                                            gr.isprofilevariable = varia.isprofilevariable + '';
                                            gr.runtime_config = varia.runtime_config + '';
                                            gr.uuid = varia.uuid + '';
                                            var temp = serviceName.replace(profile_gr.name + '_', '');
                                            gr.service_name = fieldInfo[temp + ''] + '';
                                            var temp1 = categoryName.replace(profile_gr.name + '_', '');
                                            gr.category_name = fieldInfo[temp1 + ''] + '';

                                            gr.isdisabled = varia.isdisabled + '';
                                            gr.issupported = varia.isSupported + '';
                                            gr.isservicevariable = varia.isservicevariable + '';


                                            gr.type = varia.type;
                                            gr.value_type = varia.val_type + '';
                                            gr.field_regex = varia.regex + '';
                                            gr.data_type = varia.data_type + '';
                                            gr.uuid = varia.uuid + '';

                                            gr.field_json = varia.field + "";
                                            gr.is_hidden = (varia.isHidden + "" == 'true') ? true : false;

                                            gr.insert();

                                            catName = gr.catalog_item.name + '';

//                                             if (varia.isservicevariable + '' == 'true')
//                                                 this._createOnChangeScript(fieldInfo[varia.name + ''] + '', catSysId + "");
                                        }
                                    }

                                }
                            }
                        }
                    }
                }
				
				for(var i = 0 ; i &lt; profile_arr.length ; i++){
					
					this._createOnChangeScriptForDependee(catSysId , profile_arr[i], "serviceVar" );
				}
            }

        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts.setMultiProfileServiceVariables. Error:- " + e);
        }
    },

    _onChangeScripts: function(variaJSON, catSysId) {
        try {
            for (var i in variaJSON) {
                this._createOnChangeScript(i, catSysId);
            }
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._onChangeScripts. Error:- " + e);
        }
    },

    _createOnChangeScript: function(varSysId, catSysId) {
        try {
            var onChangecatalogClientScript = new sn_sc.CatalogClientScript();
            onChangecatalogClientScript.setAttributes({
                "name": "Fetch values OnChange",
                "type": "onChange",
                "applies_to": "item",
                "cat_item": '' + catSysId,
                "cat_variable": "IO:" + varSysId,
                "active": true,
                "order": 1000,
                "description": "This script is auto created thorugh runtime module for fetching values.",
                "applies_catalog": "true",
                "ui_type": "0",
                "applies_req_item": false,
                "applies_sc_task": false,
            });
            onChangecatalogClientScript.appliesToCatalogItem(true);
            var onChangeScript = "function onChange(control, oldValue, newValue, isLoading) { if(!sessionStorage['varValues'])return; var varValues = JSON.parse(sessionStorage['varValues']);oldValue = varValues[control.id + '']; if (isLoading || newValue == '' || oldValue + '' == newValue + '') {new GlideModal().get('loader').destroy(); return; }jslog(oldValue);jslog(newValue); function varResponse(response,loadingDialog){var answer=response.responseXML.documentElement.getAttribute('answer');var varJSON=JSON.parse(answer);var prof_json=varJSON.profile;var serv_json=varJSON.service;var var_array=[];for(var i in prof_json){var field=prof_json[i];var curr_value=g_form.getValue('IO:'+i);varValues['IO:' + i] = curr_value + '';var parsed_field=JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value=curr_value,parsed_field.sys_id=i+'',var_array.push(parsed_field);}getAdvancedVars(var_array);for(var j in serv_json){var_array=[];for(var k in serv_json[j]){var field=serv_json[j][k];var curr_value=g_form.getValue('IO:'+k);varValues['IO:' + k] = curr_value + '';var parsed_field=JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value=curr_value,parsed_field.sys_id=k+'',var_array.push(parsed_field);}getAdvancedVars(var_array);}sessionStorage['varValues'] = JSON.stringify(varValues);}function getAdvancedVars(variable_json){var act_var_JSON=JSON.stringify(variable_json);var gajax=new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');gajax.addParam('sysparm_name','variableArrayParser'),gajax.addParam('sysparm_type','catalog'),gajax.addParam('sysparm_parentUuid',g_form.getUniqueValue()+''),gajax.addParam('sysparm_varJson',act_var_JSON),gajax.getXML(getVarResponse);}function getVarResponse(response){ new GlideModal().get('loader').destroy(); var answer=response.responseXML.documentElement.getAttribute('answer');if(answer+''==''||answer+''=='undefined'||answer+''=='null')return;var parsedResponse=JSON.parse(answer);for(var i in parsedResponse){var row=parsedResponse[i];var sys_id='IO:'+row.sys_id;var type=row.type+'';if(row.state=='SUCCESS'&amp;&amp; (type=='EXEC_LOCAL'||type=='HTTP_LOCAL'||type=='EXEC_SECRET'||type=='HTTP_SECRET')){g_form.clearOptions(sys_id);for(var k=0;k&lt;row.value.length;k++)g_form.addOption(sys_id+'',row.value[k],row.value[k]); g_form.setValue(sys_id,row.value);} else {if(row.data_type + '' != 'BASE'){g_form.clearOptions(sys_id); for (var k = 0; k &lt; row.options.length; k++) g_form.addOption(sys_id + '', row.options[k], row.options[k]);} g_form.setValue(sys_id, row.value);}row.state=='ERROR'&amp;&amp;g_form.addErrorMessage('Error in variable: '+row.name+': '+row.error[0]);}}var loadingHTML=\"&lt;div class=\'loading-container\'&gt;&lt;div class=\'loading-indicator icon-loading icon-lg\'&gt;&lt;/div&gt;&lt;/div&gt;\"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching variables...'); loadingDialog.renderWithContent(''+loadingHTML);var cat_sys_id=g_form.getUniqueValue();var profile=g_form.getValue('default_profile').trim();var ga=new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge');ga.addParam('sysparm_name','fetchLaunchVars'),ga.addParam('sysparm_catsysid',cat_sys_id),ga.addParam('sysparm_profile',profile),ga.getXML(varResponse,null,loadingDialog);}";
            onChangecatalogClientScript.addScript(onChangeScript);
            var OnChangeCatalogScriptId = onChangecatalogClientScript.create();
        } catch (e) {
            this.logger.error("Exception caught inside Nutanix_ConfigureSettingScripts._createOnChangeScript. Error:- " + e);
        }
    },

    // calm 3.2 Envirment task

    fetchProfilesBasisOnEnvironment: function() {
        try {
            var body = new Object();
            var profile = [];
            body["api_version"] = "3.0";
            var metadata = {};
            var api_info;
            if (this.getParameter('sysparm_type') + "" == "x_nuta2_nutanix_ca_nutanix_marketplaceitems") {
                metadata.kind = "marketplace_item";
                api_info = "calm_marketplace_items";
            } else {
                metadata.kind = "blueprint";
                api_info = "blueprints";
            }
            metadata["categories"] = {};
            //sysparm_blueprint
            var project_reference = {};
            project_reference["kind"] = "project";
            project_reference["name"] = this.getParameter("sysparm_pro") + "";
            project_reference["uuid"] = this.getParameter("sysparm_proValue") + "";
            metadata["project_reference"] = project_reference;

            body["metadata"] = metadata;
            var specs = {};
            var environment_profile_pairs = [];
            var environment = {};
            environment["uuid"] = this.getParameter("sysparm_env") + "";
            var app_profile = this.getParameter("sysparm_profile");
            app_profile = app_profile.split(",");
            for (var i = 0; i &lt; app_profile.length; i++) {
                var profile_obj = {};
                var gr = new GlideRecord("x_nuta2_nutanix_ca_application_profile");
                if (gr.get(app_profile[i])) {
                    profile_obj.app_profile = {
                        "name": gr.name + ""
                    };
                    profile.push(gr.name + "");
                }
                profile_obj.environment = environment;
                environment_profile_pairs.push(profile_obj);
            }
            specs["environment_profile_pairs"] = environment_profile_pairs;
            var final_profile = [];
            body["spec"] = specs;
            this.appUtil = new Nutanix_Calm_Utils();
            this.logger.debug("Nutanix_ConfigureSettingScripts.fetchProfilesBasisOnEnvironment" + JSON.stringify(body));
            var response = this.appUtil.makeCalmApiCall('POST', '/' + api_info + '/' + this.getParameter("sysparm_blueprint") + "/patch_with_environment/validate", JSON.stringify(body));
            this.logger.debug("Nutanix_ConfigureSettingScripts.fetchProfilesBasisOnEnvironment" + JSON.stringify(response.getBody()) + response.getStatusCode());
            if (response.getStatusCode() + "" == "200" || response.getStatusCode() + "" == "201") {
                response = JSON.parse(response.getBody());
                var environment_profile_pair = response.status.environment_profile_pairs;

                for (var i = 0; i &lt; environment_profile_pair.length; i++) {
                    var name = environment_profile_pair[i].app_profile.name + "";
                    var state = environment_profile_pair[i].state;
                    if (profile.indexOf(name) != -1) {
                        if (state == "valid") {
                            final_profile.push(name);
                        }
                    }
                }
            } else {
                this.logger.error("Nutanix_ConfigureSettingScripts.fetchProfilesBasisOnEnvironment patch_with_environment/validate call failed response statusCode : " + response.getStatusCode());
            }
            return JSON.stringify(final_profile);
        } catch (e) {
            this.logger.error("Nutanix_ConfigureSettingScripts.fetchProfilesBasisOnEnvironment " + e);
        }

    },
    fetchEnvironments: function() {
        this.logger.debug("inside Nutanix_ConfigureSettingScripts.fetchEnvironments");
        var project = this.getParameter("sysparm_project");
        var gr_pro = new GlideRecord("x_nuta2_nutanix_ca_nutanix_project");
        gr_pro.addQuery("uuid", project);
        gr_pro.query();
        var arr = [];
        if (gr_pro.next()) {
            var gr = new GlideRecord("x_nuta2_nutanix_ca_nutanix_environment");
            gr.addQuery("project", gr_pro.sys_id);
            gr.query();
            while (gr.next()) {
                var obj = {};
                obj["Name"] = (gr.name + "");
                obj["UUID"] = (gr.uuid + "");
                arr.push(obj);
            }
        }
        return (JSON.stringify(arr));
    },

    type: 'Nutanix_ConfigureSettingScripts'

};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-13 16:38:54&lt;/sys_created_on&gt;&lt;sys_id&gt;75c3833837fd2300fdfc097973990e2f&lt;/sys_id&gt;&lt;sys_mod_count&gt;555&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_ConfigureSettingScripts&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_75c3833837fd2300fdfc097973990e2f&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-16 16:55:42&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>1157360293</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>855887e5dbcc7c103e3c6a5b8a961955</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98f160000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_ConfigureSettingScripts</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>721fa83d362f28108363497ea8f356a7</update_guid>
<update_guid_history>721fa83d362f28108363497ea8f356a7:1157360293,eedd47e9cd27681020d0c90f90a37fe2:-1990655154,6ab8f6a1cce368109583e4533fc6b283:-1266365220,34c67229dca36810558c2a469fe9896c:87151291,b484baa1d26368109245e2c89995a749:-512811207,32b106957aebe4104796d2010939ae05:-405231282,b1d5d515f9e7a8505fb188c4af8b231b:132657891,4b9cd85549a3a850d093933c9f95ac6e:507366021,4713200d87af2850b32d4af94ad3685e:1440960590,ecc0a8c5c3af2850d0dee44408f80dc6:-1993900778,9a0d94cd8b6f2850ab2282139c4043b3:1306150294,53db9c0da16f2850975b01f53935e2c3:-1583125994,ee8a90c9a36f28505f9551f8e0291146:214031638,ce455045346f28502af2b491b00c40d2:-1624668436,fe9314c15a6f2850303675024d31ce43:1826400305,cb3d0489bf2f28501ad5297df59c16f0:1951564893,7fb984c5c72f2850cbecba977910bd81:-582875435,5918c445782f2850bf433cf2e694fdb4:-2108094509,44b48c01ab2f2850ad95267705577198:1893397508,2d1208cd7aeb2850fb5d2da4f729c118:-1733382002,d7eebbf8d1eb2850e298505166ab0782:-521504728,236d73f4b4eb2850a2b24fd829505b9b:-935469780,249b77b466eb285032c9bdab68c60e92:1682391145,e4f93fb0efeb28502a575d94bbf30e4a:1651276655,ae95f330e6eb2850195124c16bbf7d55:-462100539,8364b7bcbdab2850fbfddf7e687580a2:256920279,115c40b804232850c1183477545117c4:-1255463558,474b80f4422328509d269696e92b8fc9:340943639,80d5487891efe450671e0718b9dc66f9:100882704,dc2fb3e44dafe450c313c30cab4b9521:340943639,1f2bd7a003e7e450e6eb129df63cb2b4:100882704,2347d72809a7e450b1af51331bb6ec9a:668987982,d434136403a7e450786ef1ba30daa5e5:22389811,8362d36c0667e450e606de1d0fed92cd:667012180,b22c215405af6450cd40778e814ebf8e:1833007974,491ba9d04eaf6450a3bff18d4aa5c854:1827052757,2385a9dcdb6f645041aafb2b65708083:-1034692083,6af3695c546f6450cfeb59a611a82cea:618212707,90f2a1d82c6f6450daa19525e8f3aa8a:987303739,fbc305a70d1fe050a42e952e1d40137f:1833007974,efc470eb29dbe0505fa96e6c4b906f9d:-1416969524,b87914ab385be050fd5e0f557aaf7b9b:117290690,a45773d7fcd7e050ed9751160a9dbbd8:1912824130,b6367b57d0d7e050dc14e992f47a8f7f:-836145166,2fe4b757eed7e05070529c2f42af0735:-1258053161,c6c29fdf2117e0501ffd8693aae415e6:1659772540,d7dd4f976c17e0504b8c1e2a3b70fec1:-1280678162,33fb0f974217e050eaa9ee1d0299cc2b:-113263504,5a848b9b67d3e0505785827e25d3baff:1659772540,faf3c39bb0d3e0507162945b56e6e625:1493245432,b8d2c5d575dfe01034fc2d3e54575de4:158990900,809a7c1de91fe0102128764dca7dd8eb:834025564,b9ed9bc965df24503629bc7f741aebd1:-1993524322,64b8d789bfdba01036b2502b2c0ebf9d:-1915626394,bbdd9388a15f2450e65b1273479d3467:-141594718,93becf4c071f2450ff28c82bf47befd4:-1050357894,26f17a44dddb24507c6f4aa652eda058:1224266282,24448ebaa7cf2050d41d3bd8653ca0ec:1218027852,1e08766288cbac1083086ef2e1aaa936:-1936212047,ec194aaead0bac10ff520a2297801186:1739986338,838d084dd143281079ac392fd6cff77a:-1927416986,0d6ccc0d69432810c5633ca896acfbdf:911724301,fc93efbc1ccfe410e6b35bed6dd35ea3:554908490,43af97b892cfe410ac07c2d5a377a938:1472524450,f26d93345acfe4102a7645a71749e0b7:641264607,b62b17bc0e8fe410fbf8235e5b30a2a3:-631008750,46ca5bfcea8fe4100b53e4584f3088d1:733467951,779893bc868fe410329a4304c36475dd:-96592498,7d56dfb8418fe4100a134622b1f0f21c:2007383658,a4dc9c38c287e41056a7a8d6e7224d0b:-586159130,613adc743a87e4104cc68ece7ba2c209:-1475190068,d258b32c0cc3e4108a90204ad156188c:-886329138,65925ad0cd83a410fe02d069c36aca23:-305273394,ff487d98bb03a4105211c9208e116b75:1364124702,ff65f554a903a41066a05948e9db84ef:-980442061,d6747118fe03a410c555457408fe282a:-895676518,712f0598f08b64106dbb4264b101f5fd:1004114738,d2c691cca54be0107658ba5e0a8765bc:697515414,f4afbc88ee0be010b87459a5867f6a52:-1313523081,3dcdc8886107e0100313a90e7004002b:-564455622,7d523ffb3ab2e010c0acb8c8b59af4f8:440669397,862a8fbbb0bea010a627a3fe66541f17:1185386627,7289837f9bbea010447b6a21430ebe35:1117790567,18fdbc7f913aa010e5d49fc89cdaf187:-173041377,2b3a4dfe053ee4508d9d386aef728b50:429861134,4655c53ac73ee45006d10b55b1939580:-161288432,25adf8b2a73ee4502e41a54d8dd03a47:-478890791,0386b0b2bc3ee450deb6f19e1c469307:938936195,6023307ed9fae450dca129054dc8cdf2:-478890791,22a17cfa36fae45030f4ae11384943dc:-2097323161,f930343ac7fae450d4d51a270f7bd6ed:-1580751824,f725c4ba187ae450741531718b6f6c1a:-161288432,29fd33660b7ae450bcec80d14f5282a5:-914290836,38e9dad2ad3a6450fa340c0f764880f0:-161288432,6347569a3df664507579f137d74d3a28:-350190014,4306965ef8f66450044c423808fa187a:429942047,155871363d62e410be96e4af0745af83:550277159,b3b3713a0422e410036cbae8dadf1443:137480909,c36f4c01c744a010bc272dec8b6d51b5:-1992233950,3248880d3b04a0103c45025bd26de8a7:-1833017365,9f3cc63c1d4e2b00438236adba734174:-1120900491,f7303320e1822b00177d2c1680536996:-1500211880,561ea7accf422b0027fe031da348653e:500570330,bb6d276c7f422b004f97230988beb4a8:-942158918,fe4a63e8c4422b00a591c7a2e5aeb8ad:-697012778,7ff910d4524ea70047ba5af7ca42c234:-1047898512,c41276e7e77d2700a63880e71adb3d79:-141350877,f60f995b8871e30086dbc880cf48b609:1513819955,79fcd9d77971e300fb4dcefdd37d2d70:1482287239,8939d113a371e300a34a11c1834498df:-534529906,d1786fe472422b002c6aeafe5bf5ee5e:-1040130432,6c536b6423422b006906a3929284b7c9:1886024193,8befd3e06c422b00145ece7eee2a5441:15587755,d41121d46542e7001a1b7f8a23aaafdc:-1800816530,e5ef7026ad6f54109779aa46c92e7e55:1616147809,3b597156de675410891a2698dcd4ca07:1468196792,3a2bad867d2b1410d9dac4514743f219:1772913191,feaaad86952b1410317f8f1d658bbcec:-1254919706,23abdcf57ce7d0103c5b5edb4a71aecf:1764433557,59ea94b5f8e7d010ea8299fd9e75887a:-753471165,93730c714ea7d01077140b51ed4d3cfe:-751229948,77330c71fea7d01062b3c14a819bdef8:542176913,2d6a3ba93b67d0101ce0751dc9ea10bb:1448084201,da653b658267d01034ab5c3def396063:542176913,473373254567d0105c3b1d5171ac2c28:1792133874,fb2cabadc727d010b24700d423a62928:-250492030,f5d6f9a5622f10108080bf8d18a618e1:-1645470349,4c138a5c86a758507f8695f2ca83325f:493161386,61eb4977269b50103dbf4b75ddab8a94:1504385365,3f160d33ba9b501032911850aafc408c:-914725237,60bbb4f7135b5010139930b83d0f207b:302458098,1313fc7f4b1b5010290277d3432a814d:-1911876119,2e4f24fb791b5010717da4595e2887eb:1219622821,e7335873bad750105bbe533f70a032da:-1485932751,e22272af6c53501074adbbd31a2402e1:-419111573,01cd622b425350104ca81c4ce6702148:2118911264,517f962f52135010fee974753b88da65:-1065961815,73fe802318db10109541fb8132f18c71:1216174146,338c8c2f2e9b1010c1e2abbabf9b4a9e:385987718,2b607c3f3d1bd450d6a922f1a4575363:1523216832,7549e03bb01bd45064bb456b3f447cac:-234921222,1ad5e477941bd4501fa785ac9534364f:-1592605335,7c9ed4bf0fd7d450b49787418fec7828:576627197,a18b44b31cd7d4502e49c3aec3e3b008:1688714709,29fc787908571410876a9e22fdf8619b:583337574,99ede14147d75010274002e989ce77dd:120880822,99ede14147d75010274002e989ce77dd:120880822,01c4a1c54a9750105fa35fd8aab0baed:439881143,a6ce9501d897501054a59a0567ac42d6:836513344,899170788d135c10d5b177180dc24a61:640050117,dd603cf4d0135c107aca48f5373ec5de:-303458123,6bf7acfc55df1c10154465dc91375f6c:-115022120,3c6fd87432df1c1034cc3d6d0bc942a0:1081999118,723c107081df1c10d6e31ff5f045018f:-870727260,481154b8dc9f1c100703c7b5d3372204:383365488,173ce7e407db1c106aece7ae472767cd:-567547525,e14a8b9c62db1010a496d2ed65c2661a:-91061928,cfc11b3708c754d0695e583e9a1918a5:-296104871,70ae3d3bb08354d04dc5edee7aa6e45f:441255059,574df1f7d58354d0c0a87f5fc3868668:956178587,390c75b7728354d02b5f307b64574dc2:-1351873308,c73bbd77228354d0991376a931dea14c:1256712282,c10a75379e8354d04a6e168264ee53e3:-2127086092,1265f1bfd34354d07cd8b3cd1f5603a6:-396219039,691135fbdf4354d030e5f154e3312d4f:-234903201,ec76a9f35d4354d09204d7795eb59f72:-1253139043,039421b32f4354d04cdc0ea92cadf628:940653822,f57cd1fb0b0354d01ae5d9eef3d0795f:-488094675,b8e81d3b830354d0388aec38e55e6c88:-2144132685,ca7919a7fd4714d0a64f271480dd6d24:685798717,d1e020639ac314d0b8fa09384f7d57a7:-2099009295,138fd02310c314d0c4fae880df0e7af0:143662967,88205f06054b10d0b02f1810216e66f8:685798717,743f8306de4b10d063c1848a76c48223:-1291645390,399dd5a99103dc905c9bf7235ce89294:-1207036688,917adde5a303dc90a297aa48f6d2d6b3:2003293769,818a706135cf9c90e0f083f40b1ba3fc:-2103326838,8625f82d4c8f9c902c6610f62a70f0c2:-597556588,7942f8a9498f9c90c8f22969c4bfff32:-1605008784,a37038e5508f9c90296d6d39246bcec8:-401960118,04703bf613fad4903275d5659ab8f81e:-1762417155,ff672fb249fad490bb798419c20f22c0:-1873121497,c91b6dbd377e14904c01cdd3bc83bba7:1359013221,d478a93d2d7e1490a5e60e247d60ead8:1501598115,e904a73e6eb61010292cfeacf87d2da1:155501108,65e363f62f7a1010d738833403ed3e39:427396727,477b67a9fa3a1490ceea85a2693eb5c7:155501108,e76827295a3a1490138aed134da9331b:-1899152686,8adf9b61ad3a14908310dc7b8eb34281:-507960406,935c832588f61490adb01dab256a0754:24904520,14fc54e1de321490c3a35897ea3410d8:716531111,3b6b98a12a3214908c1d64f25279bfcd:-1666429400,d34a58611f321490f4995223a831ad34:-1642306225,b4b810215d321490512818f65d9e6b48:1733716174,d2e294e999fed090afda973b9de8b327:1394301855,04d0dc29e6fed0904aa155090e148120:-144045150,53ac4ca561fed0908ee63f58961b82c7:-389488878,2f1cb71d0fbed0901ebbb3857d788e79:543662722,568af399c2bed09081b600760d227d5f:1661295588,04b83fd5c1bed090a8675be210ecfcc4:1656238787,886677551fbed090d38bbb607c9c5313:1305716251,7d033f15c1bed09072f7bf3fd5602837:-79049203,855233d1e6bed0909ccf5f9c9b59edab:309169823,1a4bd755167ed090c9b52697c8ba14fe:27088900,9bc65f11b87ed090eeb8bde59030ba98:1394301855,fb9357dde43ed09079265241c9c91ce0:-93387691,72547c6f11ae5850c13d1d49e56bdee6:1394301855,c96599512c62905024ae4b3d5ac373b7:-1669528031,b6a3059194229050763f555512b9180b:-284922511,aaa535a953a29050cf38ca1363487a01:1193455576,c2f100dd602e5050693b1f3752efd324:1322678583,ace193c1296a5050fca98491f73491de:-477761495,642e8b41956a50507dd22dc81afce3d1:-538805311,019c4301b46a50504bb9cb090e5cc219:1916441340,78e9074d172a5050e52ed589ee2ef167:1609290262,fc588b49a32a50500444c9f8296d7c2e:-2096700546,0d844b091e2a5050dd7f60d59ec39ddf:-79214327,632ef24d8de650506ed6fe3151f81c6d:-373439574,177ee0c525a250501b6d69f96c2d694d:-701988418,9d592441daa25050b68c7b0e79582b59:360210720,88be14c54f625050e61eb228012cedde:917309523,f670b4ddfb161410a0975df8f413d521:2077919840,7e0b2c1d0e1614105f3696393301aae3:-72533004,184046011d9ed010e300d102c32f301c:-715965028,90bbfdc9395ed010c2f3b1ff4867e8b3:-13659457,e6f9f189345ed0107b2951c1f7aa1c87:1064577111,0799f189fa5ed010972dd0e46f095156:-238330391,12d87d09b95ed0107cb4c4e459ab6075:1414545481,4c37f5c56c5ed010bd8dabe06e852117:-376272774,359e5145c11ed0107072abdb48059b84:278584425,baa7558deedad010a344a56537224e61:1488621107,2ce6558d37dad010fae6d242ae057895:251392005,ec35154d91dad010bb51f07f11512c3e:-901654972,ceae0509d5dad0103adabe44a034b08d:-1315935573,f1cb414588dad010370f04f3a46c057f:1921044531,689b05050adad010c542c02b395e323a:-1976106943,ce178101f0dad010e1c49ec8eba6c5bd:900685137,919fb405259ad01094991830f974b215:572694065,c3d82e5cad7954907f585133ac06cb4a:367926821,56b7661c56795490b0117f3b3e1cdbaa:-10997159,79b466580f795490100d42fe603dad5f:-1463756687,71d3a618ac795490143def04c2c9f999:578847982,fedada10827954900e92e8dc600bf822:1508533470,c390e300c6e51850f9c40065d2855311:-1246477275,1770e3002de518501ba21a66525fed1c:-613914437,8ecf1f8466a51850071322a05ae3ffaa:-1246477275,5117d6371719d45006ff80b04798badf:229974658,8da41be081201010ff90899edc1ca396:761914233,7f07f8fa45dcd01079a3f3e96b12d745:1441129369,cb571bceb1945410a6e0b100cfe9b914:1852015472,ef8f740a10d41410266d18df81bd2522:131914711,3a530b423958141033ddb9ff199c0ed9:500727157,0af643994f5c90103db93df66b009f72:264889966,1141c395ab5c9010601a618c416f46b1:207544514,3cd5e7bca3885c101981cc6b518ae787:-1002475025,f87e83bcd1485c106fc853b4069fe5b5:-1630455096,e7629104a804d81010c7420357e323ef:1232571184,f2885f7b8dff0010f0f3a43d2a66c0aa:1105432602,b97916b8726f4410582a64c64b2586be:-1630455096,b0fcdd68a8ef041039b79b64435ab3e4:341934940,6d2c596850ef0410e4c3fd677658d3a9:-1218067992,21a95960d5ef0410cb24b4ec8dc2077f:1375546830,bd074533dd4700108c5db65544c2a98f:-433684952,301205bb56070010a73148f05504d2f4:-3703672,35cbb03782070010d724eeea767f04d4:-564052287,3978fc3307070010aeaadefd5748a0e1:-1472079261,3d94fc7f56c300100ea708849661f7b2:1142192920,35fdacf34ec30010f13bc23dc7786c31:8974399,81aa607328c300101b7a0a9f00381787:758546023,401d1c77bd8300100935a707cf548edc:-384532710,784758bf914300100b10621c3bad7b2d:-36623750,e881dc3f5b430010b40038df400377c5:1295454032,c78e04bb8d4300101f50541e115bca71:-1754500143,e93d4c3b08430010979a7a125747f7f0:-379511406,f89c44f745430010282a6d4af79f7905:433066943,447b04f742430010440d885102beb3a7:1011731344,880bccb74b43001046edbc36bba4884d:734471731,e7aa4c773e430010b434c7ff4e7ef841:-1110072733,762900777c4300105510f1c6a5052abd:734471731,f2d7c4f3a3430010cafa4bd758fde0cb:1766667701,3f1740ff5e030010132172f97d67ca35:1753664431,5941c8bf6b03001054872b496434a21b:807302527,db80843f4b0300109d63fda06f10eca8:-263901409,417fffebf603001008a365b303f72de6:69598990,71aeb7eb860300106c7c8f4508fbc9a0:1753664431,01ad37ab88030010c986213bc115d3ca:-208832367,58dcfb6b86030010a34a81075873ef14:1766667701,121af7272a03001009ab9976cd6bed29:-1607519703,ce73a66bf8b68410e9c07000e02916c4:-57930953,d451222b26b6841087489011f30e75b6:-381101280,8c5f5e276ab68410ba39afede2446c7b:-890874136,9e1d5ae3e7b684100339bf7a01e6a43b:-620470049,c7a75a6fd5768410941b3dce833d748e:1469333225,9b259eebc47684107e1023cb1c6fbb9f:-524501578,732496eb97768410f484799f0a4f177a:-497400972,b113d2ab9d768410e35a8fe74fee1278:-1012912641,1e31126ba87684109d5c9a6d35c750c2:43925247,b7001267737684101d400a0775839730:-437178942,a766740e92fe40103e3f863adb2e9092:1268951249,04e1640e0dbe401011b7706344935cf8:-239240839,dd5a677dadba40106aa00f0d916864ac:1095057568,07c16f35cdfa40104f1c07a91c2ac52d:917203043,e3206b35bbfa40106647f348fc073487:-590043976,fb0c5f350cfa4010f0ba046b7baf427a:131038949,26a13befef028490634c7bb39cf479fc:1926821837,958353624a86c0901d328ed271e87b3e:-563937869,3367b59aed86809073bc8b46fa2ab99d:-830559596,f34cee14a72d841081df93c50e07e302:-237997336,8a98a8f6f41180105950414ef43f6161:953689350,5a5f95fee3510010e2cf4bbfd0370ae9:302572807,5a5f95fee3510010e2cf4bbfd0370ae9:302572807,7997ea43de790c10e3e092efabbbdd43:-1104788231,9187805286d14c10e8c3674e78911b9e:302572807,c935c012a6d14c108257a28113b72436:430891913,eb64c05e0a914c10fcf8adb691b397d9:571139561,18bc7bc24b914c10e90a4c1b56baea4f:1632915295,1580b706e2514c10855293d1569f7c7c:2094765251,4c7931e51cd5c8107848c21df6cc50fc:1556213633,ae2edd2dac55c810087e2268adea253e:1153012001,73e21dada115c8103cde317d94539d66:-997519306,c7a9091d2a5988108222b683ab5b63eb:1271438391,0285945970d58810d3b68004a6f0194f:-1745742247,1f63d05983d588102329be5ffaea2778:1732867349,da901cdd859588106707b9d3029e5040:2098909439,8c187da43a19081041b75e8aa4532f25:1690824889,6768f4e261b7b300ca3e73c0d7969871:325342875,d75c5e164cff7300ede4950da89a0a0f:-1320290326,c9f4565ea6bf7300667ee61596d6dd2e:2118546932,6e636e563d373300cba8a65445bef3a4:-655341986,86da0a9a44b33300e999508e4ea972ba:-1090911937,c61a3c46173373003dc1f013844f4ab8:324025723,3663f00267337300214186de493732b7:-845583615,00cfac0e65ff3300fce4d1c52e0b3625:-1129561287,85a13306daf7730025d253826e870827:392385327,84fb63ce0ab77300142ad6b13f628718:890990618,4ce26b42c2b77300a460ce607442cac2:1126117023,2e92e7029bb773001f29508d30e65998:-2065220906,2b316702a9b77300795ee4bbae32ac74:-661318934,063d8c11287b330010fb98d876606287:890154701,0a994f1ca33773009dd2c15cf28a73f5:1038442192,54e58f586a377300811a73c8cd304c56:-2039858672,4fd48b5820377300afc31fdd8668d423:-1938493409,470fe21c6fb3730034e4acd01adada0d:280064304,1f74e65c05737300f2a8b70948dcf622:141017344,92c2e65c1673730063873f246388b01c:678875932,deb09144a3bb7300118aa76ff67e1cba:280064304,ab809544febb73007fe599a694298a95:1494440481,dfee010475bb7300fbd0c7fe88ef533c:1381773573,5791e17b0d637300cb2c9a4ee9a92c3c:-1969894150,830d55b3d463730046ee46cc04b1c961:-669344185,c06452945d337300944c75a29cc639fd:907799312,dfdf3d40633733008df14512dcf03f91:50681350,921c69841cf3330099dd8a667db905e8:535357156,7741214016f33300def83efe3ed33dc8:863150788,18ac51c8feb33300a09410bd02542e0d:230182039,697bdd88a0b33300697bd2125a3dcb36:-1337519963,a84ba53926a33300209ddd97ff9de9bb:-1331551696,987e9db949633300bb915c9d87adb702:-1204987844,db2385a1cbe37300bc260a3783ac72ce:811441335,76da5021a2637300fce7e72131319331:1740202500,a6b59c2dac2373006f8fa06c237c209d:-985102419,b4ff8c69cd237300dee7521539b677ca:1945066666,243be34d00e33300c0aaad712704d52f:1044321641,45c8e74dcee33300d92e77bb6c43198c:1725016939,965e5bc5f3e33300497838e9132be89a:1753245222,d2a1ee7846a33300260bb049db96da53:364212093,6554e2e6fb13330010c64d50b684d29d:-1394626435,0466eb21e1173300acf1ece0e3649503:1778433155,100e33d0015b3300cf0383108c233e45:1131244627,21a4ff94c31b33005f5e71e277e08f3d:-1075620266,7b8b679c6e97330064b0a5bc09503000:1516109094,52daa39cfd9733007dc540e19f3108fe:672435482,34e807d315c3370001c7124391c75ce8:94759328,624c5adf838ff3005b7c8b421542b0ff:504857174,0ae4047ac9cb73001bc67b5f48adf4ba:-86295255,5b1d5f12cb0373002bce42d4de4ec0be:-1287143617,42bfbe864d073300d3182ca39c8555c1:701244212,5aa57a0e29c3330068d02bd7cdb59c17:1807279883,3629e602c9c3330087f57b72154d02ad:1347524982,65082ace6b833300f6f55144e80cf857:-677665913,62366e4e9e833300e82f42fcb4c19d8b:990937220,58d366cab5833300f29978cf0869ab05:-352350045,00285bc5df837300b103d9bc0c53c374:-778962601,a9a71bc561837300e1f09041c4d0628b:2037413206,2f7cc30dd2437300a9859a6c001ddb46:-219844982,9b847601b70373008cc393f96f5ec211:-1387136593,2a991e09b78f330011ffb80176730142:-906416427,99a71645b88f33002d76e4b04e332342:1958624469,f207da815f8f330077406a4957b2a567:257146343,93d356c1918f330072f0b781a7533953:106077413,9cd549f4cc433300b26b6d9d27428d37:-1369396865,f20097c8a6033300806c9230d8994b48:-448753601,589b4ab31e7233004fd3309efa27cf3c:1974094018,153f53baf57e730032caf64126d2bba7:33853828,e3ac537aa87e73003a0ddf3f4f89b550:138630921,d867a23ae2ba730077bb6386a0f2e6b5:1731138489,e127a23a7cba730034354c1e8cc3c5a4:1152582658,d7762eb690ba7300d0564000084b7de8:-49912054,2e0626be4d7a73000ba1ba01200b1c02:1678772428,e32bd6fea87a730012b35aeec0b25683:602055586,48fa96be7b7a73000a841e495a6d1e41:-1905818123,d08a5a7ece7a73003a4079f044589867:1904241583,26d9d67e3f7a7300ee6d7649ce64c53f:434135891,8b19563ebb7a730000cc17dbedda6b91:-94918848,f1526a6ebc327300a96bf74d00f8aa31:-1010189881,29b1e62ed532730001a493ac7dd34908:-817716970,3cd0eaea8e3273004fb99f65613fcd5c:-255171661,30502a6ac43273005d803d667dc3e5b5:-400456261,1a9eda2a4b327300e6f1192fbc649553:-255171661,07879aa2913273007c520a557343d775:498285572,40a512eed0fe3300d9d35170a14a5d28:1787849148,4a0b0eaa83fe33001122c54494ffa17a:-1822617279,dede39e2d5fe33002f5dcc97175a2197:1054489759,296ef9a2eefe33006edeb841972bc623:-887367164,91cd71a208fe330062a106165a031a5e:-1873449987,920d752282fe33005f747b201873198a:-1753676557,8c5c39eedcbe33004cb3a3127fb3acb0:1188112532,aaa98deeca3e3300b88c1d0338ea29e4:-376017060,2996c52e3c3e33007035eb85121a39d4:-1750782075,ff94c9ea813e33009e393373f3ba4cd6:2120070419,ea027f10ee1f3300e502b51b065e0a9a:-899913992,5c017310f71f33001e04f48a26d50ae8:-1432309888,4bc197908a9b3300e0a6475c8c66e716:-1678403529,d66e3ad4dd97330052bbd3bb66ab3414:-1138936593,5d54bdb3c2f6330019c8a5602c613a4e:1854812464,d70ec5b7977633009b7172a89393f0d3:203285200,3dac857742763300b6b410d94c00606d:1086779680,be5ff5cc9bf23700d40fd0154254b24c:-275912241,fdf61dc0eeb23700d5b0b00be92c2e3b:-1713452353,c993d900e3b2370067f8bbbb8d430d54:200946659,e49ec10c59723700bd152d48ae00e0c9:-1947942160,011e090c3c7237002ab4417d160cd237:1710626537,d04ff880e57237003dd65a3e2744ef5c:1710626537,0ac754c4bbfef3006c97dd2dc7cb38d8:-761208537,eb155084cafef30096b0b7621adae772:-1510879516,a193d004cdfef3006d1953a22395c95e:978474048,16b298c0d6fef30020d42476724dcb7c:-759582082,54d1d84004fef3009bd686d2c6cd300a:903464853,822084044bbef300230f04f240abd6ee:1725713171,1afcf773772ef3005cd3f7a34f04794a:-712717173,951afbb3ca2ef300924a1c65881d9357:-1492882388,59d821735b6af300dac1f87b9d2a80d2:835137744,9387e5ff052af3002ac721e1b38c826e:732953378,34775537192af300d08291482326ba69:-518489889,167251ff8be6f3009641f0822b3bc169:-39539206,dffc4d7fade6f30024ab70c350af4716:-1506782741,eefb8df740e6f3006bf5237f12ea6cf9:-778648843,d27a09f7e4e6f3000ef14cdc1fff3d63:-1063277212,bc6a6bdf3e6ab300b2f32d0f900eeb30:1172822988,f330ae13b0e6b300341ba85bab317660:1588068004,b942925ba0a6b3002587d02c38aabba5:69732192,0bfc399b3366b300825687e12ad2454c:-78605334,51a429131d26b3003e0459fa81a649b8:1660719654,acc2d3dafae233008f578907988c5119:-679143218,c36b92dd2d4233002431c6240321dadc:-1080192217,2f2a235ca542b300f1848ddd60610acc:1491005343,f61bba50b9ce73000147dc1923bd2247:-1030323245,8bde3ac038467300c0202501c5077026:-237151155,db5e7ac0bc46730056cebebe354fd5a6:-293535511,468a04fcfa0e7300fd80c6992b1fb8f7:1738433112,92ac37a4100e73002059798d74e63d5e:1755962176,cdbab364d70e73004506a36f696d1d64:-1072182561,9f58bb60930e7300227ff4a3f73a91ae:-1614864626,9c36b7203b0e7300aa2e5fcb166f0f41:398462569,01fe2b68d2ca7300b408e7ff78bc181e:-1426430207,33093ce4c50673006acce6b7da4f3eee:-1908166565,fc3ef240b8c6330086e0749fc7ac15af:911189072,b5dce6c0d086330040d3fc31d71672a2:1606422870,753b668090863300aa115fc70463f2a5:-1473295746,9a8ae24056863300ba0a1a0593231611:-120244186,a0242a88304633003e732b597c057b98:-420019750,e7367e4075863300e9c515e50745e73f:1521946081,4472324c1746330054ab00dc581c2349:-1281312029,c90ae6c4e0463300fcaf6637f1e4797d:1750401018,5f1dda0ce482330044837c5d0751a4ab:-617379078,1008cac4158233001fecd71e166c9270:1515772607,5622c600518233002493a6c7318c9d4c:-2121565515,fdf146808e823300d8b036bd6db8090c:327673645,7792c7ffc9053300a94600615bdf6ddb:-1341146679,7a89a2376805330029e6fa07e39e91b8:869225015,ee48e2b32505330069ec77d81e9637a4:1785413159,e8076ebf67c13300e4cbf8a16b904ced:1537266199,a7a6aebfbdc133008d68645caff98c5d:-96745688,fe056ebf5cc133004894bd254f7efc34:-1899966825,5763a23f36c13300fb21cfad1eb1dd6d:1124747036,c553ea3f2fc133008a9350f9fbfcd6e3:307083529,faf122fb52c133006371fd4cc7a603c1:-1184055416,8effdaf7a0c1330032ca104196f4765b:-1803068202,d12e9a3702c1330078c5eb3e5bc976b6:-52991238,7d6d5a37c2c133009814fae2e227f1ce:-771682150,dd1d5a377ec133008e79ef76a778bf7b:331743265,a1fb16ffe1813300ddee3b3d04dd1480:1602320226,b8da9273d1c133000a83d6cdb1850033:-1239528313,50f81ebf4b8133008b1b51b311ab9223:-1863991856,eac7967f2b813300a354532e8484b61e:-1698851537,70a71efbc8813300ab0fbe0bb0128c2c:-1759058465,0d569ebbe28133008b60bf50b3dc3915:2071143624,37c21237fe8133000068315b825e8b4e:1937897363,c537c67be541330030f3a83240a307f6:328908947,f49360f64b493300d9b59ac34694fc72:-1026344919,3b469d1ddbc533002e0015d1855c4d52:-790535505</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_page_0674cd8237212300fdfc097973990ee1</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_page"&gt;&lt;sys_ui_page action="INSERT_OR_UPDATE"&gt;&lt;category&gt;general&lt;/category&gt;&lt;client_script/&gt;&lt;description/&gt;&lt;direct&gt;false&lt;/direct&gt;&lt;endpoint&gt;x_nuta2_nutanix_ca_Calm_Catalog_Service_Configure_Page.do&lt;/endpoint&gt;&lt;html&gt;&lt;![CDATA[&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null"&gt;
	&lt;script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js" integrity="sha384-7N66VCkbpJUVwHKCEz5qEgog94BLAJpgfXvD55ThBuHpdPrffMfva/Kl1WH8Y8FS" crossorigin="anonymous"&gt;&lt;/script&gt;

	&lt;style&gt;

		.main-list, .category-list {
		list-style-type: none;
		}
		.category-list {
		padding: 0px;
		}
		.main-list-item {
		padding: 10px 15px 10px 15px;
		display: block;
		background: #e6e8ea;
		font-weight: bold;
		border-bottom: 1px solid #d0d0d0;
		}
		.main-list-item-profile {
	
		display: block;
		background: #e6e8ea;
		font-weight: bold;
		border-style: solid;
		}

		.category-list-item{
		padding: 10px 15px 10px 35px;
		border-bottom: 1px solid #d0d0d0;
		}

		.selected {
		background: #f5f5f5;
		}

		.main-list-item:hover {
		cursor: pointer;
		background: #f5f5f5;
		}
		.category-list-item:hover {
		cursor: pointer;
		background: #f5f5f5;
		}

		.form-container {
		display: flex;
		align-content: flex-start;
		flex-wrap: wrap;
		}

		.form-display {
		padding: 5px 10px 5px 10px; 
		flex-grow: 0;
		flex-shrink: 0;
		flex-basis: 50%;
		}

		.padded-fields {
		padding: 10px !important;
		}
		.runtime {
		padding-right: 4px;
		float: right;
		}
		.title-container {
		padding: 10px;
		width: 100%;
		border-bottom: 1px solid #d0d0d0;
		background: #e6e8ea;
		font-weight: bold;
		}
		.flex-50 {
		flex-basis: 50% !important;
		}

		input[type=checkbox] {
		margin: 0px 5px 0px 0px;
		width: 16px;
		height: 16px;
		}
		.main-div {
		padding: 5px;
		}
		.form-control-feedback {
		position: relative;
		float: right;
		margin-top: -23px;
		}
		#main {
		padding-left: 0px;
		}

		.icon-cross, .icon-edit {
		font-size: 12px;
		}

		select option {
		padding: 5px !important;
		margin: 5px !important;
		}

		label {
		margin: 5px !important;
		}
		.col-md-6 {
		padding: 5px 12px 0px 12px;
		}
		.field-icon {
		cursor: pointer;
		float: right;
		margin-right: .5%;
		padding-right: 5px;
		margin-top: -24px;
		z-index: 2;
		}
		//
		//---------------------------disk related CSS------------------------------
		//

		.disk_main-container {
		padding: 15px; 
		border: 1px solid #d0d0d0;
		}

		.disk_running {
		color: #1f88df;
		fill : #1f88df;
		}

		.disk_btn-global {
		border-radius: 3px;
		padding: 6px 9px;
		margin-right: 10px;
		min-width: 70px;
		}
		.disk_btn-modal {
		border-radius: 3px;
		padding: 6px 9px;
		min-width: 70px;
		}

		.disk_disabled-option {
		color: #bbbbbb;
		}
		.disk_right-indent {
		float: right;
		}

		.disk_btn-global#addBtn {
		margin-rightL: 10px;
		}
		.disk_icon-edit#rootDataIcon {
		margin-right: 5px;
		}
		.disk_icon-edit#ebsDataIcon {
		margin-right: 10px;
		}
		.disk_runtime-checkbox {
		float: right;
		}

		//
		//----------------------------------------portlist related css-------------------------
		//


		.portlist_main-container {
		padding: 15px; 
		border: 1px solid #d0d0d0;
		}
		.portlist_running {
		color: #1f88df;
		fill : #1f88df;
		}

		.portlist_btn-global {
		border-radius: 3px;
		padding: 6px 9px;
		margin-right: 10px;
		min-width: 70px;
		}
		.portlist_btn-modal {
		border-radius: 3px;
		padding: 6px 9px;
		min-width: 70px;
		}

		.portlist_disabled-option {
		color: #bbbbbb;
		}
		.portlist_right-indent {
		float: right;
		}

		.portlist_btn-global#addBtn {
		margin-rightL: 10px;
		}
		.icon-edit#rootDataIcon {
		margin-right: 5px;
		}
		.icon-edit#ebsDataIcon {
		margin-right: 10px;
		}
		.portlist_runtime-checkbox {
		float: right;
		}
		.cluster{
		padding : 10px;
		}
		.checkbox-type-row{
		padding-top: 30px;
		}
		.checkbox-type-inner{
		display: flex;
		}
		.checkbox-type{
		margin: 5px !important; 
		}

	&lt;/style&gt;
	&lt;body ng-init="getProfileVariableData();" ng-app="configApp" ng-controller="configController"&gt;
		&lt;div class="main-div" ng-if="!showMessage"&gt;
			&lt;div ng-repeat="body in JSONdata"&gt; &lt;span class="col-md-3; main-list-item" data-toggle="collapse" data-target="#{{body.profile.replace(' ','_')}}_main"&gt;&lt;span style="font-size: 20px;font-weight: bold"&gt;&amp;#43; &lt;/span&gt;{{body.profile}}&lt;/span&gt;
			&lt;div class="row collapse" id="{{body.profile.replace(' ','_')}}_main"&gt;
				&lt;div class="col-md-3"&gt;
					&lt;ul class="main-list"&gt;
						&lt;li ng-repeat="(titleKey, title) in body.service_configuration"&gt;
							&lt;span class="main-list-item" data-toggle="collapse" data-target="#{{body.profile.replace(' ','_')}}_{{titleKey.replace(' ','_')}}"&gt;{{titleKey| capitalize}}&lt;/span&gt;
							&lt;ul class="category-list collapse" id="{{body.profile.replace(' ','_')}}_{{titleKey.replace(' ','_')}}"&gt;
								&lt;li class="category-list-item" 
									data-parent="#main"
									ng-repeat="(categoryKey, category) in title"
									ng-class="{'selected': categoryKey == selectedCategory}"
									ng-click="selectCategory(categoryKey)"&gt;{{categoryKey | capitalize:titleKey}}&lt;/li&gt;
							&lt;/ul&gt;
						&lt;/li&gt;
					&lt;/ul&gt;
				&lt;/div&gt;       
				&lt;div class="col-md-9"&gt;
					&lt;div ng-repeat="(titleKey, title) in body.service_configuration" &gt;
						&lt;div ng-repeat="(categoryKey, category) in title" ng-if="categoryKey == selectedCategory" style="display: flex;  flex-wrap: wrap;" &gt;
							&lt;div class="title-container"&gt;{{categoryKey | capitalize:titleKey}}&lt;/div&gt;
							&lt;div ng-repeat="(sysId, innerJSON) in category" ng-if="innerJSON.isHidden+''!='true'" ng-class="{'flex-50': checkUiPage(category, innerJSON.type)}" style="flex-basis: 100%;"&gt;

								&lt;div ng-if="categoryKey == titleKey+'_storage'" disk-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_port'" portlist-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;


								&lt;div ng-if="categoryKey == titleKey+'_vdisks'" vdisklist-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_images'" images-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_network_adapters'" network-adapter-ui-page="" passed-options="{{nicOptions}}" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_network_profiles'" network-profiles-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_disks'" simple-disk-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_blank_disks'" blank-disks-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_networking'" networking-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_storage_profile_data_disks'" storage-profile-data-disks-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_os_profile'" os-profile-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;
								&lt;div ng-if="categoryKey == titleKey+'_guest_customization_dhcp'" guest-customization-dhcp-ui-page="" passed-json="{{innerJSON}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;



								&lt;div ng-if="drsCheck(innerJSON.name, titleKey)"&gt;

									&lt;div ng-if="checkGuestType(categoryKey, titleKey, innerJSON.question_text)"&gt;

										&lt;div ng-if="checkUiPage(category)" class="form-group form-display" id="{{body.profile}}_{{categoryKey}}"&gt;

											&lt;div class="row" ng-class = "(innerJSON.type == 7) ? 'checkbox-type-row' : ''"&gt;
												&lt;div class="col-md-6" ng-class = "(innerJSON.type == 7) ? 'checkbox-type-inner' : ''"&gt;
													&lt;input  type="checkbox" 
														   ng-if="innerJSON.type == 7" 
														   class="form-control checkbox-type" 
														   ng-change="updateData()"  
														   ng-true-value="'true'"  
														   ng-false-value="'false'" 
														   ng-model="innerJSON.value"  
														   ng-disabled="innerJSON.isdisabled+''=='true'"/&gt;
													&lt;label&gt;&lt;strong&gt;{{innerJSON.question_text}}&lt;/strong&gt;&lt;/label&gt;
												&lt;/div&gt;
												&lt;div class="col-md-6"&gt;
													&lt;div class="runtime"&gt;
														&lt;input id="" type="checkbox" ng-model="innerJSON.runtime_config" ng-change="updateData()" ng-true-value="'true'" ng-false-value="'false'" ng-disabled="disableRuntimeConfig(innerJSON)"/&gt;
														&lt;label&gt;Runtime&lt;/label&gt;
													&lt;/div&gt;
												&lt;/div&gt;
											&lt;/div&gt;
											&lt;div style="padding: 5px 1px; margin-bottom: 10px; background-color: #e8f0fa; color: #007eff; position: relative;" ng-if="innerJSON.description != ''"&gt;{{innerJSON.description}}&lt;/div&gt;
											&lt;div style="padding: 5px 1px; margin-bottom: 10px; background-color: #e8f0fa; color: #007eff; position: relative;" ng-if="innerJSON.field_json.all_dep.length"&gt;Depends on {{innerJSON.field_json.all_dep.toString()}}&lt;/div&gt;
											
											&lt;input type="text" ng-if="innerJSON.type == 6" class="form-control" ng-change="updateData(); triggerEscript(body.profile ,titleKey, innerJSON.name);" ng-model-options="{ updateOn: 'blur'}" ng-model="innerJSON.value" ng-disabled="innerJSON.isdisabled+''=='true'"/&gt;
											
											
											
											
											
											
											&lt;div ng-if="innerJSON.type == 9"&gt;
												&lt;span class="input-group"&gt;&lt;input type="text" id="{{sysId}}" class="form-control" style="background-color:white;" ReadOnly="true" onchange="triggerChange(this.id, this.value)" ng-change="updateData(); triggerEscript(body.profile ,titleKey, innerJSON.name);" ng-model-options="{ updateOn: 'blur'}" ng-model="innerJSON.value" value="{{innerJSON.value}}"/&gt;&lt;span class="input-group-btn"&gt;&lt;button class="btn btn-default" ng-disabled="innerJSON.isdisabled+''=='true'" ng-click="GwtDTPicker(sysId, 'yyyy-MM-dd', false)"&gt;&lt;span class="icon-calendar icon"&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/span&gt;
											&lt;/div&gt;
											
											&lt;div ng-if="innerJSON.type == 10"&gt;
												&lt;span class="input-group"&gt;&lt;input type="text" id="{{sysId}}" class="form-control" style="background-color:white;" ReadOnly="true" onchange="triggerChange(this.id, this.value)" ng-change="updateData(); triggerEscript(body.profile ,titleKey, innerJSON.name);" ng-model-options="{ updateOn: 'blur'}" ng-model="innerJSON.value" value="{{innerJSON.value}}"/&gt;&lt;span class="input-group-btn"&gt;&lt;button class="btn btn-default" ng-disabled="innerJSON.isdisabled+''=='true'" ng-click="GwtDTPicker(sysId, 'yyyy-MM-dd HH:mm:ss', true)"&gt;&lt;span class="icon-calendar icon"&gt;&lt;/span&gt;&lt;/button&gt;&lt;/span&gt;&lt;/span&gt;
											&lt;/div&gt;
											
											
											
											
											
											
											
											
											&lt;div ng-if="innerJSON.type == 21" multi-select-ui-page="" passed-json="{{innerJSON}}" passed-profile="{{body.profile}}" passed-title="{{titleKey}}" passed-category="{{categoryKey}}" passed-sys-id="{{sysId}}"&gt;&lt;/div&gt;

											&lt;div ng-if="innerJSON.type == 5" &gt;
												&lt;select
														class="form-control"
														ng-change="updateData(); triggerEscript(body.profile ,titleKey, innerJSON.name);"
														ng-model-options="{ updateOn: 'blur'}"
														ng-model="innerJSON.value" 
														ng-disabled="innerJSON.isdisabled+''=='true'"
														ng-if="innerJSON.type == 5"&gt;
													&lt;option ng-repeat="option in innerJSON.options" value="{{option}}"&gt;{{option}}&lt;/option&gt;
												&lt;/select&gt;
											&lt;/div&gt;
											
											

											&lt;input type="password" ng-if="innerJSON.type == 25" id="{{sysId}}" class="form-control" ng-change="updateData(); triggerEscript(body.profile ,titleKey, innerJSON.name);" ng-model-options="{ updateOn: 'blur'}" ng-model="innerJSON.value" ng-disabled="innerJSON.isdisabled+''=='true'"/&gt;&lt;span ng-if="innerJSON.type == 25" class="field-icon toggle-password glyphicon glyphicon-eye-open spanField0" ng-click="togglePassword(sysId)"&gt;&lt;/span&gt;
											&lt;textarea type="textarea" ng-if="innerJSON.type == 2" class="form-control" ng-change="updateData(); triggerEscript(body.profile ,titleKey, innerJSON.name);" ng-model-options="{ updateOn: 'blur'}" ng-model="innerJSON.value" ng-disabled="innerJSON.isdisabled+''=='true'" style="height:200px"/&gt;

											&lt;p ng-if="innerJSON.isSupported+''=='false'" style="padding-top:5px; margin-bottom:0px; color:indianred; padding-left:2px;"&gt;Use Calm to set/edit this field.&lt;/p&gt;

										&lt;/div&gt;

									&lt;/div&gt;
								&lt;/div&gt;
							&lt;/div&gt;
						&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;
		&lt;/div&gt;		
		&lt;/div&gt;
		&lt;!--&lt;input id="hiddenFieldData" type="text" onchange="renderConfiguration('value')" &gt;&lt;/input&gt;--&gt;

		&lt;div class="main-div" ng-if="showMessage"&gt;
			&lt;p&gt;No service configuration is available for this blueprint.&lt;/p&gt;
		&lt;/div&gt;
	&lt;/body&gt;

	&lt;g:requires name="x_nuta2_nutanix_ca.Calm_Catalog_Service_.jsdbx"/&gt;
	
&lt;/j:jelly&gt;]]&gt;&lt;/html&gt;&lt;name&gt;Calm_Catalog_Service_Configure_Page&lt;/name&gt;&lt;processing_script/&gt;&lt;sys_class_name&gt;sys_ui_page&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-04 18:33:56&lt;/sys_created_on&gt;&lt;sys_id&gt;0674cd8237212300fdfc097973990ee1&lt;/sys_id&gt;&lt;sys_mod_count&gt;406&lt;/sys_mod_count&gt;&lt;sys_name&gt;Calm_Catalog_Service_Configure_Page&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_page_0674cd8237212300fdfc097973990ee1&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;priyanka.more&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-31 13:26:52&lt;/sys_updated_on&gt;&lt;/sys_ui_page&gt;&lt;/record_update&gt;</payload>
<payload_hash>61701460</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>855887e5dbcc7c103e3c6a5b8a961958</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98eb40000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Calm_Catalog_Service_Configure_Page</target_name>
<type>UI Page</type>
<update_domain>global</update_domain>
<update_guid>fbd52120abd7a0101e159d840418fa23</update_guid>
<update_guid_history>fbd52120abd7a0101e159d840418fa23:61701460,6a014656d40f6c10a9d3baad0b359ad8:2068001561,f3db67e18b8b28106089e30b42333377:375612467,d2fa6bed784b2810a043cf9f52c6f977:-1518068215,339a22e99e4728102f8eadfe2c414c3c:375612467,637ef59616b664503e2831fce63e17da:-680743232,d28b7d52bbb664502337d6b4399795e6:1582886177,2a897d527cb66450f6c5ece000a3e510:1470190965,c3b8bd12f5b6645067e87b87dfb5e676:-1231411295,979839de67766450c782cc9ce1b063bb:1922108293,13f307c663be2450952dbf77b49ab720:1954260405,81c18f8676be2450d372e416e5435b12:1605578117,addcfe8284be24500da966cb7c7c6246:-372197865,be692830aa45a4500f68f814aeecbd93:-1384084859,cf5560fccec52010a518d7c31235b484:-1734877501,a8d9592215742050a9b1bb4c965b1845:-587842733,31ef81a64d342050b7e8bbdc2d01ed0a:-714149887,aaec852664342050e5574c523fabe278:-74375463,86bb0de2cf342050e07e05e8b71a2b13:631124060,371e74a281f020505e6c2e93da70d276:-74375463,1091b8968e38ec10b4ca2cac8e2f0611:1674061561,15cca4120038ec10cde7a7c8a4e89d3f:1809757973,d176fb8aa6b0ec107aa6aa707331ddef:647982458,14663f8adfb0ec104d947fa8f48eace4:-2015512519,6423bfcedc70ec109be7921aa14b804a:-1589955894,d73b2b8e0870ec1034f0eedf3321edc7:248998827,23bc6ddf4eefd010bd1956eee8662da0:-1734877501,7bc3df07856bd010976b066f86225afb:-2050589387,fad77ae96363d010ad8683595ef75968:1341868690,2cda83500c1f1010e521d969ac03f10d:1673504656,f8aa4a5534c79c90d02fec3d7899c267:1357084433,af1ac61550c79c9012985edce2497850:-1300006584,22f94a15f2c79c90e857f8e85577fff6:342497747,c2794a154ac79c9027bc38f9b68502d0:-1547767791,8398c615efc79c90647ffc24c3cce536:853404891,1858c2151ec79c90ad7cdb33a1784911:107099676,9d2882d164c79c9086ecb9b20e0ea083:1599710106,ddf782d182c79c9022de418025514877:407344438,12c78a914ec79c90cebf230a49fed71a:710962042,d196ca913fc79c90c553155f9a63cf66:1503548789,edf5c691b3c79c90e46965238d30620a:-73560979,acd58e51a1c79c905529e9690ab964ee:2105435252,c1a54e5111c79c90d0218c5e6848473a:-50891791,5fd48e5165c79c90617ffead421997e7:157252754,e6944addb1879c9087bc018df09a2417:591103545,e844465166c79c90b05b2ee1c40fba45:1843893118,35040add36879c909d5beeeb79270643:686022663,34e3825184c79c901d00b2dac54ecd21:30240116,db510add85879c90f10cb7f7abd8c42d:-599668262,4e1e355d87879c908028c23ca932309f:1843893118,52cdfd1deb879c90eab3842ad86494ae:1949534673,e99dbd1d7b879c904c3bcfeaa26f60cc:1352772916,ed6dbd1d81879c904356e3bd5eb895c8:-1572089777,6e5c711db0879c90b2a91aa9570930ca:1352772916,f71c711de9879c9028c7dd6eb4417e17:-1802653499,0afbb9d924879c905f21476e057e5474:-1034235419,bbbb3dd9fc879c906044d2d042c645cf:781960836,4b8bb5d962879c906a9172ba5a53d2c5:-1096161193,333bf1d99c879c90e2ca4ade18a689a3:1723895717,78dafd99ad879c90a2ebc9016b4337f2:1387950099,ac9a399950879c90e9d86ff9e3e1eba4:711736458,3b3a39990a879c90ba1aa2c078262f9e:514602296,14c7b11994879c908ba0f5c13c08d797:2046711714,fe57fdd569879c906c4beec713530f17:1381071797,7ab63119b1879c9007217345acacfa63:745162003,618675d5f2879c905b8d83c0c121a392:1425017685,2d4675d5be879c909e5fbfb7fa45f375:725745635,3b55b595c7879c90630f9d6caadaf8cd:-76778372,8725fd95a8879c90a5feb4e49f8063fa:1257841751,47d4f59547879c903f87ef4a912cb616:2026259831,6844359540879c9019ae6a7b45b4714d:-706960057,b9b3b5158b879c9028032523c71b46ab:1433771031,40327d15dc879c903ee74e045be4e68f:-62475497,0c3139114b879c907f01506207fe6342:1312082648,ab3baddd92479c904286e8080ae9e8c7:-1630841730,5aba61ddb0479c90ed8507e0d93d2e2a:1931522984,63e96d9d30479c90121c75001aab1d27:-192862043,5808a95d6e479c904ce4cb949b07c3f3:-499934161,68576d1d98479c9076cde7cea309c38c:-402941848,df07215dfd479c900df202944b8a094e:89221353,cbb6651d1c479c90d52a56496e29403f:487630447,ebf4a959c2479c90fa912498fa83d3cb:1613543319,373265590c479c903119e962ce4c47c1:1361660401,8b4061196a479c906253623c2028dbb2:-1443682487,ccbf99d52d479c90bd8deafac2320f1d:1300962401,8c3f11d5ed479c9069d5ea734dfe6908:353363841,650e559594479c9051acaa625dfd0778:-643363692,cf7d1d550a479c90262526a89adc1126:1784983506,0f2dd55568479c906725d65794cc3abc:-562747625,45dc9d154d479c900a48d1f8ef0a42b4:-1655160493,cc7c1155aa479c902eb05e7b4a86345b:140327417,640c1915e4479c9024bd5b3edcc2bb28:-1845021319,697bddd120479c90293941f0854738b4:-60508819,937a19d1d5479c904fb47b222fe949ae:-1492999475,ab48dd5160479c9041f8b346e4df38f6:91518950,7ca659115d479c90584d24787126b1fe:1843893118,65a55d9d9e079c902c72b55de095b903:1476609490,043173ad6d3a14900c4bf45c85132ff0:1843893118,7d21d29df97ad090d6fac7b43ce1fc6c:-1236029866,6a86b074177e5090f90c112b64bdd204:1843893118,7d05f4fc8a3e5090492ce8486cfba61e:-1236029866,a8aa24bce1f65090840d7df2abce7220:628938032,a5a9e4b028f65090bff2a5399a3f1f1a:-131125735,363b2b673fa69850cb4c153a0ae19e29:-1236029866,b0a9e46bc5ae5850e0f61ed40e10fd91:-675980789,64486ce74dae5850e55094326115ded5:-1080433816,0e3764e721ae58503b5ff44c98639990:809126760,20b5a867eaae5850e2d07b19293ca960:-402283518,0154a467acae585032557dd7961fc6f0:-1236029866,60e78c5f052a1850abcab94b9ec31f0e:-675980789,ead5809bf92a1850bf5deef8369b1e48:1341873340,cfb70aa2216e9450445648b3b7e1b1c9:-1486429810,ff4e7daac22e9450cfffecf5ae03c687:-1196144513,eb1a312a662e94502281e34b6ee071af:1545379348,7ce821aa45ea9450870d3e9419cf6a1a:-2064080192,8febdde2abea94502a66828efc346fb4:1637117348,e7fa19e2b7ea9450d83d231a527fcb03:-1126163012,a5761770236e10504a9b335150880c24:-1486429810,0f155730e86e1050d0d300d96235b297:-2008610970,8a0457bc102e10504432d74b30b8c82d:-1655363610,423543f0f72e1050864433472b2e1be9:-1486429810,0a5147b0162e1050a05a3a68111173ec:-1990320086,051112b0d3aa1050ea3b0bb2906fd45b:-1300772780,f5d94e786e6a1050284f0e84abad89b0:-9376844,5eabc916285618109a5d1b033a12761d:-1300772780,39d9c59251561810e6b5e358f1f311e1:1703321789,8398cd5239561810033b1b901d19ce6b:1096488263,2da7c5521356181090d3ae22f854192d:1703321789,83f5cd5e701618104f26820ede264094:-999500930,69b42c46885ad410654853390b9f0740:-60381068,28422cc22d5ad4101dfcf80eea224dbc:-786649061,64e160c20c5ad41062a4f190d23b080a:-73483161,0c606882345ad4109971b6062267a7ba:-1287928241,73fe1842875ad410386c1128ac3b1c49:958240808,3c2ed002705ad410514f95fe62eeb718:2061956219,419b5c4e281ad410b062dad85e679ada:-73483161,730a904ee41ad41020637078b0516e9d:65287617,88d4544a0d1ad41073288211de5d9da6:1163425089,32d21cc6071ad4107248e856b02e5439:-1424270129,6bde44c2df1ad4104d2ace6fd270e917:1991003915,4f3d04c26e1ad410a7ad93518ceb58a6:106671804,a09bc4820b1ad410d787da4ce4add55d:586060811,e2588cce95d6d410da206ec00d21529a:-1601829932,f93d7ff59ed6d410b5f5235bb5d1ef6d:927371805,924b3bb5d6d6d4101d7665ed027c1772:1003094858,ae097b7512d6d41023be81f604889c67:1394227165,71c6fbf1dfd6d410444f321b8bd9ca9e:-1762181439,f615fb7135d6d410f037794dcdecc2b8:-1244829380,4923ff314ad6d410c5fa88a3504a8578:-331366436,4302733143d6d41042c6d8494a39abd0:-1919413771,d9b033fdfc96d410a0aa42ef1ce3529e:-1350255627,2f8eef3d7496d41058f998981d5be4d6:403515075,9f7c4b55cc773300473c8cd3e871d16f:-433660001,c466b654d7f37300274153bf1e84d6e2:-1908917021,8f130a4cd33f73000a7fc479a44e1f8b:1939657731,40928e4ce93f73001fbc60fb24de8f75:1009457763,4e220e0c4a3f7300699bb1f208f32545:1058773603,26d0420cea3f7300742166932c047822:1193689033,3a7fb988243f730061d1cba0245c9f8e:-584471997,a4fab904de3f73002108f2d7d60fe5df:-289421405,917975cc95fb73000cf46f572800cea2:810155235,f2e83d80143f730001f7ad2c61472095:-1116530413,590771805e3f7300dbbcc06c47f6c6b0:810155235,83e539805a3f7300173c12848793e709:788459873,e17575808a3f7300d961e694ba56115b:-861985649,db5d210c7ffb730051645cdb143ed020:40338463,eecced0c77fb7300c19d1eca511c5199:1631058017,984c210cd4fb730053b3707346a3d2b0:-1473144573,9a3ba1486afb7300138fd885acbc71f3:2104138490,dceae548a4fb73004c61f45676f93813:-1041869409,6d9aed8018fb7300fa6f76706c5ad6c9:1362382771,e207a14828fb730030956215b4be63ad:-1033581302,0a656984f6fb730056a18b3b2edcc163:945500502,72f46584affb73004d0cc1a0b2bcbec8:-375496210,f9d025808afb730000652ed2779c8570:1440505436,3770a900e3fb73003f4509b96503684b:869774214,2bbd55cc9abb7300850b4e9de0e070ac:-1476626876,ce4d51cc30bb73005a9a19e02c2e7855:-1270049786,bd1b5d4c7fbb7300f401a02a90e92482:1379382936,3dd9154857bb7300c166aac36abcc879:1348964986,d58959c884bb73002d6be44495b0d8db:1379382936,f1f811488fbb7300fa1d20658dc127d3:-568178092,e977613306a3730071f55eaf747f83e5:1348964986,a24f197762637300bba89c6113edc317:-1962236398,a9a4a87ba9af3300f386f19e8a2ea0f5:1322553246,e324e83bbcaf3300cb4b01a9c78a27d7:-402355412,0de36c3bb6af33004808bcd50dc66c7b:936553510,b2c2acb779af3300661f30a727be5046:-344499547,09b1acf709af33007bc8d3238cdc429a:-823488323,f077dcbb356f330039c47513362d0bd2:245133117,8835d83bd26f330040e10b00a1b4965d:-2090129595,00ac6fd7f5a33300e005d373df306c07:1331730480,d41ca7d771a3330041c33d55409610e0:-794357459,0a1b2f97a9a33300691a0b70a8672730:-415590031,4fcaab9774a33300bb44e7baddba2060:-1685567345,414ae39776a33300b37e59293e7f77d3:1551626392,c9f8eb17ada3330020343ec7c1a9c034:1851433153,d1362b5352a33300eb5bee7ce3f29795:2128988094,84b32f9fcf63330030c95513277130c4:1041856810,97d1af1b256333003892308e16a9f1ea:-1634671004,3491235b98633300eae22a750fb7bae7:2131687292,7441ed9de0a77300364c3c543a4ea7d6:-932748562,07c0255149e77300a6916bbc1a7857fc:1106550542,771ddd9d6ba77300e4e67fe1e0d07dd0:-932748562,cdfcd95d67a773003c97988bd8e97815:1106550542,b4ac55d522a7730062f932b9ae19c274:-932748562,8a4b1d5d5ba77300a10473ad10dc0bf7:-376671412,b6ead19166a77300dd60af97c1e2fa6f:-1387436917,f6aa155d0da77300db5a37a69fd38b68:-1868547018,313aa34d83a37300f6ac6f726543d75c:-376671412,4b9c8b6e4ad33300bce926dee73b8973:-1616372042,840c432e83d333007e8ad92d4df58180:-1656052348,d78b432edfd33300ff5cfc0a246e914c:94083843,07590be6ced3330026e7b0a13bf81836:-1694099245,903987aa83d3330071f3a068915f2bd1:1123384110,36f883aa20d33300086999fae334f75b:2025734672,8c688f6a0bd3330063bcd12950edfa45:1304980254,7518c76a12d33300a419142911f1facd:183894350,06e7cf2a1cd33300ee930771cb4b7940:496313777,bc174be63cd33300134bd2429858b16d:595068640,53d54f26a0d333007a45fb94a0a8675a:-482470076,e6e4cbe2cfd3330077542183b7b9f042:649687695,e684c7e2bdd33300fa293990d602e7b2:-27751104,88c78b6d9a9333000d76884bbba8f3ce:677076797,27828f290c933300dfbc0b847c826a11:1457932562,6c7fbee533933300a8686f065e556483:-1803962870,0f7560c1fe9f730010af647503b584af:-473110667,ff236cc95e5f73008490dd02b0ddafaa:-462051968,bc51e809475f7300f6aaf79d11fdbf95:1906880512,a028984dd95f7300e1ba0dfe41bb461f:720384684,cd95900d275f730081e2ecef5d0fd199:1677331371,f8059085295f7300f5b6725d920bfd8a:-274688013,2c84d0c5385f73002ae9e343e299a9e2:-1464241923,629314c5e95f73009ea34df3a26b2abd:-253184638,bad014c54c5f73009d411c9cd427837d:-1690576844,e8bd8acfb14fb30013fbebbbfa3c5f1e:1620018617,215de42e2ec37300acc7114d7154abcf:1531455197,662d282ee9c373004367b298f69fc30b:885420764,b80de06e11c37300c6d493beb13153e3:1531455197,7a6ca4aa2dc3730050c96913fed6396d:1857961979,4a44a0e6b4c37300b78d0a43d412a1f0:1865507068,a52420e6a7c37300e2552324b5cf6375:-1550678587,2be1ac26f8c37300167b78c53462ec92:76960500,735f771e734373007b11a26c8607505f:-487024420,213f739ace4373008338181ebaf17f8a:-2010320732,be6bff5af74373008da5ababdf28a647:-487024420,455a771aa0437300fa499ac8fc91dce3:436907167,69887392c1437300e4722269468233a7:-2010427703,7841fb1270437300f2483d40b705b4bd:322430345,255f6b1250437300d181664117fcb450:-2145004629,47fe23dea903730052d74873352f33b9:-362571169,95ae2bde6a037300d1e8047c84f624b2:556328080,b2ada3de1303730019592c377bd4b1ff:1291345530,4a9d63dedd03730034bdba712d4a431d:556328080,321d2b9eda0373007697ef3f564836f4:-56841404,a8bceb5e82037300f3577261cdce30fe:1319639342,478baf1e1b03730065fd812bb8e1f008:247564019,7dd9ef9acd03730008499b07a70ffbfb:2088851976,b9082f1abd037300b54f6d16997ca736:-179555491,4c426356000373003897723b5dcec040:-674532625,df022792250373003ae0284ff1a6f37d:-1366927017,31d1ab1616037300ed6db6af2964bb68:-975161551,c69027d21103730075933a5ba9fe4cd2:987425540,f970e3d21b03730017961ea4ef64d698:776558301,b730e7d29e037300f29f0dcfc69bb104:-1972149292,87ef53d2da0373005d9d091ef752d45c:-917710985,54bd9fde79cf3300729d32bfadedb450:-1158656232,cf0d5f9e4dcf3300391d5f858c96bc73:-2048473765,b37c17da66cf33000b30f48b4e49fe76:1842424231,bd9a9b96fccf33002129a628d0b1758a:-503941260,2689d392c3cf3300fa59ad9fe23c37dd:1856047930,67c10f4a0607330047f74e4eda51754e:1372528929,8439fa0ed0c3330003425125d5b3c4a6:-1142174457,e88adb491a837300eba034af8e5ed1c8:1372528929,9bfa43c9fc437300a4550dbc98f77934:1815609057,cd990b09e2437300ed8689fc3043c661:-207984444,30150305544373003ec4e1e7aeed8fc1:1793639517,61e5ea49cb8f3300fa1d5dfb60eec742:-941150021,085b623094873300021af30bd7276b68:1793639517,3c326ab8f1473300ef1834700d5a591d:957284844,ce80e2781d473300ebc09ff91cfe4638:1793639517,00be1ef4464733008e9f81e0a2e32d3e:-2130964682,8ffd92f4c1473300f35e82469f7d7cdc:322530785,1bbdd670d2473300f4f72e875073baa1:-1541808076,e1a19ebc70073300b09ec1b2c7e92ead:-116546371,143f867c2807330083893001927362f3:479349802,cabe4e78b507330088b521725cc44d76:-2106536365,d4ec0ef8580733006d7319b1c0fb29ed:1442125660,438b8ab8930733003db608289acc50cb:593006036,b46b4ab83c073300402abb64eb8710e5:1489998944,f71b4ab8ad073300573b7e19c84ce1dc:-566361934,baea4678fb07330026819ebb8a48134a:-2111555487,c9ca02b8f70733008df06d5a90a0d9f3:314556092,892a0678910733004ffd57d7125ae38e:-1906369104,b95846f4eb0733008fafc201dac0ee82:89914186,2ae70af45a073300cb1770ca9a236db6:-1375613383,d2f7099083323300fc2a441a7aa7d8bd:-210017356,47f749799ee233004b7afa6d30742136:1018725101,4c4cfb0b7cd233001f26a69dba117c41:-1454692358,822cf307c6d2330046f1ffb0373cac6d:-78019617,ffeb3b0bb3d2330021ec40f9498764ee:1671121336,5f4c8af2a19233003fe0f090e3c7fbbf:919980690,8858120caffbf3002219be696ddd661f:1435943315,5c76a60404257300b130bc45c8645690:-1930044465,8e95e2c02a257300bd34e3efe7c6195e:177756231,a8336280872573004e3cb5b1163a326f:1284415860,b5e5ca4062e17300f1178e8466036134:1150194627,a075ce0059e17300c046d7c2ca68aeb6:-2029685878,4b74ca00bfe1730012b75e96048d41cd:1270057383,c654ca008fe17300598fdd2843e8eba5:-941046627,7bf30a002de173002839ac2e53b39127:1322801447,61d38acc67a173004b5f47ed0d2d209f:1718303857,fcb346009ce173003288a85fc6d1f00b:-194259831,7c93820006e17300494318cbb77c1d40:-1838908637,0a730e4cc2a17300d556ac161985061f:2143072621,3723ca4c8da17300184bcd5fbdec1cc7:-1012092489,68c246cc01a17300729b822c37c35da7:-1479183020,0f5246cc78a173002c456e8f13faefa3:1688848288,27804e0ca3a1730020e73c9bf052c10b:1671518616,47c681442c21730020a7b3b2bf403f0d:292814524,5096626926457300e97c8b5ac41062c2:-1190996328,3bf78625f9057300fcff3b12d31faa69:939088020,05b70e259e05730058ee4481cacae44a:-1528615204,cd678625b905730023fb949c83270a0d:-1321390948,02c5c2e13e0573003e2d975228268e10:534416695,c02542e14005730080a5b9af66d012a1:-449214937,c24406a13e0573000f272149c75c81e1:-668313499,15424e215b05730089775a6f6b641607:-1578237688,80b1422586c173002afc983a9cd4e622:1370769361,bbf3c49963c13300935dd205de399c32:-1517331853,88438c19cfc13300e84f57efeaa9ce63:-1672131343,ca22d6983c45f300f9344bb6708766a1:1634854277,55e70618c945f300f91f300ef4026d85:-1128886547,b0e0210b2ef03300952980d919a018be:1212416493,004e9645b6b43300d2eb17eeea22c8c0:315769418,a718653c4bb0f30030eeae54eea0c443:379397694,ad20017417fcb300cb3763c389ee524b:-1529489494,429c34342dfcb300d664486b2536e818:599429950,5cdab87021fcb300dd02b679d9add73e:973701326,2b492bac4bf8b3009afe03fddf90323f:-716944576,90c8a3ac92f8b30023dd28f0a6da2d3f:-369211832,5c38e72cd6f8b30020a8bd69e858dcab:1640478926,c920f2ec6238b300bd3721484d9881a1:1782195884,37a08220e438b300067a3085d44e3c09:2045597838,d2f23c242c34b30058d40db98d655df8:1455227097,dfd27c644a34b3003a5d88fb53ce312d:587129199,12a234247934b300cae2b73b7a62be32:344104873,baef44acefb0b300ad3873c8898e540c:1492685751,b55f842c67b0b300f86c5fb76255b248:2054600081,cf7e046854b0b300fa8c4ac447b2c5c1:1551082909,110600686cb0b300df04e6b784bf5d9a:-742952729,d7a54428deb0b3004dc83a48ca7d7e45:-1970203100,6685002830b0b3005e8a48484a2ddd28:1476211192,aca448e439b0b300d1e93b657891b79d:420688165,43748ce4c5b0b3002e89b3d9d3845495:-2092090435,652488a422b0b300ccceaea42a806ab9:1838228667,c204cca4eeb0b300ebc6be9631992f48:1181433321,74e20c2460b0b300f32c8e24c955adb0:1196122164,bf62402008b0b3006ee19d7647f83359:-355180334,e279817889d8b3007dde6b54cd8100da:-316173579,e696ea78c800730057a5c53f265bef50:-480325199,7d85aa7848007300bd1acf12a3e334ce:-398118677,c066e5248ec033008b4e62076012f4d9:1644296922,7cb4ee8320c263002a679cf280688721:-979293687,bac3a683e9c263006c4403a3e58e0038:1460994169,f70631dedf8ea300adcf29b8c888c007:-815931540,e1b5fd9ea88ea3007abd86cdc0739bdd:565309812,d28be19acc8ea300ad3314fe15614c67:1626135489,925b6d5abc8ea300d9ad9248568637cc:-706167089,4e1b695ad68ea300545f0e299a991cdd:-1730998341,e0c9ed1a608ea3000d134a6c05410459:1804517425,83a9a51afe8ea3003124b0d6e0ce3cc5:512172942,8c892d1af98ea300ce98d230b3312064:-1902437976,e3c62d96598ea300b81d8498319baf6c:-211606353,86326192e38ea300f48f81608a4e94a5:-647425464,ab7ff49ebd0ea30077acf2a229ef4498:-548017187,494fb09e820ea300d51979a606bdf831:-1190440953,491ffc5ee50ea3000370fa7a02dcf904:-713294717,15eebc5ef20ea3008ac6cf0663bbc219:1068104329,c8aeb85ec20ea3007192df3a4a6fd2c8:1518525367,3de398f950c26300292365fed875b3e4:-2115320693,a816c4f162c26300eee9516f7e6c0ab2:518482975,78f4c8b153c26300ab8fd083997da101:-1810709761,a5b4c0f1e2c26300a425d1036ec9de96:1964638677,6793c4f5588263000a3e959ebac40244:311948352,043fa3e5048263005bf8886431154949:842935318,060f6b25ef826300effe89eb4c30f7bd:-1773827084,d6eee3a59f82630087cd3476f3885252:-1967649767,244ce72592826300fa6ba2e3b5471997:-184985644,99daa7a111826300f60a6898daf408be:-1994193814,fda727a1018263008cb5001a0aa3fdf0:-1478094041,e447af21f5826300192db3d43a2e3768:1774018415,aec6e3ede4426300d09b84b6bc62a97c:1308322844,7552abad124263003cf87dbe41aa3ee2:-625325075,2281abadca42630092fe81a08debf5dd:656584835,3751af6d3e4263002825f84d3b000664:-1295848349,8c31a76dce426300742b3aa498e080bd:-1048391075,5670ab6d1b4263004c4d3213679ffc52:-1849624549,2f40e36d0442630017dbd801f68c340d:948253401,8a00a36d96426300e96ff92e2aeef13a:1939057409,10cf936d7b4263007aff4171d2f33167:549180925,554f136d9b4263007671526fe956a1e0:1270753552,b977c7a932026300da6b44b779e7e990:-1172601953,6c96032d4a0263002b25ac32bb5b7583:1112976022,c214076950026300573ad8b712e86a3c:434243837,42048f299802630096de207186a0372b:206529744,3f714f650b02630074e8cc4909438957:-1772247384,4e214b2973026300ea737bc2da6924db:-1105215630,07d04ba5e4026300f27b9b914a745339:1915231856,e3c047a55c026300a72317e95a427fe0:-366406921,149e36a55702630027081154546ac3dd:-2035639636,648ef6a5f50263006bb4bfbd345e53ae:46148585,2fbdbe65c202630063abeeede6addfb3:-1113794032,e1dc766566026300c05c8e949632f4a8:46148585,507c3a654802630019a944e1013533c2:-1094292730,57ebb26539026300e432ac0074d340c4:312421022,4fd69ae5d48e23000b8617e403767c6a:-847537540,840bad11c042ab00c3d4ea6305a1cec1:1753257072,0cca69115e42ab007273edc4cdb9d321:1361916209,ab7a6911d742ab00132944ef2c0c831d:1330171682,833aa1118642ab00aabbf53c5d9dac2e:1346889486,92c921113b42ab00359520f8b3896948:-473470872,6289e5dd3c02ab005bfca04b80a43afc:-1101381661,cd09e1ddec02ab00087a08568cfe623c:531005527,e978a99d9802ab004d69b0be33fc54e1:1843861974,6228a99db102ab00944634590370515f:-2000710124,cf08659d8802ab00e14ca322c74c0866:-1767497457,8bc7e59df602ab00d8735ec521fcc298:-1551564350,f6f62d5d6202ab00225b0864f2b17909:-940443556,4c56ad1d8c02ab00aaec430ded0f0efb:284649816,fa06ad1dad02ab00996c0591d74e1962:-326190843,498569d93e02ab004105cd85b2466ceb:-417696307,a26469d9e202ab00eb745b709893d9e2:-597260906,92046d591302ab006a509ff69ba14135:-579921708,3eb261d58f02ab009f31971a47cd4646:-969405013,88e1a1157702ab007364c01c954e4c98:476937540,856125153302ab0005dfd36f0b739c49:-1501581925,f001a1551c02ab008910e5d0fe65eab1:-1624963105,6500ad912602ab00e78e986007e26b86:1883440252,2d8f91d1f602ab008ad25434e076501b:1401022044,9beb1d51f002ab009342b5247656cb91:1668133639,3eba59111302ab00768969c220689298:-1431375636,21b95fc152ca6b00f4686011fc6901a5:-363175285,00299b059cca6b00edb129f3e2b831bc:135202194,5a789b05eaca6b009a00c3c7ec025c56:-1789166801,f0185b81eaca6b000fe7f65d15396514:1722406242,1617df81a0ca6b0047027398260f148e:1362757399,4fa6df81dcca6b00212b6dfaa820a587:-1623771315,42f45b81bbca6b002f071decc32b8228:1093765199,ccc4d7810aca6b00725ef1300a44b836:-1254061039,18f317cd0d8a6b0070134c913a7028d0:1713451452,ca839b8d3e8a6b0029bf149e2c77b7e6:1198982730,73c29b01beca6b002848020551c671ea:-263984496,24f1970124ca6b006c1ca7e0374fa7ac:1698234037,3b919b019aca6b0083bd6f311b11f0e1:1657252494,4221df4d958a6b0017ed2295f5c8ea6d:808785092,544516c9290a6b00be499c462f475a9a:421445119,6e34d689cf0a6b002a72256a86da63ba:122196351,40129a09cb0a6b00706c18d8ffb5bdb2:-93075235,96a09685d90a6b000c2e83d6cd7c0caa:-662494696,c2feca85c10a6b00b71297e3b90368c0:-486359744,3bed8e45310a6b008b339f8d0d8530be:435450673,a50bdd819c866b00bd2765c6b13a9925:684206000,766a5d415d866b003020070aa3d9a440:167884461,84e71501b7866b0080a10dd33cc6f4fe:-207607853,9257d50132866b0071b70cccb75fb04b:381664355,6425158d0f466b00f036081e0fe53aca:435450673,8334594d2f466b00666349a6d5058769:-795769801,f6e21d0dc8466b0043279f26c7aa6048:1691595497,6c22550d0e466b00bb253731e4740c75:946117480,46c115c92e466b0077b78c5964ba46c8:1642969819,122f4949ab466b00ba5af6aa4dfe977b:-1568173460,60de894997466b00dc13d1043551da26:-909866542,1a5e494997466b00329fb48a4e45be1d:-2083623428,4a3e8d09e0466b000e4bc088dc20c423:1954142219,31fc010935466b007355c4446728c8e6:506782013,5a994d457b466b008b730abb59f46297:1776015542,344785c1d6466b00d8201c2584a0459a:-2135772135,66860d81f2466b000817d19c39770bd9:1366865144,c306c9811c466b0041b1dcf3f60aa4c8:-1555136335,42d58981b9466b00f8510c71a3452833:-1744082405,4643b40539066b00af5b520b29633ccb:56301442,c023bc0589066b0042f5537241d6a3e3:259331953,f7627005f6066b001562a4abcb4a719c:-719880797,9b71b8c1c5066b00e3356089aa60827a:-1395272590,9fd0b88181066b00709e39b3c6eedd4e:82620404,39707c41b5066b00a6a4850edcc75ce1:1283486602,96296930300e2b00584febe5f707d221:1099610770,55f8e930c30e2b00923e75c2f482ac62:-1370085080,20b725708b0e2b008ef37fceb93d3b0b:437817550,64b6a1fc2cca2b003566b965aa413111:-986222930,6e842dbcb9ca2b00b1569e93eb796d7f:9520433,6f5329bcbdca2b005554519e27b977b2:374144282,91e22d381cca2b0081e3558e70dc755b:-1545165919,dfc995389cca2b00e0812ad813a96415:-21460014,2019d5b4a0ca2b0076b8b99836188bc1:2008235786,bcf84e105806e700099983c227a75bb7:9520433,089dbd540ec2e700713341e57ae06849:2045720534,8a9cb154e0c2e700d0cbaec492705205:9520433,52c5f510f4c2e700e4e9c2de4af969c8:1528149493,8a95399c5282e700f6c3d4ee4e18f39a:-1447656001</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_fb3d3ad72f7e6810da242f2ef699b6da</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="INSERT_OR_UPDATE"><cleared>false</cleared><disabled>ignore</disabled><field>calm_admin_password</field><mandatory>false</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-15 12:20:44</sys_created_on><sys_id>fb3d3ad72f7e6810da242f2ef699b6da</sys_id><sys_mod_count>0</sys_mod_count><sys_name>calm_admin_password</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_fb3d3ad72f7e6810da242f2ef699b6da</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-15 12:20:44</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Toggle credential system">48918ffe1b1ecc50ac43877ddc4bcb96</ui_policy><visible>false</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>418828266</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>855887e5dbcc7c103e3c6a5b8a96195b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e0b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>calm_admin_password</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>7e4dba97f57e6810145f4a1f1a399b5b</update_guid>
<update_guid_history>7e4dba97f57e6810145f4a1f1a399b5b:418828266</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_calm_saas_and_servicenow</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="calm_saas_and_servicenow" table="x_nuta2_nutanix_ca_calm_plugin_configuration"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;Connect to Calm on Public Cloud&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;calm_saas_and_servicenow&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value=""&gt;boolean&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;40&lt;/max_length&gt;&lt;name&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-02-02 08:51:37&lt;/sys_created_on&gt;&lt;sys_id&gt;3a41c70e2f466410152959ab2799b68c&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Connect to Calm on Public Cloud&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_calm_saas_and_servicenow&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-10 11:43:57&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1159080199</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>8558cb25dbcc7c103e3c6a5b8a96199b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d5a0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Plugin Configuration.Connect to Calm on Public Cloud</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>ee68f83c96d22c1073c230c1da0170cf</update_guid>
<update_guid_history>ee68f83c96d22c1073c230c1da0170cf:-1159080199,cc44038aca8664107bf507982a83383e:-1345024965</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_scope_privilege_beac7cd01b0b64107f2a8515ec4bcbc8</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_scope_privilege"><sys_scope_privilege action="INSERT_OR_UPDATE"><operation>execute</operation><source_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</source_scope><status>allowed</status><sys_class_name>sys_scope_privilege</sys_class_name><sys_created_by>system</sys_created_by><sys_created_on>2021-03-18 05:32:40</sys_created_on><sys_id>beac7cd01b0b64107f2a8515ec4bcbc8</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CatalogClientScriptJS.appliesToCatalogItem</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_scope_privilege_beac7cd01b0b64107f2a8515ec4bcbc8</sys_update_name><sys_updated_by>system</sys_updated_by><sys_updated_on>2021-03-18 05:32:40</sys_updated_on><target_name>CatalogClientScriptJS.appliesToCatalogItem</target_name><target_scope display_value="Global">global</target_scope><target_type>scriptable</target_type></sys_scope_privilege></record_update>]]></payload>
<payload_hash>284835233</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>8558cb25dbcc7c103e3c6a5b8a96199e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e4c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>CatalogClientScriptJS.appliesToCatalogItem</target_name>
<type>Cross scope privilege</type>
<update_domain>global</update_domain>
<update_guid>7aac7cd00f0b64105240bcdb7196dac9</update_guid>
<update_guid_history>7aac7cd00f0b64105240bcdb7196dac9:284835233</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_2f2b341e37f52300fdfc097973990e10</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Nutanix_CreateCatalogVariables&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Nutanix_CreateCatalogVariables&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Nutanix_CreateCatalogVariables = Class.create();
Nutanix_CreateCatalogVariables.prototype = {
	initialize: function() {
		this.start = 110;
		this.end = 500;
		this.order = 111;
		this.subContainerEnd = 160;

		this.fieldLabels = JSON.parse(gs.getProperty('x_nuta2_nutanix_ca.nutanix.fields.labels.mapping'));

		this.exclusionList = gs.getProperty('x_nuta2_nutanix_ca.exclusion.list')+'';
		this.disabledFields = gs.getProperty('x_nuta2_nutanix_ca.disabled.fields')+'';
		
		this.integerValidation = gs.getProperty('x_nuta2_nutanix_ca.integerValidationList')+'';
		this.boolValidation = gs.getProperty('x_nuta2_nutanix_ca.booleanValidationList')+'';
		this.profileUUIDSysIDRel = {};
		this.appUtil = new Nutanix_Calm_Utils();
		this.logger = new Nutanix_Calm_Logger();
		this.diffVar = new Nutanix_ImportApplicationProfiles();
	},
	_invalidateCatalogItem: function(CatSysId) {
		var grCat = new GlideRecord("x_nuta2_nutanix_ca_nutanix_runtime_configuration");
		grCat.addQuery("blueprint", CatSysId);
		grCat.query();
		while(grCat.next()) {
// 			grCat.state = "inactive";
// 			grCat.update();
		}
	},
	
	_checkServiceVarSync: function(cat_sysID, variableList, serviceName, profileUUID, serviceSysId) {
		
		var arr_var_current = {};
		var arr_var_updated = {};
		
		var grCatVar = new GlideRecord(this.appUtil.configuration.table.variablesProperties+'');
		grCatVar.addQuery('service_name', serviceSysId + "");
		grCatVar.addQuery('type', 'Service');
		grCatVar.addQuery('catalog_item', cat_sysID + "");
		grCatVar.query();
		while(grCatVar.next())
			arr_var_current[grCatVar.uuid] = {"variable": grCatVar.variable + "", "var_name": grCatVar.variable.question_text + ""};
		
		for(var i in variableList)
			arr_var_updated[variableList[i].uuid] = {"var_name":((variableList[i].label+'').trim() != "") ? variableList[i].label+''  : variableList[i].name+'', "var_value": variableList[i].value + ""};
		
		for(var uuid in arr_var_current) {
			
			if(!(uuid in arr_var_updated) || (uuid in arr_var_updated &amp;&amp; (arr_var_current[uuid].var_name + "" != arr_var_updated[uuid].var_name + ""))) {
				
// 				this._invalidateCatalogItem(cat_sysID);
				
				var fieldGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
				if (fieldGR.get(arr_var_current[uuid].variable + ""))
				{	
				fieldGR.cat_item = "";
				fieldGR.update();
				}
				var grCatVarDel = new GlideRecord(this.appUtil.configuration.table.variablesProperties+'');
				grCatVarDel.addQuery('catalog_item', cat_sysID + "");
				grCatVarDel.addQuery('uuid', uuid + "");
				grCatVarDel.query();
				while(grCatVarDel.next())
					grCatVarDel.deleteRecord();
			}
		}
		
	},

	processCatalogVariables: function(current){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables.processCatalogVariables");
			this.logger.info("Catalog Variable creation started.");
			var cat_sysID = current.parameter+'';

			var profileGR = new GlideRecord(this.appUtil.configuration.table.catalogProfileRelation+'');
			profileGR.addQuery('catalog_item', cat_sysID);
			profileGR.query();
			while(profileGR.next()){
				this.profileUUIDSysIDRel[profileGR.application_profile.uuid+''] = profileGR.application_profile+'';
			}

			this.logger.debug("Mapping for profile uuid and sys_id created. Relation:- "+JSON.stringify(this.profileUUIDSysIDRel));

			var parsed = JSON.parse(current.payload+'');
			this._createDefaultVariables(cat_sysID);

			this.logger.debug("Created default project, appName and profile variables on catalog item.");

			var filterJSON = this._filterJSONDatatoService(parsed);
			this.logger.debug("FilteredJson received for parsing:- "+JSON.stringify(filterJSON));

			
// 			var createSrvcVarScpt = new Nutanix_CreateServiceVariables();
// 			createSrvcVarScpt.createServiceVariables(filterJSON, cat_sysID);

			
			this._createContainerStartandEnd('Service Configuration', cat_sysID, 100, 50000, 'normal');

			this.logger.debug("Created Service Configuration Container.");

			this.start = 110;
			this.end = 500;
			this.order = this.start+1;
			this.subContainerEnd = 160;

			//var projectDetail = parsed.project_list;
			
			for(var i in filterJSON){

				var service = filterJSON[i];
				var serviceSysId = this._createContainerStartandEnd(service.name, cat_sysID, this.start, this.end, 'normal');

				this.logger.debug("Created Container for "+service.name);

				this.start = this.end+10;
				this.end = this.end+500;

				var service_name = service.name.toLowerCase().replace(/ /g, '_'	);

				this._parseSubstrate(service.substrate, cat_sysID, service_name, serviceSysId);
				this._parseProfile(service.profile, cat_sysID, service_name, serviceSysId);
				if(parsed.service_definition_list[0].uuid+"" != "singleVm-default-service-uuid")
					this._parseVariables(service['service'], (service.profile)?Object.keys(service.profile):Object.keys(service.substrate), cat_sysID, service_name, serviceSysId);

				this.order = this.start+1;
				this.subContainerEnd = this.order+50;
			}

			this.logger.info("Variables creatios completed.");
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables.processCatalogVariables :- Exception caught during processing catalog variables. Error :- "+e);
// 			this.logger.error("Exception caught during processing catalog variables. Error :- "+e);
		}
	},

	_parseSubstrate: function(substrateList, cat_sysID, service_name, serviceSysId){

		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._parseSubstrate. Parsing substrate fields.");
			
// 			var tmpOrder = this.order;
			
			for(var k in substrateList){

				var substrate = substrateList[k];

// 				this.order = tmpOrder;
				
				this._createSubstrateFieldCreateSpec(substrate.create_spec, cat_sysID, k, service_name, serviceSysId, substrate.editables.create_spec);

				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.block_device_map){
					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.block_device_map)?substrate.editables.create_spec.resources.block_device_map:'';

					this._createSubstrateFieldStorage(substrate.create_spec.resources.block_device_map, cat_sysID, k, service_name, serviceSysId, edit);
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.disks){
					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.disks)?substrate.editables.create_spec.resources.disks:{};

					this._createSubstrateFieldDisks(substrate.create_spec.resources.disks, cat_sysID, k, service_name, serviceSysId, edit);
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.blankDisks){
					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.blankDisks)?substrate.editables.create_spec.resources.blankDisks:{};

					this._createSubstrateFieldBlankDisks(substrate.create_spec.resources.blankDisks, cat_sysID, k, service_name, serviceSysId, edit);
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.networkInterfaces){
					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.networkInterfaces)?substrate.editables.create_spec.resources.networkInterfaces:{};

					this._createSubstrateFieldNetworkInterfaces(substrate.create_spec.resources.networkInterfaces, cat_sysID, k, service_name, serviceSysId, edit);
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.disk_list){
					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.disk_list)?substrate.editables.create_spec.resources.disk_list:{};

					this._createSubstrateFieldDiskList(substrate.create_spec.resources.disk_list, cat_sysID, k, service_name, serviceSysId, edit);
					
					
					if(substrate.create_spec.resources.disk_list[0] &amp;&amp; Object.keys(substrate.create_spec.resources.disk_list[0]).toString().includes('data_source_reference')){
						var bootIndex = (substrate.create_spec.resources.boot_config &amp;&amp; substrate.create_spec.resources.boot_config.boot_device &amp;&amp; substrate.create_spec.resources.boot_config.boot_device.disk_address &amp;&amp; substrate.create_spec.resources.boot_config.boot_device.disk_address.device_index+'') ? substrate.create_spec.resources.boot_config.boot_device.disk_address.device_index : -1;

						this._createSubstrateCreateImage(substrate.create_spec.resources.disk_list, cat_sysID, k, service_name, serviceSysId, edit, bootIndex);	
					}
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.nic_list){
					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.nic_list)?substrate.editables.create_spec.resources.nic_list:{};

					this._createSubstrateFieldNicList(substrate.create_spec.resources.nic_list, cat_sysID, k, service_name, serviceSysId, edit );
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.nw_profile){
					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.nw_profile)?substrate.editables.create_spec.resources.nw_profile:{};

					this._createSubstrateFieldNwProfile(substrate.create_spec.resources.nw_profile, cat_sysID, k, service_name, serviceSysId, edit);
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.categories){

				//	var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.categories)?substrate.editables.create_spec.categories:{};
					
				//	this._createSubstrateFieldCategories(substrate.create_spec.categories, cat_sysID, k, service_name, serviceSysId, edit);
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; (substrate.create_spec.resources.guest_customization || substrate.create_spec.resources.guest_customization+''=='null')){

					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.guest_customization)?substrate.editables.create_spec.resources.guest_customization:{};
					
					this._createSubstrateFieldGuestCustomization(substrate.create_spec.resources.guest_customization, cat_sysID, k, service_name, serviceSysId, edit, substrate.create_spec.type+'');
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.guestCustomization){

					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.guestCustomization)?substrate.editables.create_spec.resources.guestCustomization:{};
					
					this._createSubstrateFieldGuestCustomizationGCP(substrate.create_spec.resources.guestCustomization, cat_sysID, k, service_name, serviceSysId, edit, substrate.create_spec.type+'', substrate.create_spec.resources.tags);
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.os_profile){

					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.os_profile)?substrate.editables.create_spec.resources.os_profile:{};
					
					this._createSubstrateFieldOsProfile(substrate.create_spec.resources.os_profile, cat_sysID, k, service_name, serviceSysId, edit);
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.storage_profile){

					var edit = (substrate.editables &amp;&amp; substrate.editables.create_spec &amp;&amp; substrate.editables.create_spec.resources &amp;&amp; substrate.editables.create_spec.resources.storage_profile)?substrate.editables.create_spec.resources.storage_profile:{};
					
					this._createSubstrateFieldStorageProfile(substrate.create_spec.resources.storage_profile, cat_sysID, k, service_name, serviceSysId, edit);
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.sshKeys){	
					
					this.order = this.subContainerEnd+2;
					this.subContainerEnd = this.subContainerEnd + 2 + 5;
					var categorySysId = this._createContainerStartandEnd('SSH Keys', cat_sysID, this.order, this.subContainerEnd, 'normal', service_name);
					this.order = this.order+1;
					
					var metaData = substrate.create_spec.resources.metadata.items;
					var blockValue = false;
					
					
					for(var data in metaData)
						if(metaData[data].key+'' == 'block-project-ssh-keys')
							blockValue = metaData[data].value+'';
					
					this._createField('block_project_wide_ssh_key', blockValue, cat_sysID, this.order, service_name, k, serviceSysId, categorySysId, true);		
					
					
					this.order = this.order+1;
					
					var editable = substrate.editables.create_spec;
					
					var sshKeys = substrate.create_spec.resources.sshKeys;
					
					for(var key in sshKeys)
						this._createField('key_'+key, sshKeys[key], cat_sysID, this.order, service_name, k, serviceSysId, categorySysId, (editable &amp;&amp; editable.resources &amp;&amp; editable.resources.sshKeys)?editable.resources.sshKeys[key]:'');		
				
				}
				
				if(substrate.create_spec &amp;&amp; substrate.create_spec.resources &amp;&amp; substrate.create_spec.resources.serviceAccounts &amp;&amp; substrate.create_spec.resources.serviceAccounts[0]){	

					this.order = this.subContainerEnd+2;
					this.subContainerEnd = this.subContainerEnd + 2 + 5;
					var categorySysId = this._createContainerStartandEnd('API ACCESS', cat_sysID, this.order, this.subContainerEnd, 'normal', service_name);
					this.order = this.order+1;

					var editable = (substrate.editables &amp;&amp; substrate.editables.create_spec)?substrate.editables.create_spec.resources:'';

					this._createField('service_account', substrate.create_spec.resources.serviceAccounts[0].email, cat_sysID, this.order, service_name, k, serviceSysId, categorySysId, (editable &amp;&amp; editable.serviceAccounts &amp;&amp; editable.serviceAccounts[0])?editable.serviceAccounts[0].email:'');
					
					this._createField('scopes', (substrate.create_spec.resources.serviceAccounts[0].scopes.length==10)?'Full Access':'Default Access', cat_sysID, this.order, service_name, k, serviceSysId, categorySysId, '');
				}
	
				
				this._createSubstrateFieldReadinessProbe(substrate.readiness_probe, cat_sysID, k, service_name, serviceSysId, substrate.editables.readiness_probe);
			}
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._parseSubstrate :- Exception caught during parsing substrate. Error :- "+e);
// 			this.logger.error("Exception caught during parsing substrate. Error :- "+e);
		}
	},

	_createSubstrateCreateImage: function(diskList, cat_sysID, profileUUID, serviceName, serviceSysId, editables, bootIndex){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateCreateImage. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Images', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			var i = 0 ;
			
			for(var k in diskList){
				
				if(diskList[k].data_source_reference){
					
					this.order = this.order+3;

					this._createContainerStartandEnd('Image Device '+i, cat_sysID, this.order, this.order+2, 'normal', serviceName+'_'+k);

					this._createOnlyField('image', diskList[k].data_source_reference.name, cat_sysID, this.order+1, serviceName+'_'+k, 6);
					this._createOnlyField('device_type', diskList[k].device_properties.device_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
					this._createOnlyField('device_bus', diskList[k].device_properties.disk_address.adapter_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
					this._createOnlyField('bootable', (diskList[k].device_properties.disk_address.device_index+''==bootIndex+'')+'', cat_sysID, this.order+1, serviceName+'_'+k, 7);

					diskList[k].runtime = (editables[k])?editables[k]:{};	
					diskList[k].disabled = (editables[k])?editables[k]:{};	
					diskList[k].bootable = (diskList[k].device_properties.disk_address.device_index+''==bootIndex+'')+'';

				}
				
				i++;
			}
			
			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(diskList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateCreateImage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Image. Error :- "+e);
		}

	},
	
	_createSubstrateFieldDiskList: function(diskList, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldDiskList. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('VDisks', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			for(var k in diskList){
				this.order = this.order+3;

				this._createContainerStartandEnd('vdisk', cat_sysID, this.order, this.order+2, 'normal', serviceName+'_'+k);
				
				if(diskList[k].adapter_type){

					this._createOnlyField('adapter_type', diskList[k].adapter_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
					this._createOnlyField('device_type', diskList[k].disk_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
					this._createOnlyField('size', diskList[k].disk_size_mb, cat_sysID, this.order+1, serviceName+'_'+k, 6);	
					
				}else if(diskList[k] &amp;&amp; diskList[k].data_source_reference &amp;&amp; diskList[k].data_source_reference.kind=='image'){
					
					continue;
					
				}else{		
					
					this._createOnlyField('device_type', diskList[k].device_properties.device_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
					this._createOnlyField('device_bus', diskList[k].device_properties.disk_address.adapter_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
					this._createOnlyField('size', diskList[k].disk_size_mib, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				}

				if(!diskList[k])
					diskList[k] = {};
				
				diskList[k].runtime = (editables[k])?editables[k]:{};	
				diskList[k].disabled = (editables[k])?editables[k]:{};	
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(diskList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldDiskList :- Exception caught during creation of Substrate Field Storage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},
	
	_createSubstrateFieldStorageProfile: function(storageProfileList, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldStorageProfile. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Storage Profile', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			
			this._createField('use_custom_image', (storageProfileList.image_details.use_custom_image+''=='true')?'true':'false', cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editables.image_details)?editables.image_details.use_custom_image:'');
			
			this._createContainerStartandEnd('VM Image Details', cat_sysID, this.order+1, this.order+3, 'normal', serviceName+'_'+k);

			this._createField('publisher', storageProfileList.image_details.publisher, cat_sysID, this.order+2, serviceName, profileUUID, serviceSysId, categorySysId, (editables.image_details)?editables.image_details.publisher:'');
			this._createField('offer', storageProfileList.image_details.offer, cat_sysID, this.order+2, serviceName, profileUUID, serviceSysId, categorySysId, (editables.image_details)?editables.image_details.offer:'');
			this._createField('sku', storageProfileList.image_details.sku, cat_sysID, this.order+2, serviceName, profileUUID, serviceSysId, categorySysId, (editables.image_details)?editables.image_details.sku:'');
			this._createField('version', storageProfileList.image_details.version, cat_sysID, this.order+2, serviceName, profileUUID, serviceSysId, categorySysId, (editables.image_details)?editables.image_details.version:'');
			
			
			
			this._createField('use_managed_disks', storageProfileList.is_managed, cat_sysID, this.order+4, serviceName, profileUUID, serviceSysId, categorySysId, (editables.is_managed)?editables.is_managed:'');
			
			this._createContainerStartandEnd('OS Disk Details', cat_sysID, this.order+5, this.order+7, 'normal', serviceName+'_'+k);

			this._createField('disk_name', storageProfileList.os_disk_details.name, cat_sysID, this.order+6, serviceName, profileUUID, serviceSysId, categorySysId, (editables.os_disk_details)?editables.os_disk_details.name:'');
			this._createField('storage_type', storageProfileList.os_disk_details.storage_type, cat_sysID, this.order+6, serviceName, profileUUID, serviceSysId, categorySysId, (editables.os_disk_details)?editables.os_disk_details.storage_type:'');
			this._createField('disk_caching_type', storageProfileList.os_disk_details.caching_type, cat_sysID, this.order+6, serviceName, profileUUID, serviceSysId, categorySysId, (editables.os_disk_details)?editables.os_disk_details.caching_type:'');
			this._createField('disk_create_options', storageProfileList.os_disk_details.create_option, cat_sysID, this.order+6, serviceName, profileUUID, serviceSysId, categorySysId, (editables.os_disk_details)?editables.os_disk_details.create_option:'');
			
			
			var categorySysId = this._createContainerStartandEnd('Storage Profile Data Disks', cat_sysID, this.order+8, this.order+50, 'normal', serviceName+'');
			
			this.order = this.order+9;
			
			var dataList = storageProfileList.data_disk_list;
			
			for(var k in dataList){
				this.order = this.order+3;
				
				this._createContainerStartandEnd('disk_config_'+k, cat_sysID, this.order, this.order+2, 'normal', serviceName+'_'+k);

				this._createOnlyField('disk_name', dataList[k].name, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('storage_type', dataList[k].storage_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('disk_caching_type', dataList[k].caching_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('size_gb', dataList[k].size_in_gb, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('disk_lun', dataList[k].lun, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				
				dataList[k].runtime = (editables.data_disk_list)?editables.data_disk_list[k]:{};
				dataList[k].disabled = (editables.data_disk_list)?editables.data_disk_list[k]:{};
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(dataList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);
						
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldStorageProfile :- Exception caught during creation of Substrate Field Storage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate _createSubstrateFieldStorageProfile. Error :- "+e);
		}
	},
	
	_createSubstrateFieldOsProfile: function(osProfileList, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldOsProfile. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			
			if(osProfileList.linux_config){
				var categorySysId = this._createContainerStartandEnd('OS Profile Script', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
				this.order = this.order+1;	
				
				this._createField('cloud_init_script', (osProfileList.linux_config.custom_data)?osProfileList.linux_config.custom_data+'':'', cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, true);
			
			
			
			
			
			}else if(osProfileList.windows_config){
				
				
				var categorySysId = this._createContainerStartandEnd('OS Profiles', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
				this.order = this.order+1;	
				
				this._createField('provision_windows_guest_agent', osProfileList.windows_config.provision_vm_agent, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_config)?editables.windows_config.provision_vm_agent:'');
				this._createField('automatic_os_upgrade', osProfileList.windows_config.auto_updates, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_config)?editables.windows_config.auto_updates:'');
				
				this._createField('setting_name', (osProfileList.windows_config.additional_unattend_content &amp;&amp; osProfileList.windows_config.additional_unattend_content[0] &amp;&amp; osProfileList.windows_config.additional_unattend_content[0].setting_name)?osProfileList.windows_config.additional_unattend_content[0].setting_name:'', cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_config &amp;&amp; editables.windows_config.additional_unattend_content &amp;&amp; editables.windows_config.additional_unattend_content[0] &amp;&amp; editables.windows_config.additional_unattend_content[0].setting_name)?editables.windows_config.additional_unattend_content[0].setting_name:'');
				
				this._createField('xml_content', (osProfileList.windows_config.additional_unattend_content &amp;&amp; osProfileList.windows_config.additional_unattend_content[0] &amp;&amp; osProfileList.windows_config.additional_unattend_content[0].xml_content)?osProfileList.windows_config.additional_unattend_content[0].xml_content:'', cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_config &amp;&amp; editables.windows_config.additional_unattend_content &amp;&amp; editables.windows_config.additional_unattend_content[0] &amp;&amp; editables.windows_config.additional_unattend_content[0].xml_content)?editables.windows_config.additional_unattend_content[0].xml_content:'');
				
				var windList = (osProfileList.windows_config.winrm_listeners &amp;&amp; osProfileList.windows_config.winrm_listeners[0])?osProfileList.windows_config.winrm_listeners[0].protocol:'';
				
				for(var win=1; win&lt; osProfileList.windows_config.winrm_listeners.length; win++)
					windList = "," + osProfileList.windows_config.winrm_listeners[win].protocol;
				
				this._createField('protocol', windList, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, '');
				
			}			
			
			
			
			
			
			
			
			var categorySysId = this._createContainerStartandEnd('OS Profile', cat_sysID, this.order+1, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+2;

			osProfileList = osProfileList.secrets;
			
			for(var k in osProfileList){
				this.order = this.order+4;

				this._createContainerStartandEnd('secrets_'+k, cat_sysID, this.order, this.order+3, 'normal', serviceName+'_'+k);

				this._createOnlyField('valut_id', (osProfileList[k])?osProfileList[k].source_vault_id:'', cat_sysID, this.order+1, serviceName+'_'+k, 6);
				
				if(osProfileList[k] &amp;&amp; osProfileList[k].vault_certificates){
					for(var w in osProfileList[k].vault_certificates){

						this._createOnlyField('certificate_config_url_'+w, osProfileList[k].vault_certificates[w].certificate_url, cat_sysID, this.order+2, serviceName+'_'+k, 6);
					}	
					
					if(!osProfileList[k])
						osProfileList[k] = {};

					osProfileList[k].runtime = (editables[k])?editables[k]:{};
					osProfileList[k].disabled = (editables[k])?editables[k]:{};
					
				}	
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(osProfileList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldOsProfile :- Exception caught during creation of Substrate Field Storage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate _createSubstrateFieldOsProfile. Error :- "+e);
		}
	},

	_createSubstrateFieldGuestCustomization: function(guestCustomization, cat_sysID, profileUUID, serviceName, serviceSysId, editables, providerType){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldGuestCustomization. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;

			if((providerType+'').includes('vmware') || (providerType+'').includes('VMWARE') ){//} guestCustomization.linux_data){
				
				var categorySysId = this._createContainerStartandEnd('Guest Customization', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
				this.order = this.order+1;

				this.order = this.order+3;
				
				if(guestCustomization.linux_data){
					
					this._createField('hostname', guestCustomization.linux_data.hostname, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.linux_data)?editables.linux_data.hostname:'');
					this._createField('domain', guestCustomization.linux_data.domain, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.linux_data)?editables.linux_data.domain:'');
					this._createField('timezone', guestCustomization.linux_data.timezone, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.linux_data)?editables.linux_data.timezone:'');
					this._createField('hardware_clock_utc', guestCustomization.linux_data.hw_utc_clock, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.linux_data)?editables.linux_data.hw_utc_clock:'');


					this._createField('dns_primary', guestCustomization.linux_data.dns_primary, cat_sysID, this.order+2, serviceName, profileUUID, serviceSysId, categorySysId, (editables.linux_data)?editables.linux_data.dns_primary:'');
					this._createField('dns_secondary', guestCustomization.linux_data.dns_secondary, cat_sysID, this.order+2, serviceName, profileUUID, serviceSysId, categorySysId, (editables.linux_data)?editables.linux_data.dns_secondary:'');
					this._createField('dns_tertiary', guestCustomization.linux_data.dns_tertiary, cat_sysID, this.order+2, serviceName, profileUUID, serviceSysId, categorySysId, (editables.linux_data)?editables.linux_data.dns_tertiary:'');
					this._createField('dns_search_path', guestCustomization.linux_data.dns_search_path[0], cat_sysID, this.order+2, serviceName, profileUUID, serviceSysId, categorySysId, (editables.linux_data &amp;&amp; editables.linux_data.dns_search_path)?editables.linux_data.dns_search_path[0]:'');


					this.order = this.subContainerEnd+2;
					this.subContainerEnd = this.subContainerEnd + 2 + 50;
					var categorySysId = this._createContainerStartandEnd('Guest Customization DHCP', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
					this.order = this.order+1;

					for(var k in guestCustomization.linux_data.network_settings){

						this._createOnlyField('use_dhcp', guestCustomization.linux_data.network_settings[k].is_dhcp, cat_sysID, this.order+1, serviceName+'_'+k, 6);

						guestCustomization.linux_data.network_settings[k].runtime = (editables.linux_data &amp;&amp; editables.linux_data.network_settings &amp;&amp; editables.linux_data.network_settings[k])?editables.linux_data.network_settings[k]:{};
						guestCustomization.linux_data.network_settings[k].disabled = (editables.linux_data &amp;&amp; editables.linux_data.network_settings &amp;&amp; editables.linux_data.network_settings[k])?editables.linux_data.network_settings[k]:{};

					}

					this._insertCatalogVariableProperties(profileUUID, JSON.stringify(guestCustomization.linux_data.network_settings), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);
				
				}else if(guestCustomization.windows_data){
					
					
					this._createField('predefined_guest_customization', '', cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, '');
					this._createField('computer_name', guestCustomization.windows_data.computer_name, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.computer_name:'');
					this._createField('full_name', guestCustomization.windows_data.full_name, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.full_name:'');
					this._createField('organization_name', guestCustomization.windows_data.organization_name, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.organization_name:'');
					this._createField('product_id', guestCustomization.windows_data.product_id, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.product_id:'');
					this._createField('timezone', guestCustomization.windows_data.timezone, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.timezone:'');
					this._createField('admin_password', guestCustomization.windows_data.domain_password, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.domain_password:'');
					this._createField('automatically_logon_as_admin', guestCustomization.windows_data.auto_logon, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.auto_logon:'');
					this._createField('num_of_times_to_logon_automatically', guestCustomization.windows_data.login_count, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.login_count:'');
					this._createField('command_list', guestCustomization.windows_data.command_list[0], cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data &amp;&amp; editables.windows_data.command_list)?editables.windows_data.command_list[0]:'');
					this._createField('join_a_domain', guestCustomization.windows_data.is_domain, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.is_domain:'');
					this._createField('workgroup', guestCustomization.windows_data.workgroup, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.windows_data)?editables.windows_data.workgroup:'');
					

					this.order = this.subContainerEnd+2;
					this.subContainerEnd = this.subContainerEnd + 2 + 50;
					var categorySysId = this._createContainerStartandEnd('Guest Customization DHCP', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
					this.order = this.order+1;

					for(var k in guestCustomization.windows_data.network_settings){

						this._createOnlyField('use_dhcp', guestCustomization.windows_data.network_settings[k].is_dhcp, cat_sysID, this.order+1, serviceName+'_'+k, 6);

						guestCustomization.windows_data.network_settings[k].runtime = (editables.windows_data &amp;&amp; editables.windows_data.network_settings &amp;&amp; editables.windows_data.network_settings[k])?editables.windows_data.network_settings[k]:{};
						guestCustomization.windows_data.network_settings[k].disabled = (editables.windows_data &amp;&amp; editables.windows_data.network_settings &amp;&amp; editables.windows_data.network_settings[k])?editables.windows_data.network_settings[k]:{};

					}

					this._insertCatalogVariableProperties(profileUUID, JSON.stringify(guestCustomization.windows_data.network_settings), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);
				}else{
					
					var guestType = (guestCustomization.cloud_init)?'Cloud-init':'Custom Spec';

					this._createField('type', guestType, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, 'false');

					if(guestType == 'Cloud-init'){

						this._createField('predefined_guest_customization', guestCustomization.customization_name, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, editables.customization_name);								
						if( !guestCustomization.customization_name)
							this._createField('script', guestCustomization.cloud_init, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, editables.cloud_init);							
						
					}
					
				}
				
				

			}else{
				
				var categorySysId = this._createContainerStartandEnd('Guest Customization', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
				this.order = this.order+1;

				this.order = this.order+3;

				if(guestCustomization){
					var guestType = (guestCustomization.sysprep)?'Sysprep':'Cloud-init';

					this._createField('type', guestType, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, 'false');

					if(guestType == 'Sysprep'){

						this._createField('install_type', guestCustomization.sysprep.install_type, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, 'false');		
						this._createField('script', guestCustomization.sysprep.unattend_xml, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables)?editables:'');		

					}else{

						this._createField('script', guestCustomization.cloud_init.user_data, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables)?editables:'');		
						
					}	
				}else{
					
					this._createField('type', '', cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, 'false');
					this._createField('install_type', '', cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, 'false');		
					this._createField('script', '', cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables)?editables:'');		
				}
				
				
			}
			
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldGuestCustomization :- Exception caught during creation of Substrate Field Storage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},

	_createSubstrateFieldGuestCustomizationGCP: function(guestCustomization, cat_sysID, profileUUID, serviceName, serviceSysId, editables, providerType, tags){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldGuestCustomizationGCP. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;

			var categorySysId = this._createContainerStartandEnd('Management Optional', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			this.order = this.order+3;

			this._createField('startup_script', guestCustomization.startupScript, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editables.startupScript)?editables.startupScript:'');

			var groups = (tags.items &amp;&amp; tags.items[0])?tags.items[0]:'';

			if(tags.items)
				for(var i=1; i&lt;tags.items.length; i++)
					groups = groups + ',' + tags.items[i];


			this._createField('network_tags', groups, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, true);
				
			
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldGuestCustomizationGCP :- Exception caught during creation of Substrate Field Storage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},
	
	_createSubstrateFieldCategories: function(categories, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldCategories. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Categories', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			for(var k in categories){

				this._createField((k+'').toLowerCase(), categories[k], cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, editables);	
				
			//	this._createOnlyField((k+'').toLowerCase(), categories[k], cat_sysID, this.order+1, serviceName+'_'+k, 6);
			}

			//this._insertCatalogVariableProperties(profileUUID, JSON.stringify(categories), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldCategories :- Exception caught during creation of Substrate Field Storage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},
	
	_createSubstrateFieldDisks: function(diskList, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldDisks. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Disks', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			for(var k in diskList){
				this.order = this.order+3;

				this._createContainerStartandEnd('disks_'+k, cat_sysID, this.order, this.order+2, 'normal', serviceName+'_'+k);

				this._createOnlyField('use_existing', (diskList[k].source)?true:false, cat_sysID, this.order+1, serviceName+'_'+k, 7);
				this._createOnlyField('storage_type', diskList[k].initializeParams.diskType, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('source_image', diskList[k].initializeParams.sourceImage, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('size_in_gb', diskList[k].initializeParams.diskSizeGb, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('delete_when_instance_is_deleted', diskList[k].autoDelete, cat_sysID, this.order+1, serviceName+'_'+k, 7);
				this._createOnlyField('disk', diskList[k].source, cat_sysID, this.order+1, serviceName+'_'+k, 6);

				if(!diskList[k])
					diskList[k] = {};
				
				diskList[k].runtime = (editables[k])?editables[k]:{};	
				diskList[k].disabled = (editables[k])?editables[k]:{};	
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(diskList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldDisks :- Exception caught during creation of Substrate Field Storage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},
	
	_createSubstrateFieldBlankDisks: function(diskList, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldBlankDisks. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Blank Disks', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			for(var k in diskList){
				this.order = this.order+3;

				this._createContainerStartandEnd('blank_disks_'+k, cat_sysID, this.order, this.order+2, 'normal', serviceName+'_'+k);

				this._createOnlyField('disk_type', diskList[k].disk_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('disk_name', diskList[k].name, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('size_in_gb', diskList[k].sizeGb, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('delete_when_instance_is_deleted', diskList[k].autoDelete, cat_sysID, this.order+1, serviceName+'_'+k, 7);

				if(!diskList[k])
					diskList[k] = {};
				
				diskList[k].runtime = (editables[k])?editables[k]:{};	
				diskList[k].disabled = (editables[k])?editables[k]:{};	
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(diskList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldBlankDisks :- Exception caught during creation of Substrate Field Storage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},
	
	_createSubstrateFieldNetworkInterfaces: function(nicList, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldNetworkInterfaces.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Networking', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			for(var k in nicList){
				this.order = this.order+3;

				this._createContainerStartandEnd('network_'+k, cat_sysID, this.order, this.order+2, 'normal', serviceName+'_'+k);

				this._createOnlyField('associate_public_ip_address', nicList[k].associatePublicIP, cat_sysID, this.order+1, serviceName+'_'+k, 7);
				this._createOnlyField('network', nicList[k].network, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('subnetwork', nicList[k].subnetwork, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('access_configuration_name', (nicList[k].accessConfigs &amp;&amp; nicList[k].accessConfigs[0])?nicList[k].accessConfigs[0].name:'', cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('access_configuration_type', (nicList[k].accessConfigs &amp;&amp; nicList[k].accessConfigs[0])?nicList[k].accessConfigs[0].config_type:'', cat_sysID, this.order+1, serviceName+'_'+k, 6);

				if(!nicList[k])
					nicList[k] = {};
				
				nicList[k].runtime = (editables[k])?editables[k]:{};	
				nicList[k].disabled = (editables[k])?editables[k]:{};	
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(nicList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldNetworkInterfaces. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},
	
	_createSubstrateFieldNicList: function(nicList, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
// 			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldNicList.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Network Adapters', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;
			var clusterPosition = '';
			var clusterName ='';
			var grSubnet;
			for(var k in nicList){
				this.order = this.order+3;

				if(nicList[k].net_name){
					
					this._createContainerStartandEnd('network_'+k, cat_sysID, this.order, this.order+2, 'normal', serviceName+'_'+k);
					
					this._createOnlyField('adapter_type', nicList[k].nic_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
					this._createOnlyField('network_type', nicList[k].net_name, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				}else{
					
					if(k==0){
						clusterPosition = this.order+1;
						this.order += 1; 
					}
					if(nicList[k].subnet_reference.uuid){
						grSubnet = new GlideRecord(this.appUtil.configuration.table.subnet+'');
						grSubnet.addQuery('uuid',nicList[k].subnet_reference.uuid);
						grSubnet.query();
						if(grSubnet.next())
							clusterName = grSubnet.cluster_name ; //
						
					}
					var subnetRegex = '@@{.*}@@';
					var reg = new RegExp(subnetRegex);
					var nicVal = (!reg.test(nicList[k].subnet_reference.uuid+'')) ?  nicList[k].subnet_reference.uuid : "";
					this._createOnlyField('nic_'+(parseInt(k)+1), nicVal , cat_sysID, this.order+1, serviceName+'_'+k, 18 );
					if(k == nicList.length-1){
						this._createOnlyField('cluster_name' ,  clusterName , cat_sysID,clusterPosition, serviceName+'', 6);
						
					}
						
				}
					
				
				if(!nicList[k])
					nicList[k] = {};
				
				nicList[k].runtime = (editables[k])?editables[k]:{};	
				nicList[k].disabled = (editables[k])?editables[k]:{};	
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(nicList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldNicList. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},
	
	_createSubstrateFieldNwProfile: function(nicList, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldNwProfile.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Network Profiles', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			nicList = nicList.nic_list;
			
			for(var k in nicList){
				this.order = this.order+3;

				this._createContainerStartandEnd('nic_'+k, cat_sysID, this.order, this.order+2, 'normal', serviceName+'_'+k);

				this._createOnlyField('nic_name', nicList[k].nic_name, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('security_group', nicList[k].nsg_name, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('virtual_network', nicList[k].vnet_name, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('subnet', nicList[k].subnet_name, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('public_ip_config_name', (nicList[k] &amp;&amp; nicList[k].public_ip_info)?nicList[k].public_ip_info.ip_name:'', cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('public_ip_config_adapter_method', (nicList[k] &amp;&amp; nicList[k].public_ip_info)?nicList[k].public_ip_info.ip_allocation_method:'', cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('public_ip_config_dns_label', (nicList[k] &amp;&amp; nicList[k].public_ip_info)?nicList[k].public_ip_info.dns_label:'', cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('private_ip_config_allocation_method', (nicList[k] &amp;&amp; nicList[k].public_ip_info)?nicList[k].private_ip_info.ip_allocation_method:'', cat_sysID, this.order+1, serviceName+'_'+k, 6);
				
				if(!nicList[k])
					nicList[k] = {};
				
				nicList[k].runtime = (editables[k])?editables[k]:{};	
				nicList[k].disabled = (editables[k])?editables[k]:{};	
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(nicList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldNwProfile. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},
	
	_parseProfile: function(profileList, cat_sysID, service_name, serviceSysId){

		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._parseProfile. Parsing profile/deployment varaibles.");
			for(var k in profileList){
				var prof = profileList[k];

				this._createProfileField(prof, cat_sysID, k, service_name, serviceSysId, prof.editables);
			}
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._parseProfile :- Exception caught during parsing profile. Error :- "+e);
// 			this.logger.error("Exception caught during parsing profiles. Error :- "+e);
		}
	},

	_parseVariables: function(serviceVar, profilesUUIDArray, cat_sysID, service_name, serviceSysId){

		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._parseVariables");
			for(var k in profilesUUIDArray){
				this._createServiceFieldVariableList(serviceVar.variable_list, cat_sysID, profilesUUIDArray[k], service_name, serviceSysId);
				//this._createServiceFieldPortList(serviceVar.port_list, cat_sysID, profilesUUIDArray[k], service_name, serviceSysId);
			}
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._parseVariables :- Exception caught during parsing variables. Error :- "+e);
			this.logger.error("Exception caught during parsing variables. Error :- "+e);
		}
	},

	_createSubstrateFieldCreateSpec: function(specs, cat_sysID, profileUUID, serviceName, serviceSysId, editable){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldCreateSpec. Parsing and creating substrate field variables.");
			var categorySysId = this._createContainerStartandEnd('VM Configuration', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			if(specs){
				
				if(specs.name || (specs.resources &amp;&amp; specs.resources.name) || (specs.resources &amp;&amp; specs.resources.vm_name) ){
					
					var edit = '';
					
					if(editable){
						if(editable.name)
							edit = editable.name;
						else if(editable.resources)
							edit = (editable.resources.name)?editable.resources.name:editable.resources.vm_name;
					}
					
					this._createField('name', (specs.name)?specs.name:(specs.resources.name)?specs.resources.name:specs.resources.vm_name, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, edit);
				}
					
				if(specs.host)
					this._createField('host', specs.host, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.host)?editable.host:'');

				if(specs.template)
					this._createField('template', specs.template, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.template)?editable.template:'');

				if(specs.datastore)
					this._createField('datastore', specs.datastore, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.datastore)?editable.datastore:'');
				
				if(specs.storage_pod)
					this._createField('storage_pod', specs.storage_pod, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.storage_pod)?editable.storage_pod:'');
				
				if(specs.cluster)
					this._createField('cluster', specs.cluster, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.cluster)?editable.cluster:'');

				if(specs.address)
					this._createField('ip_address', specs.address, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.address)?editable.address:'');
				


				
				
// 				if(specs.drs_mode)
// 					this._createField('drs_mode', specs.drs_mode, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.drs_mode)?editable.drs_mode:'');
				
// 				if(/* (specs.drs_mode &amp;&amp; specs.drs_mode+''=='true') || */specs.cluster || specs.storage_pod)
// 					this._createField('drs_mode', true, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.datastore)?editable.datastore:'');
// 				else if(/* (specs.drs_mode &amp;&amp; specs.drs_mode+''=='false') ||*/ specs.datastore || specs.host)
// 					this._createField('drs_mode', false, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.datastore)?editable.datastore:'');
				

				
				if(specs.cluster || specs.storage_pod || specs.datastore || specs.host || specs.template){
					
					var drsVal = (specs.cluster || specs.storage_pod)?true:false;
					
					this._createField('drs_mode', drsVal, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.drs_mode)?editable.drs_mode:'');
// 					this._createField('host', specs.host, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.host)?editable.host:'');
// 					this._createField('template', specs.template, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.template)?editable.template:'');
// 					this._createField('datastore', specs.datastore, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.datastore)?editable.datastore:'');
// 					this._createField('cluster', specs.cluster, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.cluster)?editable.cluster:'');
// 					this._createField('storage_pod', specs.storage_pod, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.storage_pod)?editable.storage_pod:'');
				}
					
				
				
				
				
				
				

				this.order++;

				var resource = specs.resources;

				for(var i in resource){

					if( i == 'security_group_list'){
						var secStr = (resource[i][0])?resource[i][0].security_group_id+'':'';

						for(var k=1; k&lt;resource[i].length; k++)
							secStr = secStr + ',' + resource[i][k].security_group_id+'';

						this._createField(i, secStr, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.resources)?editable.resources[i]:'');
					}else if( i == 'block_device_map' || i == 'guest_customization' || i == 'guestCustomization'){
						continue;
					}else if( i == 'tag_list'){
						
						continue;
						
// 						for(var k in resource[i]){
// 							this._createField(resource[i][k].key+'', resource[i][k].value+'', cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.resources &amp;&amp; editable.resources[i] &amp;&amp; editable.resources[i])?editable.resources[i]:'');
// 						}

					}

					else if(i == 'hw_profile'){

						this._createField('hardware_profile', resource[i].vm_size, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.resources &amp;&amp; editable.resources[i])?editable.resources[i].vm_size:'');

					}

					else if (resource[i] &amp;&amp; (resource[i].constructor === Object || resource[i].constructor === Array)){

						continue;

					}else if(i == 'zone'){
						
						this._createField(i, resource[i], cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.resources)?editable.resources[i]:'');
					}else if(this.exclusionList.includes(i) || i=='vm_name'){
						continue;
						
					}else{
						this._createField(i, resource[i], cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.resources)?editable.resources[i]:'');
					}

				}
			}
			
			
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldCreateSpec :- Exception caught during creation of Substrate Field Specs. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Specs. Error :- "+e);
		}

	},

	_createSubstrateFieldStorage: function(diskList, cat_sysID, profileUUID, serviceName, serviceSysId, editables){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldStorage. Parsing Substrate Field Disk/Storage Data.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Storage', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			diskList.root_disk.runtime = (editables &amp;&amp; editables.root_disk &amp;&amp; editables.root_disk.size_gb)?editables.root_disk.size_gb+'':'false';
			diskList.root_disk.disabled = (editables &amp;&amp; editables.root_disk &amp;&amp; editables.root_disk.size_gb)?editables.root_disk.size_gb+'':'false';
			
			this._createContainerStartandEnd('Root Disk', cat_sysID, this.order, this.order+2, 'normal', serviceName);

			this._createOnlyField('device_name', diskList.root_disk.device_name, cat_sysID, this.order+1, serviceName, 6);
			this._createOnlyField('size_gb', diskList.root_disk.size_gb, cat_sysID, this.order+1, serviceName, 6);
			this._createOnlyField('volume_type', diskList.root_disk.volume_type, cat_sysID, this.order+1, serviceName, 6);
			this._createOnlyField('delete_on_termination', diskList.root_disk.delete_on_termination, cat_sysID, this.order+1, serviceName, 7);

			var dataDiskList = diskList.data_disk_list;

			for(var k in dataDiskList){
				this.order = this.order+3;

				this._createContainerStartandEnd('ebs', cat_sysID, this.order, this.order+2, 'normal', serviceName+'_'+k);

				this._createOnlyField('device_name', dataDiskList[k].device_name, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('size_gb', dataDiskList[k].size_gb, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('volume_type', dataDiskList[k].volume_type, cat_sysID, this.order+1, serviceName+'_'+k, 6);
				this._createOnlyField('delete_on_termination', dataDiskList[k].delete_on_termination, cat_sysID, this.order+1, serviceName+'_'+k, 7);

				if(!dataDiskList[k])
					dataDiskList[k] = {};
				
				dataDiskList[k].runtime = (editables &amp;&amp; editables.data_disk_list &amp;&amp; editables.data_disk_list[k] &amp;&amp; editables.data_disk_list[k].size_gb)?editables.data_disk_list[k].size_gb+'':'false';
				dataDiskList[k].disabled = (editables &amp;&amp; editables.data_disk_list &amp;&amp; editables.data_disk_list[k] &amp;&amp; editables.data_disk_list[k].size_gb)?editables.data_disk_list[k].size_gb+'':'false';
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(diskList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldStorage :- Exception caught during creation of Substrate Field Storage. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Storage. Error :- "+e);
		}

	},

	_createSubstrateFieldReadinessProbe: function(connectionList, cat_sysID, profileUUID, serviceName, serviceSysId, editable){
		try{

			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createSubstrateFieldReadinessProbe. Parsing Connection Probe variables.");
			this.order = this.subContainerEnd + 2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Connection', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			for(var i in connectionList){

				var connection = connectionList[i];

				if( i == 'login_credential_local_reference'){

					this._createField('credential', connection.name+'', cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, (editable &amp;&amp; editable.login_credential_local_reference)?editable.login_credential_local_reference.name:'');

				}else{
					
					if(i == 'disable_readiness_probe'){
						
						this._createField(i, (connection+''=='true')?false:true, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editable)?editable[i]:'');
					}else{
						
						this._createField(i, connection+'', cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, (editable)?editable[i]:'');	
					}
					
				}

			}
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createSubstrateFieldReadinessProbe :- Exception caught during creation of Substrate Field Readiness Probe. Error :- "+e);
// 			this.logger.error("Exception caught during creation of Substrate Field Readiness Probe. Error :- "+e);
		}
	},

	_createProfileField: function(profile, cat_sysID, profileUUID, serviceName, serviceSysId, editable){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createProfileField. Parsing profile deployment vairables.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Deployment Config', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;

			this._createField('min_number_of_replicas', profile.min_replicas, cat_sysID, this.order+1, serviceName, profileUUID, serviceSysId, categorySysId, editable.min_replicas);
			this._createField('max_number_of_replicas', profile.max_replicas, cat_sysID, this.order+2, serviceName, profileUUID, serviceSysId, categorySysId, editable.max_replicas);
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createProfileField :- Exception caught during creation of profile field. Error :- "+e);
// 			this.logger.error("Exception caught during creation of profile field. Error :- "+e);
		}
	},

	_createServiceFieldPortList: function(portList, cat_sysID, profileUUID, serviceName, serviceSysId){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createServiceFieldPortList. Parsing Service Field Configuration variables.");

			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;
			var categorySysId = this._createContainerStartandEnd('Port List', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);

			for(var i in portList){
				this.order = this.order+1;
				this._createOnlyField('protocol', portList[i].protocol, cat_sysID, this.order+1, serviceName+'_'+i, 6);
				this._createOnlyField('target_port', portList[i].target_port, cat_sysID, this.order+1, serviceName+'_'+i, 6);
				this._createOnlyField('endpoint_name', portList[i].endpoint_name, cat_sysID, this.order+1, serviceName+'_'+i, 6);
			}

			this._insertCatalogVariableProperties(profileUUID, JSON.stringify(portList), 'false', categorySysId, cat_sysID, serviceSysId, categorySysId);

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createServiceFieldPortList :- Exception caught during creation of service field port list. Error :- "+e);
// 			this.logger.error("Exception caught during creation of service field port list. Error :- "+e);
		}
	},

	_createOnlyField: function( name, value, catSysID, order, serviceName, type){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createOnlyField");
			var variable = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
			variable.addEncodedQuery('cat_item='+catSysID+'^name='+serviceName+'_'+name+'');
			variable.query();

			if(variable.next()){
				variable.variable_width = 50;
				
				variable.type = type;
				
				variable.default_value = (value)?value:'';
				
				if(type+''==18){
					
					variable.lookup_table = 'x_nuta2_nutanix_ca_subnet';
					variable.lookup_value = 'uuid';
					variable.lookup_label = 'name,cluster_name';
					variable.include_none = true;

				}
				variable.question_text = (this.fieldLabels[name] &amp;&amp; this.fieldLabels[name].label)?this.fieldLabels[name].label+'':this._toTitleCase(name.replace(/_/g, ' '));//'profile_configuration';
				
				variable.update();

			}else{
				variable.initialize();
				variable.type = type;
				
				if(type+''==18){
					
					variable.lookup_table = 'x_nuta2_nutanix_ca_subnet';
					variable.lookup_value = 'uuid';
					variable.lookup_label = 'name,cluster_name';
					variable.include_none = true;
					
				}
				
				variable.cat_item = catSysID;
				variable.active = true;
				variable.question_text = (this.fieldLabels[name] &amp;&amp; this.fieldLabels[name].label)?this.fieldLabels[name].label+'':this._toTitleCase(name.replace(/_/g, ' '));//'profile_configuration';
				variable.name = serviceName+'_'+name+'';
				variable.default_value = (value)?value:'';
				variable.order = order;
				variable.variable_width = 50;
				var fieldSysd = variable.insert();
				
				this.logger.debug("Created a new field "+ name +" on Catalog Item "+variable.cat_item.name);
				
			}
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createOnlyField :- Exception caught while adding field in item_option_new table. Error :- "+e);
// 			this.logger.error("Exception caught wjile adding field in variables table. Error :- "+e);
		}
	},

	_createServiceFieldVariableList: function(variableList, cat_sysID, profileUUID, serviceName, serviceSysId, editable){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createServiceFieldVariableList. Parsing Service variable list.");
			this.order = this.subContainerEnd+2;
			this.subContainerEnd = this.subContainerEnd + 2 + 50;

			if(variableList.length==0){
				this.order = this.order+1;
				return;
			}

			var categorySysId = this._createContainerStartandEnd('Variables', cat_sysID, this.order, this.subContainerEnd, 'normal', serviceName);
			this.order = this.order+1;
			
			this._checkServiceVarSync(cat_sysID, variableList, serviceName, profileUUID, serviceSysId);
			
			for(var index = 0; index &lt; variableList.length; index++){
				
				var edit = (variableList[index].editables &amp;&amp; variableList[index].editables.value == true &amp;&amp; variableList[index].is_hidden == false) ? true : false;
				this._createField(variableList[index].name, variableList[index].value, cat_sysID, this.order, serviceName, profileUUID, serviceSysId, categorySysId, edit , 'serviceVariables',true,variableList[index]);
				this.order = this.order+1;
			}
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createServiceFieldVariableList :- Exception caught during creation of service field variables. Error :- "+e);
// 			this.logger.error("Exception caught during creation of service field variables. Error :- "+e);
		}

	},

	_createField: function( name, value, catSysID, order, serviceName, profileUUID, serviceSysId, categorySysId, editable, isServiceVariable, serviceVar, field){
		try{
			
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createField");
			var variable = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
			variable.addEncodedQuery('cat_item='+catSysID+'^name='+serviceName+'_'+name+'');
			variable.query();
			
			var fieldSysd = '';
			var varType = (serviceVar) ? this.diffVar._returnVarType(field) : '';

			if(variable.next()){
				
				variable.variable_width = 50;
				
				if(this.boolValidation.includes(','+name+','))
					variable.type = 7;
				
				if(name === 'drs_mode' &amp;&amp; variable.question_text != 'DRS mode')
					variable.question_text = 'DRS mode';
				
				if(serviceVar){
					
					variable.question_text = (serviceVar &amp;&amp; (field.label+'').trim() != "") ? field.label+''  : field.name+'';
					
					variable.show_help = true;
					variable.type = varType.type+'';
					variable.tooltip = field.description+'';
					variable.help_text = (field.description+'') ? field.description+'' : '';
					variable.mandatory = (field.is_mandatory+'') ? field.is_mandatory : '';
					if(varType.type == 21){
						variable.list_table = this.appUtil.configuration.table.dropDownTable+'';
						variable.attributes = "glide_list";
					}
				}
				
				
				fieldSysd = variable.update();

				if(serviceVar &amp;&amp; (varType.type+'' == '5' || varType.type+'' == '21')){
					this.diffVar._updateOtions(fieldSysd ,varType.opt ,varType.type );
				}
				
			}else {
				
				variable.initialize();
				variable.type = (serviceVar) ? varType.type+'' : this.boolValidation.includes(','+name+',') ? 7 :  ((name=='user_data' || name=='script' || name=='startup_script' || name=='cloud_init_script' || name=='command_list' || name=='xml_content')?2:6); //
				variable.cat_item = catSysID+'';
				variable.active = true;
				variable.question_text = (serviceVar &amp;&amp; (field.label+'').trim() != "") ? field.label+''  : (this.fieldLabels[name] &amp;&amp; this.fieldLabels[name].label)?this.fieldLabels[name].label+'':this._toTitleCase(name.replace(/_/g, ' '));//'profile_configuration';
				variable.name = serviceName+'_'+name+'';
				variable.default_value = (value)?value+'':'';
				variable.variable_width = 50;
				variable.tooltip = (serviceVar) ?  field.description+'' : '';
				variable.order = order;
				
				if(this.boolValidation.includes(','+name+','))
					variable.type = 7;
				
				if(name === 'drs_mode' &amp;&amp; variable.question_text != 'DRS mode')
					variable.question_text = 'DRS mode';
				
				if(serviceVar){
					
					variable.question_text = (serviceVar &amp;&amp; (field.label+'').trim() != "") ? field.label+''  : field.name+'';
					
					variable.show_help = true;
					variable.type = varType.type+'';
					variable.tooltip = field.description+'';
					variable.help_text = (field.description+'') ? field.description+'' : '';
					variable.mandatory = (field.is_mandatory+'') ? field.is_mandatory : '';
					if(varType.type == 21){
						variable.list_table = this.appUtil.configuration.table.dropDownTable+'';
						variable.attributes = "glide_list";
					}
				}
				//field.uuid;
				
				
				fieldSysd = variable.insert();
				
				if(serviceVar &amp;&amp; (varType.type+'' == '5' || varType.type+'' == '21')){
					this.diffVar._updateOtions(fieldSysd ,varType.opt ,varType.type );
				}
				
				this.logger.debug("Created a new field "+ name +" on Catalog Item "+variable.cat_item.name);
			}

			this._insertCatalogVariableProperties(profileUUID, value, editable, fieldSysd, catSysID, serviceSysId, categorySysId, isServiceVariable, name, field);
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createField :- Exception caught wjile adding field in item_option_new table. Error :- "+e);
// 			this.logger.error("Exception caught wjile adding field in variables table. Error :- "+e);
		}
	},

	_insertCatalogVariableProperties: function(profileUUID, default_value, runtime_config, fieldSysd, catalogSysId, serviceSysId, categorySysId, isServiceVariable, fieldName, field){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._insertCatalogVariableProperties");
			var gr = new GlideRecord(this.appUtil.configuration.table.variablesProperties+'');
			gr.addQuery('application_profile', this.profileUUIDSysIDRel[profileUUID]+'');
			gr.addQuery('catalog_item', catalogSysId+'');
			gr.addQuery('variable', fieldSysd+'');
			gr.query();

			if(gr.next()){
				
				var notSupported = (default_value+''=='Cloud-init' || default_value+''=='Sysprep' || (default_value+'').indexOf('@@') != -1 ||(fieldName+'').startsWith('key_') || (this.disabledFields.includes(","+fieldName+",") &amp;&amp; fieldName+''!='name')) ? false : true;
				//added (default_value+'').indexOf('@@') != -1 
				if(isServiceVariable == "serviceVariables" &amp;&amp; field.is_hidden &amp;&amp; (field.is_hidden+'' != gr.is_hidden + "")) {
// 					this._invalidateCatalogItem(catalogSysId);
// 					this.logger.info("Deactivated catalog due to private variable field.is_hidden!");
				}//Check Service Varibale.
				
				if(isServiceVariable == "serviceVariables" &amp;&amp; gr.runtime_config + "" != runtime_config + "") {
// 					this._invalidateCatalogItem(catalogSysId);
// 					this.logger.info("Deactivated catalog due to private variable runtime_config!");
				}
				
				if(isServiceVariable == "serviceVariables" &amp;&amp; field.val_type+"" != gr.value_type + "") {
// 					this._invalidateCatalogItem(catalogSysId);
// 					this.logger.info("Deactivated catalog due to private variable val_type!");
				}

				gr.application_profile = this.profileUUIDSysIDRel[profileUUID]+'';
				gr.catalog_item = catalogSysId+'';
				gr.default_value = (field &amp;&amp; (field.val_type+'' == 'DATE'|| field.val_type+'' == 'DATE_TIME')) ? this.diffVar._formttedDateTime(field.value+'', field.val_type+'') : (default_value)?default_value+'':'';//(this.disabledFields.includes(","+fieldName+","))?'Use Calm to set/edit this field':(default_value)?default_value+'':'';
				gr.runtime_config = ((default_value+'').indexOf('@@') != -1 || notSupported+''=='false') ? false : runtime_config+'';
				gr.variable = fieldSysd+'';
				gr.isprofilevariable = false;
				
				gr.isservicevariable = (isServiceVariable == "serviceVariables") ? true : false;
				
				gr.type = (isServiceVariable == "serviceVariables") ? "Service" : "";
				gr.service_name = serviceSysId+'';
				gr.category_name = categorySysId+'';
				
				gr.isdisabled = ( (default_value+'').indexOf('@@') != -1 || notSupported+''=='false') ? true : (runtime_config+'' == 'true') ? false : true;//(runtime_config+'' == 'true') ? false : true;
				
				gr.issupported = notSupported;
				
				/**advanced var**/
				
				gr.value_type = (field) ? field.val_type+'' : this.integerValidation.includes(','+fieldName+',') ? 'INT': "";
				gr.data_type = (field) ? (field.type+'' == "LOCAL" &amp;&amp; field.options &amp;&amp; field.options.type+'' == "PREDEFINED" &amp;&amp; field.options.choices &amp;&amp; (field.options.choices).length &gt; 0) ? "PREDEFINED" : field.type+'' : '' ;
				
				/*regex validation*/
				
				var validation = (field) ? ((field.regex &amp;&amp; field.regex.should_validate) ? field.regex.value+'' : this.diffVar._fieldRegex(field) ) :  this.integerValidation.includes(','+fieldName+',') ? '^[\\d]*$' : "";
				if(field &amp;&amp; gr.data_type+'' == "LOCAL" &amp;&amp; (field.val_type+'' == "DATE" || field.val_type+'' == "DATE_TIME") )
					validation = this.diffVar._fieldRegex(field);
				gr.field_regex = validation;
				
				/* End regex Validation */
				
				
				//gr.field_regex = (field) ? ((field.regex &amp;&amp; field.regex.should_validate) ? field.regex.value+'' : this.diffVar._fieldRegex(field) ) :  this.integerValidation.includes(','+fieldName+',') ? '^[\\d]*$' : "";
				gr.uuid = (field) ? field.uuid+'' : '' ;
				gr.is_hidden = ((field) &amp;&amp; field.is_hidden+'' == 'true') ? true : false;
				/**advanced var**/
				
				if(isServiceVariable == "serviceVariables") {
					if(field) {
					gr.field_json = JSON.stringify(field);
				}
				}
				
				gr.update();

				this.logger.debug("Updated the entry of variable "+gr.variable.name+" with default value and runtime in "+gr.catalog_item.name);
				
			}else{
				
				var notSupported = (default_value+''=='Cloud-init' || default_value+''=='Sysprep' || (default_value+'').indexOf('@@') != -1 || (fieldName+'').startsWith('key_') || (this.disabledFields.includes(","+fieldName+",") &amp;&amp; fieldName+''!='name')) ? false : true;
				//added (default_value+'').indexOf('@@') != -1 
				gr.initialize();
				gr.application_profile = this.profileUUIDSysIDRel[profileUUID]+'';
				gr.catalog_item = catalogSysId+'';
				gr.default_value =  (field &amp;&amp; (field.val_type+'' == 'DATE'|| field.val_type+'' == 'DATE_TIME')) ? this.diffVar._formttedDateTime(field.value+'', field.val_type+'') : (default_value)?default_value+'':'';//(this.disabledFields.includes(","+fieldName+","))?'Use Calm to set/edit this field':(default_value)?default_value+'':'';
				gr.runtime_config = ((default_value+'').indexOf('@@') != -1 || notSupported+''=='false') ? false : runtime_config+'';
				gr.variable = fieldSysd+'';
				gr.isprofilevariable = false;
				
				gr.isservicevariable = (isServiceVariable == "serviceVariables") ? true : false;
				gr.type = (isServiceVariable == "serviceVariables") ? "Service" : "";
				gr.service_name = serviceSysId+'';
				gr.category_name = categorySysId+'';
				gr.isdisabled = ( (default_value+'').indexOf('@@') != -1 || notSupported+''=='false') ? true : (runtime_config+'' == 'true') ? false : true;//(runtime_config+'' == 'true') ? false : true;
				
				gr.issupported = notSupported;
				
				/**advanced var**/
				
				gr.value_type = (field) ? field.val_type+'' : this.integerValidation.includes(','+fieldName+',') ? 'INT': "" ;
				gr.data_type = (field) ? (field.type+'' == "LOCAL" &amp;&amp; field.options &amp;&amp; field.options.type+'' == "PREDEFINED" &amp;&amp; field.options.choices &amp;&amp; (field.options.choices).length &gt; 0) ? "PREDEFINED" : field.type+'' : '' ;
				
				/*regex validation*/
				
				var validation = (field) ? ((field.regex &amp;&amp; field.regex.should_validate) ? field.regex.value+'' : this.diffVar._fieldRegex(field) ) :  this.integerValidation.includes(','+fieldName+',') ? '^[\\d]*$' : "";
				if(field &amp;&amp; gr.data_type+'' == "LOCAL" &amp;&amp; (field.val_type+'' == "DATE" || field.val_type+'' == "DATE_TIME") )
					validation = this.diffVar._fieldRegex(field);
				gr.field_regex = validation;
				
				/* End regex Validation */
				
				//gr.field_regex = (field) ? ((field.regex &amp;&amp; field.regex.should_validate) ? field.regex.value+'' : this.diffVar._fieldRegex(field) ) : this.integerValidation.includes(','+fieldName+',') ? '^[\\d]*$' : "" ;
				gr.uuid =  (field) ?  field.uuid+'' : '';
				gr.is_hidden = ((field) &amp;&amp; field.is_hidden+'' == 'true') ? true : false;
				/**advanced var**/
				if(isServiceVariable == "serviceVariables") {
					if(field) {
					gr.field_json = JSON.stringify(field);
				}
				}
				
				gr.insert();

				this.logger.debug("Created a entry of variable "+gr.variable.name+" with default value and runtime in "+gr.catalog_item.name);
			}

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._insertCatalogVariableProperties :- Exception caught while adding field in catalog variables properties table. Error :- "+e);
// 			this.logger.error("Exception caught while adding field in catalog variables properties table. Error :- "+e);
		}

	},

	_createContainerStartandEnd: function( name, catSysID, start, end, type, serviceName ){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._createContainerStartandEnd");
			serviceName = (serviceName)?serviceName+'_':'';

			var startSysId = '';

			var variable = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
			variable.addQuery('name', (serviceName+name).toLowerCase().replace(/ /g, '_'	));
			variable.addQuery('cat_item', catSysID+'');
			//variable.addQuery('order', start);
			variable.query();

			if(variable.next()){
				startSysId = variable.sys_id+'';
			}else{
				variable.initialize();
				variable.type = '19';
				variable.display_title = 'true';
				variable.cat_item = catSysID;
				variable.active = 'true';
				variable.order = start;
				variable.question_text = name;
				variable.name = (serviceName+name).toLowerCase().replace(/ /g, '_'	); //(name+((serviceName)?serviceName:'')).toLowerCase().replace(/ /g, '_'	);//'profile_configuration';
				variable.layout = (type)?type:'2across';
				startSysId = variable.insert();

				variable.initialize();
				variable.type = '20';
				variable.cat_item = catSysID;
				variable.active = 'true';
				variable.order = end;
				variable.insert();
			}

			return startSysId;

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createContainerStartandEnd :- Exception caught while creating start and end containers. Error :- "+e);
// 			this.logger.error("Exception caught while creating start and end containers. Error :- "+e);
		}
	},

	_filterJSONDatatoService: function(parsed){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._filterJSONDatatoService");
			var sub_deploy_rel = {};
			var deploy_pack_rel = {};
			var app_profile_list = parsed.app_profile_list;

			for(var i=0; i&lt;app_profile_list.length; i++){
				var appProfile = app_profile_list[i];
				var deployment_create_list = appProfile.deployment_create_list;

				for(var j=0; j&lt;deployment_create_list.length; j++ ){

					var deployemnt = deployment_create_list[j];
					sub_deploy_rel[deployemnt.substrate_local_reference.uuid] = {
						"name": deployemnt.substrate_local_reference.name,
						"deployemnt_uuid": deployemnt.uuid,
						"deployemnt_name": deployemnt.name,
						"profile_uuid": appProfile.uuid
					};

					var package_local_reference_list = deployemnt.package_local_reference_list;
					for(k=0; k&lt;package_local_reference_list.length; k++){
						var pack = package_local_reference_list[k];
						if(!deploy_pack_rel[deployemnt.uuid])
							deploy_pack_rel[deployemnt.uuid] = [];

						deploy_pack_rel[deployemnt.uuid].push({
							"name": deployemnt.name,
							"package_uuid": pack.uuid,
							"package_name": pack.name
						});
					}
				}
			}

			this.logger.debug("Substrate and Deployment mapping created:- "+JSON.stringify(sub_deploy_rel));
			this.logger.debug("Deployment and Package mapping created:- "+JSON.stringify(deploy_pack_rel));

			var packageList = parsed.package_definition_list;
			var pack_serv_rel = {};
			for(var i=0; i&lt;packageList.length; i++){

				var pack = packageList[i];
				var uuid = pack.uuid;
				var serviceList = pack.service_local_reference_list;

				for(var j=0; j&lt;serviceList.length; j++){
					var service = serviceList[j];
					if(!pack_serv_rel[uuid])
						pack_serv_rel[uuid]=[];

					pack_serv_rel[uuid].push({
						"name": pack.name,
						"serv_name": service.name,
						"serv_uuid": service.uuid
					});
				}
			}

			this.logger.debug("Package and Service mapping created:- "+JSON.stringify(pack_serv_rel));

			var variablesJson = {};

			var serviceList = parsed.service_definition_list;
			for(var i=0; i&lt;serviceList.length; i++){

				var service = serviceList[i];

				variablesJson[service.uuid] = {};
				variablesJson[service.uuid].service = {};

				variablesJson[service.uuid].service.port_list = service.port_list;
				variablesJson[service.uuid].service.editables = service.editables;
				variablesJson[service.uuid].service.variable_list = service.variable_list;
				variablesJson[service.uuid].name = service.name;
			}

			var profileList = parsed.app_profile_list;
			for(var i=0; i&lt;profileList.length; i++){
				var profile = profileList[i];
				var deploymentList = profile.deployment_create_list;

				for(var j=0; j&lt;deployment_create_list.length; j++ ){

					var deployment = deploymentList[j];
					var servUUID = "";
					if(parsed.service_definition_list[0].uuid == "singleVm-default-service-uuid"){
						servUUID = "singleVm-default-service-uuid";
					}else{
						var packUUID = deploy_pack_rel[deployment.uuid][0].package_uuid;
						servUUID = pack_serv_rel[packUUID][0].serv_uuid;
					}

					if(!variablesJson[servUUID].profile)
						variablesJson[servUUID].profile = {};

					if(!variablesJson[servUUID].profile[profile.uuid])
						variablesJson[servUUID].profile[profile.uuid]={};


					variablesJson[servUUID].profile[profile.uuid].min_replicas = deployment.min_replicas;
					variablesJson[servUUID].profile[profile.uuid].max_replicas = deployment.max_replicas;
					variablesJson[servUUID].profile[profile.uuid].editables = deployment.editables;
					variablesJson[servUUID].profile[profile.uuid].variable_list = deployment.variable_list;
					variablesJson[servUUID].profile[profile.uuid].uuid = profile.uuid;
					variablesJson[servUUID].profile[profile.uuid].name = profile.name;
				}
			}

			var substrateList = parsed.substrate_definition_list;
			for(var i=0; i&lt;substrateList.length; i++){

				var substrate = substrateList[i];

				var deployUUID = sub_deploy_rel[substrate.uuid].deployemnt_uuid;
				
				var servUUID = "";

				if(parsed.service_definition_list[0].uuid == "singleVm-default-service-uuid"){
					
					servUUID = "singleVm-default-service-uuid";
				}else{
					
					var packUUID = deploy_pack_rel[deployUUID][0].package_uuid;
					servUUID = pack_serv_rel[packUUID][0].serv_uuid;
				}

				if(!variablesJson[servUUID].substrate)
					variablesJson[servUUID].substrate = {};

				if(!variablesJson[servUUID].substrate[sub_deploy_rel[substrate.uuid].profile_uuid])
					variablesJson[servUUID].substrate[sub_deploy_rel[substrate.uuid].profile_uuid]={};

				variablesJson[servUUID].substrate[sub_deploy_rel[substrate.uuid].profile_uuid].readiness_probe = substrate.readiness_probe;
				variablesJson[servUUID].substrate[sub_deploy_rel[substrate.uuid].profile_uuid].editables = substrate.editables;
				variablesJson[servUUID].substrate[sub_deploy_rel[substrate.uuid].profile_uuid].create_spec = substrate.create_spec;
				variablesJson[servUUID].substrate[sub_deploy_rel[substrate.uuid].profile_uuid].variable_list = substrate.variable_list;
				variablesJson[servUUID].substrate[sub_deploy_rel[substrate.uuid].profile_uuid].name = substrate.name;

			}

			return variablesJson;
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._filterJSONDatatoService :- Exception caught while filtering JSON data for variables creation. Error :- "+e);
// 			this.logger.error("Exception caught while filtering JSON data for variables creation. Error :- "+e);
		}
	},

	_createDefaultVariables: function(cat_sysID){
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables.proc_createDefaultVariablesessCatalogVariables");
			
			var variableGR = new GlideRecord(this.appUtil.configuration.table.varaiblesTable+'');
			if( parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &gt;= parseFloat("3.2") ){
				variableGR.addEncodedQuery('cat_item=' + cat_sysID + '^nameINdefault_project,default_app_name,default_profile,default_environment');
				
			}
			else{
				variableGR.addEncodedQuery('cat_item=' + cat_sysID + '^nameINdefault_project,default_app_name,default_profile');
			}
				
			
			variableGR.query();

			if(!variableGR.hasNext()){
				
				variableGR.initialize();
				variableGR.type = 15;
				variableGR.cat_item = cat_sysID + '';
				variableGR.active = true;
				variableGR.question_text = 'Providers';
				variableGR.name = 'provider_icons';
				variableGR.ui_page = gs.getProperty('x_nuta2_nutanix_ca.variableGR.ui_page')+'';
				variableGR.order = 0;
				variableGR.insert();

				variableGR.initialize();
				variableGR.type = 5;
				variableGR.cat_item = cat_sysID+'';
				variableGR.active = true;
				variableGR.question_text = 'Project';
				variableGR.name = 'default_project';
				variableGR.order = 1;
				variableGR.insert();
				
				if( parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &gt;= parseFloat("3.2")){
					variableGR.initialize();
					variableGR.type = 5;
					variableGR.cat_item = cat_sysID+'';
					variableGR.active = true;
					variableGR.question_text = 'Environment';
					variableGR.name = 'default_environment';
					variableGR.order = 2;
					variableGR.insert();
				}

				variableGR.initialize();
				variableGR.type = 6;
				variableGR.cat_item = cat_sysID+'';
				variableGR.active = true;
				variableGR.question_text = 'Name of the Application';
				variableGR.name = 'default_app_name';
				variableGR.mandatory = 'true';
				variableGR.order = 3;
				variableGR.insert();

				variableGR.initialize();
				variableGR.type = 5;
				variableGR.cat_item = cat_sysID+'';
				variableGR.active = true;
				variableGR.question_text = 'Profile';
				variableGR.name = 'default_profile';
				variableGR.order = 4;
				variableGR.insert();

			}

		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._createDefaultVariables :- Exception caught while creating default variables of blueprint. Error :- "+e);
// 			this.logger.error("Exception caught while creating default variables of blueprint. Error :- "+e);
		}
	},

	_toTitleCase: function (str) {
		try{
			this.logger.debug("Inside Nutanix_CreateCatalogVariables._toTitleCase");
			str = str.toLowerCase().split(' ');
			for (var i = 0; i &lt; str.length; i++) {
				str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
			}
			return str.join(' ');
			return str;
		}catch(e){
			this.logger.debug("Nutanix_CreateCatalogVariables._toTitleCase :- Exception caught while changing case of string to title case. Error :- "+e);
// 			this.logger.error("Exception caught while changing case of string to title case. Error :- "+e);
		}
	},
	type: 'Nutanix_CreateCatalogVariables'
};
]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-17 22:31:26&lt;/sys_created_on&gt;&lt;sys_id&gt;2f2b341e37f52300fdfc097973990e10&lt;/sys_id&gt;&lt;sys_mod_count&gt;414&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_CreateCatalogVariables&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_2f2b341e37f52300fdfc097973990e10&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-24 15:40:11&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1595472172</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>895887e5dbcc7c103e3c6a5b8a961954</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e9f0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_CreateCatalogVariables</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>1c41861a440f6c1045f09a5bc2ad045b</update_guid>
<update_guid_history>1c41861a440f6c1045f09a5bc2ad045b:-1595472172,a9678552c7cb2c107cdfde553ac99ff3:563808280,1fd4c9de018b2c10f96b7886c3447bcb:166394049,8c3a6bedeb4b281074c8f0808a33e070:180485146,9279efe9c44b281004cc3f892331852f:-1058931977,90e327fcedcfe410444b9c88d7e85f5b:374113876,4fa4d9504ecb641085bac843961b725c:1933956211,16c85900ef8be0104715a510907ad35b:-1254233752,39f14c09c6956490331536faf403d6b2:756516883,f8e84c4f83c1ec507009002357537fc4:-1676025091,889b30fa828d6c508163b19f97a74de3:757627196,38589c725f4d6c50b01cb2e4a6455700:-399545352,7a66a7529c8d2c50ab92bd0f294bb421:-2147090540,bd43c0326b052c10d3fdb44c212623a8:-1549357672,d33280beaec12c102a3a8e2fa222d6c1:667937144,c4592865f1cd28506e6cd0a7ac8c3446:-1455871176,b5a5286c06d31c10742ad35620eb56d8:-1312776822,de4639bebdee5450cecf285c0301e298:1678243968,273d6a8216eed0508bda2751704766ea:313034078,6fdca6c250eed05008e2f198662a9691:746607584,3d75c1f96caa90501bc3fbd8446046f7:1628711776,11450db9a0aa9050f951b28054d4baa3:-69022912,cbf867c55aea1050a0e34a0c8c4ad162:-320981770,2114c3c2be58141051d05d9668a09af8:249537967,b1654e0f191f80100e1388cfd2c1c3d5:1860593000,9c2ffd07501f8010d527f37344f91190:-55650950,2f9efd07c81f801075faf09f9fb7aa8a:-1167299967,2d5b710f0bdb8010c8ecb2ad188afb78:-248646205,fa88b187fadb80105018f7eff326dd53:1247398386,96a67547a2db80102b40d78aa522b98e:1360944827,c843398fa09b8010acb68e180a7b6d86:-2055529982,85e27da3a60b0810871c1e7eb1afcf50:1485319167,02303da3960b0810280af53e9fa34b6c:-1354628397,62f6e9a7aac70810d961de0adb313de6:109744573,088565a755c70810e7436e6626b5ac20:124184791,284a3c63c7070810566e0216e64f1d6d:-808262693,49d17463c0c30810fd7130abd53313ce:1266360391,1f0d28a7118308102735a63c64056edc:-1976361752,e2cb2ce716830810b41883c0185f8a24:-1556237187,09c8886b978fc4107205e525315ddfdb:1388761890,5ae6c867cc8fc4104b1f8548b339c0fb:1727062746,bbe58c2b1d8fc41024c26a9ff0ede6dd:-935194465,13b3c0a7488fc41018e9d335ed9de27d:-1570088606,39d28ce3d88fc41028e96fa33aedaa08:-880228356,f2d0c863a08fc410a42a86b1c9abd9ea:203092107,74aff7dbea4fc4107c57d93d6300b2c3:1883816050,37ce7b1ffc4fc410f6bae46f974caeb6:1033952913,6e7c3717d94fc410b45a6dcf489688a2:2044067657,d45b33d3d44fc4109e72d3ddfbb5e391:-1117331717,ecb9b353ea4fc410924a40431e37b701:1593036483,14e6f3dfae0fc41063316c2d4ae2c360:-1508145389,c4f4bf5fc70fc4108d46a4b31bf55793:-426317592,eef2f75b660fc410a62d986c6de424da:-2040145992,02e2bb1b920fc4103a730952b7668540:1002871698,2da13f1ba20fc4101440872969696fb0:-1093912136,49da2f539f0fc41049ab7f10ab20e99a:212694224,db936f57a5cbc4102ae788f67c31a6a9:-1317475934,6ea0a353eacbc410039ce80661ae3c54:1839979819,69f1652ea447441065ee403b3f0d7adf:593775857,d441adaaa0474410d90158bfdc779744:-1274928192,b7702d2672474410288a9a87b30e6910:-2090422090,671f912a4c47441065a9394c41fc164e:1237171595,6f9d9d26764744107d7d13d0f29c0b30:1294412829,3989d12aa407441035a045ea7c8156c1:-507840334,0358d1629347441026776e8c4b7783df:80345685,050bb86e3a83441067d5ade8bb91a3b2:-1748406936,bdb6770a7e470410e0d36806863ddae3:1213799268,a8a2b30ae34704100789669b2f59df92:-1493163526,dae1fb4e16070410d8225ac70bac7bb5:1244932399,3180b782a44704105607432d44aa8558:-1979239442,ac9ea7822f4704107bd5dac3c3ec1c83:418039507,ce24a3cae90704104f935e1f8789a097:325416816,08a2eb0a9e070410a22a27bad9d5bb31:-1059702461,d13d07c6bdc304108cccaee81097f649:699437883,90cb07ce3e830410183f9bc1311f9368:935290312,140837b817cf001012917351e7fa68df:940552476,3e13db70668f0010e0e3947c51198e7c:-1316725787,8fe80b38c04f00104a0342199cce321e:1914071995,043990135dfe4850d6c1a0506691dcf7:-369022853,1874d4ca12b68450bab3d23ac78376a6:-2066996611,cde020b20f1180104f942f62c94e8def:674672493,363b5fba25410410d33ac99ba8481044:-2032387635,d32e04f2fc33f300ff8fc685704277dd:-1644686549,ded8ff8a8bf7730067f4cd6774b275d7:-15774702,c0cc57ca66777300d69b3c60de656f44:-1578549838,bbcb570e0a777300ca52d4818452e6db:-1497867136,7ede7886e1bf3300f9bca113259193ef:-46600300,52afbed9d23733007c7fb13204f33882:-1448961741,9f9a0c9d8d3b3300968529403c2712cf:-1067278893,da5ec64046337300fd807010a51c0d87:1497686986,5b30f2004fff730073806f98d4c5d50b:-647715151,b8bdeac856bf7300fc77f95d3194d475:-1001859175,e30894fbf06f3300e694061d7e52e0ca:624332517,23125c737d6f33004c2009f919e3e46f:-921817607,052766c2a223f300070c58e4c6058cef:-1756341959,6a4d8935cfe3b300e0d3d0ed4c36bf0c:2034910071,6d8b09e11fab7300b1d906a6f33f6a9d:-659092863,ed06d3cd2d2373008cdd01e4a1f9ae13:-28674904,9ce5170d30237300fffda04a46379d9f:-595332612,59b2f58d57eb33007f79de712ef3073a:1310690930,510fe5c1a6eb330011d42ab8e8c60706:-451322510,844dad0d29ab33000113fbea43e93376:-2019305767,748ba50db5ab3300604f79afdb040891:-211786583,e75ab167dd9f33006ebf16b189bf5d67:-1126371746,738726aaf813330002b02da73f17cc70:1272246158,59ae7764ef537300aa33ac6c4b471c9a:-718917716,5f6ffe60051373000a06ee2fb37d12ee:-1800549916,7e5e32a08f137300016c3be9aa102198:-638627137,257cb2a03713730049376be0378eb36b:-1061016966,7f32aeb776477700901df62dcd387100:-478945160,027e06b7b00777008a60493be778f7f3:923603928,bbbc9adf078ff30039dccbb7d1012918:1177106262,132612175e8ff3000650bc62cb255f28:-248146828,802bd30791c7f300ce7c90c2ade3ff48:800291110,5399db839487f3003cc28188d91080f1:32423580,08217ac76b83f300534c5eda61942171:1634133382,6e9dea039d43f30086594137cc4df904:1588255286,6dd726c78303f30051c9f8b9138e9611:-51971455,a48c92cb728fb3008c72cc7aec4570a2:-1610204381,0caab54fcd0fb300f183a729e694bd0a:1443684141,968f49cf124bb30012fe3160922bc828:1325782911,b9ed0183988bb300f312572de7679494:-753487674,43a29af6f283b30032c67145f9bc3ff4:-685547464,414ecaf63d83b3003e740edf63afbcf5:-2004027367,d398c9f6d9cf7300fc077a7f3bd644ac:1826992435,a8e345b22dcf73008d011a682f9f8d7d:1827732143,f9a2c5b21acf7300474f95899d86f4f6:-1144303559,edf32cfa5a4f73003030e1acc9608848:1092351172,ec981f1212cf33005c7f26492e2254a3:-1474359090,d2189f12b3cf3300caff3fcdb9cf9794:-1890638253,d7c9d6c5538f3300d9ced15530f02431:1947959447,294cce782007330097d6d0378f859bfb:583327819,db5b112824873300f7a78c6c59a9edde:1654997300,def591e4ea4733009f94e5fff14a9289:-1838532822,1405916442473300edfb93fd6252a3e5:649427590,f0b45ce4014333002a94758e240f4717:-792922562,73b26b84f78333007d6593cb9e052fec:-511507830,64569f8433433300b39202a544cfc064:-783101979,5886db36567e7300485a598b41f9d071:248968354,7c90cbf290fa73003561df6aa7795559:759515182,e2ce7e36a5fa7300c79375e665fbc729:1094158057,8589faf2f8fa730020f003336f3a5c69:1915723317,d495f63223fa7300955bcd71ecf32406:-968511430,8654727255fa73005376038926256b1a:297574901,4c4332feb8ba730042081802571afb84:-1654952302,d6b08e4c8df23700d62f1f1661116b4b:1464584101,1f5d490cec7237004fbd4efcb4fcee44:1554921448,af1f594b69aa73004ba20b97cbc64ad1:-818725870,07fed903ceea7300045c1c2fe56219b2:2027168081,7c7c6212afa233002b68742609874926:1250510481,f599e29ab8623300b9b7c5fcd279a914:-318469664,5549e2da0b623300e6498995259d506c:-1013072295,26972a9aff6233008acf12d92b003610:-1432248807,12fc4656e02233009efd1287bead6049:-1740063368,eb412a8a27227300905ca2c27a646327:82485929,0a006606d52273005cdb7631d17ad1bc:-565109757,752b82b23c123300d1341dd23097d6e8:-1017446154,511abe35341a3300fbcef412f67cfe33:-526220996,e9d9f2f1b41a3300a3aaf9ad3941ab80:2143219659,9e7532b17d1a33004c9e11e82e7dc322:1628879179,0ff3f27d87d63300d7f8478735a09f0b:95839231,723fa6b565d63300947c0c58abe44cd1:-995715943,36e009034ac23300c7074e7b15278922:694784765,e764fe99ae82b300d64e75ec5f63eb0f:81300591,6a6fa2198982b300a1375feb5ea90605:-1902648625,262f0181624233008cb190a2540bc8d3:-2022745629,4d7fe9fa92b1330005bbbb5b4bf6a406:1064574211,ee54e9fa423133004b1567d356291fb7:682222495,cb6185ba8931330007c736626c8ccbdb:1573300148,86fee2aae9d7b3002aadad6f3081ac1d:-183109857,11bc7770fc1f330078758dcecb9052b3:480412876,35abe9594f697300152a8ebdbbb2e67c:1864499135,b25be51d5669730005352b860e602e18:446087309,dfc6e959c9697300576f782e6dcf30a6:-297147040,ed16ed19f4697300d45a81333556c23d:792894267,04062159c96973004571d9a7bcf5be0a:1489629144,849cea08b925730091b3e24744f88dc8:1672129779,9069f9c4c6a17300cc6d21e9ac67db63:1799896047,1b12744001ed33004bfa1d4ff1620c17:-1382347329,8a8920c475ad33009d64ebe732a7e183:1385076243,dcbf3b9323d573006d0615e02609d92e:1558341906,da7c3fd74f957300a8dcb5900b9f8e10:1796721394,6f893bd74a957300ee2065a0dc41585c:461203270,6411ff9355557300aedb41f681876a8c:-362641508,b6a22f575ad173000b2f9332625fecc6:1317756272,7dd6571f9611730019f2ab7b012474a6:316703778,35697c881f1d3300df99c02aa80ec955:-1174557968,ebe8f488db1d3300f9cf54eb3c81aeb4:70124202,a848b884581d33000b93f3fdfd84f1b1:-1403747481,efd5f884501d3300d74f66a6f9b6cb36:-1879378283,f9737c4ca7d93300bf4813d365abfe4d:-1216986235,ca5227bb19c53300a9c7780f2651f7ea:1585583877,78bf9ff7efc53300411a764ea1102034:-750712504,bf5fd3f735c53300896a2b68a9334e22:-1308217063,b31f17b7dac533008d2b1c782eef1d47:906693158,22ee93772fc533002a100fd9c5247f13:154585901,5e7a13ffdd85330078dc1f2a4e5f7e23:1502757199,f9641b3b4485330085688b94ca3b6a01:-1383371483,035c03ff9a45330047d3757b4661a4e1:599780029,9db0a9efd0053300cfc9a53f7f55f399:606905571,7781647a4bc533006712350adca04612:-1909784081,025bd07a70c53300a39d4b94ea34b9d9:847672115,26833ee1a9c57300caf9f827cec48f3a:1651808006,9d533aa188c57300b998cf2d39eea90e:-127881047,cfcdaa6171857300058286d3506cdd59:1651808006,69adeaedef45730025ca10b8309a09fe:-1133813385,8e8b26e96b457300e1d862c16aa5c7b0:-714227305,b05ab5ed1f817300c8e986f029546cda:62887065,1725e9ad7341730081b3bf39da9ddcef:190375097,969461a9d94173008c072beb4d4d9bba:1826801305,33ea9d65ed4173000455bc1e1aa88923:801149037,0da2cd9512853300dcbc55a13ea456f2:1359836781,73a1cc191dc133002fba7ca8d63e662d:1457211342,920503d34eb0730086a44ddb35028bc8:1300973562,65ecae1bf5307300f1a5625a77170f32:1853418951,57aad6535e3073000fb61022f33a8092:-1018612615,9efe551f117c330023f616849b9f8420:423423026,f6dd159b357c33007fc7a39a070ec5b4:-1038215413,b8b9b64fd6f43300f472852c87f2876e:646474162,3f95350307743300a4873be91637c9fb:1365821127,0e72698b8ff0330000e0c929161f8437:-1277351851,75322d8b74f0330071ebdd4a6642d684:-191464227,c81c510703f0330005bca05e338b93c3:-1864320739,ffe851c3d5f03300d421fa19279c2a41:475898245,470ac1c7b1b0330053549cbdd83468fb:1980234984,31bd8043b5303300d07fd7a35c25e20e:1668930170,016e79f636b833008a150dce168fbef7:-916227237,718b31bad1783300b069e467e9d70296:1733731160,1466b17a867833006a404c0f3e7b7135:75792814,ecb5757afe783300bc864a7ee385ea84:-1709040123,1235793a937833007b59f2771dc6113c:-327716744,37b4fd3adf7833007c0fe2543df487c4:1593078290,1f747d3ab97833006fec64210b4e5e6d:1473845200,1f14b1f6107833001249db60a6ad8812:2013168675,5ad3713a10783300b3059a02d181e3de:9240563,1f93b1f6887833002f2b778c24aadff0:456108736,c142b1f6d7783300c38f5ac39fbf6b08:991181415,6021b976a5783300f318691216124cdd:-986115342,bf1fa176557833006b3d84be3d59875b:886194977,8e71d9725e383300e5e521d30a1bac3c:646474920,193051b22f3833008f5625466e4f06df:-1919543182,a35f01fe9ff433005138c5a6ebdd8e8a:227081092,e8d634f2eef433008ab554c9988cab65:-2087987388,c42570b2fff433006723402c2d7ef725:899571811,1a63687ebc743300cac58b6c5c83be32:1304424216,0040ac727a7433001617253c0575f18d:1941835462,177e18724974330068a9dc91dcc16b8a:-1863367580,7ce284f27ef03300ad71cba4c4385f2f:175095074,adcb376e72b03300b93fb944cadf80ca:-596355144,c6642d11bfbc3300fdbd9b953f7fcbdf:-1261720651,11188745563833008e404330739f4959:1244983755,77ea56cdcb743300d2fd678d874b1cb6:-166661235,3f9d8e85f1743300a27b8b25604f58ab:1128305616,ae2c8e052174330035dd26dde0d9f9f6:1633935052,480c424554743300b4f660d90d2e5410:1764032283,10144a4dd8343300ab0cc3afdfeccc18:1848800031,1629f581d83433007392803e3c715dde:-2022401835,f83e15386a70f3005c593a879279e291:1288664481,fa9d11381e70f300aee6368562007c8f:1195100062,01dc59b4b070f30020543ae155fca1db:-1689842223,fd1c5db4cf70f30073aa42febbf16a18:-1262055311,b1fb5db4ed70f3004bcf088381335913:982825751,9787d9344e30f300c7373ea2bd601e3f:948538085,230a0d785ffcb300e28828c27ff4898c:1245124349,f5bdb870fdfcb300e22baca779c20a25:-2085567940,a53f8834617cb300370033eb3d621bbe:-1820183070,61f96bacc2f8b3006d9dc4adff246105:-2135527418,de9378646434b3008516475491111cd7:-1103384180,8b97a7d0c770b3003fc14041b6811d96:-1887595433,dd2f549c333873001c26d61752a99186:2045996868,6a00ef8cc6347300671532e575c8dbc7:1045586461,2ffed3cc9d347300d92c47a4b843e9fa:-1540737005,6d7953c8983473003586a2079e5df987:-1854365219,3e145f48c93473003472a2fedccfe8fa:-1447708498,4265c30ceff07300bb1308409d3940bb:-2102727131,206ff284c3f07300186e00b9bbc9c34d:1696642819,75d6aa880470730000309642973df73a:-1002004347,af06ea4c8c707300d8ae0d4a929c2fc6:-516821481,39f4a2481a707300083beab6a1a72c9f:778575037,f99d1e04e0707300e14776074e8b69d3:1011058803,90cb164853307300d3e281081fb8f106:497308439,54eada08b23073007aa9d17a0d8dc6c1:689277193,c03a5604a23073003a47586ecf538367:469458611,5b775e4c77fc3300986665b941091bf3:-1383554195,c376528ca0fc33008b6720ab4fd7215a:1235008212,0a36964cbbfc330055d73c8eb24e1d3b:415317186,55851e88affc33002169f62f25f4aa23:-1702446416,11045a0cd1fc330016441398582621da:-1908986280,7dbb0acc85bc330091955d43ae95ce5f:1348083141,ec98c6cc17bc3300a6e388bb63652e39:1511075157,71305dc81dfcb30083d53d22c3eb375a:-554187662,279b414876fcb30091029f0393a27056:-516689868,815bcdc4c0bcb3002418ad3724af384e:1216894669,0c34cdc801bcb3002e5b10cd0c89f183:500379543,3fb5fcc87abcb300be79028a88733e69:1304293644,37b3748c107cb300cb70bb3a9d0523b7:-1551324743,7973bc886278b3006059738aafe67de3:7227247,0231b8448ff8b3000a404e521f2cb2cd:1592483640,898f24c4e33cb30096a8499929d3d36d:2131008149,318dac04f37cb30034effa39a2ed3c28:426201532,8eb2debb7c28b300632ac2ed6b2a4f1a:-637079506,e3fd2223a820b30031b9a3eb59fd4130:-410241832,09d981677c64730027d49e02a3f20e43:1856738640,0d15d3c3b5ac330076bca3123be1ff1b:-2093402587,2d1397476e6c3300a46fb351cef5d307:305833485,abe2d78ba16c3300a5f822b3cb5c1967:319804519,49dccfcb076c3300ff4968c687a92070:-1033478098,882d7a07e86c3300ae7f812a81760a53:-846911904,83dabe833a6c3300bd3070a0aa87b332:876547571,a647d1ff8aa03300f96d01ade4308d26:1796134333,9ee890a3932073004d621ea5a73a769c:1377423975,ff78982fd9ec3300d6f084970674d0f5:536184839,25a3d0eba0ec3300d17d200e8093cfba:1892062005,938190e71dec33003216296892e9a791:993443511,326190e79cec3300c20839e6b02f37e6:1892062005,3f5e046304ec3300a353c05dc599f2cb:-615265483,717140ef316c3300f69111a5512a2b7f:1412560567,70c02222cfe43300cb18fc7cc1fad8ed:496890794,aa12f5c844b72300fe1e45858ef0efc7:1127102654,3e1364c0c03323004119948ecffda9f8:323400285,bee264446c3323009a4d8c91eb7ed313:89401649,0808e096fe532300fb709d02f3941833:-2072060428,92a916be3bf2230029b76e69b0bc0505:265927182,4089ca72c5f22300947666125aa897a9:-572313027,4c5469b6033223001ee5086bce803053:-2053381258,ff04253a3432230073f28f855b5b3a94:1473686336,63716db20932230020ab39aeccc4b546:-1202679959,31dedd32ac322300d030a4c7c940b7a0:-551099879,4734fd6e4c7223007cc7018f48cb015f:226026258,fee4febd5e2223008425120ff520757d:794673558,6833beb97b222300a6f60a006f8339a7:1666898330,b6cb3a90cd222300ccf60ac7183134a8:1843535087,ec9b7e588c22230053d73dd59f418a4d:-515754961,30ea3a90b5222300e3710bbc24ed94a3:-1347621679,4149b250dc222300cdfb23c6391f8634:649888993,fbd335f530522300adb3d3b2001f58ca:773985597,ace955e039de23007667ca8a51e27b79:-1739072355,e98b7b8f1d8a630034191fe3e680e62b:-1301153733,555a7b0f888a6300a673a4ab17404681:-2044766871,99be12cf94826300a4e2cdf199aeba53:2126953709,cbceed25960e2300e844b8f4f4c29d4a:1319455225,450e98e9a1062300eb2983346013eee8:1880179707,f68c1ca96d062300fbdf92c473cfe957:-1497483074,09dbd0a9a20623007e74119f6fbd6ad9:-2013346164,67f2fb9140c22300e8c2957bc05a7852:1922623672,9fa1bfdd7b822300a49f91db8f3b2672:95236082,2ecdafddfa82230038b4b245a626496c:257640257,3a1af98515c66b00212de25f7f2753b2:1312625635,be1e304db1066b0081cc97cc270ae580:-928269639,5f93847cd9822b0092fd66e977ca8959:1244638891,8cf997ac48022b00714d195306c10488:477002571,7ec6dfa816cee700dc60c820ae409199:-1898134736,9bb6dfa8e7cee7008b738252fdfe3a36:-106240368,45761ba882cee7007b43fcb96a1bbe9f:-64198115,4e06536852cee7009b531571f78fb002:-1277104017,ddc3dfe497cee700b17d86a116a59647:1615034840,2b435b28fdcee7003790ffa131ef78c0:-1131960482,8db25fe4bbcee7000b34c2a0b745b363:981602613,ae32dfe425cee700dd8d654625be2250:-1608704555,4c61176084cee7005436ad841429c7d2:-1838081795,1c2b0364258ee7002a85db2a925c34b3:355106723,02683264d98ee700dc7f33b44c62f01d:-1386130621,f83a82501306e700ef76227afd070a56:1358783253,f79942506b06e700e1cb7a57eaf0dbc3:397635509,c65359986b02e7004fc715ef15dfb170:430728857,a7f2d5986c02e70035360563c634789c:1715406225,9872d958ab02e700881cde5813ab4031:-1635387773,39ad0d10b402e7005e247e84e7f2caf4:-1420197883,71ced458bb4ea700532b4a5c5316e0a0:524557453,73bb4c98750ea700ffb6b5d4eb9d2365:70600196,86200c1cb20aa700ed323832daae2cfa:450786057,062ff7c8930aa700a85a09bc2af74a69:-186955407,593ef7c8a30aa7009d9767bb05952e61:156462643,b48d3788080aa700ea6309c087ac00b2:-1699872587,ad2dff48bc0aa7005d767fbd4b505c66:1831597932,7cecb3886b0aa7008b244bdabacb5527:-1616821896,f1eb3348690aa700fb8a4d5250dc7152:1076611168,a849bf44080aa7000ea36fa26a8761d5:-1771794013,9b85bbc0680aa700112379acd4d5b3cf:2034285040,5e42fb0cdfc6a700f767072d30a9b750:1999866589,a491deeb20752700ad72f9b829b5e422:1849162112,715f02abb17527009acf43d4b052ed7b:656849005,21de066b02752700af5f3cc73f9a4293:1408896122,ba9d0e2b8b75270081c950cc06daaba5:-669575119,a3af34eb337de300182c5f549f899f7c:767827567,1678f0a37d7de300f164c8817ee3e71b:1211821957,5cd2f86b163de30010ef97f0ae536142:-429627095,c6a2706bf93de300c2a42d6fb470c58e:-1197846776,06e17c2b173de300f418e7974b90a652:155437480,db91702b973de300eb82b7d303dba865:-168760164,be61302bba3de3006a0a0dea30328d99:930417890,b1a0b02b633de300ecfc46418868d0a0:-1023627941,817030a7f43de300df29a36efa61b556:-1629189631,ee4dec672e3de300d0cd649d55fdf57e:618151139,ae1da067c03de3009fea41bc72bffb74:2145600391,781ca0673d3de30052718e2dca700d6c:-528159349,6babac27e53de3002465716b3561a818:-1740118219,a66be827963de300f3370a8a93134516:685046578,6eda24279b3de3002e0a0bc42234e6d3:1382878634,a1ca60279a3de3002fdb02278b964c7c:-1594294582,bf6a2027dc3de300c20d9a7d72ee7726:-1512654581,3ba9a0a3283de300dd99fead0545af9b:24607798,9e2960a3373de300c77e639220b3b095:-203920203,2ad860a3ce3de3009d1d6cb87d715090:-1384845931,1a0860a3da3de300a8bb1aa48470dc84:-1779530113,f59764afadf9e300f42c5b895d295cdf:-629516899,70e66823f13de3005e68479c670836a3:-1398270156,39b4e4ef98f9e300d18bc0bcd62f53c9:-767960025,2bb1f1030039a300e4c0cac91438c207:1705184675,4840f58f02f5a300d2b51173d3fd920b:395460767,d99ccdcb4e75a300ef328ad6c882b9a0:1623915899,e6bf5db2627d6300d6bda03fcf64a3ae:-461866307,b134d8beec796300e9698f0c7a1917ea:1060944635,6cd56feec3f56300557b533c1c161f62:-1080487538,0602afeebdf56300bb8f5559a4e9ac92:-1659569148,3a6e9b6e9cf5630060455d6922e04dd1:1649624499,36fdd36e8af5630026d56a59f4b37146:-1402374833,d1dd17ea9ef56300685fc6c1d4699b16:1549424178,a06db2ea05b5630052d6c94c0911cba7:1463607696,6ac5faa633b563004a35b57be4145533:1899307330,5e043666a7b563004fad180688e92950:-631829121,a852f2e21eb5630018c41dc491f46794:-556725857,12713aa241b5630079e756f8b32f4183:103598334,87a0b2a293b563004651f222fdd6e99e:-404863281,e020ba6276b563001d87d1ab6346cbfb:-1002654562,ed8fa66208b563004818a4caf2b940a7:306198172,b8cd662258b56300b109c79a5f9d1f74:1523547733,e40d6aeef975630072bed7efc9f18f69:321130654,138ba6ae8b7563006cc6b1fbe63df8fd:337254969,144aaaea1b756300fa4c2d81e9eea222:1802063413,9739a62e0275630095dd140a2df4e158:1919447395,9cf6a1a6d9f16300e1cdc48e130050f0:-1125548035,94966da61bf16300b395d725c52c0f1b:-1643149603,492625a699f163009fc8a0d9055bcf27:1909886919,5d06e5a61cf1630010603c4a44574186:427561805,3033e1e2fff163006943485beed470e0:-33000556,cbb261a28bf16300e1fcb07a58d7a803:1944152781,cd42e9ea71b16300dcfbea102c0a2439:-512018485,2c485d2ee4b16300b13ea9c74f7b2969:1218905259,0e7b379633fd230070ba39f71a0dc58b:-1867151705,30e77356c6fd23002d5d15889da8de16:-989384450,7d27bb92d1fd2300b8a4608e6080d40a:1943933370,f5d37b9204fd2300779ee780269575f6:-1073165674,15ba8a1a50b923005a5b29e33c595682:-1373562509,5407c296f7b9230096b466791f06bb66:375485013,0b4b741ef4f523003efc56c957e42e3c:2074301322</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_128fe45cdbd22300570c9b81ca961949</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;copy_item&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;false&lt;/client&gt;&lt;client_script_v2&gt;&lt;![CDATA[function onClick(g_form) {

}]]&gt;&lt;/client_script_v2&gt;&lt;comments/&gt;&lt;condition&gt;current.sys_class_name=='x_nuta2_nutanix_ca_nutanix_marketplaceitems'&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;false&lt;/form_context_menu&gt;&lt;form_link&gt;false&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint/&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;messages/&gt;&lt;name&gt;Copy&lt;/name&gt;&lt;onclick/&gt;&lt;order&gt;100&lt;/order&gt;&lt;script&gt;&lt;![CDATA[gs.addErrorMessage('This action is not available for Nutanix Calm App.');
action.setRedirectURL(current);]]&gt;&lt;/script&gt;&lt;show_insert&gt;false&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-12-06 13:04:40&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;128fe45cdbd22300570c9b81ca961949&lt;/sys_id&gt;&lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;&lt;sys_name&gt;Copy&lt;/sys_name&gt;&lt;sys_overrides display_value="Copy"&gt;368d20f0c0a8010a00aa4c7caeb13143&lt;/sys_overrides&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;protected&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_128fe45cdbd22300570c9b81ca961949&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-01 07:48:26&lt;/sys_updated_on&gt;&lt;table&gt;x_nuta2_nutanix_ca_nutanix_marketplaceitems&lt;/table&gt;&lt;ui11_compatible&gt;true&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>-377925747</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>895887e5dbcc7c103e3c6a5b8a961957</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98da10000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_marketplaceitems</table>
<target_name>Copy</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>f9b879ba2a66201067d89b2c995f60d8</update_guid>
<update_guid_history>f9b879ba2a66201067d89b2c995f60d8:-377925747,b64639f6a1662010012bd9502e729bc0:1836543706,a3ef2c5c4bd223008c76bf89288ead9d:1690755429,19dfa85c3ad223003b17f00b3fa6299f:-2051052219,02cfa85c6ed22300897c571b87d14d29:1014478388</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_9efc32d72f7e6810da242f2ef699b6c4</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="INSERT_OR_UPDATE"><cleared>false</cleared><disabled>ignore</disabled><field>calm_admin_username</field><mandatory>false</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-15 12:19:44</sys_created_on><sys_id>9efc32d72f7e6810da242f2ef699b6c4</sys_id><sys_mod_count>0</sys_mod_count><sys_name>calm_admin_username</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_9efc32d72f7e6810da242f2ef699b6c4</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-15 12:19:44</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Toggle credential system">48918ffe1b1ecc50ac43877ddc4bcb96</ui_policy><visible>false</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>1462749600</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>895887e5dbcc7c103e3c6a5b8a96195a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98df90000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>calm_admin_username</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>d81d76d7ef7e6810c7a6dcf5b523cdcc</update_guid>
<update_guid_history>d81d76d7ef7e6810c7a6dcf5b523cdcc:1462749600</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sysauto_script_17c0befb07efa010ed23f2508c1ed08f</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sysauto_script"&gt;&lt;sysauto_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;business_calendar/&gt;&lt;condition/&gt;&lt;conditional&gt;false&lt;/conditional&gt;&lt;entered_time&gt;1970-01-01 00:00:00&lt;/entered_time&gt;&lt;name&gt;Profile Variable Field JSON update as part of 1.4.4 migration&lt;/name&gt;&lt;offset/&gt;&lt;offset_type/&gt;&lt;run_as display_value="System Administrator"&gt;6816f79cc0a8016401c5a33be04be441&lt;/run_as&gt;&lt;run_as_tz/&gt;&lt;run_dayofmonth&gt;1&lt;/run_dayofmonth&gt;&lt;run_dayofweek&gt;1&lt;/run_dayofweek&gt;&lt;run_period/&gt;&lt;run_start&gt;2021-04-23 07:30:11&lt;/run_start&gt;&lt;run_time&gt;1970-01-01 08:00:00&lt;/run_time&gt;&lt;run_type&gt;on_demand&lt;/run_type&gt;&lt;script&gt;&lt;![CDATA[try {
/* 
   Below code fix for an issue in migrating catalog item from V1.4.3 to V1.4.4.
   Issue : Field JSON was carapted in V1.4.3 in case of dependent variable. 
   Resolution : Below code replaces field JSON of catalog item variables with their respective blueprint variable JSON.
   
   Note : Execute below code after sync operation. 
*/
    var created_cat_item = new GlideRecord('x_nuta2_nutanix_ca_nutanix_runtime_configuration');
    created_cat_item.addQuery('state', '!=', 'inactive');
    created_cat_item.query();

    while (created_cat_item.next()) {
        var blueprint = created_cat_item.blueprint + '';

        var variables_pro = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
        variables_pro.addQuery('catalog_item', created_cat_item.item_name);
        variables_pro.addQuery('isprofilevariable', true);
        variables_pro.addQuery('field_json', 'CONTAINS', '}@@');
        variables_pro.query();

        while (variables_pro.next()) {

            var profile = variables_pro.application_profile + '';
            var field_json = variables_pro.field_json + '';
            var variable_name = variables_pro.variable.question_text + '';

            var blueprint_json = new GlideRecord('x_nuta2_nutanix_ca_catalog_variables_properties');
            blueprint_json.addQuery('catalog_item', blueprint);
            blueprint_json.addQuery('application_profile', profile);
            blueprint_json.addQuery('variable.question_text', variable_name);
            blueprint_json.query();
            if (blueprint_json.next()) {
                variables_pro.field_json = blueprint_json.field_json + '';
                variables_pro.update();
                gs.info('field json of ' + variable_name + '(catalog item : ' + created_cat_item.item_name.name + ' ) migrated to 1.4.4');
            }
        }
    }

} catch (e) {
    gs.info(e);
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sysauto_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-04-23 07:32:18&lt;/sys_created_on&gt;&lt;sys_id&gt;17c0befb07efa010ed23f2508c1ed08f&lt;/sys_id&gt;&lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;&lt;sys_name&gt;Profile Variable Field JSON update as part of 1.4.4 migration&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sysauto_script_17c0befb07efa010ed23f2508c1ed08f&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-29 11:00:35&lt;/sys_updated_on&gt;&lt;time_zone/&gt;&lt;upgrade_safe&gt;false&lt;/upgrade_safe&gt;&lt;/sysauto_script&gt;&lt;/record_update&gt;</payload>
<payload_hash>87939276</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>8958cb25dbcc7c103e3c6a5b8a96199a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98f550000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Profile Variable Field JSON update as part of 1.4.4 migration</target_name>
<type>Scheduled Script Execution</type>
<update_domain>global</update_domain>
<update_guid>47fa1a71c87320106ac7cf79ad9c9ccb</update_guid>
<update_guid_history>47fa1a71c87320106ac7cf79ad9c9ccb:87939276,3d2a06354cff245cb157d0ad67c20dde:-765703895,a71582fdec3f245cde6d70bb03b8cb28:585147251,dec2f2bf3aefa0109c19d6d584ca5898:-776036135</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_properties_bbb212901b83a4107f2a8515ec4bcbaf</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>Migration of 1.4.4 for 3.2 calm version</description><ignore_cache>true</ignore_cache><is_private>false</is_private><name>x_nuta2_nutanix_ca.1_4_4</name><read_roles>x_nuta2_nutanix_ca.calm_admin,x_nuta2_nutanix_ca.user</read_roles><suffix>x_nuta2_nutanix_ca.1_4_4</suffix><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-18 11:50:08</sys_created_on><sys_id>bbb212901b83a4107f2a8515ec4bcbaf</sys_id><sys_mod_count>3</sys_mod_count><sys_name>x_nuta2_nutanix_ca.1_4_4</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_properties_bbb212901b83a4107f2a8515ec4bcbaf</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-19 18:47:02</sys_updated_on><type>string</type><value>0</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=bbb212901b83a4107f2a8515ec4bcbaf"/></record_update>]]></payload>
<payload_hash>-1700800412</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>8958cb25dbcc7c103e3c6a5b8a96199d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e350000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>x_nuta2_nutanix_ca.1_4_4</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>781c7030000be410e0672360b423b214</update_guid>
<update_guid_history>781c7030000be410e0672360b423b214:-1700800412,f1645214f583a410386a3c310ef9a25c:397221077,dc3312d00583a41008a4a231bf001290:-612748853,4013dad09483a4109732064e0d646ee0:143488782</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_transform_entry_b2b0a6d32fdee010962a877cf699b611</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_transform_entry"&gt;&lt;sys_transform_entry action="INSERT_OR_UPDATE"&gt;&lt;choice_action&gt;create&lt;/choice_action&gt;&lt;coalesce&gt;false&lt;/coalesce&gt;&lt;coalesce_case_sensitive&gt;false&lt;/coalesce_case_sensitive&gt;&lt;coalesce_empty_fields&gt;false&lt;/coalesce_empty_fields&gt;&lt;date_format&gt;yyyy-MM-dd HH:mm:ss&lt;/date_format&gt;&lt;map display_value="Nutanix Transform MarketPlaceItems"&gt;5228bcc3db91230084249235ca961967&lt;/map&gt;&lt;reference_value_field/&gt;&lt;source_field&gt;type&lt;/source_field&gt;&lt;source_script&gt;&lt;![CDATA[answer = (function transformEntry(source) {

	// Add your code here
	return ""; // return the value to be put into the target field

})(source);]]&gt;&lt;/source_script&gt;&lt;source_table&gt;x_nuta2_nutanix_ca_nutanix_staging_marketplace_items&lt;/source_table&gt;&lt;sys_class_name&gt;sys_transform_entry&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-02-18 13:44:57&lt;/sys_created_on&gt;&lt;sys_id&gt;b2b0a6d32fdee010962a877cf699b611&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;type&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_transform_entry_b2b0a6d32fdee010962a877cf699b611&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-18 13:44:57&lt;/sys_updated_on&gt;&lt;target_field&gt;bp_type&lt;/target_field&gt;&lt;target_table&gt;x_nuta2_nutanix_ca_nutanix_marketplaceitems&lt;/target_table&gt;&lt;use_source_script&gt;false&lt;/use_source_script&gt;&lt;/sys_transform_entry&gt;&lt;/record_update&gt;</payload>
<payload_hash>1831127083</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>8d5887e5dbcc7c103e3c6a5b8a961956</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d2f0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>type</target_name>
<type>Field Map</type>
<update_domain>global</update_domain>
<update_guid>bcd0ae9308dee010e247cee4e632dd23</update_guid>
<update_guid_history>bcd0ae9308dee010e247cee4e632dd23:1831127083</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_6bad321b2f7e6810da242f2ef699b66b</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="INSERT_OR_UPDATE"><cleared>false</cleared><disabled>ignore</disabled><field>calm_saas_and_servicenow</field><mandatory>ignore</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-15 12:22:41</sys_created_on><sys_id>6bad321b2f7e6810da242f2ef699b66b</sys_id><sys_mod_count>0</sys_mod_count><sys_name>calm_saas_and_servicenow</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_6bad321b2f7e6810da242f2ef699b66b</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-15 12:22:41</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Toggle credential system">48918ffe1b1ecc50ac43877ddc4bcb96</ui_policy><visible>false</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>-392801117</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>8d5887e5dbcc7c103e3c6a5b8a961959</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98deb0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>calm_saas_and_servicenow</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>63bdf697c37e6810f5be97ff15a3610d</update_guid>
<update_guid_history>63bdf697c37e6810f5be97ff15a3610d:-392801117</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_documentation_x_nuta2_nutanix_ca_nutanix_staging_marketplace_items_type_en</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_documentation element="type" label="Type" language="en" table="x_nuta2_nutanix_ca_nutanix_staging_marketplace_items"><sys_documentation action="INSERT_OR_UPDATE"><element>type</element><help/><hint/><label>Type</label><language>en</language><name>x_nuta2_nutanix_ca_nutanix_staging_marketplace_items</name><plural>Types</plural><sys_class_name>sys_documentation</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-18 13:38:45</sys_created_on><sys_id>466fd6932fdee010962a877cf699b666</sys_id><sys_mod_count>0</sys_mod_count><sys_name>Type</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_documentation_x_nuta2_nutanix_ca_nutanix_staging_marketplace_items_type_en</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-18 13:38:45</sys_updated_on><url/><url_target/></sys_documentation></sys_documentation></record_update>]]></payload>
<payload_hash>1759567243</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>8d58cb25dbcc7c103e3c6a5b8a96199c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d160000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_staging_marketplace_items</table>
<target_name>Nutanix Staging Marketplace Items.type</target_name>
<type>Field Label</type>
<update_domain>global</update_domain>
<update_guid>4a6fd693fbdee010a8623ffe763c8fe3</update_guid>
<update_guid_history>4a6fd693fbdee010a8623ffe763c8fe3:1759567243</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_48fdcc0c37022300d27b8cf6c3990e74</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Perform_Action_Condition&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Perform_Action_Condition&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Perform_Action_Condition = Class.create();
Perform_Action_Condition.prototype = {
	
	initialize: function() {
		this.utils = new Nutanix_Calm_Utils();
	},
	
	performActions: function(parent_uuid, action_name,action_type) {
		var syncFlag = '';
		var delFlag = '';
		var grQueue = new GlideRecord('x_nuta2_nutanix_ca_nutanix_process_queue');
		grQueue.addEncodedQuery('state!=complete^state!=error^topic!=startInventoryDelete^topic!=processImportedApp^topic!=importRecoveryPoints^topic!=processRecoveryPoints');
		grQueue.query();
		if(grQueue.next()) {
			syncFlag = '1';
		}
		if(gs.getProperty('x_nuta2_nutanix_ca.Delete_Flag')=='1') {
			delFlag = '1';
		}
		
		var app_action = new GlideRecord('x_nuta2_nutanix_ca_app_action_workflow_trigger');
		app_action.addQuery('actionsysid.parent_uuid',parent_uuid);
		app_action.addQuery('approval_status','waiting_for_approval');
		app_action.query();
		if(app_action.next()){
			gs.addErrorMessage(app_action.getDisplayValue('actionsysid')+' '+app_action.actionsysid.type+' action on this application is in waiting for approval state');
			return false;
		}
		
		var gr = new GlideRecord(this.utils.configuration.table.NutanixCalmApplication);
		var act_name = action_name+'';
		gr.addQuery('uuid',parent_uuid);
		gr.query();
		gr.next();
		
		if(syncFlag == '1' || delFlag == '1') {
			gs.addErrorMessage('A sync or a cleanup task is currently in progress. Please wait for them to finish.');
			return false;
		}
		if(gr.action_flag == '1') {
			gs.addErrorMessage('An action is currently in progress');
			return false;
		}
		else {
			
			if(gr.application_type == "SingleVM" &amp;&amp; (gr.attributes + "" == "AWS_VM" || gr.attributes + "" == "GCP_VM" || gr.attributes + "" == "AZURE_VM")&amp;&amp; (act_name == "action_update"|| act_name == "action_image_create") &amp;&amp; action_type == "system") {
				gs.addErrorMessage('This action is not supported for this version of the plugin.');
				return false;
			}
			
			else if(gr.state == 'error' &amp;&amp; !((act_name=='action_soft_delete' || act_name=='action_delete' || act_name=='action_update') &amp;&amp; action_type == 'system')) {
				gs.addErrorMessage('This action is not applicable for applications in '+gr.state+' state.');
				return false;
			}
			
			else if(gr.state == 'stopped' &amp;&amp; !((act_name == 'action_start' || act_name=='action_soft_delete' || act_name=='action_delete') &amp;&amp; action_type == 'system')) {
				gs.addErrorMessage('This action is not applicable for applications in '+gr.state+' state.');
				return false;
			}
			
			else if(gr.state == 'running' &amp;&amp; ((act_name=='action_create' || act_name=='action_start') &amp;&amp; action_type == 'system')) {
				gs.addErrorMessage('This action is not applicable for applications in '+gr.state+' state.');
				return false;
			}
			
			else if(gr.state == 'running' &amp;&amp; (act_name=='action_install_ngt' &amp;&amp; action_type == 'system') &amp;&amp; gr.ngt_state == 'INSTALLED') {
				gs.addErrorMessage('NGT is already installed on this VM.');
				return false;
			}
			
			else if(gr.state == 'running' &amp;&amp; ((act_name=='action_manage_ngt' || act_name=='action_uninstall_ngt') &amp;&amp; action_type == 'system') &amp;&amp; (gr.ngt_state == 'MOUNTED' || gr.ngt_state == '' || gr.ngt_state == 'UNMOUNTED')) {
				gs.addErrorMessage('NGT has not been installed on this VM.');
				return false;
			}
			
			else if(gr.state == 'provisioning' || gr.state == 'deleting' || gr.state == 'stopping' || gr.state == 'starting' || gr.state == 'busy') {
				gs.addErrorMessage('This application is still in an intermediate state.');
				return false;
			}
			
			else if(gr.state == 'deleted') {
				gs.addErrorMessage('This application has been deleted. No actions are permitted.');
				return false;
			}
			
			else {
				//this.logger.info('App action '+"'"+act_name+"'"+' started on app: '+gr.name);
				return true;
			}
		}
	},
	
	type: 'Perform_Action_Condition'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;bharat.vajj&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-23 05:50:39&lt;/sys_created_on&gt;&lt;sys_id&gt;48fdcc0c37022300d27b8cf6c3990e74&lt;/sys_id&gt;&lt;sys_mod_count&gt;161&lt;/sys_mod_count&gt;&lt;sys_name&gt;Perform_Action_Condition&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;protected&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_48fdcc0c37022300d27b8cf6c3990e74&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-24 03:43:10&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>78957697</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c15887e5dbcc7c103e3c6a5b8a961955</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d880000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Perform_Action_Condition</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>5ca013cddb6ea010798c078401b48521</update_guid>
<update_guid_history>5ca013cddb6ea010798c078401b48521:78957697,f1e7dc7b15d7d45062a3245a3ab9e16f:218877365,1809ebc4d4e5185049949449542aaee8:531396157,c0a6a38491e518509594aaab995e25f4:1067458900,1c08c4fa6866081009dad76c2396f0e9:-71507678,00692f1b06d100102ba4518bb8a43d2f:-1948120933,307ccdc82149cc502b98cd8bcdc19363:302609277,6a2e29ceddf84850fc5253ef33be03da:799483885,a8b2edbd5bfc08509c67a5fb04d60a0f:-799527030,aca2e9fd71fc0850cbd5e833d01d27b4:950669860,34f1a1fd82fc0850ecc85d5eee0bebf7:-2009032402,0b6e37edffb80850ed4e1b608776bc0b:-1788494962,694ef3adb2b808507f46c924650fe4e1:-277295911,5b2ef7ad74b808500c046b75d45319d5:-1337209421,628d7b6d5db80850a4b0a00f812ab1a3:779870643,5f5c7b6df7b80850912791165c7a1b9b:-2134502441,5d7bbf2d67b808502a42ff6e6fd57226:755427872,bccc18adbf300850fe43ce5201a89c59:-268305861,24d957dd4a7cc45099d853c187c41641:-1661552416,8497975d207cc450a52a20db266aa9fc:-2110858161,234d8b9d043cc4504ed8626382c178ce:-1439879941,8d42c35dfb3cc45002d95064c7817c07:-1702923935,f191c35d583cc45067e169c516e6b701:1935735489,4f16c6b733e4c0505015cffd55939c60:1370905064,633d315fb2d88410eb24ade51754c0bb:-2110858161,28ac315f8ed88410e6f286d2d973eba3:2113016463,1a1c315f73d8841013407a5676bd5c9d:1189718377,2c2af1979ed88410843ad79ac8180682:-620978539,f2a7b117f0d884106b14d4888f61bb60:-532940665,bb6771175bd88410798c3df6000211c3:-2026098525,da37791769d884104171db78794983cc:-1779740797,f56679d34bd88410c6ec078313f8b4ad:-901270680,3e143513ccd88410e14e4357e187fdb3:-425020646,6bd331537fd884105afe71b312af5c6f:-1250427456,af23719fec98841068833e7dabf4d4dd:2063022688,a142f15ff5988410bc68061738ee93b7:-905757493,50227ddf079884107ee960ff2e2b8101:1304595713,2ea13ddfdb9884101deff59a6f962aca:-1773903188,5f31f9db1f988410c2148a60ec4cf561:1725143961,ac9ee19b2d9884100acbda990b0a7aa0:-580947367,afab6d9b509884102f63ef536bdd0b8b:-1963615463,f8985d5f501884104172fdd31d7c7392:271582329,4f9e38eedfdd4c1076c8fe3c724c8c8f:2122413379,b4fa38429eb37300e77113165e86e25a:68984605,85e0ab3ce867330077227731030fa87b:199833766,f1de1f780d673300c2cbd1d7d3a8a879:1848113617,56f71b343c6733008de62f7c81ed13d5:1198978907,93e4d4d389db33000273f829a5613e05:1701136332,ebde9b32361333009dd15961d631e084:-1760563894,df3e57f2af133300bfb35be109f10eb0:-1699764072,bb1eb5214ed233008ddcc51ce31c00de:-2116063618,0d4ecb789af133001ca88d98a67e8c04:1317191390,a2ccfe7c8eb1330024a95343e6164755:1143249449,290b763c5eb133001f104f8ec8ab89a2:-1888581014,dfe5fe3825b13300f99c3b9be09c8677:342781022,6275b678beb133008340407f99658a42:-1573740433,c0553e3857b13300aaa29a94ce14f42f:1555694183,1c93bef43fb133007d7eebc33d866872:-135550913,b00c6eb068b13300de1b89097f7a7ae6:-1850518382,d27622bc75713300d2e0436f6a6b7762:1147225668,2d46aabcaa713300a4b63dad4215f1cb:-2086272542,cc366e7c3f713300322a1ff687b67592:-815871902,01a713f1fa213300167edf527fdb0247:1147225668,dde64144d0217300dd6d724baca090c2:-696246998,8a49b08811ed3300bfea198c304cb5dd:271054555,dcdf12938b9d33004e841b2a47028917:1093481519,fc8b5f5930f8f3007c48db6c847eb945:506376105,23627d5765143300e3cc77a0dc4411ba:1445991395,2f523d571c143300a3f234f232cea2ce:1565862111,d5523d573f143300150ccc7158acd28f:644241486,4132f99f45d0330082d426f9b92b4848:1376042678,b86e555724d0330070c7f971f95e0221:620111787,073e151b2cd03300f50342eb9219be30:-1901422283,778dd11be7d0330044b600d754bebfef:1376042678,95d65d53afd03300d27ee40355a1e355:-158834636,7f565153fdd0330008d28d120780ba7b:529267043,ae05d5df4b903300dffac5d848438249:-1872883875,44da051b41903300d986b6c539950eda:1371661168,aa38cdd790903300480244aa0a155c26:-1197759325,492785970a90330041f62cffa41fef60:682281307,46074597669033009a34cec91e1787c9:-1699978395,4886cd974a903300b7e14223011b8ad8:682281307,93d2fc9beb5033007103aa0a382d6219:1484489994,e0b23cd7495033009e21e452e9164e69:-211469527,0d72789b15503300b616f85473fa0aa2:469043965,aa2b4a96ab9033006d4f8bd18fa632fc:414820531,7c5ac696e99033004f57121a0a808cc9:-1857761197,7c680e5670903300c0106979d63657ab:887657393,3cf2a4a0249a230012ca0da9d2b5de02:-150583061,d2689068af5a23004349817289f55e70:1173178190,f24a52bfb34223000d5b31a21493bc5e:-326562047,7bb90a67194623004e5038faa2a57100:-1180250553,81aae52fc2c2230028e80b6bb761a332:1729450905,801ae12f67c2230045817579c1a3aacf:-31284007,edde7cebb142230098db90fad9654b47:1832543898,11d970e74742230072ca6439ff32e788:-1490758908,596fec2f060223003ded65af4da17b2d:958755774,0ae124271d022300e871b1ca87776492:-1687088203,839766e9c1822300fc3f946bc708769e:-533856106,5706ae69a782230018fa2f722229835a:330051734,0848c6610c422300603f6b61a6fec4de:-1358179786,c6d5c2edb1022300752e1f459605c62e:2051801313,cd470589f60ea300a9d69ebfe1d370c6:-2120550399,b033eddc648e2300aa02b35203ba7665:-1795079113,64e2e11040ce230087e40363c916b0b6:-1045573434,80d2e110c9ce2300c8cb8c47f6f8f7b0:-175585334,a0a2e110fbce2300342beaade7c4bf7b:-1045573434,6d52a1dc4b8e23006e76c81c4f563c9a:506550422,0920e19c558e2300cf86f46d636c5d30:-71999656,e9fb5518058e2300f39ef2bfd4007089:-1035480341,1e94d154b78e2300fc733bbbe0b03a78:1648150067,16341d14078e2300270ca033d120793c:2032582189,c424d9147a8e230090bc71fac84c8fc9:1690591667,ebd359143a8e23007cc8898ed000c629:-1888441997,47435114238e2300ad3f0182236a3b74:451603609,5d4315d0ee8e2300563abd9a71403ce4:1385233402,ac9255d0dd8e23001ebc8413deee95d8:-597078253,147255d09f8e230073fed6c84b4c8dd3:-1081353716,8eb195902d8e23008e4701660b237119:-2072963105,06f09950178e23009e4de64d77394011:647440501,35af65c44246230049b73415d705cf5f:163001214,936a19c89d062300d14765deb19ed017:-997384510,a6fd3040dac223007e1f4bd63530da27:557823749,24bcfc8c5982230002bd6e955cda7dc8:-2138533889,67fbbc8cea82230003830c30c03af5bd:-269320221,7cebbc8c67822300c103a45522a481cb:-1052639957,5ea9308c1882230089547308f42391ee:-150425459,f769b04ceb822300422c8264d294d81f:833427437,8ae8f40ceb82230036ad5429e1920fbb:1759159445,09e7b40c308223004f579d015567bb82:-1632478838,d1b7300c96822300664042b49deb8200:-1112838997,8687300c998223004acc80f44bfeafc8:-1136903127,7d37b8c863822300b67cc8e8dedef32d:521230449,c327fcc8498223005dc8f856354980d8:681140264,9ac678c82a8223008bf8e913f7c56998:-877642893,c586f0c81282230099ba9b554c547b9f:-436800476,4706f0c85a8223006b5bdfa132e9fc89:1611622917,fed570c865822300d609b983aaa191e7:-871676986,ef4968c02482230073296f4fb3bf8583:259182906,060924c02b82230007ba406f8412b2ca:-1351672634,0c0928809a822300d5780a77b4f04196:1965635410,a4c4e0cc16422300c52a40e41728a8ee:924194822,aa646c8c464223008383bee4a0a6b6b9:-1915011874,62c3608ca1422300653e189f316b8a29:-2039064578,a323684c43422300029d3910ce489088:-486080131,3c92e04cb6422300c5af43115b1f2053:-1040544021,78b1e00c85422300e66425b66f3af056:-486080131,6d81a40cb84223009e4b27496b0ce843:-1548692218,ea3168c8e54223009a4c915312104e38:-1031373249,12d068c8fe422300cefa5de6a8fb19e7:1655555320,05b064c8924223004c51990a2106b07a:924194822,4b9068c8dc4223000e0c471233a8a929:627584094,158068c8e74223008c099908a059a1e0:924194822,df1064c890422300ce9f386902fe6141:-653784927,feef18887c42230040f3d3a32d890f60:1333483748,1e2fd4883f42230039fabe8389f93f76:802840430,438e1088844223000769cdde1d8a0f14:896064,323e98485542230020d19e5c85800ca8:-1863049792,d9fd5048a54223008dfc087682cbb901:896064,89dddc08ff42230011a895e222d3c359:-1863049792,848d9c0834422300f08597acc39578f4:896064,a71dd40896422300fefd07f3966cccc3:1489028316,3f9c9408b24223002b82132d548eaea1:-811813236,7dfb58c450422300e5250588dd9f77ac:-1863049792,f26bdc8439422300cc8785f7c93c60ba:896064,3e1bdc84c84223002b63513f82d3e7e5:-1863049792,c28adc840042230005fb7f9dc0e183b1:-1986837931,523a98845242230071cd61540086d2f2:563995138,3fa990849c422300cc5cb0b789eb7c3a:-953523512,08c85044ce4223005b39276e0c5cb1db:1943121139,1bf7d4c000422300adb5e9f0c2552c9d:-1116166220,ca4658406e422300c55fb08bce4cb914:-756809074,58845000ee42230044ed4c3f7945366a:-1734747341,07335800174223005e6e6ddb1dfae420:-1444036331,d95210cc52022300089533445bd7803e:1434413226,9cd09c8c0102230042b73b809dc3e382:1890817927,b2a0d48cc0022300de7d1b3781b2d36f:707133560,e1cfc40cfd0223004b3ca25f6889839c:1764459991</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_c20f9998db5623000462fe1b68961972</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;copy_item&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;false&lt;/client&gt;&lt;client_script_v2&gt;&lt;![CDATA[function onClick(g_form) {

}]]&gt;&lt;/client_script_v2&gt;&lt;comments/&gt;&lt;condition&gt;current.sys_class_name=='x_nuta2_nutanix_ca_nutanix_catalog_items'&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;false&lt;/form_context_menu&gt;&lt;form_link&gt;false&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint/&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;messages/&gt;&lt;name&gt;Copy&lt;/name&gt;&lt;onclick/&gt;&lt;order&gt;99&lt;/order&gt;&lt;script&gt;&lt;![CDATA[gs.addErrorMessage('This action is not available for Nutanix Calm App.');
action.setRedirectURL(current);]]&gt;&lt;/script&gt;&lt;show_insert&gt;false&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-12-06 16:31:55&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;c20f9998db5623000462fe1b68961972&lt;/sys_id&gt;&lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;&lt;sys_name&gt;Copy&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;protected&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_c20f9998db5623000462fe1b68961972&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-11 12:14:25&lt;/sys_updated_on&gt;&lt;table&gt;x_nuta2_nutanix_ca_nutanix_catalog_items&lt;/table&gt;&lt;ui11_compatible&gt;true&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>-701860995</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c15887e5dbcc7c103e3c6a5b8a961958</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98db10000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_catalog_items</table>
<target_name>Copy</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>1775da4ed33ee010d79bf3545a8ca7b9</update_guid>
<update_guid_history>1775da4ed33ee010d79bf3545a8ca7b9:-701860995,9b1c53c429a32300748e4bcb97489d4c:-1065898336,d350691cb556230041b4f369c0d47606:-500586714,ad50a91ce5562300386c0707efb3f869:51682133,9730291c3d5623000713b6c2d27ec89a:609761062,52efd5982f562300ead2ae4de81cd01b:51682133,463f9558f456230061133034576fda5a:-1854225998</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_ecacfe972f7e6810da242f2ef699b604</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="INSERT_OR_UPDATE"><cleared>false</cleared><disabled>ignore</disabled><field>credential</field><mandatory>true</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-03-15 12:18:13</sys_created_on><sys_id>ecacfe972f7e6810da242f2ef699b604</sys_id><sys_mod_count>0</sys_mod_count><sys_name>credential</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_ecacfe972f7e6810da242f2ef699b604</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-15 12:18:13</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Toggle credential system">48918ffe1b1ecc50ac43877ddc4bcb96</ui_policy><visible>true</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>1521631650</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c15887e5dbcc7c103e3c6a5b8a96195b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e060000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>credential</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>4ebcb697507e6810d595906ceedc05a6</update_guid>
<update_guid_history>4ebcb697507e6810d595906ceedc05a6:1521631650</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_calm_admin_username</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="calm_admin_username" table="x_nuta2_nutanix_ca_calm_plugin_configuration"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;Calm Admin Username&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;calm_admin_username&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value="String"&gt;string&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;255&lt;/max_length&gt;&lt;name&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;nitin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-11 11:31:52&lt;/sys_created_on&gt;&lt;sys_id&gt;5b6048964fc5630065e48020a310c77e&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Calm Admin Username&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_calm_admin_username&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-15 07:55:00&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1609790617</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c158cb25dbcc7c103e3c6a5b8a96199b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98dbe0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Plugin Configuration.Calm Admin Username</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>1e708adb1cb62810a6d4717f38303245</update_guid>
<update_guid_history>1e708adb1cb62810a6d4717f38303245:-1609790617,99eee4e7d9052300550b368a68dd748a:-199162290,aedea4e7b705230022d858f071f78554:2071659033,b6050052d2096300dcebb90ae28a0896:-199162290,a0810c5e17c56300245f77c450a0fb4e:2040085781</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_scope_privilege_aaac7cd01b0b64107f2a8515ec4bcbb8</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_scope_privilege"><sys_scope_privilege action="INSERT_OR_UPDATE"><operation>execute</operation><source_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</source_scope><status>allowed</status><sys_class_name>sys_scope_privilege</sys_class_name><sys_created_by>system</sys_created_by><sys_created_on>2021-03-18 05:32:39</sys_created_on><sys_id>aaac7cd01b0b64107f2a8515ec4bcbb8</sys_id><sys_mod_count>0</sys_mod_count><sys_name>UserCriteriaJS.setMatchAll</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_scope_privilege_aaac7cd01b0b64107f2a8515ec4bcbb8</sys_update_name><sys_updated_by>system</sys_updated_by><sys_updated_on>2021-03-18 05:32:39</sys_updated_on><target_name>UserCriteriaJS.setMatchAll</target_name><target_scope display_value="Global">global</target_scope><target_type>scriptable</target_type></sys_scope_privilege></record_update>]]></payload>
<payload_hash>544661665</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c158cb25dbcc7c103e3c6a5b8a96199e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e460000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>UserCriteriaJS.setMatchAll</target_name>
<type>Cross scope privilege</type>
<update_domain>global</update_domain>
<update_guid>66ac7cd0c30b64100b749bef7f7414b9</update_guid>
<update_guid_history>66ac7cd0c30b64100b749bef7f7414b9:544661665</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_client_af24ed6edb84a41089caf36f299619d9</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script_client"&gt;&lt;sys_script_client action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;applies_extended&gt;false&lt;/applies_extended&gt;&lt;condition/&gt;&lt;description/&gt;&lt;field&gt;apps_last_runtime&lt;/field&gt;&lt;global&gt;true&lt;/global&gt;&lt;isolate_script&gt;true&lt;/isolate_script&gt;&lt;messages/&gt;&lt;name&gt;Show Help Text OnLoad&lt;/name&gt;&lt;order/&gt;&lt;script&gt;&lt;![CDATA[function onLoad() 
{
    var cb1 = g_form.getValue('show_help_text');// to check the value status
    if (cb1 == 'true') 
	{
        g_form.showFieldMsg('service_catalog', 'Name of the Catalog in which all Calm specific catalog items would be configured', 'info');
        g_form.showFieldMsg('mid_server', 'Choose the MID server to connect with your Calm instance', 'info');
        g_form.showFieldMsg('mid_application', 'Select mid server application', 'info');
        g_form.showFieldMsg('calm_instance', 'Enter the Calm URL including protocol, FQDN/IP address and the port number.  Example: https://mycalm.mydomain.com:9440', 'info');
        g_form.showFieldMsg('use_external_credential_system', 'Enabling this option allows you to connect to Calm using ServiceNow credential store object with CyberArk as the external storage', 'info');
        g_form.showFieldMsg('credential', 'Select credentials stored in Credential Store', 'info');
        g_form.showFieldMsg('calm_admin_username', 'Username using which this plugin will connect to Calm as using the Calm REST API.  This needs to be a user configured in Calm with the admin role', 'info');
        g_form.showFieldMsg('calm_admin_password', 'Password to connect', 'info');
        g_form.showFieldMsg('workflow', 'Choose a workflow to be triggered on ordering any catalog item under Nutanix Calm catalog created as a part of this plugin', 'info');
        g_form.showFieldMsg('assignment_group', 'Choose an assignment group to which all incidents created from this plugin will be assigned to by default', 'info');
        g_form.showFieldMsg('support_url', 'Nutanix support portal to raise cases for any issues', 'info');
        g_form.showFieldMsg('show_published_blueprints', 'Enabling this will pull all blueprints (draft till un-published) into SNOW CMDB on which catalog items can be created', 'info');
        g_form.showFieldMsg('create_alerts', 'Enabling this will allow this plugin to create incidents on blueprint/MPI launch errors', 'info');
        g_form.showFieldMsg('log_verbosity', 'Set the verbosity for logging statements added by this plugin', 'info');
        g_form.showFieldMsg('calm_version', 'Version of the above mentioned Calm instance', 'info');

        g_form.showFieldMsg('actions_approval_workflow', ' You can enable or disable workflow for all Apps managed through Calm and hence ServiceNow', 'info');
        g_form.showFieldMsg('system_actions', 'You can enable or disable workflow for system actions on all Apps', 'info');
        g_form.showFieldMsg('workflows_for_system_actions', 'ServiceNow will trigger this workflow on any system action triggered by the user', 'info');
        g_form.showFieldMsg('user_actions', 'You can enable or disable workflow for user (custom) actions on all Apps', 'info');
        g_form.showFieldMsg('workflows_for_user_actions', 'ServiceNow will trigger this workflow on any user (custom) action triggered by the user', 'info');
        g_form.showFieldMsg('use_local_groups', 'Enabling this will allow this plugin to assign the catalog item to the local ServiceNow along with LDAP AD Groups.');
		g_form.showFieldMsg('calm_saas_and_servicenow', 'Connect to Calm on Public Cloud.');
    }
	else
	{
		g_form.hideFieldMsg('service_catalog',true);
		g_form.hideFieldMsg('mid_server',true);
		g_form.hideFieldMsg('mid_application',true);
		g_form.hideFieldMsg('calm_instance',true);
		g_form.hideFieldMsg('use_external_credential_system',true);
		g_form.hideFieldMsg('credential',true);
		g_form.hideFieldMsg('calm_admin_username',true);
		g_form.hideFieldMsg('calm_admin_password',true);
		g_form.hideFieldMsg('workflow',true);
		g_form.hideFieldMsg('assignment_group',true);
		g_form.hideFieldMsg('support_url',true);
		g_form.hideFieldMsg('show_published_blueprints',true);
		g_form.hideFieldMsg('create_alerts',true);
		g_form.hideFieldMsg('log_verbosity',true);
		g_form.hideFieldMsg('calm_version',true);
		g_form.hideFieldMsg('use_local_groups', true);
		g_form.hideFieldMsg('actions_approval_workflow',true);
		g_form.hideFieldMsg('system_actions',true);
		g_form.hideFieldMsg('workflows_for_system_actions',true);
		g_form.hideFieldMsg('user_actions',true);
		g_form.hideFieldMsg('workflows_for_user_actions',true);
		g_form.hideFieldMsg('calm_saas_and_servicenow',true);
	}

}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_client&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-10-27 05:04:01&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;af24ed6edb84a41089caf36f299619d9&lt;/sys_id&gt;&lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;&lt;sys_name&gt;Show Help Text OnLoad&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_client_af24ed6edb84a41089caf36f299619d9&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-17 17:06:44&lt;/sys_updated_on&gt;&lt;table&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/table&gt;&lt;type&gt;onLoad&lt;/type&gt;&lt;ui_type&gt;10&lt;/ui_type&gt;&lt;view/&gt;&lt;/sys_script_client&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1817185382</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c55887e5dbcc7c103e3c6a5b8a961954</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e100000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Show Help Text OnLoad</target_name>
<type>Client Script</type>
<update_domain>global</update_domain>
<update_guid>ccf116889fc7e0104b578960f71e4a0d</update_guid>
<update_guid_history>ccf116889fc7e0104b578960f71e4a0d:-1817185382,977a387cc3d22c10f547aeef78253e15:1955647975,3cc5018cb8d9ec103e4239f32caa3e72:229527487,9d1234caffc168104f3911e821886bc2:-983814548,08061b513449e41094d505533dfbfe98:1703679679,04d66daeca84a41091e1a6d7760f21c3:1384963469,6e54e56e9684a4108cf92195d79a1d42:827405084</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_00b62c90dbd22300570c9b81ca9619d2</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;copy_item&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;false&lt;/client&gt;&lt;client_script_v2&gt;&lt;![CDATA[function onClick(g_form) {

}]]&gt;&lt;/client_script_v2&gt;&lt;comments/&gt;&lt;condition&gt;current.sys_class_name=='x_nuta2_nutanix_ca_nutanix_blueprint'&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;false&lt;/form_context_menu&gt;&lt;form_link&gt;false&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint/&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;messages/&gt;&lt;name&gt;Copy&lt;/name&gt;&lt;onclick/&gt;&lt;order&gt;100&lt;/order&gt;&lt;script&gt;&lt;![CDATA[gs.addErrorMessage('This action is not available for Nutanix Calm App.');
action.setRedirectURL(current);]]&gt;&lt;/script&gt;&lt;show_insert&gt;false&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-12-06 12:26:42&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;00b62c90dbd22300570c9b81ca9619d2&lt;/sys_id&gt;&lt;sys_mod_count&gt;17&lt;/sys_mod_count&gt;&lt;sys_name&gt;Copy&lt;/sys_name&gt;&lt;sys_overrides display_value="Copy"&gt;368d20f0c0a8010a00aa4c7caeb13143&lt;/sys_overrides&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;protected&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_00b62c90dbd22300570c9b81ca9619d2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-01 07:50:12&lt;/sys_updated_on&gt;&lt;table&gt;x_nuta2_nutanix_ca_nutanix_blueprint&lt;/table&gt;&lt;ui11_compatible&gt;true&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>989147889</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c55887e5dbcc7c103e3c6a5b8a961957</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d9b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_blueprint</table>
<target_name>Copy</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>7f19fdba9666201090aea19209236d83</update_guid>
<update_guid_history>7f19fdba9666201090aea19209236d83:989147889,d958f53a926620101fe87b0b1c1840fa:-2001073566,8927353a66662010b17f92226bb3d68f:989147889,ded6bdf6b066201035603da68d88b69e:284978430,b7a6f1b665662010458701ff619ded24:-1149572188,f786313a09662010206c240ab46b6763:693605093,22353db6e86620102a504666178fd5e0:-1352915882,b794f1b63b662010389ba8c561398135:-1366499587,fb54f976716620103fc5fb46ddd95f42:1959253383,0eefe05cc0d2230000f7628f7c7f6c9f:1802073749,8edb2cd4aad2230051ec3fdd1d245c20:-879389862,0dab649492d22300865bc01a1a3bfb3f:1142805417,5f492414c1d223008f56fa38d45c75a7:1324206209,bc29e054b1d22300fd8e7f85bd14f752:-1738652131,619724d07fd22300a5d633f9ab9f2c25:1324206209,305724d06ad2230022ee4172d918a420:2108437268,c13728d0dfd223000842401b7ba61b1c:264866284,0217ac90cdd2230025592680dcfec643:282755167</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_9d1ca9a72ff12010152959ab2799b6fe</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="DELETE"><cleared>false</cleared><disabled>ignore</disabled><field>mid_server</field><mandatory>false</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-01-25 08:02:02</sys_created_on><sys_id>9d1ca9a72ff12010152959ab2799b6fe</sys_id><sys_mod_count>9</sys_mod_count><sys_name>mid_server</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_9d1ca9a72ff12010152959ab2799b6fe</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-04 05:56:22</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Calm SaaS compatibility test without MID server">aeeb29a72ff12010152959ab2799b6af</ui_policy><visible>false</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>924595791</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c55887e5dbcc7c103e3c6a5b8a96195a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98df40000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>mid_server</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>b7f0ced7e3b628106e69aa8da4466177</update_guid>
<update_guid_history>b7f0ced7e3b628106e69aa8da4466177:924595791,1c5f68ba1742e410e9fe74d29bb8316f:-669294269,914f24bae642e41056a4f37f26a08f61:-621275360,2eaf049a91ca6410c5fa806e16b52a41:2100572237,d9afc49ac1ca6410934c51b90df2210f:-997134730,e8ba4056acca64107d892fff5a4e5990:-669294269,c7aac05643ca641044cb929bbe0ca98c:-621275360,d0a9d70e820a641054f591c74b225725:2100572237,cf999b42ad4a6410cdbd67f6c0e7128e:-997134730,5bff874ab80a6410976cdc14ded2ca13:-669294269,b32ce9677bf12010e6d0fbda0725ffca:-997134730</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>catalog_script_client_dd3bb89fdb983300bd097dda8c9619a1</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="catalog_script_client"&gt;&lt;catalog_script_client action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;applies_catalog&gt;true&lt;/applies_catalog&gt;&lt;applies_extended&gt;false&lt;/applies_extended&gt;&lt;applies_req_item&gt;false&lt;/applies_req_item&gt;&lt;applies_sc_task&gt;false&lt;/applies_sc_task&gt;&lt;applies_target_record&gt;false&lt;/applies_target_record&gt;&lt;applies_to&gt;item&lt;/applies_to&gt;&lt;cat_item display_value="Variables"&gt;dae4cbd637512300fdfc097973990e0d&lt;/cat_item&gt;&lt;cat_variable/&gt;&lt;condition/&gt;&lt;description/&gt;&lt;field/&gt;&lt;global&gt;true&lt;/global&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;messages/&gt;&lt;name&gt;MPI API call for patching&lt;/name&gt;&lt;order/&gt;&lt;script&gt;&lt;![CDATA[function onLoad() {
	
	if(g_form.getValue('type_of_blueprint') == "published"){
		var loadingHTML= "&lt;div class='loading-container'&gt;&lt;div class='loading-indicator icon-loading icon-lg'&gt;&lt;/div&gt;&lt;/div&gt;";
		var loadingDialog = new GlideModal("loader", true);
		loadingDialog.setTitle('MPI Patching...'); //Set the loading dialog title here...
		loadingDialog.renderWithContent(''+loadingHTML);

		var ga = new GlideAjax('Nutanix_ClientServerScriptBridge');
		ga.addParam('sysparm_name', 'copyMpiPatching');
		ga.addParam('sysparm_blueprint', g_form.getValue('blueprint'));
		ga.addParam('sysparm_project', g_form.getValue('multiple_project'));
		ga.addParam('sysparm_profile', g_form.getValue('multiple_application_profile'));
		ga.getXML(processMpiPatching, null, loadingDialog);
	}
}
function processMpiPatching(response, loadingDialog) {
	
 		var answer = response.responseXML.documentElement.getAttribute("answer"); 
		var parse = JSON.parse(answer);

		if(parse.status === false){
			g_form.addErrorMessage(parse.errMess);
			g_form.setValue('patching_status', "false" ,  "false" );
			
		}
	
	new GlideModal().get("loader").destroy();
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;catalog_script_client&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-03-25 07:42:23&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;dd3bb89fdb983300bd097dda8c9619a1&lt;/sys_id&gt;&lt;sys_mod_count&gt;164&lt;/sys_mod_count&gt;&lt;sys_name&gt;MPI API call for patching&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;catalog_script_client_dd3bb89fdb983300bd097dda8c9619a1&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-02 05:37:24&lt;/sys_updated_on&gt;&lt;table/&gt;&lt;type&gt;onLoad&lt;/type&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;variable_set/&gt;&lt;view/&gt;&lt;/catalog_script_client&gt;&lt;/record_update&gt;</payload>
<payload_hash>-19311347</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c558cb25dbcc7c103e3c6a5b8a96199a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98ead0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>MPI API call for patching</target_name>
<type>Catalog Client Scripts</type>
<update_domain>global</update_domain>
<update_guid>de9d8ac935db245074a2ddd72931208f</update_guid>
<update_guid_history>de9d8ac935db245074a2ddd72931208f:-19311347,0fcfa4ce954f2c103d7d46c20dfd0fbb:1743284145,f0b6e4cea4832c106cb3ace5c9aa6efc:-267463860,270097e46d43e4102b014d273e41d81d:-1138709224,1d83cad01743a410f89dd7a2d3211067:-1710518701,593bb55cf003a410f556fc8a8e1a0c39:-1298171006,504bd51c35cb64102fd8f167716d01d8:-563036808,be77b58cf58fe0108ebdc119953743f7:1799797693,cd3ef054da0b64106469861ec76da00f:-1951987645,2ea3da58adda50105acc79ccb6ca4182:1312010509,96839a14ac1e501036603e746cf25553:1305624942,9862233cee885c104edf1f90c6b46957:-762684543,ebfdc77c28485c1016e5d0207effbb48:-291060805,dd37d964353f40102c83fee7fd9001ce:865819419,e3f3318c26f33300ecc3b393c12a161d:109437223,ac441984a9b33300dc4248f7880a69f1:879499517,5cc4634d63e3330059a804a27674613e:487196852,302add5be2d33300f0455cff91c33cd4:74395085,248b015383d33300549592234a80d82a:1114978569,bd5b8553cbd333008eca8873047fc650:-54793774,7e3801db9f933300ace60afa417823e9:164528810,440801db6d933300171e113410c152e5:-648176509,35638ddb13933300bdbd6d6ff2124db4:1456967017,f3414d5ba3933300f7df860f77d3eddf:45048143,75804d5be6933300bb673d92c78e97f3:783959530,ff0cf497c3933300d7f595300d3a9d0a:1192056265,005bb097f0933300487d6e3178089591:-58784850,4b5130df2153330095a0a6dbad501df6:-849514172,e110b0df3a5333007e097c7e706b507b:-2125542322,19cf689f47533300782168edab837486:-849514172,834fa4dbe0533300cdde1fe5fb7a9112:502240798,4ee81f09d58373007b3640e852e19b36:670308408,603b08300c4e730019119df7d54e646e:-1533529323,27918478380e730016cb831661768290:547369634,3a49db013c783300a766fd69bf57fe17:-577937671,80da0509cdb03300f5c218821f75e1de:-871648585,88aacdc5cab033007d2259884c82847d:908323732,be267c49ad7033005b56b99ff2148a73:-871648585,c555f0856c7033007d3cce08e1ebf132:908323732,4f3ea8c15770330080b29a2dd6ef535e:-871648585,d2d3a40d1f30330095cd0e14c3c402fb:908323732,6193bb97536c33002ea77d4e75360310:-871648585,e45e6b935d6c33005ab1390b124f5447:-511356380,19d8af5fc72c3300d3446cefb6a12e4f:-806944337,dc98ef9f772c33008fab82c01e1f6f7f:-49030232,40f6f17e68ec3300e49a17b7fe80820a:1700177699,0bb6313e26ec3300e049d02de703d8b2:1040195399,c1f521be26ac33002cf491bbccdb335f:-1717804252,94de193a14ac33007553c56dcda996a4:1040195399,af19c9f6d06c3300cbbd0b0ddbb5890c:-1717804252,f5e9226e26e43300fa7c0f5c50d47807:1040195399,60b5ea6a4ee4330081e4974f3f461fc5:-1717804252,19d12ea6a8e433004e72baba8ccbc46a:1040195399,7901adea37243300fb2ba89e03edfe71:-1717804252,769b152200243300b41a70b3d4dd593a:1040195399,5f2c6ca6e7a03300fe3c5026ac6cadc0:-1717804252,6f1b28e6006033003cdf12c4c242d4e4:1040195399,e01994e6fa60330005520f2ad0d70ffb:-1717804252,54d2c066b3203300f16f72d896fae07e:1040195399,58e2911eb0a0b3003812c49e73facd4c:-1717804252,d5e199da62a0b300890c476f2f5ec3e3:1040195399,c17401524ca0b300fb518f99ea1e27e9:-1717804252,a06a94167220b30058e5c472859046f2:1040195399,0c3354122620b3009b440cdb3021e46f:-1717804252,d080d09e39ec730033fc3ee06bdaccc5:1040195399,9b704852feec73004e78bfd88eb2c54f:-1717804252,052c0b0298e87300fc3a30770da5e112:1040195399,7abd87351b607300d0ccc38f462f3ce7:-1717804252,70cc437d58207300bf60c1f56995d5a5:1040195399,20b4b231e3207300e8999016401b901f:-1717804252,6e303a3d61ec330097037eec924ff857:1040195399,427466fdd2ac3300f9771a62012c7c68:-1717804252,4d09de79c5ac3300d2b074f9ff2eea73:1040195399,e1b74e79d96c33008a703c1b74ef0ce9:-1717804252,ff31d9a1a8a033005b44e1ce3b2d6216:1040195399,f18011a192a033002b02cd6d5237f4f6:936363212,a730dd6135a03300cd0047550e7fb62c:1539476066,1f3fc528d320330006f1456f324cc190:-1720347382,cedec964b22033003b176d9d83878fd1:-873820260,471e89e45f203300c3b2fbbe7967dc31:-314546522,4dcdc964e4203300a8a59e0426c6ed61:982257787,438b89640120330085504c23fb17eedb:-278686390,dfba49241b2033007fc408e42de21da9:-1622563157,7864b19001a433000389072948bc4aca:76336305,75b07d500ea43300e4c2a27a8a213153:-691966321,c5703d50bca433005a283832444d0cb7:965464,470eaddc746433001965a4625e4736bb:-1692441497,dd2dad5c37643300477e247c5e94068b:2040629172,020d259c436433005cde0724d4d56b93:1826955106,50eced5cd26433005805d480dec4f309:-1153086780,08aca99c23643300157326fbefd1efda:445747984,23db295c7a6433008ffb81e60514c93c:384877024,8bab295cb46433008599daac7a9f0836:-967598160,ec0b255c4c6433000505d06b6bb33d72:-990526882,59c8e9d80d6433008a85017c3bef3d1c:199715530,f387a1988d64330076c9703519d354ea:222644252,ca67ad98106433007ed0482eb7c29ec2:936015557,ed37e9585264330085b2b2cfd58d5e10:-2120344352,3436e958a06433000741001c132b8269:801412623,20e3e5d417643300117725d635a41ed2:789340236,f0b1e59454643300fc6affbfca8e31a3:-1398101492,de3d09940a243300c4cd12f29efaf9bf:516363440,8a9cc594452433002fa4015df18cde61:54744,9cd90dd05e2433001cd02a5476c0bcdc:-1185177617,60e88ddc09e033007520d0e96f374434:-651597087,12958d5cc7e03300eaf450a4b9076a1c:-1076948082,947549d887e033003e35e385cd28f730:143423158,792585d820e0330083d70f0ae8206530:-341928394,86e141d8b9e0330051a0b354b8142ea0:-2070275237,008141d806e03300c219d1d032796c5a:-1017895361,79104d58b1e03300f9ae5f02fe31a1d3:884385782,f48f74586be0330083a8e38d09699120:-55944990,349db8549ce0330090fbc8376c7bcf9b:-1804103789,871db454f4e03300838202c2b2b2af5d:-446249121,11cc38143fe0330069551cdf1b918f54:-1175678085,6dbcf05400e03300c6a9677930677158:1315375073,af8b3cd041e03300d13542acb5f6f95e:-2024625948,324ab4906de0330020c42da5db56863b:-4069658,3d9830dc14a033000a3c5f86fcab7495:-1066917434,50c7341ce8a033001051bcdb0c772dea:-4069658,b8f6f49cc3a03300b35081c492b4f660:1637959382,b7267c5c09a0330046515c665cfebee1:1672556534,66c5fc1c49a03300d4c2ec0eb5b98281:577492452,f6d4f81c13a033006e69d0501cdc565a:-1275738884,9eb378d8a6a03300da3f307c5593076e:-434138086,1923f4d40ba03300f63715e7204c2fc5:1031436474,4513f0542ba033006ad6690ba8fb5cbc:-1365169213,d43238d42ea03300a98824c6a40e4c76:-1432613766,2f8d20945fa03300a81d2c518ec69c6e:-933223020,473bac5446a0330079d41d85b0f11a7b:838777712,3d7a649c976033006420e077fef00319:-2055416435,026ae458fe6033004a740ece2991fc12:-1424445715,57f8d4d4a6603300d17ce322d2174b23:1806773820,8a369c948a6033004ac03bb022b51b0e:211724852,0d2694d4a6603300b30a993d4f0106ec:-1924201729,13455c54276033000b38cb54277c3f4b:-1443358863,07c31c5464603300da41e375daf3230e:-155153159,caf1d014ba603300777278837efe1c85:-904190303,d73f0010166033009284b6013067fc1f:-531059288,723e805c34203300c0ee82fd2e43196f:-1456440269,9ae7c898922033003522e2f925b1fae0:1146551280,09878c98e02033000b14263197fa51d3:-701727789,580180947f203300cb784b34079b46f4:-1456440269,32a0a444a26433005596287b3162f562:-1278805864,9a5e18c02e643300a956e0a1c2250f12:-685606162,ecca584cc5243300da5cf31e780d802a:2046042198,0267548c60243300835b37751a966744:-237516665,8ca6148c3a243300e0aecd5626520bef:2091638304,26759cc83c2433007598c8ee0ef3e717:1214044919,f4b358c86224330021f08fdf599b03b4:-595147729,c6529c885a2433005b5dad4cb5357d60:1996813906,19425008462433005a526d63d9e5d02a:-1591717102,132fc008372433004591cfacd0042e31:-1516298580,180f8c84de243300ffb6a6cbf71213fe:176457938,9d1e0c84e5243300c2d83033db96f213:-865925906,708d8484e6243300a38ca99da9e3bd79:1736459534,4decfbfbb5d033008bc5ebbf187df68f:738955979,97eb73fbe1d03300b9466cfb87ae319f:1704413568,05677ff7c0d033009b2d95b952b3123a:-962417354,d9767fb73dd03300db2984549b3ebd30:1704413568,89f953736a503300f26f16635ad9dc12:-788192627,561917ff9b50330021452c6b0dff5a84:-2128936645,fffe7e3ff7103300de3ea0b30d32ec92:-1153000093,4d4eba3f4c10330068f6f697922ba6d6:949064911,c5edf6fbc210330097cfe3475c49391a:-1113119298,e9dc7677c8103300cc934ecf6995a99a:200684433,64853677751033001b0899edb87732dd:-665676076,774bf89f40983300d872f0e8be4c44ad:1322718146</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_properties_759ca3b74f03230039f0aa95d310c741</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>Describes the version of the plugin</description><ignore_cache>true</ignore_cache><is_private>false</is_private><name>x_nuta2_nutanix_ca.plugin_version</name><read_roles>x_nuta2_nutanix_ca.calm_admin</read_roles><suffix>plugin_version</suffix><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2019-01-24 06:37:30</sys_created_on><sys_id>759ca3b74f03230039f0aa95d310c741</sys_id><sys_mod_count>6</sys_mod_count><sys_name>x_nuta2_nutanix_ca.plugin_version</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_properties_759ca3b74f03230039f0aa95d310c741</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-22 04:26:16</sys_updated_on><type>string</type><value>(v1.4.4)</value><write_roles>x_nuta2_nutanix_ca.calm_admin</write_roles></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=759ca3b74f03230039f0aa95d310c741"/></record_update>]]></payload>
<payload_hash>-688935569</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c558cb25dbcc7c103e3c6a5b8a96199d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d800000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>x_nuta2_nutanix_ca.plugin_version</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>8857012430ee20106190325d7baa5df8</update_guid>
<update_guid_history>8857012430ee20106190325d7baa5df8:-688935569,a96f6cb28c8d6c502728c4ae920935ae:-1204456018,c149d464e6421010e280973d501c483f:-888257623,9bc615bf8ac7c4109e5a37d3324a9104:-1919298521,649406bb57f63300873c652de645531e:1860148326,bb2875073ad13300871a245858095eca:1344627877,241d63b79e0323009f84301037d2ec15:1860148326</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_d6716e92db1d230084249235ca96194b</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Nutanix_Import_Marketplace_Items&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Nutanix_Import_Marketplace_Items&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Nutanix_Import_Marketplace_Items = Class.create();
Nutanix_Import_Marketplace_Items.prototype = {
	initialize: function() {
		this.appUtil = new Nutanix_Calm_Utils();
		this.logger = new Nutanix_Calm_Logger();
		this.pageBreaker = 5;
		this.version = gs.getProperty('x_nuta2_nutanix_ca.calm_version');
		//this.totalMPI = 0;
		//this.countPublishMPI = 0;
		
		this.activeMPI = [];		
	},
	
	
	_deactivateDeletedMPIandcatalogs: function(){
		
		try{
			this.logger.debug("Inside Nutanix_ImportBlueprints._deactivateDeletedBPandcatalogs");
			
			var queryString = 'stateANYTHING';
			

			for(var i in this.activeMPI)
				queryString += '^uuid!='+this.activeMPI[i];
							

			var inactiveMPISysID = [];
			
			var gr = new GlideRecord(this.appUtil.configuration.table.marketplaceItem+"");
			gr.addEncodedQuery(queryString);
			gr.query();		

			while(gr.next()){
				gr.state = 'inactive';
				gr.app_state = 'UNPUBLISHED';
				inactiveMPISysID.push(gr.update());
				this.logger.debug("Inside Nutanix_ImportBlueprints._deactivateDeletedBPandcatalogs. Deactivated MPI : "+gr.sys_id);
			}
			
			var inactiveCatItems = [];

			var catGr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig+'');
			catGr.addEncodedQuery('state!=inactive^state!=deleted^state!=draft^blueprintIN' + inactiveMPISysID.toString());
			catGr.query();
			
			while(catGr.next()){
				
				inactiveCatItems.push(catGr.item_name.name);
				
				catGr.state = 'inactive';
				catGr.update();				
				this.logger.debug("Inside Nutanix_ImportBlueprints._deactivateDeletedBPandcatalogs. Deactivated MPI : "+catGr.item_name.name+" Logic associated MPI mark inactive");
			}
			this.logger.info("Deactivated " + catGr.getRowCount() + " catalog items (" + inactiveCatItems.toString() + ") as there MPI got into a Non-Active State.");
			
			
			
// 			var activeMPISysID = [];
			
// 			var gr = new GlideRecord(this.appUtil.configuration.table.marketplaceItem+"");
// 			gr.addEncodedQuery('uuidIN'+this.activeMPI.toString());
// 			gr.query();		

// 			while(gr.next()){
// 				activeMPISysID.push(gr.sys_id+'');
// 			}
			
// 			var reactiveCatItems = [];
			
// 			var catGr = new GlideRecord(this.appUtil.configuration.table.runtimeConfig+'');
// 			catGr.addEncodedQuery('state=inactive^blueprint.sys_idIN' + activeMPISysID.toString());
// 			catGr.query();

// 			while(catGr.next()){

// 				reactiveCatItems.push(catGr.item_name.name);

// 				catGr.state = 'active';
// 				catGr.update();				
// 			}
// 			this.logger.info("Re-activated " + catGr.getRowCount() + " catalog items (" + reactiveCatItems.toString() + ") as there MPI got into an Active State.");
		}catch(e){
			this.logger.error("Exception caught inside Nutanix_ImportBlueprints._deactivateDeletedBPandcatalogs. Error :- "+e);
		}		
	},
	
	
	
	startImportMPI : function(){
		try{
			this.logger.debug("Inside Nutanix_Import_Marketplace_Items.startImportMPI");
			
			var body = this.appUtil.generateRequestBody("startImportMPI", this.version, 0, 1);
			var response = this.appUtil.makeCalmApiCall("POST", this.appUtil.configuration.api.getMarketplaceItem+"", this.appUtil.stringify(body));
			
			if(response.getStatusCode() == '200' || response.getStatusCode() == '201'){
				
				this.logger.info("Connection established to "+this.appUtil.configuration.api.getMarketplaceItem);
				
				var parsed = this.appUtil.parse(response.getBody());
				var records = parsed.metadata.total_matches;
				
				var pages = parseInt(records/this.pageBreaker);
				this.logger.debug("Number of MarketplaceItems JSON pages "+(pages+1));
				
				for(var i=0, k=0; i&lt;=pages; i++, k+=4) {
					
					var presetOffset;
					presetOffset = i+k;
					
					body = this.appUtil.generateRequestBody("importMPIData", this.version, presetOffset, this.pageBreaker);
					
					//this.appUtil.insertIntoQueue("importMPIData", "POST", this.appUtil.stringify(body), this.appUtil.configuration.api.getMarketplaceItem+"", 'Import marketplace items', 'This process invokes the import of MPI data.');
					var answer = {
						"method": "POST",
						"parameter": this.appUtil.stringify(body),
						"payload": this.appUtil.configuration.api.getMarketplaceItem+""
					};

					this.importMPIData(answer);					
				}
				
				this._deactivateDeletedMPIandcatalogs();								
				
			} else {
				
				this.logger.debug("Nutanix_Import_Marketplace_Items.startImportMPI :- Connection to /marketplace_items/list not established :- "+response.haveError()+" Status code:- "+response.getStatusCode());
			}
			
		} catch(e) {
			
			this.logger.debug("Nutanix_Import_Marketplace_Items.startImportMPI :- Exception caught during retrieval of MarketPlaceItem. Error :- "+e);
			this.logger.error("Exception caught during retrieval of MarketPlaceItem. Error :- "+e);
		}
	},
	
	importMPIData: function(current){
		
		try{
			this.logger.debug("Inside Nutanix_Import_Marketplace_Items.importMPIData");
			var response = this.appUtil.makeCalmApiCall(current.method+'', current.payload+'', current.parameter+'');
			
			this.logger.debug("Inside Nutanix_Import_Marketplace_Items.importMPIData :- "+current.parameter+" :- "+response.getStatusCode());
			
			if(response.getStatusCode() == '200' || response.getStatusCode() == '201'){
				
				this.logger.info("Connection established to "+this.appUtil.configuration.api.getMarketplaceItem);
				
				var parsedJSON = this.appUtil.parse(response.getBody());
				var entities = parsedJSON.entities;
				
				this.logger.info("Number of imported MarketplaceItems:"+entities.length+"  "+current.parameter);
				
				for(var i=0; i&lt;entities.length; i++){
					
					var entity = entities[i];
					var entityUUID = entity.metadata.uuid+"";
					
					if(!this.appUtil.versionNewCheck()){
						var entityAppState = (entity.status.resources.app_state) ? entity.status.resources.app_state : "" ;
						
						if( entityAppState == "PUBLISHED" )
						{
							
							this.activeMPI.push(entityUUID+'');
							
							var uuidResponse = this.appUtil.makeCalmApiCall('GET',  this.appUtil.configuration.api.getMarketplaceItemDetail+entityUUID, '');
							if(uuidResponse.getStatusCode() == '200' || uuidResponse.getStatusCode() == '201'){
								
								this.appUtil.insertIntoQueue("processImportMPIData", "", '', uuidResponse.getBody(), 'Process marketplace items', 'This job processes the imported MPI data.');
							}else{
								
								this.logger.debug("Nutanix_Import_Marketplace_Items.importMPIData :- Connection to /marketplace_items/uuid not established :- "+uuidResponse.haveError()+" Status code:- "+uuidResponse.getStatusCode());
							}
						}
					}else{
						    						   
							this.activeMPI.push(entityUUID+'');
						
							var uuidResponse = this.appUtil.makeCalmApiCall('GET',  this.appUtil.configuration.api.getMarketplaceItemDetail+entityUUID, '');
							if(uuidResponse.getStatusCode() == '200' || uuidResponse.getStatusCode() == '201')
							{
								
								this.appUtil.insertIntoQueue("processImportMPIData", "", '', uuidResponse.getBody(), 'Process marketplace items', 'This job processes the imported MPI data.');
							}
							else 
							{
							
							this.logger.debug("Nutanix_Import_Marketplace_Items.importMPIData :- Connection to /marketplace_items/uuid not established :- "+uuidResponse.haveError()+" Status code:- "+uuidResponse.getStatusCode());
						}
					
					}
				}
			} else {
				this.logger.debug("Nutanix_Import_Marketplace_Items.importMPIData :- Connection to /marketplace_items/list not established :- "+response.haveError()+" Status code:- "+response.getStatusCode());
			}
			
		} catch(e) {
			
			this.logger.debug("Nutanix_Import_Marketplace_Items.importMPIData :- Exception caught during retrieval of MarketPlaceItem. Error :- "+e);
			this.logger.error("Exception caught during retrieval of MarketPlaceItem. Error :- "+e);
		}
	},
	
	processImportMPIData: function(current){
		try{
			this.logger.debug("Inside Nutanix_Import_Marketplace_Items.processImportMPIData");
			var insertData = new GlideRecord(this.appUtil.configuration.table.stagingMarketplaceItem+"");
			insertData.initialize();
			var entity = this.appUtil.parse(current.payload);
			var status = entity.status;
			var resource = entity.status.resources;
			var metadata = entity.metadata;
			var field;
			//To insert status data
			for(var key in status){
				field = status[key];
				if( key!='resources' &amp;&amp; field)
					insertData[key] = (field.constructor === Object || field.constructor === Array ) ? JSON.stringify(field) : field+'';
			}
			//To insert resources data
			for(var key in resource){
				field = resource[key];
				if(field)
					insertData[key] = (field.constructor === Object || field.constructor === Array ) ? JSON.stringify(field) : field+'';
			}
			//To insert metadata
			for(var key in metadata){
				field = metadata[key];
				if(field)
					insertData[key] = (field.constructor === Object || field.constructor === Array ) ? JSON.stringify(field) : field+'';
			}
			insertData.insert();
			//this.countPublishMPI++;
		}
		catch(e){
			this.logger.debug("Nutanix_Import_Marketplace_Items.processImportMPIData :- Exception caught during processing of MarketPlaceItem. Error :- "+e);
			this.logger.error("Exception caught during processing of MarketPlaceItem. Error :- "+e);
		}
	},
	
	processingIcon : function(current){
		// This is where we'll save the attachment
		try{
			this.logger.debug("Inside Nutanix_Import_Marketplace_Items.ProcessingIcon");
			var tablename   = 'sc_cat_item';
			var recordSysId = current.parameter+"";
			var filename    = 'picture';
			var iconReference = this.appUtil.parse(current.payload);
			
			for(var i in iconReference){
				var icon = iconReference[i];
				var iconUUID = icon.icon_reference.uuid+'';
				
				this.logger.debug("Importing of MPI Icon API:- "+this.appUtil.configuration.api.getIcon+iconUUID+"");
				
				// Let's download the icon
				var response = this.appUtil.makeCalmApiCallForIcon('GET',this.appUtil.configuration.api.getIcon+iconUUID+"" , "" , recordSysId);
				// Configure the request to save the response as an attachment
				var httpResponseStatus = response.getStatusCode();
				var httpResponseContentType = response.getHeader('Content-Type');
				var newAttachmentSysId = response.getResponseAttachmentSysid();
				this.logger.debug("Image http response UUID :- "+iconUUID+" SysID: " + newAttachmentSysId);
				this.logger.debug("Image http response content-type :- " + httpResponseContentType);
				
			}
		}
		catch(e){
			this.logger.debug("Nutanix_Import_Marketplace_Items.ProcessingIcon :- Exception caught during processing of MarketPlaceItem Icon. Error :- "+e);
			this.logger.error("Exception caught during processing of MarketPlaceItem Icon. Error :- "+e);
		}
	},
	type: 'Nutanix_Import_Marketplace_Items'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-24 10:38:03&lt;/sys_created_on&gt;&lt;sys_id&gt;d6716e92db1d230084249235ca96194b&lt;/sys_id&gt;&lt;sys_mod_count&gt;100&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_Import_Marketplace_Items&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;protected&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_d6716e92db1d230084249235ca96194b&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-18 14:35:45&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>-424871903</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c95887e5dbcc7c103e3c6a5b8a961956</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d280000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_Import_Marketplace_Items</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>857c661356922410034c7781ad2caebe</update_guid>
<update_guid_history>857c661356922410034c7781ad2caebe:-424871903,556f0217775ee010a97bf1d0e8a6a7fc:-1411529652,1c1946d3ce9ae010f26ce47ee7ab9230:1344550041,d5e1b5dfe61ae010300ca3a9881b8fae:-1404602251,86ca341b8292e010f49b79082c35604e:88752325,308ca01b49dea01063f500522026dad5:-1043953856,76c3e8df745ea0102c5489ed4e2334f2:-1585296507,b79f94572e5ea01094d6db042048f49c:-711992513,3c4e1c53e85ea010893c3eb6ba04234c:-2047759056,00af8d8f8cd2a010a7285c6c9e559c2f:1651391,258205073652a01014b5b632aca1f040:-1043953856,b4bebc4b9f12a010401f40ac6bed6783:-805597077,dd4e3407d512a010443a752386a909a2:-474873651,b1c9f00b6112a0101f8e5bb417cd9625:2117247828,7309b4075012a010614471211391b6ac:-2014296464,080de776edd66010c437d35aa585f667:-111772109,0e4f39c47dd22010cb5fbd2394eba61a:-1047244313,ea7e3984d7d22010864ec6677b849ebb:-1358587312,fff30b0f028ee4d0a6dd4d56902c2635:-809541341,8620c70fe14ee4d0f5675620ecab1a21:-1556519420,6475b98f4e86e4d031f31a66ec02db35:-748958581,16956dfa548aa4d0e24da0735fdb7d00:-282563503,ba33a9f6cf8aa4d0ce50aa7104eefba8:500143990,1f0365f61e8aa4d040dafb0ec5f2ef39:-685597934,272edd7a7e4aa4d0347da1df3c087f0c:-760777345,528d89fe00c6a4d08370d811fceffe0d:-1358587312,170ee7df94e658508490e000824b0312:-379825363,06413c3973985010d418b910d8a25730:1227642739,d5a86baa6bbfb300da6aa5fc0b41a328:635792340,33dcb266903fb300980c23b05b1c3a5b:197563629,e26bb8a6e2b7b300dbb30d97f048f9b7:-1573530745,6635545dc67b3300ebbd3b83cd0e6685:-495851812,c54b6a741fe33300a01b2a5e473ce7d3:-495613268,44c86634fce33300b9b8c6d0826aec9e:-339166938,f9215ab41c6333008cc7715705d6157c:-781544157,7c9e6227bb503300af1d57f302f04fa0:155665790,47d0055ab5103300a1e35ef0d2438e4d:-781011217,f3708d1a4e103300984cfa22fd340618:-1984397745,001e179c1426630057d86ac8fcbf4e01:1661744463,3e4fcb5c12e26300c81089796fd24cce:-876057425,d09ac758f7e26300a75d99ff68f5456a:-664008815,b73cbe589a626300e6565eded6edabf1:-1124843258,39e4f2c84ce6230028b947a74afc8986:-1937532303,68f2bac4d6e6230064cce8e82fc5d143:1332059089,9402fe4452e6230073bd7499d5f80bcc:1928825702,1a01b284afe62300ebd222e3db799506:1791111289,5680ba44c9e623008d98e42454886d8a:697265924,9d00bec08fe62300258256347ce509cf:805458775,eabf2e0470e6230021f1afd9643236fa:-2125711073,987e6a40c8e62300765925784aa8139d:1504806841,e2dd668057e623000b45a8e5c416e797:-1579535187,37f16ecc2f6623006df7c90fff2e6ee1:-1129655418,aea2c94c612223005382557ae6f52527:-1908769118,9c3b0b2fc2bd270098d0d4b2bf87222e:149047544,9d3a0ed3be35e30064c6d9d7c753f3f5:357853020,0dd252cf4879a3005c9c32e028814726:-2055069640,1af8650b2df5a300cd198d64f65e8353:1063591377,6835290312f5a3003a0243e005dac998:-1807384079,eda6a628b2a1230086d0a13d4c67c1db:-788671364,b69562a49da123006a03c2f3f64d1ef8:-519186186,b7e4266452a12300b0b461f9afc7956c:-1795928127,63c4ee24eda12300a7d4c22ebb646ede:591043538,8fa226a04ba12300173011bd79fa8a15:-1631642585,5dc0eaecb9612300f85e09e47a04da57:939840993,3b47c22c2b212300447fec79e0ca45ae:-1249116281,a06ead9039696300994cdf14b6164b28:-857447867,4249951c9ae5630024046600dc4f89a4:-1531680409,a6a29554fee56300ed65199164f5805c:-1863571168,ff96bc58df6563000656dd79436b0614:1446330221,22363098f86563005c686b8a9d908512:553455208,dde57c58ae65630085dbd42d82ab1bb9:-1836125943,ed75b018696563006c2eaa57c2cd0472:69260202,a473301879656300e568215f5025a028:-1107103829,a15370940e656300fc985559853f06d6:699141995,e0617c946b656300a8dc58391f8972c4:-367177711,3580741450656300fa646b374bddf20c:979244361,33ce28147b65630036a4cb2e8f7ff666:-1549116994,ea7ea014ae656300b3d9730f86ba6bb9:267508093,210e24d0e7656300a67e19367cd59c7b:1038052852,fd8d6490b5656300d610e287aa55a0e6:2037601624,1cf6c200fcad2300c56e9aa0c60ba70c:-2022376170,3120950c43e923002cd6b73fc6b14682:-1352185508,db4b418879e923008f2ea191aa4a5916:2129856363,9db885848be92300798a692e3bf79d81:500220746,e4292c4c4d6923001e561179355dc739:696784563,7d78284cf969230023f5709700dbde0e:-783040084,d887544c8a2923007fcdb5af6d9d16ef:1301261902,83f5d8885e29230086af46fb42fc4281:277199414,a8ec0804c2292300d490d118652346f5:314751514,99dc8444cc29230029673d911bc71b79:153997389,cdba48409b292300aea72a7f70af3351:-574496426,e415c0002e2923002172aee491cc6d98:-1729569624,e75440cc7be52300ec5eb02122aa422c:739815259,3cf3cccc16e5230064b61bc348673637:292300431,8d2380ccdbe52300778a4bf8881c82db:1033970185,fa124c8cf7e5230026c4618ad2526f8d:999120484,4b9273770dd52300bb3208257428ff22:-1283083223,fa937d4b6a91230063db192714334c60:-1646167933,aec31d32d295230093df7bbc6a4fcabe:-751806139,1167497a72552300b64fa6ebbf875df8:-1588432946,4ae4813a0f552300a70278bc0c89ca4c:-651429731,d2d4413a5b55230009a75c032b30d1b7:-100003557,b44c543a86d12300fbe175409d898610:-259156387,23ad6352eedd2300ea6a2f28b14411c2:522952846,7b9d2b1266dd2300d6b6fa805f9f076a:-1141339959,066dab12f6dd2300dc8f6c8592cda971:-1469943360,dceb6bde759d230085db11fec3e5a6e0:139418675,895a6b9ef19d23001aa657143d085a2f:1793628831,ae89af5ec29d23004796d9e18ab92b54:-1610148836,8108a35e3a9d230031255a1e1e073dd3:426251632,a947e71e189d230008a0e1fa10401203:1596200958,2ef2679ac29d2300a86b28ad39f1a9f4:1329333678,bf51671a4c9d2300affeab11cd3ad734:-691601237,290c0b9ac55d230062b77f0c0b3e59db:-443197333,d37acb1a0e5d230067ebc5fec64ae6eb:974472907,5bd13a1ea41d2300441ef721bd8cf27b:-1270126825</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_action_60d587422fc66410152959ab2799b662</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_policy_action"><sys_ui_policy_action action="DELETE"><cleared>false</cleared><disabled>ignore</disabled><field>use_external_credential_system</field><mandatory>ignore</mandatory><sys_class_name>sys_ui_policy_action</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-02 08:59:41</sys_created_on><sys_id>60d587422fc66410152959ab2799b662</sys_id><sys_mod_count>4</sys_mod_count><sys_name>use_external_credential_system</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_action_60d587422fc66410152959ab2799b662</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-19 06:45:54</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_policy display_value="Calm SaaS compatibility test without MID server">aeeb29a72ff12010152959ab2799b6af</ui_policy><visible>ignore</visible></sys_ui_policy_action></record_update>]]></payload>
<payload_hash>531450907</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c95887e5dbcc7c103e3c6a5b8a961959</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98ddd0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>use_external_credential_system</target_name>
<type>UI Policy Action</type>
<update_domain>global</update_domain>
<update_guid>5cf00e9b5cb62810860bb5563b21e942</update_guid>
<update_guid_history>5cf00e9b5cb62810860bb5563b21e942:531450907,988a0ae7f4d66c50134c8ce8e2c1780c:1349879311,a6588a67f4d66c5001b9818141595a91:767270307,1ac1dd7c4d162c103713aa89706f111f:-2017582872,dea09db8d6162c1001e26c7e90635832:2026690676,9e9051f818162c101fde4c9f4d6c7843:767270307,a21d817829162c10467e9c1df4558ffe:2026690676,c3a889f45f162c10b9696efb11705125:1349879311,b53f2c895d16e010f43a0c9e7b6e780b:2026690676,0d8b64490316e01068ac781446ec4ff4:767270307,c616838273c66410934e70f105b6a9ca:2026690676</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>wf_workflow_30421c83375d2300d27b8cf6c3990e01</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="wf_workflow_version"&gt;&lt;wf_workflow_version action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;activity_stages&gt;{"stages":{"38293c421bcf2c107f2a8515ec4bcb4a":{"duration":"1 Day","order":100,"stageId":"38293c421bcf2c107f2a8515ec4bcb4a","name":"Waiting for Approval","value":"waiting_for_approval"}},"subflows":[],"activities":{"b0293c421bcf2c107f2a8515ec4bcb54":"38293c421bcf2c107f2a8515ec4bcb4a","70293c421bcf2c107f2a8515ec4bcb6e":"38293c421bcf2c107f2a8515ec4bcb4a"},"ends":["74293c421bcf2c107f2a8515ec4bcb60"]}&lt;/activity_stages&gt;&lt;after_business_rules&gt;false&lt;/after_business_rules&gt;&lt;checked_out/&gt;&lt;checked_out_by/&gt;&lt;column_renderer display_value="Workflow-driven"&gt;a56213111b030100adca1e094f0713ac&lt;/column_renderer&gt;&lt;condition/&gt;&lt;condition_type/&gt;&lt;description&gt;   &lt;/description&gt;&lt;expected_sequences&gt;7c293c421bcf2c107f2a8515ec4bcb64,7c293c421bcf2c107f2a8515ec4bcb68,70293c421bcf2c107f2a8515ec4bcb6e,b0293c421bcf2c107f2a8515ec4bcb54,34293c421bcf2c107f2a8515ec4bcb56,f0293c421bcf2c107f2a8515ec4bcb6d,f0293c421bcf2c107f2a8515ec4bcb51,38293c421bcf2c107f2a8515ec4bcb52,f0293c421bcf2c107f2a8515ec4bcb4c,f0293c421bcf2c107f2a8515ec4bcb61&lt;/expected_sequences&gt;&lt;expected_time/&gt;&lt;expected_time_type/&gt;&lt;full_sequences&gt;7c293c421bcf2c107f2a8515ec4bcb64,7c293c421bcf2c107f2a8515ec4bcb68,70293c421bcf2c107f2a8515ec4bcb6e,b0293c421bcf2c107f2a8515ec4bcb54,34293c421bcf2c107f2a8515ec4bcb56,74293c421bcf2c107f2a8515ec4bcb60,f0293c421bcf2c107f2a8515ec4bcb6d,b8293c421bcf2c107f2a8515ec4bcb5b,f0293c421bcf2c107f2a8515ec4bcb51,74293c421bcf2c107f2a8515ec4bcb5a,38293c421bcf2c107f2a8515ec4bcb52,f8293c421bcf2c107f2a8515ec4bcb4e,38293c421bcf2c107f2a8515ec4bcb59,f0293c421bcf2c107f2a8515ec4bcb4c,f0293c421bcf2c107f2a8515ec4bcb61,7c293c421bcf2c107f2a8515ec4bcb65,74293c421bcf2c107f2a8515ec4bcb53,bc293c421bcf2c107f2a8515ec4bcb6b,38293c421bcf2c107f2a8515ec4bcb5c,bc293c421bcf2c107f2a8515ec4bcb4f,b0293c421bcf2c107f2a8515ec4bcb67,f4293c421bcf2c107f2a8515ec4bcb55,fc293c421bcf2c107f2a8515ec4bcb57&lt;/full_sequences&gt;&lt;journal/&gt;&lt;max_activity_count&gt;5000&lt;/max_activity_count&gt;&lt;name&gt;Nutanix - Blueprint Launch to CALM&lt;/name&gt;&lt;not_cacheable&gt;false&lt;/not_cacheable&gt;&lt;on_cancel&gt;&lt;![CDATA[// This script executes if the workflow is cancelled.// The global variable context_sys_id contains the sys_id of the cancelled workflow context.]]&gt;&lt;/on_cancel&gt;&lt;order&gt;100&lt;/order&gt;&lt;pin_type&gt;set_by_activity&lt;/pin_type&gt;&lt;published&gt;true&lt;/published&gt;&lt;relative_duration display_value="2 business days by 4pm"&gt;3bf802c20a0a0b52008e2859cd8abcf2&lt;/relative_duration&gt;&lt;requires_ert&gt;true&lt;/requires_ert&gt;&lt;run_multiple&gt;false&lt;/run_multiple&gt;&lt;schedule/&gt;&lt;stage_field&gt;stage&lt;/stage_field&gt;&lt;stage_order&gt;computed&lt;/stage_order&gt;&lt;start display_value="Begin"&gt;7c293c421bcf2c107f2a8515ec4bcb64&lt;/start&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/sys_id&gt;&lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:49:07&lt;/sys_updated_on&gt;&lt;table&gt;sc_req_item&lt;/table&gt;&lt;timezone/&gt;&lt;validated&gt;false&lt;/validated&gt;&lt;workflow display_value="Nutanix - Blueprint Launch to CALM"&gt;30421c83375d2300d27b8cf6c3990e01&lt;/workflow&gt;&lt;/wf_workflow_version&gt;&lt;wf_workflow action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;description&gt;   &lt;/description&gt;&lt;name&gt;Nutanix - Blueprint Launch to CALM&lt;/name&gt;&lt;preview/&gt;&lt;sys_class_name&gt;wf_workflow&lt;/sys_class_name&gt;&lt;sys_created_by&gt;mumtaz.ansari&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-26 06:56:12&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;30421c83375d2300d27b8cf6c3990e01&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix - Blueprint Launch to CALM&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;wf_workflow_30421c83375d2300d27b8cf6c3990e01&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-08-19 11:44:19&lt;/sys_updated_on&gt;&lt;table&gt;sc_req_item&lt;/table&gt;&lt;template&gt;false&lt;/template&gt;&lt;vars/&gt;&lt;/wf_workflow&gt;&lt;wf_stage action="INSERT_OR_UPDATE"&gt;&lt;name&gt;Completed&lt;/name&gt;&lt;ola&gt;1970-01-01 00:00:00&lt;/ola&gt;&lt;order&gt;1100&lt;/order&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb4a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;complete&lt;/value&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_stage&gt;&lt;wf_stage action="INSERT_OR_UPDATE"&gt;&lt;name&gt;Delivery&lt;/name&gt;&lt;ola&gt;1970-01-03 00:00:00&lt;/ola&gt;&lt;order&gt;140&lt;/order&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb4b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;delivery&lt;/value&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_stage&gt;&lt;wf_stage action="INSERT_OR_UPDATE"&gt;&lt;name&gt;Error&lt;/name&gt;&lt;ola&gt;1970-01-01 00:00:00&lt;/ola&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb4a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;error&lt;/value&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_stage&gt;&lt;wf_stage action="INSERT_OR_UPDATE"&gt;&lt;name&gt;Fulfillment&lt;/name&gt;&lt;ola&gt;1970-01-02 00:00:00&lt;/ola&gt;&lt;order&gt;120&lt;/order&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb4b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;fulfillment&lt;/value&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_stage&gt;&lt;wf_stage action="INSERT_OR_UPDATE"&gt;&lt;name&gt;Provisioning&lt;/name&gt;&lt;ola&gt;1970-01-01 00:00:00&lt;/ola&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb4b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;provisioning&lt;/value&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_stage&gt;&lt;wf_stage action="INSERT_OR_UPDATE"&gt;&lt;name&gt;Request Cancelled&lt;/name&gt;&lt;ola&gt;1970-01-01 00:00:00&lt;/ola&gt;&lt;order&gt;1000&lt;/order&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb4a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;Request Cancelled&lt;/value&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_stage&gt;&lt;wf_stage action="INSERT_OR_UPDATE"&gt;&lt;name&gt;Request Approved&lt;/name&gt;&lt;ola&gt;1970-01-01 00:00:00&lt;/ola&gt;&lt;order&gt;90&lt;/order&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb4a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;request_approved&lt;/value&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_stage&gt;&lt;wf_stage action="INSERT_OR_UPDATE"&gt;&lt;name&gt;Running&lt;/name&gt;&lt;ola&gt;1970-01-01 00:00:00&lt;/ola&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb4b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;running&lt;/value&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_stage&gt;&lt;wf_stage action="INSERT_OR_UPDATE"&gt;&lt;name&gt;Waiting for Approval&lt;/name&gt;&lt;ola&gt;1970-01-02 00:00:00&lt;/ola&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb4a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;waiting_for_approval&lt;/value&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_stage&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Parallel Flow Launcher"&gt;35ef56111b211100adca1e094f071315&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;14&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name/&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;25&lt;/x&gt;&lt;y&gt;111&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=7c293c421bcf2c107f2a8515ec4bcb68"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;2&lt;/value&gt;&lt;variable display_value=""&gt;428bf90eff1331009267ffffffffff80&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;713142e11b211100adca1e094f0713f0&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb6b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script can be used to provide the workflows(s) to use for each sub-flow execution.  If a single workflow is&amp;#13;
// to be used for every sub-flow then simply specify that name or ID here.  Otherwise, if separate workflows may&amp;#13;
// be needed, then perhaps use a WorkflowCoordinator instance, which can be created or referenced here.  &amp;#13;
//&amp;#13;
// -- Use one of the methods below --&amp;#13;
//&amp;#13;
// METHOD 1:  Provide a name of a workflow&amp;#13;
//&amp;#13;
//      'MyWorkflow'&amp;#13;
//&amp;#13;
//&amp;#13;
// METHOD 2:  Provide a sys_id of a workflow via a variable&amp;#13;
//&amp;#13;
//       myWorkflow;&amp;#13;
//&amp;#13;
//&amp;#13;
// METHOD 3:  Create a WorkflowCoordinator with parameters for each flow to launch.  &amp;#13;
//                     The first two sub-flows will be the AllocateServer workflow and the last will be the SetupLoadBalancer workflow&amp;#13;
//&amp;#13;
//&amp;#13;
//        coordinator = new WorkflowCoordinator( {workflow:'AllocateServer'} );&amp;#13;
//        coordinator.add( {u_serverName:'Tomcat1'} );&amp;#13;
//        coordinator.add( {u_serverName:'Tomcat2'} );&amp;#13;
//        coordinator.add( {u_portlist: ['8080','8081,'8082'] },  'SetupLoadBalancer' );&amp;#13;
//&amp;#13;
//        coordinator;         // THIS MUST BE THE LAST LINE&amp;#13;
//&amp;#13;
//&amp;#13;
// METHOD 4:  Have a script include return a workflow name or ID or have it return a WorkflowCoordinator instance.&amp;#13;
//&amp;#13;
//         var siteType = 'BackupSite';&amp;#13;
//         var numTomcats = 4;&amp;#13;
//&amp;#13;
//         SiteBuilder.build(siteType, numTomcats);     // LAST LINE!  This function returns a pre-configured WorkflowCoordinator&amp;#13;
//&amp;#13;
//workflow.scratchpad.user_sys_id = current.sys_created_by.sys_id + ''; gs.info(workflow.scratchpad.user_sys_id);&amp;#13;
workflow.scratchpad.userID = gs.getUserID();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
myWorkflow = gs.getProperty('x_nuta2_nutanix_ca.nutanix.workflow.user.approval');&amp;#13;
logger.info("[wf_workflow] Parallel Flow Launcher for Approval :  "+myWorkflow);&amp;#13;
myWorkflow;&lt;/value&gt;&lt;variable display_value=""&gt;22dea7431b211100adca1e094f0713f2&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;600&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;0&lt;/value&gt;&lt;variable display_value=""&gt;0a2b9e591b221100adca1e094f07130e&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;d698838a1b121100adca1e094f071315&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;400&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;25&lt;/value&gt;&lt;variable display_value=""&gt;e44186731b211100adca1e094f0713e0&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;900&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// To access the set of completed workflows use the 'coordinator' variable.&amp;#13;
//&amp;#13;
//  var flow1Result = coordinator.getFlow(1).output;&amp;#13;
//&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;e47e76101b221100adca1e094f07134e&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;800&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;0&lt;/value&gt;&lt;variable display_value=""&gt;662e36101b221100adca1e094f0713a0&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;7608dbca1b121100adca1e094f071355&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;700&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// To access the flow that completed, use the 'flow' variable.&amp;#13;
//  &amp;#13;
//     var flowOutput = flow.output;&amp;#13;
//&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;006b9e591b221100adca1e094f0713a1&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;500&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;5&lt;/value&gt;&lt;variable display_value=""&gt;7b81c6731b211100adca1e094f07136e&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;713142e11b211100adca1e094f0713f0&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;7608dbca1b121100adca1e094f071355&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;d698838a1b121100adca1e094f071315&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb6b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script can be used to provide the workflows(s) to use for each sub-flow execution.  If a single workflow is&amp;#13;
// to be used for every sub-flow then simply specify that name or ID here.  Otherwise, if separate workflows may&amp;#13;
// be needed, then perhaps use a WorkflowCoordinator instance, which can be created or referenced here.  &amp;#13;
//&amp;#13;
// -- Use one of the methods below --&amp;#13;
//&amp;#13;
// METHOD 1:  Provide a name of a workflow&amp;#13;
//&amp;#13;
//      'MyWorkflow'&amp;#13;
//&amp;#13;
//&amp;#13;
// METHOD 2:  Provide a sys_id of a workflow via a variable&amp;#13;
//&amp;#13;
//       myWorkflow;&amp;#13;
//&amp;#13;
//&amp;#13;
// METHOD 3:  Create a WorkflowCoordinator with parameters for each flow to launch.  &amp;#13;
//                     The first two sub-flows will be the AllocateServer workflow and the last will be the SetupLoadBalancer workflow&amp;#13;
//&amp;#13;
//&amp;#13;
//        coordinator = new WorkflowCoordinator( {workflow:'AllocateServer'} );&amp;#13;
//        coordinator.add( {u_serverName:'Tomcat1'} );&amp;#13;
//        coordinator.add( {u_serverName:'Tomcat2'} );&amp;#13;
//        coordinator.add( {u_portlist: ['8080','8081,'8082'] },  'SetupLoadBalancer' );&amp;#13;
//&amp;#13;
//        coordinator;         // THIS MUST BE THE LAST LINE&amp;#13;
//&amp;#13;
//&amp;#13;
// METHOD 4:  Have a script include return a workflow name or ID or have it return a WorkflowCoordinator instance.&amp;#13;
//&amp;#13;
//         var siteType = 'BackupSite';&amp;#13;
//         var numTomcats = 4;&amp;#13;
//&amp;#13;
//         SiteBuilder.build(siteType, numTomcats);     // LAST LINE!  This function returns a pre-configured WorkflowCoordinator&amp;#13;
//&amp;#13;
//workflow.scratchpad.user_sys_id = current.sys_created_by.sys_id + ''; gs.info(workflow.scratchpad.user_sys_id);&amp;#13;
workflow.scratchpad.userID = gs.getUserID();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
myWorkflow = gs.getProperty('x_nuta2_nutanix_ca.nutanix.workflow.user.approval');&amp;#13;
logger.info("[wf_workflow] Parallel Flow Launcher for Approval :  "+myWorkflow);&amp;#13;
myWorkflow;&lt;/value&gt;&lt;variable display_value=""&gt;22dea7431b211100adca1e094f0713f2&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;2&lt;/value&gt;&lt;variable display_value=""&gt;428bf90eff1331009267ffffffffff80&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;400&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;25&lt;/value&gt;&lt;variable display_value=""&gt;e44186731b211100adca1e094f0713e0&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;500&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;5&lt;/value&gt;&lt;variable display_value=""&gt;7b81c6731b211100adca1e094f07136e&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;600&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;0&lt;/value&gt;&lt;variable display_value=""&gt;0a2b9e591b221100adca1e094f07130e&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;700&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// To access the flow that completed, use the 'flow' variable.&amp;#13;
//  &amp;#13;
//     var flowOutput = flow.output;&amp;#13;
//&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;006b9e591b221100adca1e094f0713a1&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;800&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb6a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;0&lt;/value&gt;&lt;variable display_value=""&gt;662e36101b221100adca1e094f0713a0&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/document_key&gt;&lt;order&gt;900&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb69&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// To access the set of completed workflows use the 'coordinator' variable.&amp;#13;
//&amp;#13;
//  var flow1Result = coordinator.getFlow(1).output;&amp;#13;
//&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;e47e76101b221100adca1e094f07134e&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value=""&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb6b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Begin"&gt;c7a5e32c0a0a0b3a002377c24ed8ea76&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;1&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input/&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Begin&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb64&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width&gt;80&lt;/width&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;20&lt;/x&gt;&lt;y&gt;20&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=7c293c421bcf2c107f2a8515ec4bcb64"/&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Begin"&gt;7c293c421bcf2c107f2a8515ec4bcb64&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb65&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Run Script"&gt;db8c65aec0a8016501d00259bc7203a4&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;12&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Blueprint Launch&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb59&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:49:00&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;443&lt;/x&gt;&lt;y&gt;611&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=38293c421bcf2c107f2a8515ec4bcb59"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb59&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb59&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:49:00&lt;/sys_updated_on&gt;&lt;value&gt;var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var reqUtils = new  Nutanix_RequestUtil();&amp;#13;
var bp_uuid = workflow.scratchpad.bp_uuid;&amp;#13;
&amp;#13;
//gs.error("before launch :: "+bp_uuid);&amp;#13;
logger.info("[wf_workflow] Marketplace_launch has been completed by '"+workflow.scratchpad.user+"', Blueprint uuid: "+bp_uuid+", Name: '"+workflow.scratchpad.bp_name+"'");&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid, '');&amp;#13;
if(response.getStatusCode() == '200' || response.getStatusCode() == '201') {&amp;#13;
	var parseResp = JSON.parse(response.getBody());&amp;#13;
	&amp;#13;
	if(parseResp.metadata.owner_reference)&amp;#13;
		delete parseResp.metadata.owner_reference;&amp;#13;
		&amp;#13;
	//gs.error("BP UUID body recieved:: "+response.getBody());&amp;#13;
	&amp;#13;
	var app_profile_uuid = ' ';&amp;#13;
	var app_profile_name = (current.variables.default_profile.getDisplayValue()).trim();&amp;#13;
	&amp;#13;
	for(var i = 0; i&amp;lt;parseResp.spec.resources.app_profile_list.length; i++){&amp;#13;
		var res_app_profile = (parseResp.spec.resources.app_profile_list[i].name).toString();&amp;#13;
				&amp;#13;
		if(app_profile_name == res_app_profile){&amp;#13;
			app_profile_uuid = parseResp.spec.resources.app_profile_list[i].uuid;&amp;#13;
			//gs.error("app_profile_uuid and name MPI::"+app_profile_name+'::'+app_profile_uuid);&amp;#13;
		}&amp;#13;
		&amp;#13;
	}&amp;#13;
	&amp;#13;
	var project_name = ' ';&amp;#13;
	var project_uuid = current.variables.default_project+'';&amp;#13;
	var grProj = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');&amp;#13;
	grProj.addQuery('uuid', project_uuid);&amp;#13;
	grProj.query();&amp;#13;
	if(grProj.next()){&amp;#13;
		project_name = grProj.name;&amp;#13;
	}&amp;#13;
	&amp;#13;
	parseResp.metadata.project_reference = {&amp;#13;
		"name":project_name+'',&amp;#13;
		"kind":"project" ,&amp;#13;
		"uuid":project_uuid+''&amp;#13;
	};&amp;#13;
	&amp;#13;
	&amp;#13;
	/*&amp;#13;
	var userSysID = gs.getUserID();&amp;#13;
	var grUser = new GlideRecord('sys_user');&amp;#13;
	grUser.addQuery('sys_id', userSysID);&amp;#13;
	grUser.query();&amp;#13;
	if(grUser.next()){&amp;#13;
		&amp;#13;
		var name = grUser.user_name;&amp;#13;
		var uuid = grUser.uuid;&amp;#13;
		&amp;#13;
	}&amp;#13;
	&amp;#13;
	&amp;#13;
	parseResp.metadata.owner_reference = {&amp;#13;
		"name":name+'',&amp;#13;
		"kind":"user",&amp;#13;
		"uuid":uuid+''&amp;#13;
	};&amp;#13;
	&amp;#13;
	*/&amp;#13;
	&amp;#13;
	&amp;#13;
	&amp;#13;
	var tmpbody = {&amp;#13;
		"status": parseResp.status,&amp;#13;
		"spec": parseResp.spec,&amp;#13;
		"metadata" : parseResp.metadata&amp;#13;
	};&amp;#13;
		&amp;#13;
//	tmpbody = reqUtils.transformTempBody(tmpbody, JSON.parse(current.cat_item.getRefRecord().cloned_bp_json));&amp;#13;
	&amp;#13;
	var body =&amp;#13;
	{&amp;#13;
		"api_version":parseResp.api_version,&amp;#13;
		"metadata":parseResp.metadata,&amp;#13;
		"spec" :{&amp;#13;
			"app_profile_reference": {&amp;#13;
				"kind": "app_profile",&amp;#13;
				"uuid": app_profile_uuid+''                       //current.variables.default_profile+''&amp;#13;
			},&amp;#13;
			&amp;#13;
			"application_name": current.variables.default_app_name+'',&amp;#13;
			"description":parseResp.status.description,&amp;#13;
			"resources": reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)&amp;#13;
			//reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)&amp;#13;
			//parseResp.spec.resources&amp;#13;
		}&amp;#13;
	};&amp;#13;
	&amp;#13;
// 	gs.error(" ::: " + JSON.stringify(parseResp));&amp;#13;
 	//gs.error("BP payload send::"+JSON.stringify(body));&amp;#13;
	&amp;#13;
	var bpLaunchedResp = utils.makeIntermediateApiCall('POST', '/blueprints/'+bp_uuid+'/launch', JSON.stringify(body), workflow.scratchpad.userID+'');&amp;#13;
	&amp;#13;
	workflow.scratchpad.bpLaunchedResp = bpLaunchedResp;&amp;#13;
	&amp;#13;
} else {&amp;#13;
	workflow.scratchpad.blueprint_launch_failed = response.getBody();	&amp;#13;
	logger.error("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launch failed by '"+gs.getUserName()+"', Reason: "+response.getBody());&amp;#13;
	&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb59&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb59&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:49:00&lt;/sys_updated_on&gt;&lt;value&gt;var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var reqUtils = new  Nutanix_RequestUtil();&amp;#13;
var bp_uuid = workflow.scratchpad.bp_uuid;&amp;#13;
&amp;#13;
//gs.error("before launch :: "+bp_uuid);&amp;#13;
logger.info("[wf_workflow] Marketplace_launch has been completed by '"+workflow.scratchpad.user+"', Blueprint uuid: "+bp_uuid+", Name: '"+workflow.scratchpad.bp_name+"'");&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid, '');&amp;#13;
if(response.getStatusCode() == '200' || response.getStatusCode() == '201') {&amp;#13;
	var parseResp = JSON.parse(response.getBody());&amp;#13;
	&amp;#13;
	if(parseResp.metadata.owner_reference)&amp;#13;
		delete parseResp.metadata.owner_reference;&amp;#13;
		&amp;#13;
	//gs.error("BP UUID body recieved:: "+response.getBody());&amp;#13;
	&amp;#13;
	var app_profile_uuid = ' ';&amp;#13;
	var app_profile_name = (current.variables.default_profile.getDisplayValue()).trim();&amp;#13;
	&amp;#13;
	for(var i = 0; i&amp;lt;parseResp.spec.resources.app_profile_list.length; i++){&amp;#13;
		var res_app_profile = (parseResp.spec.resources.app_profile_list[i].name).toString();&amp;#13;
				&amp;#13;
		if(app_profile_name == res_app_profile){&amp;#13;
			app_profile_uuid = parseResp.spec.resources.app_profile_list[i].uuid;&amp;#13;
			//gs.error("app_profile_uuid and name MPI::"+app_profile_name+'::'+app_profile_uuid);&amp;#13;
		}&amp;#13;
		&amp;#13;
	}&amp;#13;
	&amp;#13;
	var project_name = ' ';&amp;#13;
	var project_uuid = current.variables.default_project+'';&amp;#13;
	var grProj = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');&amp;#13;
	grProj.addQuery('uuid', project_uuid);&amp;#13;
	grProj.query();&amp;#13;
	if(grProj.next()){&amp;#13;
		project_name = grProj.name;&amp;#13;
	}&amp;#13;
	&amp;#13;
	parseResp.metadata.project_reference = {&amp;#13;
		"name":project_name+'',&amp;#13;
		"kind":"project" ,&amp;#13;
		"uuid":project_uuid+''&amp;#13;
	};&amp;#13;
	&amp;#13;
	&amp;#13;
	/*&amp;#13;
	var userSysID = gs.getUserID();&amp;#13;
	var grUser = new GlideRecord('sys_user');&amp;#13;
	grUser.addQuery('sys_id', userSysID);&amp;#13;
	grUser.query();&amp;#13;
	if(grUser.next()){&amp;#13;
		&amp;#13;
		var name = grUser.user_name;&amp;#13;
		var uuid = grUser.uuid;&amp;#13;
		&amp;#13;
	}&amp;#13;
	&amp;#13;
	&amp;#13;
	parseResp.metadata.owner_reference = {&amp;#13;
		"name":name+'',&amp;#13;
		"kind":"user",&amp;#13;
		"uuid":uuid+''&amp;#13;
	};&amp;#13;
	&amp;#13;
	*/&amp;#13;
	&amp;#13;
	&amp;#13;
	&amp;#13;
	var tmpbody = {&amp;#13;
		"status": parseResp.status,&amp;#13;
		"spec": parseResp.spec,&amp;#13;
		"metadata" : parseResp.metadata&amp;#13;
	};&amp;#13;
		&amp;#13;
//	tmpbody = reqUtils.transformTempBody(tmpbody, JSON.parse(current.cat_item.getRefRecord().cloned_bp_json));&amp;#13;
	&amp;#13;
	var body =&amp;#13;
	{&amp;#13;
		"api_version":parseResp.api_version,&amp;#13;
		"metadata":parseResp.metadata,&amp;#13;
		"spec" :{&amp;#13;
			"app_profile_reference": {&amp;#13;
				"kind": "app_profile",&amp;#13;
				"uuid": app_profile_uuid+''                       //current.variables.default_profile+''&amp;#13;
			},&amp;#13;
			&amp;#13;
			"application_name": current.variables.default_app_name+'',&amp;#13;
			"description":parseResp.status.description,&amp;#13;
			"resources": reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)&amp;#13;
			//reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)&amp;#13;
			//parseResp.spec.resources&amp;#13;
		}&amp;#13;
	};&amp;#13;
	&amp;#13;
// 	gs.error(" ::: " + JSON.stringify(parseResp));&amp;#13;
 	//gs.error("BP payload send::"+JSON.stringify(body));&amp;#13;
	&amp;#13;
	var bpLaunchedResp = utils.makeIntermediateApiCall('POST', '/blueprints/'+bp_uuid+'/launch', JSON.stringify(body), workflow.scratchpad.userID+'');&amp;#13;
	&amp;#13;
	workflow.scratchpad.bpLaunchedResp = bpLaunchedResp;&amp;#13;
	&amp;#13;
} else {&amp;#13;
	workflow.scratchpad.blueprint_launch_failed = response.getBody();	&amp;#13;
	logger.error("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launch failed by '"+gs.getUserName()+"', Reason: "+response.getBody());&amp;#13;
	&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Blueprint Launch"&gt;38293c421bcf2c107f2a8515ec4bcb59&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb59&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Run Script"&gt;db8c65aec0a8016501d00259bc7203a4&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;5&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Blueprint Launch&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb6d&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:48:19&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;421&lt;/x&gt;&lt;y&gt;225&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=f0293c421bcf2c107f2a8515ec4bcb6d"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb6d&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb6d&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:48:19&lt;/sys_updated_on&gt;&lt;value&gt;var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var reqUtils = new Nutanix_RequestUtil();&amp;#13;
&amp;#13;
var bp_uuid = current.cat_item.blueprint_name.uuid+'';&amp;#13;
&amp;#13;
workflow.scratchpad.bp_uuid = bp_uuid;&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid, '');&amp;#13;
&amp;#13;
if(response.getStatusCode() == '200' || response.getStatusCode() == '201') {&amp;#13;
&amp;#13;
	//gs.error("BP UUID body recieved::"+response.getBody());&amp;#13;
	var parseResp = JSON.parse(response.getBody());&amp;#13;
	&amp;#13;
	if(parseResp.metadata.owner_reference)&amp;#13;
		delete parseResp.metadata.owner_reference;&amp;#13;
	&amp;#13;
	workflow.scratchpad.bp_name = parseResp.metadata.name;&amp;#13;
&amp;#13;
	var app_profile_uuid = ' ';&amp;#13;
	var app_profile_name = current.variables.default_profile.getDisplayValue().trim();&amp;#13;
&amp;#13;
	for(var i = 0; i&amp;lt;parseResp.spec.resources.app_profile_list.length; i++){&amp;#13;
        var res_app_profile = (parseResp.spec.resources.app_profile_list[i].name).toString();&amp;#13;
		gs.info("iii= "+i+""+res_app_profile+" "+app_profile_name);&amp;#13;
		gs.info("iii= "+i+""+typeof(res_app_profile)+" "+typeof(app_profile_name));&amp;#13;
		gs.info("iii=="+i+res_app_profile==app_profile_name);&amp;#13;
		gs.info("iii==="+i+res_app_profile===app_profile_name);&amp;#13;
		gs.info("iii localeCompare"+i+res_app_profile.localeCompare(app_profile_name));&amp;#13;
		&amp;#13;
		if(app_profile_name == res_app_profile){&amp;#13;
			&amp;#13;
			app_profile_uuid = parseResp.spec.resources.app_profile_list[i].uuid;&amp;#13;
		}&amp;#13;
&amp;#13;
	}&amp;#13;
	var project_name = ' ';&amp;#13;
	var project_uuid = current.variables.default_project+'';&amp;#13;
	var grProj = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');&amp;#13;
	grProj.addQuery('uuid', project_uuid);&amp;#13;
	grProj.query();&amp;#13;
	if(grProj.next()){&amp;#13;
		project_name = grProj.name;&amp;#13;
	}&amp;#13;
&amp;#13;
	parseResp.metadata.project_reference = {&amp;#13;
		"name":project_name+'',&amp;#13;
		"kind":"project" ,&amp;#13;
		"uuid":project_uuid+''&amp;#13;
	};&amp;#13;
&amp;#13;
	/*&amp;#13;
	var userSysID = gs.getUserID();&amp;#13;
	var grUser = new GlideRecord('sys_user');&amp;#13;
	grUser.addQuery('sys_id', userSysID);&amp;#13;
	grUser.query();&amp;#13;
	if(grUser.next()){&amp;#13;
&amp;#13;
		var name = grUser.user_name;&amp;#13;
		var uuid = grUser.uuid;&amp;#13;
&amp;#13;
	}&amp;#13;
&amp;#13;
&amp;#13;
	parseResp.metadata.owner_reference = {&amp;#13;
		"name": "calm1@calsoftcalm.com",       //name+'',&amp;#13;
		"kind":"user",&amp;#13;
		"uuid":"b5883fe6-70d2-5136-b8e4-19aa6fb04326"          //uuid+''&amp;#13;
	};&amp;#13;
&amp;#13;
	*/&amp;#13;
&amp;#13;
	// 	var profileJSON = parseResp.spec.resources.app_profile_list;&amp;#13;
	// 	for(var i in profileJSON){&amp;#13;
	// 		for(var j in profileJSON[i].variable_list){&amp;#13;
	// 			if(profileJSON[i].variable_list[j].type == 'SECRET')&amp;#13;
	// 				profileJSON[i].variable_list[j].attrs.is_secret_modified = true;&amp;#13;
&amp;#13;
	// 			profileJSON[i].variable_list[j].value = current.variables[profileJSON[i].variable_list[j].name+'']+'';&amp;#13;
	// 		}&amp;#13;
	// 	}&amp;#13;
&amp;#13;
	// 	parseResp.spec.resources.app_profile_list = profileJSON;&amp;#13;
&amp;#13;
&amp;#13;
	var tmpbody = {&amp;#13;
		"status": parseResp.status,&amp;#13;
		"spec": parseResp.spec,&amp;#13;
		"metadata" : parseResp.metadata&amp;#13;
	};&amp;#13;
&amp;#13;
&amp;#13;
	var body = {&amp;#13;
		"api_version": parseResp.api_version,&amp;#13;
		"metadata": parseResp.metadata,&amp;#13;
		"spec" :{&amp;#13;
			"app_profile_reference": {&amp;#13;
				"kind": "app_profile",&amp;#13;
				"uuid": app_profile_uuid+''&amp;#13;
			},&amp;#13;
			"application_name": current.variables.default_app_name+'',&amp;#13;
			"description": parseResp.status.description,&amp;#13;
			"resources": reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)&amp;#13;
		}&amp;#13;
	};&amp;#13;
&amp;#13;
	//reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current.variables)&amp;#13;
	//parseResp.spec.resources&amp;#13;
	//gs.error("BP payload send::"+JSON.stringify(body));&amp;#13;
	&amp;#13;
	var bpLaunchedResp = utils.makeIntermediateApiCall('POST', '/blueprints/'+bp_uuid+'/launch', JSON.stringify(body), workflow.scratchpad.userID+'');&amp;#13;
	workflow.scratchpad.bpLaunchedResp = bpLaunchedResp;&amp;#13;
&amp;#13;
} else {&amp;#13;
	workflow.scratchpad.blueprint_launch_failed = response.getBody();	&amp;#13;
	logger.error("[wf_workflow] Blueprint '"+parseResp.metadata.name+"' Launch failed by '"+workflow.scratchpad.user+"', Reason: "+response.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb6d&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb6d&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:48:19&lt;/sys_updated_on&gt;&lt;value&gt;var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var reqUtils = new Nutanix_RequestUtil();&amp;#13;
&amp;#13;
var bp_uuid = current.cat_item.blueprint_name.uuid+'';&amp;#13;
&amp;#13;
workflow.scratchpad.bp_uuid = bp_uuid;&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid, '');&amp;#13;
&amp;#13;
if(response.getStatusCode() == '200' || response.getStatusCode() == '201') {&amp;#13;
&amp;#13;
	//gs.error("BP UUID body recieved::"+response.getBody());&amp;#13;
	var parseResp = JSON.parse(response.getBody());&amp;#13;
	&amp;#13;
	if(parseResp.metadata.owner_reference)&amp;#13;
		delete parseResp.metadata.owner_reference;&amp;#13;
	&amp;#13;
	workflow.scratchpad.bp_name = parseResp.metadata.name;&amp;#13;
&amp;#13;
	var app_profile_uuid = ' ';&amp;#13;
	var app_profile_name = current.variables.default_profile.getDisplayValue().trim();&amp;#13;
&amp;#13;
	for(var i = 0; i&amp;lt;parseResp.spec.resources.app_profile_list.length; i++){&amp;#13;
        var res_app_profile = (parseResp.spec.resources.app_profile_list[i].name).toString();&amp;#13;
		gs.info("iii= "+i+""+res_app_profile+" "+app_profile_name);&amp;#13;
		gs.info("iii= "+i+""+typeof(res_app_profile)+" "+typeof(app_profile_name));&amp;#13;
		gs.info("iii=="+i+res_app_profile==app_profile_name);&amp;#13;
		gs.info("iii==="+i+res_app_profile===app_profile_name);&amp;#13;
		gs.info("iii localeCompare"+i+res_app_profile.localeCompare(app_profile_name));&amp;#13;
		&amp;#13;
		if(app_profile_name == res_app_profile){&amp;#13;
			&amp;#13;
			app_profile_uuid = parseResp.spec.resources.app_profile_list[i].uuid;&amp;#13;
		}&amp;#13;
&amp;#13;
	}&amp;#13;
	var project_name = ' ';&amp;#13;
	var project_uuid = current.variables.default_project+'';&amp;#13;
	var grProj = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');&amp;#13;
	grProj.addQuery('uuid', project_uuid);&amp;#13;
	grProj.query();&amp;#13;
	if(grProj.next()){&amp;#13;
		project_name = grProj.name;&amp;#13;
	}&amp;#13;
&amp;#13;
	parseResp.metadata.project_reference = {&amp;#13;
		"name":project_name+'',&amp;#13;
		"kind":"project" ,&amp;#13;
		"uuid":project_uuid+''&amp;#13;
	};&amp;#13;
&amp;#13;
	/*&amp;#13;
	var userSysID = gs.getUserID();&amp;#13;
	var grUser = new GlideRecord('sys_user');&amp;#13;
	grUser.addQuery('sys_id', userSysID);&amp;#13;
	grUser.query();&amp;#13;
	if(grUser.next()){&amp;#13;
&amp;#13;
		var name = grUser.user_name;&amp;#13;
		var uuid = grUser.uuid;&amp;#13;
&amp;#13;
	}&amp;#13;
&amp;#13;
&amp;#13;
	parseResp.metadata.owner_reference = {&amp;#13;
		"name": "calm1@calsoftcalm.com",       //name+'',&amp;#13;
		"kind":"user",&amp;#13;
		"uuid":"b5883fe6-70d2-5136-b8e4-19aa6fb04326"          //uuid+''&amp;#13;
	};&amp;#13;
&amp;#13;
	*/&amp;#13;
&amp;#13;
	// 	var profileJSON = parseResp.spec.resources.app_profile_list;&amp;#13;
	// 	for(var i in profileJSON){&amp;#13;
	// 		for(var j in profileJSON[i].variable_list){&amp;#13;
	// 			if(profileJSON[i].variable_list[j].type == 'SECRET')&amp;#13;
	// 				profileJSON[i].variable_list[j].attrs.is_secret_modified = true;&amp;#13;
&amp;#13;
	// 			profileJSON[i].variable_list[j].value = current.variables[profileJSON[i].variable_list[j].name+'']+'';&amp;#13;
	// 		}&amp;#13;
	// 	}&amp;#13;
&amp;#13;
	// 	parseResp.spec.resources.app_profile_list = profileJSON;&amp;#13;
&amp;#13;
&amp;#13;
	var tmpbody = {&amp;#13;
		"status": parseResp.status,&amp;#13;
		"spec": parseResp.spec,&amp;#13;
		"metadata" : parseResp.metadata&amp;#13;
	};&amp;#13;
&amp;#13;
&amp;#13;
	var body = {&amp;#13;
		"api_version": parseResp.api_version,&amp;#13;
		"metadata": parseResp.metadata,&amp;#13;
		"spec" :{&amp;#13;
			"app_profile_reference": {&amp;#13;
				"kind": "app_profile",&amp;#13;
				"uuid": app_profile_uuid+''&amp;#13;
			},&amp;#13;
			"application_name": current.variables.default_app_name+'',&amp;#13;
			"description": parseResp.status.description,&amp;#13;
			"resources": reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)&amp;#13;
		}&amp;#13;
	};&amp;#13;
&amp;#13;
	//reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current.variables)&amp;#13;
	//parseResp.spec.resources&amp;#13;
	//gs.error("BP payload send::"+JSON.stringify(body));&amp;#13;
	&amp;#13;
	var bpLaunchedResp = utils.makeIntermediateApiCall('POST', '/blueprints/'+bp_uuid+'/launch', JSON.stringify(body), workflow.scratchpad.userID+'');&amp;#13;
	workflow.scratchpad.bpLaunchedResp = bpLaunchedResp;&amp;#13;
&amp;#13;
} else {&amp;#13;
	workflow.scratchpad.blueprint_launch_failed = response.getBody();	&amp;#13;
	logger.error("[wf_workflow] Blueprint '"+parseResp.metadata.name+"' Launch failed by '"+workflow.scratchpad.user+"', Reason: "+response.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Blueprint Launch"&gt;f0293c421bcf2c107f2a8515ec4bcb6d&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb6d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="If"&gt;98f621ca0a0a0b5900f7c291f5e45a0e&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;19&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Check Application Pending status&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;1161&lt;/x&gt;&lt;y&gt;147&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=bc293c421bcf2c107f2a8515ec4bcb6b"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb6c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb6c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
  answer = ifScript();&amp;#13;
&amp;#13;
  function ifScript() {&amp;#13;
	  var logger = new Nutanix_Calm_Logger();	&amp;#13;
	  &amp;#13;
	  var appState = workflow.scratchpad.appState;&amp;#13;
	  &amp;#13;
     if (appState == 'PENDING' || appState == 'provisioning') {&amp;#13;
		 logger.info("[wf_workflow]  Application '"+workflow.scratchpad.app_name+"' Provisioning is in progress state: "+appState);&amp;#13;
		 &amp;#13;
		 current.stage = 'provisioning';&amp;#13;
		 &amp;#13;
        return 'yes';&amp;#13;
     }&amp;#13;
     return 'no';&amp;#13;
  }&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb6c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb6c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb6c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb6c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
  answer = ifScript();&amp;#13;
&amp;#13;
  function ifScript() {&amp;#13;
	  var logger = new Nutanix_Calm_Logger();	&amp;#13;
	  &amp;#13;
	  var appState = workflow.scratchpad.appState;&amp;#13;
	  &amp;#13;
     if (appState == 'PENDING' || appState == 'provisioning') {&amp;#13;
		 logger.info("[wf_workflow]  Application '"+workflow.scratchpad.app_name+"' Provisioning is in progress state: "+appState);&amp;#13;
		 &amp;#13;
		 current.stage = 'provisioning';&amp;#13;
		 &amp;#13;
        return 'yes';&amp;#13;
     }&amp;#13;
     return 'no';&amp;#13;
  }&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check Application Pending status"&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/activity&gt;&lt;condition&gt;activity.result == 'no'&lt;/condition&gt;&lt;condition_default display_value="No"&gt;c1eff6430a0a0b59000f955abe842c94&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;false&lt;/is_positive&gt;&lt;name&gt;No&lt;/name&gt;&lt;order&gt;200&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;true&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb6c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check Application Pending status"&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/activity&gt;&lt;condition&gt;activity.result == 'yes'&lt;/condition&gt;&lt;condition_default display_value="Yes"&gt;c1ef63200a0a0b59005ef89bae78feb7&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Yes&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb6c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="If"&gt;98f621ca0a0a0b5900f7c291f5e45a0e&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;21&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Check Application status running/error&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;1201&lt;/x&gt;&lt;y&gt;402&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=bc293c421bcf2c107f2a8515ec4bcb4f"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb50&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb50&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	var logger = new Nutanix_Calm_Logger();&amp;#13;
	&amp;#13;
	var appState = workflow.scratchpad.appState;&amp;#13;
	&amp;#13;
	if (appState == 'error') {&amp;#13;
		logger.info("[wf_workflow]  Application '"+workflow.scratchpad.app_name+"' is into '"+appState+"' state");&amp;#13;
		&amp;#13;
		current.state = 4; //make Requested Item's state as 'Closed Incomplete'&amp;#13;
		current.stage = 'error';&amp;#13;
		&amp;#13;
		return 'yes';&amp;#13;
	} else {&amp;#13;
		logger.info("[wf_workflow]  Application '"+workflow.scratchpad.app_name+"' is into '"+appState+"' state");&amp;#13;
		current.state = 3; //make Requested Item's state as 'Closed Complete'&amp;#13;
		current.stage = 'complete';&amp;#13;
		&amp;#13;
		return 'no';&amp;#13;
	}&amp;#13;
}&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb50&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb50&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb50&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb50&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	var logger = new Nutanix_Calm_Logger();&amp;#13;
	&amp;#13;
	var appState = workflow.scratchpad.appState;&amp;#13;
	&amp;#13;
	if (appState == 'error') {&amp;#13;
		logger.info("[wf_workflow]  Application '"+workflow.scratchpad.app_name+"' is into '"+appState+"' state");&amp;#13;
		&amp;#13;
		current.state = 4; //make Requested Item's state as 'Closed Incomplete'&amp;#13;
		current.stage = 'error';&amp;#13;
		&amp;#13;
		return 'yes';&amp;#13;
	} else {&amp;#13;
		logger.info("[wf_workflow]  Application '"+workflow.scratchpad.app_name+"' is into '"+appState+"' state");&amp;#13;
		current.state = 3; //make Requested Item's state as 'Closed Complete'&amp;#13;
		current.stage = 'complete';&amp;#13;
		&amp;#13;
		return 'no';&amp;#13;
	}&amp;#13;
}&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check Application status running/error"&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/activity&gt;&lt;condition&gt;activity.result == 'no'&lt;/condition&gt;&lt;condition_default display_value="No"&gt;c1eff6430a0a0b59000f955abe842c94&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;false&lt;/is_positive&gt;&lt;name&gt;No&lt;/name&gt;&lt;order&gt;200&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;true&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb50&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check Application status running/error"&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/activity&gt;&lt;condition&gt;activity.result == 'yes'&lt;/condition&gt;&lt;condition_default display_value="Yes"&gt;c1ef63200a0a0b59005ef89bae78feb7&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Yes&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb50&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="If"&gt;98f621ca0a0a0b5900f7c291f5e45a0e&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;25&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Check Approval Status&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage display_value="Waiting for Approval"&gt;38293c421bcf2c107f2a8515ec4bcb4a&lt;/stage&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;29&lt;/x&gt;&lt;y&gt;436&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=b0293c421bcf2c107f2a8515ec4bcb54"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb54&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;approval=approved^EQ&lt;/value&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb54&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
//   answer = ifScript();&amp;#13;
//&amp;#13;
//   function ifScript() {&amp;#13;
//      if (condition is true) {&amp;#13;
//         return 'yes';&amp;#13;
//      }&amp;#13;
//      return 'no';&amp;#13;
//   }&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb54&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;0&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb54&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;approval=approved^EQ&lt;/value&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb54&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;0&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb54&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
//   answer = ifScript();&amp;#13;
//&amp;#13;
//   function ifScript() {&amp;#13;
//      if (condition is true) {&amp;#13;
//         return 'yes';&amp;#13;
//      }&amp;#13;
//      return 'no';&amp;#13;
//   }&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check Approval Status"&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/activity&gt;&lt;condition&gt;activity.result == 'no'&lt;/condition&gt;&lt;condition_default display_value="No"&gt;c1eff6430a0a0b59000f955abe842c94&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;false&lt;/is_positive&gt;&lt;name&gt;No&lt;/name&gt;&lt;order&gt;200&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;true&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb55&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check Approval Status"&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/activity&gt;&lt;condition&gt;activity.result == 'yes'&lt;/condition&gt;&lt;condition_default display_value="Yes"&gt;c1ef63200a0a0b59005ef89bae78feb7&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Yes&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb54&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="If"&gt;98f621ca0a0a0b5900f7c291f5e45a0e&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;9&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Check bp_uuid for Blueprint Launch&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;296&lt;/x&gt;&lt;y&gt;111&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=34293c421bcf2c107f2a8515ec4bcb56"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb56&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	&amp;#13;
	current.state = 2; // to make the RITM's sate as 'Work In Progress'&amp;#13;
	current.stage = 'provisioning';&amp;#13;
	&amp;#13;
	var logger = new Nutanix_Calm_Logger();&amp;#13;
	workflow.scratchpad.cat_item = current.cat_item;&amp;#13;
	workflow.scratchpad.user = gs.getUserName();&amp;#13;
// 	workflow.scratchpad.userID = gs.getUserID();&amp;#13;
// 	gs.info("User ID: "+gs.getUserID());&amp;#13;
	&amp;#13;
	if (current.cat_item.blueprint_name.sys_class_name == 'x_nuta2_nutanix_ca_nutanix_blueprint') {&amp;#13;
		return 'yes';&amp;#13;
	}&amp;#13;
	return 'no';&amp;#13;
	&amp;#13;
	&amp;#13;
}&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb56&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb56&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb56&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb56&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb56&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	&amp;#13;
	current.state = 2; // to make the RITM's sate as 'Work In Progress'&amp;#13;
	current.stage = 'provisioning';&amp;#13;
	&amp;#13;
	var logger = new Nutanix_Calm_Logger();&amp;#13;
	workflow.scratchpad.cat_item = current.cat_item;&amp;#13;
	workflow.scratchpad.user = gs.getUserName();&amp;#13;
// 	workflow.scratchpad.userID = gs.getUserID();&amp;#13;
// 	gs.info("User ID: "+gs.getUserID());&amp;#13;
	&amp;#13;
	if (current.cat_item.blueprint_name.sys_class_name == 'x_nuta2_nutanix_ca_nutanix_blueprint') {&amp;#13;
		return 'yes';&amp;#13;
	}&amp;#13;
	return 'no';&amp;#13;
	&amp;#13;
	&amp;#13;
}&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check bp_uuid for Blueprint Launch"&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/activity&gt;&lt;condition&gt;activity.result == 'no'&lt;/condition&gt;&lt;condition_default display_value="No"&gt;c1eff6430a0a0b59000f955abe842c94&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;false&lt;/is_positive&gt;&lt;name&gt;No&lt;/name&gt;&lt;order&gt;200&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;true&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb57&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check bp_uuid for Blueprint Launch"&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/activity&gt;&lt;condition&gt;activity.result == 'yes'&lt;/condition&gt;&lt;condition_default display_value="Yes"&gt;c1ef63200a0a0b59005ef89bae78feb7&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Yes&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb57&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="If"&gt;98f621ca0a0a0b5900f7c291f5e45a0e&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;11&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Check launched blueprint success/failed&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;947&lt;/x&gt;&lt;y&gt;198&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=7c293c421bcf2c107f2a8515ec4bcb65"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb66&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	var logger = new Nutanix_Calm_Logger();	&amp;#13;
	&amp;#13;
	var bpStatusResp = workflow.scratchpad.bpStatusResp; &amp;#13;
	&amp;#13;
	var parsedJson =  JSON.parse(bpStatusResp.getBody());	&amp;#13;
	&amp;#13;
	&amp;#13;
	if((parsedJson.status.state == 'success' || parsedJson.status.state == 'Success') &amp;amp;&amp;amp; (parsedJson.status.milestone == 'Succeeded' || parsedJson.status.milestone == 'succeeded')){&amp;#13;
		&amp;#13;
		workflow.scratchpad.app_uuid = parsedJson.status.application_uuid;		&amp;#13;
		logger.info("[wf_workflow] Application uuid: '"+workflow.scratchpad.app_uuid+"' has been created for Blueprint '"+workflow.scratchpad.bp_name+"'");&amp;#13;
		workflow.scratchpad.app_name = parsedJson.status.app_name;&amp;#13;
		&amp;#13;
		return 'yes';&amp;#13;
		&amp;#13;
	} else if((parsedJson.status.state == 'failure' || parsedJson.status.state == 'Failure') &amp;amp;&amp;amp; (parsedJson.status.milestone == 'failed' || parsedJson.status.milestone == 'Failed')){&amp;#13;
		&amp;#13;
		workflow.scratchpad.blueprint_launch_failed = bpStatusResp.getBody();&amp;#13;
		&amp;#13;
		logger.error("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launch failed by '"+workflow.scratchpad.user+"', Reason: "+workflow.scratchpad.blueprint_launch_failed);&amp;#13;
		&amp;#13;
		return 'no';&amp;#13;
	} &amp;#13;
	&amp;#13;
	&amp;#13;
}&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb66&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb65&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb65&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb66&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb66&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	var logger = new Nutanix_Calm_Logger();	&amp;#13;
	&amp;#13;
	var bpStatusResp = workflow.scratchpad.bpStatusResp; &amp;#13;
	&amp;#13;
	var parsedJson =  JSON.parse(bpStatusResp.getBody());	&amp;#13;
	&amp;#13;
	&amp;#13;
	if((parsedJson.status.state == 'success' || parsedJson.status.state == 'Success') &amp;amp;&amp;amp; (parsedJson.status.milestone == 'Succeeded' || parsedJson.status.milestone == 'succeeded')){&amp;#13;
		&amp;#13;
		workflow.scratchpad.app_uuid = parsedJson.status.application_uuid;		&amp;#13;
		logger.info("[wf_workflow] Application uuid: '"+workflow.scratchpad.app_uuid+"' has been created for Blueprint '"+workflow.scratchpad.bp_name+"'");&amp;#13;
		workflow.scratchpad.app_name = parsedJson.status.app_name;&amp;#13;
		&amp;#13;
		return 'yes';&amp;#13;
		&amp;#13;
	} else if((parsedJson.status.state == 'failure' || parsedJson.status.state == 'Failure') &amp;amp;&amp;amp; (parsedJson.status.milestone == 'failed' || parsedJson.status.milestone == 'Failed')){&amp;#13;
		&amp;#13;
		workflow.scratchpad.blueprint_launch_failed = bpStatusResp.getBody();&amp;#13;
		&amp;#13;
		logger.error("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launch failed by '"+workflow.scratchpad.user+"', Reason: "+workflow.scratchpad.blueprint_launch_failed);&amp;#13;
		&amp;#13;
		return 'no';&amp;#13;
	} &amp;#13;
	&amp;#13;
	&amp;#13;
}&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check launched blueprint success/failed"&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/activity&gt;&lt;condition&gt;activity.result == 'no'&lt;/condition&gt;&lt;condition_default display_value="No"&gt;c1eff6430a0a0b59000f955abe842c94&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;false&lt;/is_positive&gt;&lt;name&gt;Failed&lt;/name&gt;&lt;order&gt;200&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;true&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb66&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check launched blueprint success/failed"&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/activity&gt;&lt;condition&gt;activity.result == 'yes'&lt;/condition&gt;&lt;condition_default display_value="Yes"&gt;c1ef63200a0a0b59005ef89bae78feb7&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;false&lt;/is_positive&gt;&lt;name&gt;Success&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb66&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="If"&gt;98f621ca0a0a0b5900f7c291f5e45a0e&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;16&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Check pending status&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;909&lt;/x&gt;&lt;y&gt;19&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=f0293c421bcf2c107f2a8515ec4bcb4c"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb4c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb4d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	var logger = new Nutanix_Calm_Logger();&amp;#13;
	var requestState = workflow.scratchpad.requestState;&amp;#13;
	if (requestState == 'PENDING' || requestState == 'pending' || requestState == 'running') {			&amp;#13;
		logger.info("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launch is in progress state: "+requestState);&amp;#13;
		&amp;#13;
		return 'yes';&amp;#13;
	}&amp;#13;
	return 'no';&amp;#13;
}&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb4d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb4c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb4d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb4d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	var logger = new Nutanix_Calm_Logger();&amp;#13;
	var requestState = workflow.scratchpad.requestState;&amp;#13;
	if (requestState == 'PENDING' || requestState == 'pending' || requestState == 'running') {			&amp;#13;
		logger.info("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launch is in progress state: "+requestState);&amp;#13;
		&amp;#13;
		return 'yes';&amp;#13;
	}&amp;#13;
	return 'no';&amp;#13;
}&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check pending status"&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/activity&gt;&lt;condition&gt;activity.result == 'no'&lt;/condition&gt;&lt;condition_default display_value="No"&gt;c1eff6430a0a0b59000f955abe842c94&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;false&lt;/is_positive&gt;&lt;name&gt;No&lt;/name&gt;&lt;order&gt;200&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;true&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb4d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Check pending status"&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/activity&gt;&lt;condition&gt;activity.result == 'yes'&lt;/condition&gt;&lt;condition_default display_value="Yes"&gt;c1ef63200a0a0b59005ef89bae78feb7&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Yes&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb4e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Run Script"&gt;db8c65aec0a8016501d00259bc7203a4&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;22&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Create Incident on application error state&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb67&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;954&lt;/x&gt;&lt;y&gt;481&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=b0293c421bcf2c107f2a8515ec4bcb67"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b0293c421bcf2c107f2a8515ec4bcb67&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb67&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var logger = new Nutanix_Calm_Logger();&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
&amp;#13;
current.state = 4; //make Requested Item's state as 'Closed Incomplete'&amp;#13;
current.stage = 'error';&amp;#13;
&amp;#13;
var catItemName = ' ';&amp;#13;
var gr = new GlideRecord('sc_cat_item');&amp;#13;
gr.addQuery('sys_id',workflow.scratchpad.cat_item);&amp;#13;
gr.query();&amp;#13;
if(gr.next())&amp;#13;
{&amp;#13;
	catItemName = gr.name;&amp;#13;
}&amp;#13;
if(gs.getProperty('x_nuta2_nutanix_ca.incident.blueprint.failed') == 'true')&amp;#13;
{&amp;#13;
	&amp;#13;
	var grInc = new GlideRecord('incident');&amp;#13;
	grInc.initialize();&amp;#13;
	grInc.caller_id = workflow.scratchpad.userID + '';&amp;#13;
	grInc.x_nuta2_nutanix_ca_catalog_item = workflow.scratchpad.cat_item;&amp;#13;
	&amp;#13;
	&amp;#13;
	var message = workflow.scratchpad.app_name+' has provisioned to an error state';&amp;#13;
	var desc = '';&amp;#13;
	var reason = '';&amp;#13;
	var output_JSON = &amp;#13;
	{&amp;#13;
		"task_name" : [],&amp;#13;
		"detailed_output" : []&amp;#13;
	};&amp;#13;
	&amp;#13;
	var app_uuid = workflow.scratchpad.app_uuid;&amp;#13;
	var body = &amp;#13;
	{&amp;#13;
		"filter": "application_reference=="+app_uuid+";type==action_runlog"&amp;#13;
	};&amp;#13;
	&amp;#13;
	var response = utils.makeCalmApiCall('POST', '/apps/' + app_uuid + '/app_runlogs/list', JSON.stringify(body));&amp;#13;
	&amp;#13;
	if(response.getStatusCode() == '200' || response.getStatusCode() == '201') &amp;#13;
	{&amp;#13;
		&amp;#13;
		var parseResp = JSON.parse(response.getBody());&amp;#13;
		gs.info("@@@ 1: " + JSON.stringify(parseResp));&amp;#13;
		for(var i in parseResp.entities)&amp;#13;
			var rootRefUuuid =  parseResp.entities[i].metadata.uuid;&amp;#13;
		&amp;#13;
		var body2 = &amp;#13;
		{&amp;#13;
			"filter": "root_reference=="+rootRefUuuid&amp;#13;
		};&amp;#13;
		&amp;#13;
		var response2 = utils.makeCalmApiCall('POST', '/apps/' + app_uuid + '/app_runlogs/list', JSON.stringify(body2));&amp;#13;
		&amp;#13;
		var parseResp2 = JSON.parse(response2.getBody());&amp;#13;
		gs.info("@@@ 2: " + JSON.stringify(parseResp2));&amp;#13;
		for(var j in parseResp2.entities) &amp;#13;
		{&amp;#13;
			&amp;#13;
			var entitiesStatus = parseResp2.entities[j].status;&amp;#13;
			if(parseResp2.entities[j].status.task_reference &amp;amp;&amp;amp; parseResp2.entities[j].status.task_reference.name!='') &amp;#13;
			{&amp;#13;
				&amp;#13;
				var response3 = utils.makeCalmApiCall('GET', '/apps/' + app_uuid + '/app_runlogs/'+parseResp2.entities[j].metadata.uuid+'/output');&amp;#13;
				var parseResp3 = JSON.parse(response3.getBody());&amp;#13;
				gs.info("@@@ 3: " + JSON.stringify(parseResp3));&amp;#13;
				desc = parseResp2.entities[j].status.task_reference.name;&amp;#13;
				gs.info("@@@ Desc 1: " + desc);&amp;#13;
				output_JSON.task_name.push(parseResp2.entities[j].status.task_reference.name);&amp;#13;
				output_JSON.detailed_output.push(JSON.parse(response3.getBody()).status.output_list[0].output);&amp;#13;
				&amp;#13;
			}&amp;#13;
			if(parseResp2.entities[j].status.reason_list!='')&amp;#13;
			{&amp;#13;
				reason = (parseResp2.entities[j].status.reason_list).toString();&amp;#13;
				gs.info("@@@ reason 1: " + reason);&amp;#13;
				&amp;#13;
			}&amp;#13;
			&amp;#13;
		}&amp;#13;
	}&amp;#13;
	&amp;#13;
	grInc.short_description = 'Runlogs for application '+workflow.scratchpad.app_name;&amp;#13;
	gs.info("@@@ SD: " + grInc.short_description);&amp;#13;
	//gs.info("@@@ Desc: " + desc);&amp;#13;
	grInc.description = 'Task Name: ' + desc + '\n\n Reason' + reason; //updating description.&amp;#13;
	gs.info("@@@ Description: " + grInc.description);&amp;#13;
	grInc.assignment_group =  gs.getProperty('x_nuta2_nutanix_ca.assignment.group');&amp;#13;
	var incidentSysID = grInc.insert();&amp;#13;
	for(i in output_JSON.task_name) &amp;#13;
	{&amp;#13;
		var gsa = new GlideSysAttachment();&amp;#13;
		var attachmentId = gsa.write(grInc, output_JSON.task_name[i]+".txt", 'text/plain', output_JSON.detailed_output[i]);&amp;#13;
	}&amp;#13;
	&amp;#13;
	var grItem = new GlideRecord('sc_req_item');&amp;#13;
	grItem.addQuery('request.number', current.request.getDisplayValue());&amp;#13;
	grItem.query();&amp;#13;
	if(grItem.next())&amp;#13;
	{		&amp;#13;
		grItem.x_nuta2_nutanix_ca_incident = incidentSysID;&amp;#13;
		grItem.update();				&amp;#13;
	}&amp;#13;
	&amp;#13;
	&amp;#13;
} &amp;#13;
else &amp;#13;
{&amp;#13;
	logger.info("[wf_workflow] Blueprint '"+catItemName+"' launch failed. No incident will be created because Create Incidents property is unchecked by Calm Admin");&amp;#13;
}&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b0293c421bcf2c107f2a8515ec4bcb67&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb67&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var logger = new Nutanix_Calm_Logger();&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
&amp;#13;
current.state = 4; //make Requested Item's state as 'Closed Incomplete'&amp;#13;
current.stage = 'error';&amp;#13;
&amp;#13;
var catItemName = ' ';&amp;#13;
var gr = new GlideRecord('sc_cat_item');&amp;#13;
gr.addQuery('sys_id',workflow.scratchpad.cat_item);&amp;#13;
gr.query();&amp;#13;
if(gr.next())&amp;#13;
{&amp;#13;
	catItemName = gr.name;&amp;#13;
}&amp;#13;
if(gs.getProperty('x_nuta2_nutanix_ca.incident.blueprint.failed') == 'true')&amp;#13;
{&amp;#13;
	&amp;#13;
	var grInc = new GlideRecord('incident');&amp;#13;
	grInc.initialize();&amp;#13;
	grInc.caller_id = workflow.scratchpad.userID + '';&amp;#13;
	grInc.x_nuta2_nutanix_ca_catalog_item = workflow.scratchpad.cat_item;&amp;#13;
	&amp;#13;
	&amp;#13;
	var message = workflow.scratchpad.app_name+' has provisioned to an error state';&amp;#13;
	var desc = '';&amp;#13;
	var reason = '';&amp;#13;
	var output_JSON = &amp;#13;
	{&amp;#13;
		"task_name" : [],&amp;#13;
		"detailed_output" : []&amp;#13;
	};&amp;#13;
	&amp;#13;
	var app_uuid = workflow.scratchpad.app_uuid;&amp;#13;
	var body = &amp;#13;
	{&amp;#13;
		"filter": "application_reference=="+app_uuid+";type==action_runlog"&amp;#13;
	};&amp;#13;
	&amp;#13;
	var response = utils.makeCalmApiCall('POST', '/apps/' + app_uuid + '/app_runlogs/list', JSON.stringify(body));&amp;#13;
	&amp;#13;
	if(response.getStatusCode() == '200' || response.getStatusCode() == '201') &amp;#13;
	{&amp;#13;
		&amp;#13;
		var parseResp = JSON.parse(response.getBody());&amp;#13;
		gs.info("@@@ 1: " + JSON.stringify(parseResp));&amp;#13;
		for(var i in parseResp.entities)&amp;#13;
			var rootRefUuuid =  parseResp.entities[i].metadata.uuid;&amp;#13;
		&amp;#13;
		var body2 = &amp;#13;
		{&amp;#13;
			"filter": "root_reference=="+rootRefUuuid&amp;#13;
		};&amp;#13;
		&amp;#13;
		var response2 = utils.makeCalmApiCall('POST', '/apps/' + app_uuid + '/app_runlogs/list', JSON.stringify(body2));&amp;#13;
		&amp;#13;
		var parseResp2 = JSON.parse(response2.getBody());&amp;#13;
		gs.info("@@@ 2: " + JSON.stringify(parseResp2));&amp;#13;
		for(var j in parseResp2.entities) &amp;#13;
		{&amp;#13;
			&amp;#13;
			var entitiesStatus = parseResp2.entities[j].status;&amp;#13;
			if(parseResp2.entities[j].status.task_reference &amp;amp;&amp;amp; parseResp2.entities[j].status.task_reference.name!='') &amp;#13;
			{&amp;#13;
				&amp;#13;
				var response3 = utils.makeCalmApiCall('GET', '/apps/' + app_uuid + '/app_runlogs/'+parseResp2.entities[j].metadata.uuid+'/output');&amp;#13;
				var parseResp3 = JSON.parse(response3.getBody());&amp;#13;
				gs.info("@@@ 3: " + JSON.stringify(parseResp3));&amp;#13;
				desc = parseResp2.entities[j].status.task_reference.name;&amp;#13;
				gs.info("@@@ Desc 1: " + desc);&amp;#13;
				output_JSON.task_name.push(parseResp2.entities[j].status.task_reference.name);&amp;#13;
				output_JSON.detailed_output.push(JSON.parse(response3.getBody()).status.output_list[0].output);&amp;#13;
				&amp;#13;
			}&amp;#13;
			if(parseResp2.entities[j].status.reason_list!='')&amp;#13;
			{&amp;#13;
				reason = (parseResp2.entities[j].status.reason_list).toString();&amp;#13;
				gs.info("@@@ reason 1: " + reason);&amp;#13;
				&amp;#13;
			}&amp;#13;
			&amp;#13;
		}&amp;#13;
	}&amp;#13;
	&amp;#13;
	grInc.short_description = 'Runlogs for application '+workflow.scratchpad.app_name;&amp;#13;
	gs.info("@@@ SD: " + grInc.short_description);&amp;#13;
	//gs.info("@@@ Desc: " + desc);&amp;#13;
	grInc.description = 'Task Name: ' + desc + '\n\n Reason' + reason; //updating description.&amp;#13;
	gs.info("@@@ Description: " + grInc.description);&amp;#13;
	grInc.assignment_group =  gs.getProperty('x_nuta2_nutanix_ca.assignment.group');&amp;#13;
	var incidentSysID = grInc.insert();&amp;#13;
	for(i in output_JSON.task_name) &amp;#13;
	{&amp;#13;
		var gsa = new GlideSysAttachment();&amp;#13;
		var attachmentId = gsa.write(grInc, output_JSON.task_name[i]+".txt", 'text/plain', output_JSON.detailed_output[i]);&amp;#13;
	}&amp;#13;
	&amp;#13;
	var grItem = new GlideRecord('sc_req_item');&amp;#13;
	grItem.addQuery('request.number', current.request.getDisplayValue());&amp;#13;
	grItem.query();&amp;#13;
	if(grItem.next())&amp;#13;
	{		&amp;#13;
		grItem.x_nuta2_nutanix_ca_incident = incidentSysID;&amp;#13;
		grItem.update();				&amp;#13;
	}&amp;#13;
	&amp;#13;
	&amp;#13;
} &amp;#13;
else &amp;#13;
{&amp;#13;
	logger.info("[wf_workflow] Blueprint '"+catItemName+"' launch failed. No incident will be created because Create Incidents property is unchecked by Calm Admin");&amp;#13;
}&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Create Incident on application error state"&gt;b0293c421bcf2c107f2a8515ec4bcb67&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb67&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Run Script"&gt;db8c65aec0a8016501d00259bc7203a4&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;7&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Create Incident on blueprint failed&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb4e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;667&lt;/x&gt;&lt;y&gt;429&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=f8293c421bcf2c107f2a8515ec4bcb4e"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f8293c421bcf2c107f2a8515ec4bcb4e&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb4f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var logger = new Nutanix_Calm_Logger();&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
&amp;#13;
current.state = 4; //make Requested Item's state as 'Closed Incomplete'&amp;#13;
 current.stage = 'error';&amp;#13;
&amp;#13;
var catItemName = ' ';&amp;#13;
var gr = new GlideRecord('sc_cat_item');&amp;#13;
gr.addQuery('sys_id',workflow.scratchpad.cat_item);&amp;#13;
gr.query();&amp;#13;
if(gr.next()){&amp;#13;
	catItemName = gr.name;&amp;#13;
}&amp;#13;
if(gs.getProperty('x_nuta2_nutanix_ca.incident.blueprint.failed') == 'true'){&amp;#13;
	&amp;#13;
	var grInc = new GlideRecord('incident');&amp;#13;
	grInc.initialize();&amp;#13;
	grInc.caller_id = workflow.scratchpad.userID + '';&amp;#13;
	grInc.x_nuta2_nutanix_ca_catalog_item = workflow.scratchpad.cat_item;&amp;#13;
	&amp;#13;
	&amp;#13;
	var failedResp = workflow.scratchpad.blueprint_launch_failed;&amp;#13;
	var parseJson = JSON.parse(failedResp);&amp;#13;
	&amp;#13;
	var message = '';&amp;#13;
	var desc = '';&amp;#13;
	var reason = '';&amp;#13;
	&amp;#13;
	if(parseJson.code &amp;amp;&amp;amp; parseJson.state){&amp;#13;
		message = "Blueprint Catalog Name: "+catItemName+"\nCode: "+parseJson.code+"\n"+"State: "+parseJson.state;&amp;#13;
		for(var i = 0; i&amp;lt;parseJson.message_list.length; i++){&amp;#13;
			desc = (parseJson.message_list[i].message)?parseJson.message_list[i].message:'';&amp;#13;
			reason = (parseJson.message_list[i].reason)?parseJson.message_list[i].reason:'';&amp;#13;
			message = message+"\nError Message: "+desc+" \nReason: "+reason;&amp;#13;
		}&amp;#13;
		&amp;#13;
		grInc.description = message;&amp;#13;
		&amp;#13;
	}else if(parseJson.status.state &amp;amp;&amp;amp; parseJson.status.milestone){&amp;#13;
		message = "Blueprint Catalog Name: "+catItemName+"\n"+"State: "+parseJson.status.state;&amp;#13;
		&amp;#13;
		for(var i = 0; i&amp;lt;parseJson.status.message_list.length; i++){&amp;#13;
			&amp;#13;
			desc = (parseJson.status.message_list[i].message)?parseJson.status.message_list[i].message:'';&amp;#13;
			reason = (parseJson.status.message_list[i].reason)?parseJson.status.message_list[i].reason:'';			&amp;#13;
			var details = (parseJson.status.message_list[i].details)?parseJson.status.message_list[i].details:'';&amp;#13;
			&amp;#13;
			message = message+"\nError Message: "+desc+" \nReason: "+reason+" \nDetails: "+JSON.stringify(details);&amp;#13;
		}&amp;#13;
		grInc.description = message;		&amp;#13;
	} else {&amp;#13;
		grInc.description = workflow.scratchpad.blueprint_launch_failed;&amp;#13;
	}&amp;#13;
	&amp;#13;
	grInc.assignment_group =  gs.getProperty('x_nuta2_nutanix_ca.assignment.group');&amp;#13;
	grInc.short_description = catItemName;&amp;#13;
	var incidentSysID = grInc.insert();&amp;#13;
	var gsa = new GlideSysAttachment();&amp;#13;
	var attachmentId = gsa.write(grInc, "Incident_attachment.txt", 'text/plain', message+'');&amp;#13;
	&amp;#13;
	var grItem = new GlideRecord('sc_req_item');&amp;#13;
	grItem.addQuery('request.number', current.request.getDisplayValue());&amp;#13;
	grItem.query();&amp;#13;
	if(grItem.next()){		&amp;#13;
		grItem.x_nuta2_nutanix_ca_incident = incidentSysID;&amp;#13;
		grItem.update();				&amp;#13;
	}&amp;#13;
	&amp;#13;
	logger.error("[wf_workflow] Incident created on Blueprint '"+catItemName+"' launched failure");&amp;#13;
	&amp;#13;
} else {	&amp;#13;
	logger.info("[wf_workflow] Blueprint '"+catItemName+"' launched failed. No incident will be created because Create Incidents property is unchecked by Calm Admin");	&amp;#13;
}&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f8293c421bcf2c107f2a8515ec4bcb4e&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb4f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var logger = new Nutanix_Calm_Logger();&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
&amp;#13;
current.state = 4; //make Requested Item's state as 'Closed Incomplete'&amp;#13;
 current.stage = 'error';&amp;#13;
&amp;#13;
var catItemName = ' ';&amp;#13;
var gr = new GlideRecord('sc_cat_item');&amp;#13;
gr.addQuery('sys_id',workflow.scratchpad.cat_item);&amp;#13;
gr.query();&amp;#13;
if(gr.next()){&amp;#13;
	catItemName = gr.name;&amp;#13;
}&amp;#13;
if(gs.getProperty('x_nuta2_nutanix_ca.incident.blueprint.failed') == 'true'){&amp;#13;
	&amp;#13;
	var grInc = new GlideRecord('incident');&amp;#13;
	grInc.initialize();&amp;#13;
	grInc.caller_id = workflow.scratchpad.userID + '';&amp;#13;
	grInc.x_nuta2_nutanix_ca_catalog_item = workflow.scratchpad.cat_item;&amp;#13;
	&amp;#13;
	&amp;#13;
	var failedResp = workflow.scratchpad.blueprint_launch_failed;&amp;#13;
	var parseJson = JSON.parse(failedResp);&amp;#13;
	&amp;#13;
	var message = '';&amp;#13;
	var desc = '';&amp;#13;
	var reason = '';&amp;#13;
	&amp;#13;
	if(parseJson.code &amp;amp;&amp;amp; parseJson.state){&amp;#13;
		message = "Blueprint Catalog Name: "+catItemName+"\nCode: "+parseJson.code+"\n"+"State: "+parseJson.state;&amp;#13;
		for(var i = 0; i&amp;lt;parseJson.message_list.length; i++){&amp;#13;
			desc = (parseJson.message_list[i].message)?parseJson.message_list[i].message:'';&amp;#13;
			reason = (parseJson.message_list[i].reason)?parseJson.message_list[i].reason:'';&amp;#13;
			message = message+"\nError Message: "+desc+" \nReason: "+reason;&amp;#13;
		}&amp;#13;
		&amp;#13;
		grInc.description = message;&amp;#13;
		&amp;#13;
	}else if(parseJson.status.state &amp;amp;&amp;amp; parseJson.status.milestone){&amp;#13;
		message = "Blueprint Catalog Name: "+catItemName+"\n"+"State: "+parseJson.status.state;&amp;#13;
		&amp;#13;
		for(var i = 0; i&amp;lt;parseJson.status.message_list.length; i++){&amp;#13;
			&amp;#13;
			desc = (parseJson.status.message_list[i].message)?parseJson.status.message_list[i].message:'';&amp;#13;
			reason = (parseJson.status.message_list[i].reason)?parseJson.status.message_list[i].reason:'';			&amp;#13;
			var details = (parseJson.status.message_list[i].details)?parseJson.status.message_list[i].details:'';&amp;#13;
			&amp;#13;
			message = message+"\nError Message: "+desc+" \nReason: "+reason+" \nDetails: "+JSON.stringify(details);&amp;#13;
		}&amp;#13;
		grInc.description = message;		&amp;#13;
	} else {&amp;#13;
		grInc.description = workflow.scratchpad.blueprint_launch_failed;&amp;#13;
	}&amp;#13;
	&amp;#13;
	grInc.assignment_group =  gs.getProperty('x_nuta2_nutanix_ca.assignment.group');&amp;#13;
	grInc.short_description = catItemName;&amp;#13;
	var incidentSysID = grInc.insert();&amp;#13;
	var gsa = new GlideSysAttachment();&amp;#13;
	var attachmentId = gsa.write(grInc, "Incident_attachment.txt", 'text/plain', message+'');&amp;#13;
	&amp;#13;
	var grItem = new GlideRecord('sc_req_item');&amp;#13;
	grItem.addQuery('request.number', current.request.getDisplayValue());&amp;#13;
	grItem.query();&amp;#13;
	if(grItem.next()){		&amp;#13;
		grItem.x_nuta2_nutanix_ca_incident = incidentSysID;&amp;#13;
		grItem.update();				&amp;#13;
	}&amp;#13;
	&amp;#13;
	logger.error("[wf_workflow] Incident created on Blueprint '"+catItemName+"' launched failure");&amp;#13;
	&amp;#13;
} else {	&amp;#13;
	logger.info("[wf_workflow] Blueprint '"+catItemName+"' launched failed. No incident will be created because Create Incidents property is unchecked by Calm Admin");	&amp;#13;
}&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Create Incident on blueprint failed"&gt;f8293c421bcf2c107f2a8515ec4bcb4e&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb4f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="End"&gt;c7a66f7d0a0a0b3a004544a6d2f14076&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;2&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;End&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb60&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width&gt;80&lt;/width&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;682&lt;/x&gt;&lt;y&gt;767&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=74293c421bcf2c107f2a8515ec4bcb60"/&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Run Script"&gt;db8c65aec0a8016501d00259bc7203a4&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;10&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;GET  Blueprint Pending Launches Status&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb52&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;720&lt;/x&gt;&lt;y&gt;19&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=38293c421bcf2c107f2a8515ec4bcb52"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb52&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb52&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;/*&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var request_id = workflow.scratchpad.request_id;&amp;#13;
var bp_uuid = workflow.scratchpad.bp_uuid;&amp;#13;
var bpStatusResp = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid+'/pending_launches/'+request_id);&amp;#13;
var pendingState = JSON.parse(bpStatusResp.getBody()).status.state + '';&amp;#13;
if(bpStatusResp.getStatusCode() == '200' || bpStatusResp.getStatusCode() == '201') {&amp;#13;
	&amp;#13;
	while(pendingState == 'PENDING' || pendingState == 'running') {&amp;#13;
		&amp;#13;
		bpStatusResp = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid+'/pending_launches/'+request_id);&amp;#13;
		pendingState = JSON.parse(bpStatusResp.getBody()).status.state + '';&amp;#13;
	}&amp;#13;
	&amp;#13;
	workflow.scratchpad.bpStatusResp = bpStatusResp; //JSON.parse(bpStatusResp.getBody());&amp;#13;
	&amp;#13;
} else {&amp;#13;
	logger.error("[wf_workflow] Blueprint Pending Launches failed: "+bpStatusResp.getBody());&amp;#13;
}&amp;#13;
*/&amp;#13;
&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var request_id = workflow.scratchpad.request_id;&amp;#13;
var bp_uuid = workflow.scratchpad.bp_uuid;&amp;#13;
var bpStatusResp = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid+'/pending_launches/'+request_id);&amp;#13;
&amp;#13;
if(bpStatusResp.getStatusCode() == '200' || bpStatusResp.getStatusCode() == '201') {	&amp;#13;
	workflow.scratchpad.requestState = JSON.parse(bpStatusResp.getBody()).status.state + '';&amp;#13;
	workflow.scratchpad.bpStatusResp = bpStatusResp;&amp;#13;
	&amp;#13;
} else {	&amp;#13;
	logger.error("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Pending Launches failed by '"+workflow.scratchpad.user+"', Reason: "+bpStatusResp.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb52&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb52&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;/*&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var request_id = workflow.scratchpad.request_id;&amp;#13;
var bp_uuid = workflow.scratchpad.bp_uuid;&amp;#13;
var bpStatusResp = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid+'/pending_launches/'+request_id);&amp;#13;
var pendingState = JSON.parse(bpStatusResp.getBody()).status.state + '';&amp;#13;
if(bpStatusResp.getStatusCode() == '200' || bpStatusResp.getStatusCode() == '201') {&amp;#13;
	&amp;#13;
	while(pendingState == 'PENDING' || pendingState == 'running') {&amp;#13;
		&amp;#13;
		bpStatusResp = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid+'/pending_launches/'+request_id);&amp;#13;
		pendingState = JSON.parse(bpStatusResp.getBody()).status.state + '';&amp;#13;
	}&amp;#13;
	&amp;#13;
	workflow.scratchpad.bpStatusResp = bpStatusResp; //JSON.parse(bpStatusResp.getBody());&amp;#13;
	&amp;#13;
} else {&amp;#13;
	logger.error("[wf_workflow] Blueprint Pending Launches failed: "+bpStatusResp.getBody());&amp;#13;
}&amp;#13;
*/&amp;#13;
&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var request_id = workflow.scratchpad.request_id;&amp;#13;
var bp_uuid = workflow.scratchpad.bp_uuid;&amp;#13;
var bpStatusResp = utils.makeCalmApiCall('GET', '/blueprints/'+bp_uuid+'/pending_launches/'+request_id);&amp;#13;
&amp;#13;
if(bpStatusResp.getStatusCode() == '200' || bpStatusResp.getStatusCode() == '201') {	&amp;#13;
	workflow.scratchpad.requestState = JSON.parse(bpStatusResp.getBody()).status.state + '';&amp;#13;
	workflow.scratchpad.bpStatusResp = bpStatusResp;&amp;#13;
	&amp;#13;
} else {	&amp;#13;
	logger.error("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Pending Launches failed by '"+workflow.scratchpad.user+"', Reason: "+bpStatusResp.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="GET  Blueprint Pending Launches Status"&gt;38293c421bcf2c107f2a8515ec4bcb52&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb52&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Run Script"&gt;db8c65aec0a8016501d00259bc7203a4&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;18&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Get application details&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb53&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;1125&lt;/x&gt;&lt;y&gt;34&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=74293c421bcf2c107f2a8515ec4bcb53"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;74293c421bcf2c107f2a8515ec4bcb53&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb53&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var app_uuid = workflow.scratchpad.app_uuid;&amp;#13;
&amp;#13;
var appUuidResponse = utils.makeCalmApiCall('GET', '/apps/'+app_uuid, '');&amp;#13;
&amp;#13;
if(appUuidResponse.getStatusCode() == '200' || appUuidResponse.getStatusCode() == '201'){&amp;#13;
	&amp;#13;
	workflow.scratchpad.appState = JSON.parse(appUuidResponse.getBody()).status.state + '';&amp;#13;
	&amp;#13;
} else {&amp;#13;
	logger.error("[wf_workflow] Error during retrieval of application actions to API /apps/&amp;lt;uuid&amp;gt; Error : "+appUuidResponse.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;74293c421bcf2c107f2a8515ec4bcb53&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb53&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var app_uuid = workflow.scratchpad.app_uuid;&amp;#13;
&amp;#13;
var appUuidResponse = utils.makeCalmApiCall('GET', '/apps/'+app_uuid, '');&amp;#13;
&amp;#13;
if(appUuidResponse.getStatusCode() == '200' || appUuidResponse.getStatusCode() == '201'){&amp;#13;
	&amp;#13;
	workflow.scratchpad.appState = JSON.parse(appUuidResponse.getBody()).status.state + '';&amp;#13;
	&amp;#13;
} else {&amp;#13;
	logger.error("[wf_workflow] Error during retrieval of application actions to API /apps/&amp;lt;uuid&amp;gt; Error : "+appUuidResponse.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Get application details"&gt;74293c421bcf2c107f2a8515ec4bcb53&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb53&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="If"&gt;98f621ca0a0a0b5900f7c291f5e45a0e&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;6&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;IF request_id from Blueprint Launched available&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;536&lt;/x&gt;&lt;y&gt;25&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=f0293c421bcf2c107f2a8515ec4bcb51"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb51&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb51&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb51&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	var utils = new Nutanix_Calm_Utils();&amp;#13;
	var logger = new Nutanix_Calm_Logger();&amp;#13;
	&amp;#13;
	var bpLaunchedResp  = workflow.scratchpad.bpLaunchedResp;&amp;#13;
	&amp;#13;
	if(bpLaunchedResp.getStatusCode() == '200' || bpLaunchedResp.getStatusCode() == '201'){&amp;#13;
	&amp;#13;
		bpLaunchedResp = JSON.parse(bpLaunchedResp.getBody());&amp;#13;
		workflow.scratchpad.request_id = bpLaunchedResp.status.request_id;&amp;#13;
		&amp;#13;
		logger.info("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launched Success by '"+workflow.scratchpad.user+"'");&amp;#13;
		logger.info("[wf_workflow] Request ID: "+workflow.scratchpad.request_id+" for Blueprint: "+ bpLaunchedResp.metadata.name+''+" has been created");&amp;#13;
		&amp;#13;
		&amp;#13;
		return 'yes';&amp;#13;
	} else{		&amp;#13;
		workflow.scratchpad.blueprint_launch_failed = bpLaunchedResp.getBody();&amp;#13;
		logger.error("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launch failed by '"+workflow.scratchpad.user+"', Reason: "+bpLaunchedResp.getBody());&amp;#13;
		return 'no';&amp;#13;
	}&amp;#13;
	&amp;#13;
}&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb51&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb51&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb51&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
&amp;#13;
answer = ifScript();&amp;#13;
&amp;#13;
function ifScript() {&amp;#13;
	var utils = new Nutanix_Calm_Utils();&amp;#13;
	var logger = new Nutanix_Calm_Logger();&amp;#13;
	&amp;#13;
	var bpLaunchedResp  = workflow.scratchpad.bpLaunchedResp;&amp;#13;
	&amp;#13;
	if(bpLaunchedResp.getStatusCode() == '200' || bpLaunchedResp.getStatusCode() == '201'){&amp;#13;
	&amp;#13;
		bpLaunchedResp = JSON.parse(bpLaunchedResp.getBody());&amp;#13;
		workflow.scratchpad.request_id = bpLaunchedResp.status.request_id;&amp;#13;
		&amp;#13;
		logger.info("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launched Success by '"+workflow.scratchpad.user+"'");&amp;#13;
		logger.info("[wf_workflow] Request ID: "+workflow.scratchpad.request_id+" for Blueprint: "+ bpLaunchedResp.metadata.name+''+" has been created");&amp;#13;
		&amp;#13;
		&amp;#13;
		return 'yes';&amp;#13;
	} else{		&amp;#13;
		workflow.scratchpad.blueprint_launch_failed = bpLaunchedResp.getBody();&amp;#13;
		logger.error("[wf_workflow] Blueprint '"+workflow.scratchpad.bp_name+"' Launch failed by '"+workflow.scratchpad.user+"', Reason: "+bpLaunchedResp.getBody());&amp;#13;
		return 'no';&amp;#13;
	}&amp;#13;
	&amp;#13;
}&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="IF request_id from Blueprint Launched available"&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/activity&gt;&lt;condition&gt;activity.result == 'no'&lt;/condition&gt;&lt;condition_default display_value="No"&gt;c1eff6430a0a0b59000f955abe842c94&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;false&lt;/is_positive&gt;&lt;name&gt;No&lt;/name&gt;&lt;order&gt;200&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;true&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb51&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="IF request_id from Blueprint Launched available"&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/activity&gt;&lt;condition&gt;activity.result == 'yes'&lt;/condition&gt;&lt;condition_default display_value="Yes"&gt;c1ef63200a0a0b59005ef89bae78feb7&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Yes&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb52&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Create Event"&gt;9f680b92c0a801640026553f665b429f&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;23&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Mail Trigger&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;898&lt;/x&gt;&lt;y&gt;625&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=fc293c421bcf2c107f2a8515ec4bcb57"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb58&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;(function() {&amp;#13;
	// return the value to use for Parameter 1&amp;#13;
	var utils = new Nutanix_Calm_Utils();&amp;#13;
	var app_uuid = workflow.scratchpad.app_uuid;&amp;#13;
	var appUuidResponse = utils.makeCalmApiCall('GET', '/apps/'+app_uuid, '');&amp;#13;
	var parsedUuidResponse = JSON.parse(appUuidResponse.getBody());&amp;#13;
	&amp;#13;
	var mailJSON = {"cloned_from":"","services":[]};&amp;#13;
	&amp;#13;
	if(parsedUuidResponse.status.resources.cloned_from_reference)&amp;#13;
		mailJSON.cloned_from = parsedUuidResponse.status.resources.cloned_from_reference.name + '';&amp;#13;
	&amp;#13;
	var dep_list = parsedUuidResponse.status.resources.deployment_list;&amp;#13;
	&amp;#13;
	for(var j in dep_list) {&amp;#13;
		var elements = (dep_list[j].substrate_configuration &amp;amp;&amp;amp; dep_list[j].substrate_configuration.element_list) ? dep_list[j].substrate_configuration.element_list : {} ;&amp;#13;
		&amp;#13;
		for(var p in elements)&amp;#13;
			mailJSON.services.push({"name":elements[p].name+'',"ip":elements[p].address+''});&amp;#13;
	}&amp;#13;
	&amp;#13;
	return JSON.stringify(mailJSON);&amp;#13;
}());&lt;/value&gt;&lt;variable display_value=""&gt;c35dd0310a0a0ba96248a70936d276b3&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb58&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;86cc41264f3e33008373224f9310c774&lt;/value&gt;&lt;variable display_value=""&gt;c35dcc7a0a0a0ba96248a70926fa68b5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb58&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;(function() {&amp;#13;
	// return the value to use for Parameter 2&amp;#13;
	return "";&amp;#13;
}());&lt;/value&gt;&lt;variable display_value=""&gt;c35dd3ef0a0a0ba96248a70947e35325&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb58&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;86cc41264f3e33008373224f9310c774&lt;/value&gt;&lt;variable display_value=""&gt;c35dcc7a0a0a0ba96248a70926fa68b5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb58&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;(function() {&amp;#13;
	// return the value to use for Parameter 1&amp;#13;
	var utils = new Nutanix_Calm_Utils();&amp;#13;
	var app_uuid = workflow.scratchpad.app_uuid;&amp;#13;
	var appUuidResponse = utils.makeCalmApiCall('GET', '/apps/'+app_uuid, '');&amp;#13;
	var parsedUuidResponse = JSON.parse(appUuidResponse.getBody());&amp;#13;
	&amp;#13;
	var mailJSON = {"cloned_from":"","services":[]};&amp;#13;
	&amp;#13;
	if(parsedUuidResponse.status.resources.cloned_from_reference)&amp;#13;
		mailJSON.cloned_from = parsedUuidResponse.status.resources.cloned_from_reference.name + '';&amp;#13;
	&amp;#13;
	var dep_list = parsedUuidResponse.status.resources.deployment_list;&amp;#13;
	&amp;#13;
	for(var j in dep_list) {&amp;#13;
		var elements = (dep_list[j].substrate_configuration &amp;amp;&amp;amp; dep_list[j].substrate_configuration.element_list) ? dep_list[j].substrate_configuration.element_list : {} ;&amp;#13;
		&amp;#13;
		for(var p in elements)&amp;#13;
			mailJSON.services.push({"name":elements[p].name+'',"ip":elements[p].address+''});&amp;#13;
	}&amp;#13;
	&amp;#13;
	return JSON.stringify(mailJSON);&amp;#13;
}());&lt;/value&gt;&lt;variable display_value=""&gt;c35dd0310a0a0ba96248a70936d276b3&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb58&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;(function() {&amp;#13;
	// return the value to use for Parameter 2&amp;#13;
	return "";&amp;#13;
}());&lt;/value&gt;&lt;variable display_value=""&gt;c35dd3ef0a0a0ba96248a70947e35325&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Mail Trigger"&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb59&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="If"&gt;98f621ca0a0a0b5900f7c291f5e45a0e&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;15&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Marketpalce Launch failed??&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;222&lt;/x&gt;&lt;y&gt;555&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=74293c421bcf2c107f2a8515ec4bcb5a"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb5a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
  answer = ifScript();&amp;#13;
&amp;#13;
  function ifScript() {&amp;#13;
	  	  &amp;#13;
     if (workflow.scratchpad.flag == 'failed') {&amp;#13;
        return 'yes';&amp;#13;
     }&amp;#13;
     return 'no';&amp;#13;
  }&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb5a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb5a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/document_key&gt;&lt;order&gt;100&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb5a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;493cba6a0a6a803f07df24b118473551&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/document_key&gt;&lt;order&gt;200&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb5a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1&lt;/value&gt;&lt;variable display_value=""&gt;493d2c1d0a6a803f3217a75738ea3289&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/document_key&gt;&lt;order&gt;300&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb5a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// This script needs to set answer to 'yes' or 'no' to indicate the state of the activity.&amp;#13;
//&amp;#13;
// For example,&amp;#13;
//&amp;#13;
  answer = ifScript();&amp;#13;
&amp;#13;
  function ifScript() {&amp;#13;
	  	  &amp;#13;
     if (workflow.scratchpad.flag == 'failed') {&amp;#13;
        return 'yes';&amp;#13;
     }&amp;#13;
     return 'no';&amp;#13;
  }&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35e50810a0a0ba96248a709b450fc32&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Marketpalce Launch failed??"&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/activity&gt;&lt;condition&gt;activity.result == 'no'&lt;/condition&gt;&lt;condition_default display_value="No"&gt;c1eff6430a0a0b59000f955abe842c94&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;false&lt;/is_positive&gt;&lt;name&gt;No&lt;/name&gt;&lt;order&gt;200&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;true&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb5b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Marketpalce Launch failed??"&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/activity&gt;&lt;condition&gt;activity.result == 'yes'&lt;/condition&gt;&lt;condition_default display_value="Yes"&gt;c1ef63200a0a0b59005ef89bae78feb7&lt;/condition_default&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Yes&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb5b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Run Script"&gt;db8c65aec0a8016501d00259bc7203a4&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;4&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Marketplace Launch&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb5b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;242&lt;/x&gt;&lt;y&gt;417&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=b8293c421bcf2c107f2a8515ec4bcb5b"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b8293c421bcf2c107f2a8515ec4bcb5b&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb5b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var logger = new Nutanix_Calm_Logger();&amp;#13;
&amp;#13;
/*changes for previos patching */&amp;#13;
// workflow.scratchpad.bp_uuid =  current.cat_item.getRefRecord().cloned_bp_uuid;&amp;#13;
// workflow.scratchpad.bp_name = current.cat_item.getRefRecord().cloned_bp_name;&amp;#13;
// if(workflow.scratchpad.bp_uuid &amp;amp;&amp;amp; workflow.scratchpad.bp_name){&amp;#13;
// 		workflow.scratchpad.flag = 'success';&amp;#13;
// }else{&amp;#13;
// 	workflow.scratchpad.flag = 'failed';&amp;#13;
// 	workflow.scratchpad.blueprint_launch_failed = "Failed to get the cloned BP uuid";&amp;#13;
//  	logger.error("[wf_workflow] Marketplace_launch failed: Failed to get the cloned BP uuid");&amp;#13;
// }&amp;#13;
//---------------------------//&amp;#13;
&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
var reqUtils = new  Nutanix_RequestUtil();&amp;#13;
&amp;#13;
var mpi_uuid =  current.cat_item.blueprint_name.uuid+'';&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('GET', '/calm_marketplace_items/'+mpi_uuid);&amp;#13;
response = JSON.parse(response.getBody());&amp;#13;
&amp;#13;
//gs.error("MPI UUID body recieved::"+JSON.stringify(response));&amp;#13;
var project_uuid = current.variables.default_project+'';&amp;#13;
var environment_uuid = ' ';&amp;#13;
var grProj = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');&amp;#13;
grProj.addQuery('uuid', project_uuid);&amp;#13;
grProj.query();&amp;#13;
if(grProj.next()){&amp;#13;
	environment_uuid = 	grProj.environment_uuid+'';&amp;#13;
}&amp;#13;
&amp;#13;
var name = current.cat_item.blueprint_name.name+'';&amp;#13;
&amp;#13;
var app_bp_name = current.variables.default_app_name+'';&amp;#13;
&amp;#13;
&amp;#13;
var tmpbody = {&amp;#13;
		"status": response.status.resources.app_blueprint_template.status,&amp;#13;
		"spec": response.spec.resources.app_blueprint_template.spec&amp;#13;
	};&amp;#13;
&amp;#13;
&amp;#13;
var body=&amp;#13;
{&amp;#13;
	"api_version": "3.0", //response.api_version,&amp;#13;
	"metadata": {&amp;#13;
		"kind": "blueprint",&amp;#13;
		"project_reference": {&amp;#13;
			"kind": "project",&amp;#13;
			"uuid": project_uuid+''&amp;#13;
		},&amp;#13;
		"categories" : response.metadata.categories //changes&amp;#13;
	},&amp;#13;
	"spec": {&amp;#13;
		"description":  response.spec.resources.app_blueprint_template.spec.description, //response.spec.description,&amp;#13;
		"app_blueprint_name": app_bp_name+'',&amp;#13;
		//"environment_uuid":environment_uuid+'', //changes&amp;#13;
		"source_marketplace_version": response.spec.resources.version,//"1.0.0", //changes&amp;#13;
		"source_marketplace_name":name+'',&amp;#13;
		"resources": response.spec.resources.app_blueprint_template.spec.resources&amp;#13;
		&amp;#13;
		//reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)&amp;#13;
		//response.spec.resources.app_blueprint_template.spec.resources&amp;#13;
	}&amp;#13;
	&amp;#13;
};&amp;#13;
&amp;#13;
//changes&amp;#13;
if( parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &amp;gt;= parseFloat("3.2") ) {&amp;#13;
    var env_template = [{&amp;#13;
        "app_profile": {&amp;#13;
            "name": current.variables.default_profile + ""&amp;#13;
        },&amp;#13;
        "environment": {&amp;#13;
            "uuid": current.variables.default_environment + ""&amp;#13;
        }&amp;#13;
    }];&amp;#13;
    body.spec.environment_profile_pairs = env_template;&amp;#13;
}&amp;#13;
else {&amp;#13;
    body.spec.environment_uuid = environment_uuid + '';&amp;#13;
}&amp;#13;
&amp;#13;
//gs.error("MPI payload send: "+JSON.stringify(body));&amp;#13;
&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('POST', '/blueprints/marketplace_launch', JSON.stringify(body));&amp;#13;
&amp;#13;
if(response.getStatusCode() == '200' || response.getStatusCode() == '201') {&amp;#13;
	var parseResp = JSON.parse(response.getBody());&amp;#13;
	workflow.scratchpad.bp_uuid = parseResp.metadata.uuid;&amp;#13;
	&amp;#13;
	&amp;#13;
	//gs.error("bp_uuid: "+workflow.scratchpad.bp_uuid);&amp;#13;
	&amp;#13;
	workflow.scratchpad.bp_name = parseResp.metadata.name;&amp;#13;
	&amp;#13;
	workflow.scratchpad.flag = 'success';&amp;#13;
	&amp;#13;
} else {		&amp;#13;
	workflow.scratchpad.flag = 'failed';&amp;#13;
	workflow.scratchpad.blueprint_launch_failed = response.getBody();&amp;#13;
	logger.error("[wf_workflow] Marketplace_launch failed: "+response.getBody());&amp;#13;
	&amp;#13;
}&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;b8293c421bcf2c107f2a8515ec4bcb5b&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb5b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var logger = new Nutanix_Calm_Logger();&amp;#13;
&amp;#13;
/*changes for previos patching */&amp;#13;
// workflow.scratchpad.bp_uuid =  current.cat_item.getRefRecord().cloned_bp_uuid;&amp;#13;
// workflow.scratchpad.bp_name = current.cat_item.getRefRecord().cloned_bp_name;&amp;#13;
// if(workflow.scratchpad.bp_uuid &amp;amp;&amp;amp; workflow.scratchpad.bp_name){&amp;#13;
// 		workflow.scratchpad.flag = 'success';&amp;#13;
// }else{&amp;#13;
// 	workflow.scratchpad.flag = 'failed';&amp;#13;
// 	workflow.scratchpad.blueprint_launch_failed = "Failed to get the cloned BP uuid";&amp;#13;
//  	logger.error("[wf_workflow] Marketplace_launch failed: Failed to get the cloned BP uuid");&amp;#13;
// }&amp;#13;
//---------------------------//&amp;#13;
&amp;#13;
var utils = new Nutanix_Calm_Utils();&amp;#13;
var reqUtils = new  Nutanix_RequestUtil();&amp;#13;
&amp;#13;
var mpi_uuid =  current.cat_item.blueprint_name.uuid+'';&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('GET', '/calm_marketplace_items/'+mpi_uuid);&amp;#13;
response = JSON.parse(response.getBody());&amp;#13;
&amp;#13;
//gs.error("MPI UUID body recieved::"+JSON.stringify(response));&amp;#13;
var project_uuid = current.variables.default_project+'';&amp;#13;
var environment_uuid = ' ';&amp;#13;
var grProj = new GlideRecord('x_nuta2_nutanix_ca_nutanix_project');&amp;#13;
grProj.addQuery('uuid', project_uuid);&amp;#13;
grProj.query();&amp;#13;
if(grProj.next()){&amp;#13;
	environment_uuid = 	grProj.environment_uuid+'';&amp;#13;
}&amp;#13;
&amp;#13;
var name = current.cat_item.blueprint_name.name+'';&amp;#13;
&amp;#13;
var app_bp_name = current.variables.default_app_name+'';&amp;#13;
&amp;#13;
&amp;#13;
var tmpbody = {&amp;#13;
		"status": response.status.resources.app_blueprint_template.status,&amp;#13;
		"spec": response.spec.resources.app_blueprint_template.spec&amp;#13;
	};&amp;#13;
&amp;#13;
&amp;#13;
var body=&amp;#13;
{&amp;#13;
	"api_version": "3.0", //response.api_version,&amp;#13;
	"metadata": {&amp;#13;
		"kind": "blueprint",&amp;#13;
		"project_reference": {&amp;#13;
			"kind": "project",&amp;#13;
			"uuid": project_uuid+''&amp;#13;
		},&amp;#13;
		"categories" : response.metadata.categories //changes&amp;#13;
	},&amp;#13;
	"spec": {&amp;#13;
		"description":  response.spec.resources.app_blueprint_template.spec.description, //response.spec.description,&amp;#13;
		"app_blueprint_name": app_bp_name+'',&amp;#13;
		//"environment_uuid":environment_uuid+'', //changes&amp;#13;
		"source_marketplace_version": response.spec.resources.version,//"1.0.0", //changes&amp;#13;
		"source_marketplace_name":name+'',&amp;#13;
		"resources": response.spec.resources.app_blueprint_template.spec.resources&amp;#13;
		&amp;#13;
		//reqUtils.makeResourceBody(tmpbody, tmpbody.status.resources, current)&amp;#13;
		//response.spec.resources.app_blueprint_template.spec.resources&amp;#13;
	}&amp;#13;
	&amp;#13;
};&amp;#13;
&amp;#13;
//changes&amp;#13;
if( parseFloat(gs.getProperty('x_nuta2_nutanix_ca.calm_version')) &amp;gt;= parseFloat("3.2") ) {&amp;#13;
    var env_template = [{&amp;#13;
        "app_profile": {&amp;#13;
            "name": current.variables.default_profile + ""&amp;#13;
        },&amp;#13;
        "environment": {&amp;#13;
            "uuid": current.variables.default_environment + ""&amp;#13;
        }&amp;#13;
    }];&amp;#13;
    body.spec.environment_profile_pairs = env_template;&amp;#13;
}&amp;#13;
else {&amp;#13;
    body.spec.environment_uuid = environment_uuid + '';&amp;#13;
}&amp;#13;
&amp;#13;
//gs.error("MPI payload send: "+JSON.stringify(body));&amp;#13;
&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('POST', '/blueprints/marketplace_launch', JSON.stringify(body));&amp;#13;
&amp;#13;
if(response.getStatusCode() == '200' || response.getStatusCode() == '201') {&amp;#13;
	var parseResp = JSON.parse(response.getBody());&amp;#13;
	workflow.scratchpad.bp_uuid = parseResp.metadata.uuid;&amp;#13;
	&amp;#13;
	&amp;#13;
	//gs.error("bp_uuid: "+workflow.scratchpad.bp_uuid);&amp;#13;
	&amp;#13;
	workflow.scratchpad.bp_name = parseResp.metadata.name;&amp;#13;
	&amp;#13;
	workflow.scratchpad.flag = 'success';&amp;#13;
	&amp;#13;
} else {		&amp;#13;
	workflow.scratchpad.flag = 'failed';&amp;#13;
	workflow.scratchpad.blueprint_launch_failed = response.getBody();&amp;#13;
	logger.error("[wf_workflow] Marketplace_launch failed: "+response.getBody());&amp;#13;
	&amp;#13;
}&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Marketplace Launch"&gt;b8293c421bcf2c107f2a8515ec4bcb5b&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb5c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Run Script"&gt;db8c65aec0a8016501d00259bc7203a4&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;8&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Update app and app runlogs&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb55&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;1217&lt;/x&gt;&lt;y&gt;544&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=f4293c421bcf2c107f2a8515ec4bcb55"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f4293c421bcf2c107f2a8515ec4bcb55&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb55&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var app_uuid = workflow.scratchpad.app_uuid;&amp;#13;
&amp;#13;
logger.info("[wf_workflow] Application Provisioning has been completed: '"+workflow.scratchpad.app_name+"', updating app runlogs");&amp;#13;
&amp;#13;
var body = {&amp;#13;
	"filter": "application_reference=="+app_uuid+";(type==action_runlog,type==audit_runlog)"&amp;#13;
};&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('POST', '/apps/' + app_uuid + '/app_runlogs/list', JSON.stringify(body));&amp;#13;
&amp;#13;
if(response.getStatusCode() == '200' || response.getStatusCode() == '201') {&amp;#13;
	&amp;#13;
	var parseResp = JSON.parse(response.getBody());&amp;#13;
	&amp;#13;
	for(var i = 0; i&amp;lt;parseResp.entities.length; i++){&amp;#13;
		utils.insertAppRunlogs(parseResp.entities[i]); // inserting app run logs into App Runlogs table&amp;#13;
	}&amp;#13;
	logger.info("[wf_workflow] App Runlogs updated for '"+workflow.scratchpad.app_name+"'");&amp;#13;
	&amp;#13;
} else {&amp;#13;
	logger.error("[wf_workflow] Application Runlogs failed for '"+workflow.scratchpad.app_name+"' Reason: "+response.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
//Inserting new created apps details into [x_nuta2_nutanix_ca_nutanix_calm_application] table&amp;#13;
var appUuidResponse = utils.makeCalmApiCall('GET', '/apps/'+app_uuid, '');&amp;#13;
&amp;#13;
if(appUuidResponse.getStatusCode() == '200' || appUuidResponse.getStatusCode() == '201'){&amp;#13;
	&amp;#13;
	utils.insertIntoQueue("processImportedApp", 'GET', current.request.requested_for, appUuidResponse.getBody(), 'Process applications', 'This job processes the imported applications.');&amp;#13;
	&amp;#13;
} else {&amp;#13;
	logger.error("[wf_workflow] Error during retrieval of application '"+workflow.scratchpad.app_name+"' actions to API /apps/&amp;lt;uuid&amp;gt; Error : "+appUuidResponse.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f4293c421bcf2c107f2a8515ec4bcb55&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb55&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;var utils = new Nutanix_Calm_Utils();&amp;#13;
var logger = new Nutanix_Calm_Logger();&amp;#13;
var app_uuid = workflow.scratchpad.app_uuid;&amp;#13;
&amp;#13;
logger.info("[wf_workflow] Application Provisioning has been completed: '"+workflow.scratchpad.app_name+"', updating app runlogs");&amp;#13;
&amp;#13;
var body = {&amp;#13;
	"filter": "application_reference=="+app_uuid+";(type==action_runlog,type==audit_runlog)"&amp;#13;
};&amp;#13;
&amp;#13;
var response = utils.makeCalmApiCall('POST', '/apps/' + app_uuid + '/app_runlogs/list', JSON.stringify(body));&amp;#13;
&amp;#13;
if(response.getStatusCode() == '200' || response.getStatusCode() == '201') {&amp;#13;
	&amp;#13;
	var parseResp = JSON.parse(response.getBody());&amp;#13;
	&amp;#13;
	for(var i = 0; i&amp;lt;parseResp.entities.length; i++){&amp;#13;
		utils.insertAppRunlogs(parseResp.entities[i]); // inserting app run logs into App Runlogs table&amp;#13;
	}&amp;#13;
	logger.info("[wf_workflow] App Runlogs updated for '"+workflow.scratchpad.app_name+"'");&amp;#13;
	&amp;#13;
} else {&amp;#13;
	logger.error("[wf_workflow] Application Runlogs failed for '"+workflow.scratchpad.app_name+"' Reason: "+response.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
//Inserting new created apps details into [x_nuta2_nutanix_ca_nutanix_calm_application] table&amp;#13;
var appUuidResponse = utils.makeCalmApiCall('GET', '/apps/'+app_uuid, '');&amp;#13;
&amp;#13;
if(appUuidResponse.getStatusCode() == '200' || appUuidResponse.getStatusCode() == '201'){&amp;#13;
	&amp;#13;
	utils.insertIntoQueue("processImportedApp", 'GET', current.request.requested_for, appUuidResponse.getBody(), 'Process applications', 'This job processes the imported applications.');&amp;#13;
	&amp;#13;
} else {&amp;#13;
	logger.error("[wf_workflow] Error during retrieval of application '"+workflow.scratchpad.app_name+"' actions to API /apps/&amp;lt;uuid&amp;gt; Error : "+appUuidResponse.getBody());&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35ddef20a0a0ba96248a7090eccd518&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Update app and app runlogs"&gt;f4293c421bcf2c107f2a8515ec4bcb55&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb55&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Timer"&gt;3961a1da0a0a0b5c00ecd84822f70d85&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;20&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Wait for 60 seconds&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;1201&lt;/x&gt;&lt;y&gt;285&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=38293c421bcf2c107f2a8515ec4bcb5c"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;3bf802c20a0a0b52008e2859cd8abcf2&lt;/value&gt;&lt;variable display_value=""&gt;220cd53d0a0a0b214103bdc2ec5c7ab4&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc836da0a0a0b520083ebc07da2f47c&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb5f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc740fe0a0a0b520025dcf8e2ff78e7&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;08fcd0830a0a0b2600079f56b1adb9ae&lt;/value&gt;&lt;variable display_value=""&gt;4cc4a4030a0a0b52007334f001376dc5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;500&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;220dc5a40a0a0b2109fbd28b8c4b6213&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb5f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;21f80cd00a0a0b2101fcd5b5defc0810&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292b2f0e0a0a0b215aa2dd2cbc578dc5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1970-01-01 00:01:00&lt;/value&gt;&lt;variable display_value=""&gt;c35dc0df0a0a0ba96248a7098d737925&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb5f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292c91070a0a0b212543d91ffde5014c&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292bd15e0a0a0b215a040c701033e3c5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;3000&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// Set 'answer' to the number of seconds this timer should wait&amp;#13;
answer = 0;&lt;/value&gt;&lt;variable display_value=""&gt;293493710a0a0b2115e3e5b4fce1d12a&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb5c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cba34da0a0a0b5200798c86eafe1203&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;21fd462c0a0a0b211c997276d7806c03&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cbfe48a0a0a0b5200cf8b82cc6685f1&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc6788c0a0a0b5200e6743c94001b16&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb5f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;21f80cd00a0a0b2101fcd5b5defc0810&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb5c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cba34da0a0a0b5200798c86eafe1203&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cbfe48a0a0a0b5200cf8b82cc6685f1&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;500&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;220dc5a40a0a0b2109fbd28b8c4b6213&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;3bf802c20a0a0b52008e2859cd8abcf2&lt;/value&gt;&lt;variable display_value=""&gt;220cd53d0a0a0b214103bdc2ec5c7ab4&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;21fd462c0a0a0b211c997276d7806c03&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1970-01-01 00:01:00&lt;/value&gt;&lt;variable display_value=""&gt;c35dc0df0a0a0ba96248a7098d737925&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;08fcd0830a0a0b2600079f56b1adb9ae&lt;/value&gt;&lt;variable display_value=""&gt;4cc4a4030a0a0b52007334f001376dc5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc6788c0a0a0b5200e6743c94001b16&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb5f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc740fe0a0a0b520025dcf8e2ff78e7&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc836da0a0a0b520083ebc07da2f47c&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292b2f0e0a0a0b215aa2dd2cbc578dc5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb5f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292c91070a0a0b212543d91ffde5014c&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb5e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292bd15e0a0a0b215a040c701033e3c5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/document_key&gt;&lt;order&gt;3000&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb5d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// Set 'answer' to the number of seconds this timer should wait&amp;#13;
answer = 0;&lt;/value&gt;&lt;variable display_value=""&gt;293493710a0a0b2115e3e5b4fce1d12a&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Wait for 60 seconds"&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb5f&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Timer"&gt;3961a1da0a0a0b5c00ecd84822f70d85&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;17&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Wait for 60 seconds&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage/&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;659&lt;/x&gt;&lt;y&gt;271&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=f0293c421bcf2c107f2a8515ec4bcb61"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292b2f0e0a0a0b215aa2dd2cbc578dc5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1970-01-01 00:01:00&lt;/value&gt;&lt;variable display_value=""&gt;c35dc0df0a0a0ba96248a7098d737925&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;500&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb61&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;220dc5a40a0a0b2109fbd28b8c4b6213&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;21f80cd00a0a0b2101fcd5b5defc0810&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;3000&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// Set 'answer' to the number of seconds this timer should wait&amp;#13;
answer = 0;&lt;/value&gt;&lt;variable display_value=""&gt;293493710a0a0b2115e3e5b4fce1d12a&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb61&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cba34da0a0a0b5200798c86eafe1203&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292c91070a0a0b212543d91ffde5014c&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292bd15e0a0a0b215a040c701033e3c5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc6788c0a0a0b5200e6743c94001b16&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;21fd462c0a0a0b211c997276d7806c03&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb61&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cbfe48a0a0a0b5200cf8b82cc6685f1&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;08fcd0830a0a0b2600079f56b1adb9ae&lt;/value&gt;&lt;variable display_value=""&gt;4cc4a4030a0a0b52007334f001376dc5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;3bf802c20a0a0b52008e2859cd8abcf2&lt;/value&gt;&lt;variable display_value=""&gt;220cd53d0a0a0b214103bdc2ec5c7ab4&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb61&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc836da0a0a0b520083ebc07da2f47c&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc740fe0a0a0b520025dcf8e2ff78e7&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;21f80cd00a0a0b2101fcd5b5defc0810&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb61&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cba34da0a0a0b5200798c86eafe1203&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb61&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cbfe48a0a0a0b5200cf8b82cc6685f1&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;500&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb61&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;220dc5a40a0a0b2109fbd28b8c4b6213&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;1970-01-01 00:01:00&lt;/value&gt;&lt;variable display_value=""&gt;c35dc0df0a0a0ba96248a7098d737925&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;3bf802c20a0a0b52008e2859cd8abcf2&lt;/value&gt;&lt;variable display_value=""&gt;220cd53d0a0a0b214103bdc2ec5c7ab4&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1310&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;21fd462c0a0a0b211c997276d7806c03&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;08fcd0830a0a0b2600079f56b1adb9ae&lt;/value&gt;&lt;variable display_value=""&gt;4cc4a4030a0a0b52007334f001376dc5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1320&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;b4293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc6788c0a0a0b5200e6743c94001b16&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb61&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc836da0a0a0b520083ebc07da2f47c&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1350&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;4cc740fe0a0a0b520025dcf8e2ff78e7&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292bd15e0a0a0b215a040c701033e3c5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292c91070a0a0b212543d91ffde5014c&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;1360&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;30293c421bcf2c107f2a8515ec4bcb63&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value/&gt;&lt;variable display_value=""&gt;292b2f0e0a0a0b215aa2dd2cbc578dc5&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/document_key&gt;&lt;order&gt;3000&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb62&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// Set 'answer' to the number of seconds this timer should wait&amp;#13;
answer = 0;&lt;/value&gt;&lt;variable display_value=""&gt;293493710a0a0b2115e3e5b4fce1d12a&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Wait for 60 seconds"&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb64&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_activity action="INSERT_OR_UPDATE"&gt;&lt;activity_definition display_value="Wait for condition"&gt;d93a02ae0a0a0aa30077abad3fdac035&lt;/activity_definition&gt;&lt;activity_definition_updated&gt;false&lt;/activity_definition_updated&gt;&lt;databus_lookup_id&gt;24&lt;/databus_lookup_id&gt;&lt;height/&gt;&lt;input&gt;{}&lt;/input&gt;&lt;is_parent&gt;false&lt;/is_parent&gt;&lt;name&gt;Wait for Approval or Reject&lt;/name&gt;&lt;new_activity_definition/&gt;&lt;notes/&gt;&lt;out_of_date&gt;false&lt;/out_of_date&gt;&lt;parent/&gt;&lt;pinned&gt;false&lt;/pinned&gt;&lt;pinned_version/&gt;&lt;stage display_value="Waiting for Approval"&gt;38293c421bcf2c107f2a8515ec4bcb4a&lt;/stage&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb6e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;timeout&gt;1970-01-01 00:00:00&lt;/timeout&gt;&lt;vars/&gt;&lt;width/&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;x&gt;22&lt;/x&gt;&lt;y&gt;250&lt;/y&gt;&lt;/wf_activity&gt;&lt;sys_variable_value action="delete_multiple" query="document_key=70293c421bcf2c107f2a8515ec4bcb6e"/&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;70293c421bcf2c107f2a8515ec4bcb6e&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb87&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;approval=approved^ORapproval=rejected^EQ&lt;/value&gt;&lt;variable display_value=""&gt;c35dc4cd0a0a0ba96248a70990c1ac54&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;70293c421bcf2c107f2a8515ec4bcb6e&lt;/document_key&gt;&lt;order&gt;2&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb87&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// Set the variable 'answer' to true or false to indicate if the condition has been met or not.&amp;#13;
answer = true;&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35debce0a0a0ba96248a709440cf31a&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;70293c421bcf2c107f2a8515ec4bcb6e&lt;/document_key&gt;&lt;order&gt;1&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb87&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;approval=approved^ORapproval=rejected^EQ&lt;/value&gt;&lt;variable display_value=""&gt;c35dc4cd0a0a0ba96248a70990c1ac54&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;sys_variable_value action="INSERT_OR_UPDATE"&gt;&lt;document&gt;wf_activity&lt;/document&gt;&lt;document_key&gt;70293c421bcf2c107f2a8515ec4bcb6e&lt;/document_key&gt;&lt;order&gt;2&lt;/order&gt;&lt;sys_class_name&gt;sys_variable_value&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb87&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;value&gt;// Set the variable 'answer' to true or false to indicate if the condition has been met or not.&amp;#13;
answer = true;&amp;#13;
&lt;/value&gt;&lt;variable display_value=""&gt;c35debce0a0a0ba96248a709440cf31a&lt;/variable&gt;&lt;/sys_variable_value&gt;&lt;wf_condition action="INSERT_OR_UPDATE"&gt;&lt;activity display_value="Wait for Approval or Reject"&gt;70293c421bcf2c107f2a8515ec4bcb6e&lt;/activity&gt;&lt;condition&gt;true&lt;/condition&gt;&lt;condition_default/&gt;&lt;condition_type&gt;standard&lt;/condition_type&gt;&lt;else_flag&gt;false&lt;/else_flag&gt;&lt;error&gt;false&lt;/error&gt;&lt;event&gt;false&lt;/event&gt;&lt;event_name/&gt;&lt;is_positive&gt;true&lt;/is_positive&gt;&lt;name&gt;Always&lt;/name&gt;&lt;order&gt;0&lt;/order&gt;&lt;short_description/&gt;&lt;skip_during_generate&gt;false&lt;/skip_during_generate&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb87&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;/wf_condition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="No"&gt;30293c421bcf2c107f2a8515ec4bcb55&lt;/condition&gt;&lt;from display_value="Check Approval Status"&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb8c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="End"&gt;74293c421bcf2c107f2a8515ec4bcb60&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;bc293c421bcf2c107f2a8515ec4bcb59&lt;/condition&gt;&lt;from display_value="Blueprint Launch"&gt;38293c421bcf2c107f2a8515ec4bcb59&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb8d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="IF request_id from Blueprint Launched available"&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;bc293c421bcf2c107f2a8515ec4bcb5f&lt;/condition&gt;&lt;from display_value="Wait for 60 seconds"&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;34293c421bcf2c107f2a8515ec4bcb8e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Get application details"&gt;74293c421bcf2c107f2a8515ec4bcb53&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;f0293c421bcf2c107f2a8515ec4bcb64&lt;/condition&gt;&lt;from display_value="Wait for 60 seconds"&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb89&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;to display_value="GET  Blueprint Pending Launches Status"&gt;38293c421bcf2c107f2a8515ec4bcb52&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;f8293c421bcf2c107f2a8515ec4bcb53&lt;/condition&gt;&lt;from display_value="Get application details"&gt;74293c421bcf2c107f2a8515ec4bcb53&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;38293c421bcf2c107f2a8515ec4bcb8b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Check Application Pending status"&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="No"&gt;b8293c421bcf2c107f2a8515ec4bcb6c&lt;/condition&gt;&lt;from display_value="Check Application Pending status"&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb8c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Check Application status running/error"&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;f4293c421bcf2c107f2a8515ec4bcb6b&lt;/condition&gt;&lt;from display_value=""&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;3c293c421bcf2c107f2a8515ec4bcb8d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Wait for Approval or Reject"&gt;70293c421bcf2c107f2a8515ec4bcb6e&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Yes"&gt;3c293c421bcf2c107f2a8515ec4bcb50&lt;/condition&gt;&lt;from display_value="Check Application status running/error"&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb8a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Create Incident on application error state"&gt;b0293c421bcf2c107f2a8515ec4bcb67&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Success"&gt;f8293c421bcf2c107f2a8515ec4bcb66&lt;/condition&gt;&lt;from display_value="Check launched blueprint success/failed"&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb8d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Get application details"&gt;74293c421bcf2c107f2a8515ec4bcb53&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Yes"&gt;f0293c421bcf2c107f2a8515ec4bcb5b&lt;/condition&gt;&lt;from display_value="Marketpalce Launch failed??"&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;70293c421bcf2c107f2a8515ec4bcb8e&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Create Incident on blueprint failed"&gt;f8293c421bcf2c107f2a8515ec4bcb4e&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Yes"&gt;b0293c421bcf2c107f2a8515ec4bcb4e&lt;/condition&gt;&lt;from display_value="Check pending status"&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb89&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;to display_value="Wait for 60 seconds"&gt;f0293c421bcf2c107f2a8515ec4bcb61&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="No"&gt;b8293c421bcf2c107f2a8515ec4bcb50&lt;/condition&gt;&lt;from display_value="Check Application status running/error"&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb8a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Mail Trigger"&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;f4293c421bcf2c107f2a8515ec4bcb4f&lt;/condition&gt;&lt;from display_value="Create Incident on blueprint failed"&gt;f8293c421bcf2c107f2a8515ec4bcb4e&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;74293c421bcf2c107f2a8515ec4bcb8b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="End"&gt;74293c421bcf2c107f2a8515ec4bcb60&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Yes"&gt;70293c421bcf2c107f2a8515ec4bcb52&lt;/condition&gt;&lt;from display_value="IF request_id from Blueprint Launched available"&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;78293c421bcf2c107f2a8515ec4bcb8d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="GET  Blueprint Pending Launches Status"&gt;38293c421bcf2c107f2a8515ec4bcb52&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="No"&gt;b0293c421bcf2c107f2a8515ec4bcb57&lt;/condition&gt;&lt;from display_value="Check bp_uuid for Blueprint Launch"&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;7c293c421bcf2c107f2a8515ec4bcb8a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Marketplace Launch"&gt;b8293c421bcf2c107f2a8515ec4bcb5b&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;b4293c421bcf2c107f2a8515ec4bcb65&lt;/condition&gt;&lt;from display_value="Begin"&gt;7c293c421bcf2c107f2a8515ec4bcb64&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb8b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value=""&gt;7c293c421bcf2c107f2a8515ec4bcb68&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Yes"&gt;bc293c421bcf2c107f2a8515ec4bcb54&lt;/condition&gt;&lt;from display_value="Check Approval Status"&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;b0293c421bcf2c107f2a8515ec4bcb8c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Check bp_uuid for Blueprint Launch"&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;bc293c421bcf2c107f2a8515ec4bcb52&lt;/condition&gt;&lt;from display_value="GET  Blueprint Pending Launches Status"&gt;38293c421bcf2c107f2a8515ec4bcb52&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb8a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Check pending status"&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Yes"&gt;3c293c421bcf2c107f2a8515ec4bcb6c&lt;/condition&gt;&lt;from display_value="Check Application Pending status"&gt;bc293c421bcf2c107f2a8515ec4bcb6b&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;b8293c421bcf2c107f2a8515ec4bcb8c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Wait for 60 seconds"&gt;38293c421bcf2c107f2a8515ec4bcb5c&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;78293c421bcf2c107f2a8515ec4bcb6d&lt;/condition&gt;&lt;from display_value="Blueprint Launch"&gt;f0293c421bcf2c107f2a8515ec4bcb6d&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;bc293c421bcf2c107f2a8515ec4bcb89&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;to display_value="IF request_id from Blueprint Launched available"&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="No"&gt;fc293c421bcf2c107f2a8515ec4bcb4d&lt;/condition&gt;&lt;from display_value="Check pending status"&gt;f0293c421bcf2c107f2a8515ec4bcb4c&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb89&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;to display_value="Check launched blueprint success/failed"&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="No"&gt;b8293c421bcf2c107f2a8515ec4bcb50&lt;/condition&gt;&lt;from display_value="Check Application status running/error"&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;f0293c421bcf2c107f2a8515ec4bcb8a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Update app and app runlogs"&gt;f4293c421bcf2c107f2a8515ec4bcb55&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Yes"&gt;3c293c421bcf2c107f2a8515ec4bcb50&lt;/condition&gt;&lt;from display_value="Check Application status running/error"&gt;bc293c421bcf2c107f2a8515ec4bcb4f&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb8a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Update app and app runlogs"&gt;f4293c421bcf2c107f2a8515ec4bcb55&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;7c293c421bcf2c107f2a8515ec4bcb55&lt;/condition&gt;&lt;from display_value="Update app and app runlogs"&gt;f4293c421bcf2c107f2a8515ec4bcb55&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb8c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="End"&gt;74293c421bcf2c107f2a8515ec4bcb60&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="No"&gt;fc293c421bcf2c107f2a8515ec4bcb51&lt;/condition&gt;&lt;from display_value="IF request_id from Blueprint Launched available"&gt;f0293c421bcf2c107f2a8515ec4bcb51&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;f4293c421bcf2c107f2a8515ec4bcb8d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Create Incident on blueprint failed"&gt;f8293c421bcf2c107f2a8515ec4bcb4e&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;70293c421bcf2c107f2a8515ec4bcb59&lt;/condition&gt;&lt;from display_value="Mail Trigger"&gt;fc293c421bcf2c107f2a8515ec4bcb57&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb89&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;to display_value="End"&gt;74293c421bcf2c107f2a8515ec4bcb60&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;30293c421bcf2c107f2a8515ec4bcb5c&lt;/condition&gt;&lt;from display_value="Marketplace Launch"&gt;b8293c421bcf2c107f2a8515ec4bcb5b&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;f8293c421bcf2c107f2a8515ec4bcb8b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Marketpalce Launch failed??"&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;bc293c421bcf2c107f2a8515ec4bcb87&lt;/condition&gt;&lt;from display_value="Wait for Approval or Reject"&gt;70293c421bcf2c107f2a8515ec4bcb6e&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb88&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;to display_value="Check Approval Status"&gt;b0293c421bcf2c107f2a8515ec4bcb54&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Yes"&gt;30293c421bcf2c107f2a8515ec4bcb57&lt;/condition&gt;&lt;from display_value="Check bp_uuid for Blueprint Launch"&gt;34293c421bcf2c107f2a8515ec4bcb56&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb8a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Blueprint Launch"&gt;f0293c421bcf2c107f2a8515ec4bcb6d&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Always"&gt;38293c421bcf2c107f2a8515ec4bcb67&lt;/condition&gt;&lt;from display_value="Create Incident on application error state"&gt;b0293c421bcf2c107f2a8515ec4bcb67&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb8b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="End"&gt;74293c421bcf2c107f2a8515ec4bcb60&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="Failed"&gt;78293c421bcf2c107f2a8515ec4bcb66&lt;/condition&gt;&lt;from display_value="Check launched blueprint success/failed"&gt;7c293c421bcf2c107f2a8515ec4bcb65&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb8c&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Create Incident on blueprint failed"&gt;f8293c421bcf2c107f2a8515ec4bcb4e&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_transition action="INSERT_OR_UPDATE"&gt;&lt;condition display_value="No"&gt;70293c421bcf2c107f2a8515ec4bcb5b&lt;/condition&gt;&lt;from display_value="Marketpalce Launch failed??"&gt;74293c421bcf2c107f2a8515ec4bcb5a&lt;/from&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:37&lt;/sys_created_on&gt;&lt;sys_id&gt;fc293c421bcf2c107f2a8515ec4bcb8d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:37&lt;/sys_updated_on&gt;&lt;to display_value="Blueprint Launch"&gt;38293c421bcf2c107f2a8515ec4bcb59&lt;/to&gt;&lt;/wf_transition&gt;&lt;wf_estimated_runtime_config action="INSERT_OR_UPDATE"&gt;&lt;estimated_run_time/&gt;&lt;no_of_data_points&gt;1&lt;/no_of_data_points&gt;&lt;percentage_threshold_ert&gt;20&lt;/percentage_threshold_ert&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-03-23 15:46:36&lt;/sys_created_on&gt;&lt;sys_id&gt;382934421bcf2c107f2a8515ec4bcb2b&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 15:46:36&lt;/sys_updated_on&gt;&lt;workflow_version display_value="Nutanix - Blueprint Launch to CALM"&gt;742934421bcf2c107f2a8515ec4bcb2b&lt;/workflow_version&gt;&lt;/wf_estimated_runtime_config&gt;&lt;wf_workflow_version action="update_multiple" query="workflow=30421c83375d2300d27b8cf6c3990e01^sys_id!=742934421bcf2c107f2a8515ec4bcb2b"&gt;&lt;published&gt;false&lt;/published&gt;&lt;/wf_workflow_version&gt;&lt;/record_update&gt;</payload>
<payload_hash>374074336</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c95887e5dbcc7c103e3c6a5b8a96195c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e830000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>sc_req_item</table>
<target_name>Nutanix - Blueprint Launch to CALM</target_name>
<type>Workflow</type>
<update_domain>global</update_domain>
<update_guid>29b9788294cf2c1092025568beea61b0</update_guid>
<update_guid_history>29b9788294cf2c1092025568beea61b0:374074336,70189f35f08fe8101ff003e265ad8bd9:1721410016,7914df3da84fe810446807124e10f316:-2139153378,cecf2e69278fa8109d6a03c780606087:1408663670,5f88aae1858fa810dde4cc428e40e9b9:734326413,d9ac8ead660fa8100bf0523a55be02cb:-509955097,f7508a2d008f68106132dac1cc999a17:-963385892,99066770e3032810d1d6c3276d8b9a1f:896386239,4fe5a21490c3a410a1a90efe4c06d035:1632063629,f433aa505ec3a410565d3fa5f4e2d54a:-2138511217,09922e1091c3a410e3680058d0006e45:-246434617,7e3819008f8be010bf71d890f33ca6bb:-1895686810,e498e5e45ea260100749137f1e10f495:-438502193,a83defee49812c10c82e076dfa23c62c:958969544,75bc2beea0812c10dcb708a22dffa0cb:-294057399,e874572e72412c10ab4d4e0d278501b9:666377229,4ff5738e3941a810065326dd9d204f85:-970018651,a6ef8b5dcf09e4102891ac690c854a6e:-1950709348,0f033e09bf4da410df8fb2d39e8c3c27:764980275,cbba9285040da4101680da437eee8084:1478014724,0547820523c9a410af60256315070f6b:818097604,35576189b149a4104cd614c1b1e4f934:-442541074,a97c5dc9a009a4101fcd006cb8c05d62:974829085,02419d4d0fc5a410d32dc1695b76ebbd:596842155,23ed858936c5a41002d850a633ae31af:-1964651693,52e6db3cb881a410e5c80f117f760d0a:138752951,1cf5d7783b81a4107a0ce15e2c27951a:-1752906087,dbdf0bbca941a4101cd64ff5d1f5558a:-786345307,5cacf974db8d6410b02c798cab7b40a5:466663102,ab0fa9f8b64d64108c8fe24f9e5f08ce:129293311,ec202930634d6410025a51f828867623:-368568987,19e534f00f4964101b49e7d631642f54:105742085,7f9bc9b9506ad050fff76ed4a36b4bf9:-143929759,e73a7921b962d05079a5ac1db9de9054:-2096120595,dd967d6d3522d0504e5a16e3183f75d1:-1806891306,6368a5252122d050ec83e42b87c3df5b:959061746,b014a1612722d050620c318a3c457ef9:1519085105,ac7329217822d05058b339f9ae327640:-1169107021,d9f449a193ea5050d57529b01c00faa9:-2019060783,82aa3ca9c3aa50500732dc7a15eeb869:1441411302,367d34eda22e9050d21e9cbacb4364ac:796445649,84e8e861892e9050a4488d9ea2ed0398:711053017,d47e586934ea9050a5ea9876b6a1ffa0:1168958481,247cdce574ea90502d1b418e1905af10:183770832,26dad8a55aea905083856b13bbabf3fe:-766462223,c4e850653aea905098fa4925775e5fd1:1210910659,89a614e145ea9050b7b8a2986c7cd81f:-99112901,98d4986184ea905000136b28ac71b680:1800499226,8f3a40a951aa9050984ee2308261bf3f:-1019241319,4f117b59926a9050bbc435814894b638:-451147235,31cf2719bc6a905061aaf7ec1556d0e7:-531573535,07cc2f55686a90503a4ea93824d1f32c:159913929,a32be7158c6a90507d5956a26dbd65ae:91160209,a11a6bd11f6a905021cf8780e2d29e19:-2028955073,efb8e7910c6a90508de95a6bc81035bf:-1542160073,867d5b11672a9050b4d61b1cdc1445ad:-911546240,3451691d6e629050f5b026fe8a429d5c:-1064803405,b30ecc57e892545018222764941de050:2100908499,dd4931cd9e491410d29af0bcf1fcb788:564436440,4f0270ff708704901988eb59f0dd3395:-1105500097,1964baee5353330027d23aadeddcf64c:1090337679,a2332bd02cdb3300f792b73e37e0de4d:-1133271805,b24fe6745e033300d10ea7dee581fdcc:-581814963,259682aa38be330098eb2626dead00c6:513312695,2163422a46be330079f15f84c5244261:-628662458,b7765bb1862133008ed06adf35146f67:911515514,5ee4939de5ad7300ec5c0d7106d6cb18:911532902,90bd1659d52d73006e86f2138e2adabc:1949454297,891f0b68026133001ed9f191367f3f7e:80846115,1dc39140ea9d33005225d7c0d66d3268:-919930877,bfe176fbbc053300449add612147c00f:326052258,48099e279b493300daf95dbc599e5c80:1094745567,06b41263c44933007c81350340483652:-1208964226,b914962361493300a4478baf6085caa5:-957682286,04a312230a493300f8d8f2a8c2bf7870:-937399453,e5e256ef66093300cffd99ceed353b35:759602950,8ecf4e2f660933007202305df586d80f:-1788335285,89558267390933005fd1431f94ec6c96:-621045327,8dc282e348093300eb2325d8db7ce3e9:-72489173,2f3df9afc4c5330046e84e60e14befa3:626291587,192931eb3cc53300332dfa78df4c3110:-125523969,d6f6716b53c53300184e6eb02dbdd9f0:-784926362,7b4499a7ec053300c340e5d2ae61510f:-1554118814,531893012c7833007dcd729f5ab343cb:1707684811,6fda7975ce272300df900eb82415c7f7:-1379961643,516ccd9a13932300220bb13191573a9f:38840508,cfc4f85e2d5323008f8913ba30b6f8fe:-724489145,b20c2f7739032300fd88a3bf2c331249:-962855845,d0c6c32bebc7630061a2ea2f7bc75679:-819272151,af2a12af72476300edfc0d796eca2e6e:-1052965879,8ce8926f8d47630053686992c8962aa0:1269201223,91510f53adcf230069bee5eabda8c585:1032228037,5b99c94f2b832300e50f2a062a820351:225075605,32fb9483614323001ac3d6fb01849508:-467149109,4a20b44a930323006d2f90d220a83422:-1548391010,181620822b0323009e3bd2873b8911f7:1910910651,4eeceabe5e3623003ac308bf03f9199f:-1126666597,0a49e63ef6362300f13faf1c13a4021f:1864397882,5fec093e41322300af9302434e0564bc:-1236354125,dfda49ba2132230046a655fc7a3e98f2:12199210,7185d8ee39722300891e077c471f47e6:1859685771,9aa29c11f8326300a90e8f187cde3227:-893962975,293c441d69fe2300e06fac315a17ce62:1930303909,5f7e7f4d7bbe23008be14c5c4cc314ff:413041480,0ba417f4ebf22300c9635490691d499d:-126874154,152313b401f22300ee93b041e5a4fb23:238249982,ae64614da9e22300731e205af36bf1ad:1956924772,3a60e1496be22300488cc6e21f98b746:-1601212587,06f08cf4ebe223008ea114c437b20f8f:-981196876,aba9fd8c89e2230004dd35df09878744:754641048,899231889de22300e4685f73d92634ed:-199223216,d6f1d8733d1623001fd4b668c57c9a7a:-48652395,0c8d00bf49d223000434d730560ec547:-1820600978,330c5f820456230077b15c397ef34d8c:1283123964,7470ca86031223006b7f92b049abf36a:-2036058496,1a9d0954ae522300fcb8018ad2a1bf49:-2049384064,c20742b3d8422300a3c05192c521a30e:108428481,eeb44aff63022300b28d27d3073ab60a:1128573459,e10ff17b040223001d8ff78b5f228020:652580522,c5e23527cd062300d683093abf0f4980:-2066701928,3c86c51be506230091a42c2eba849930:-612192051,9773584ef442a300970140d615342e1f:-183188141,b7434c02f842a300f60b616d271bebc2:611257305,41ccbb7d5fc223005d3019bad8f312e1:1978721359,697d9bb13282230001eb88646520077d:-1208716218,2bb59e2d45422300b6e6dbd894a4d09e:-439251182,38c4522dc4422300805d277d282618c4:1494698590,b331d669954223002981279afa6b11a0:1966559346,aa9bc62561422300cdc331d450238e9a:943382815,bc4ac2e170422300a2379a30de902e58:-124634750,0ec90ea1da42230050d4c31eb403c622:-502362217,329f11dd2d822300b1f24ca1d6d3bc0a:4779185,10a8d9c9764ea3006ae78ab88e5fd390:-92846061,25375589704ea3001848fe7d40b7d083:-1396669741,d9e51d09584ea30075afc7877a580272:-125532105,9f5495c52d4ea300151ce4a0b9e69980:1234710745,053b09cd410ea300893883c96b42c19b:-903177012,852d10091b8aa30035209175af690f31:336204052,60cae69819c263009b6c0e50c7b7f322:-853307956,d739ae18a4c26300753e43a444afce6f:-263148630,1615e214dbc263006a1944dd573beee2:1590323204,b443aa90c4c26300f40891c5f949f524:-212641215,f0891658de8263000a9f8cfa3986974c:-878082189,900cf190a002630022a0a43bbc320326:446214844,29105950c68e230039060834beb2bbf9:-1490841375,e24d8acce28623005fa315bb0c62c6d9:578936998,0e290e0cd486230071b7f8484b9c1391:-1771359844,25760e88c786230008338364f0411c4a:-2042348194,458d7504428623003412a65229ac7aa1:-1822394705,aef019405c062300dd200037c529ce8d:1522039798,cdb94d883ac223009fbda328081df32d:1063408048,18bb00f332b16300020aae0fe7934cce:693917104,bdb70cff8c716300bd4a90a0b1d32b32:1629988206,960780ff9c7163002ba89ab6c692b790:92143101,0145087fd3716300b62ad27d39ece58e:1720332508,e663ccfbf6716300538103b5af2c31dc:-1438915330,d7d284fb49716300093fa34b0760e057:10779090,c12288bbaf71630094996184a051ec16:1835373059,5fa1c0bbc07163002add726214fc5f23:-1986823768,2b40407b04716300e68e25ed3319e642:1984645820,c9bf3b2bfe716300a8fe8b5ef3643bd4:-497550821,6d1f332bad716300283657df75c4f3e7:968815924,c77e3be74e71630059c7493478f0c22b:521274931,01fc3f67b971630037129e7031d69acf:-1066449828,ca4bf727087163009dd188461bd66e10:-1135360628,169abfe3b37163003a511617e0832e62:-1948385218,1de937e31f716300d1f06158a252629a:1184011147,d549fba3e871630056bdda22c416dd82:1750332065,d6b5b72364716300f3d972242c826ad9:1904659433,e2947bef213163004bd5602ee7568e18:-645533906,5e6daf6b8a316300220c95ae885e5b17:-879524059,972b872735fd23004f6582f4a918ed08:556823360,8c5a3ee7b6bd23007c6f42503fa7088b:-1680305267,3978b6a785bd2300ed189ceff6374789:405376363,c66a03d74f7523001578244601b430ce:1987123327,406d6253a5f123007b28f8692be14730:799652933,616aae9ffcb12300684dba3d21ea6534:-320218359,f6e8ea5fb6b1230010a61b98dd35db3b:1519325876,e9a66edbc5b1230008618c73d26c2beb:-910263470,430d5ed389b1230048e8c6291e4a23df:-274289941,9a8a92dfb77123002bf96b4e9a10eef0:-2085861380,012a5e9f127123000163b72f9c609134:-1717701740,c958965fc7712300ec63af1bfa65131f:845748416,57469adb5e712300c43b0a626643bdb1:992651562,76e4569b1b712300f820efa7993bd1fb:-801120827,18d4169b8d712300e6950d3aee7b1871:-75852348,4dcfb51b23312300cc494f2ed44f897a:-324358401,bd6c9283fd75230033b1a07177472920:79171380,92c5c6cf50f1230078d4fae07bf50fe9:1938351650,a1b9b1c71af12300bbddf6b73626ae8e:1900058577,cd58fd47d7f12300aaa4262c6c1e3361:-1900937404,ca07bd07ddf1230066547ab2f464788f:-387688124,28e63d07e2f1230096a1bca0256d960d:113303331,243671071bf123004280a00b9539005a:-1958174953,3a817d0301f123001ee7f407fb03d26d:403570645,72af65cf8fb123008f1f0aab3504af6b:1519041198,0fbae4be7631630082c89a027bfd989e:1635009706,ddf9ac7e6731630064d83e8d0a2e8367:1272932605,6ab0e8f6d231630039bfe10c620a5cca:-455334568,c1fc3beadebd23001c0e8d30456f47a4:-612705334,8faabf6a96bd2300f04d62823d0bd8eb:2118216987,76183fe6f5bd2300c782109f8a339a45:-1489150046,a88363ea097d2300d9684056d3cf6d4f:-1303799022,bbf6331aca7523001cd9b0c484a6f964:813351515,ffebdf92c53523003cb180754eb15f0a:-2058342442,bdaadf529e352300e83da07e385a6d3d:314504063,00a45b5e9ef1230015dfd3b104fbe686:650574224,1a6157da5ef123009c41c3ac50378b39:944764865,1d7f4b5a76f12300180af70a8726f19f:425131810,f6fb03d62af123002aaed7cabdf04424:-551729292,70d60bd20bf12300a265f294616bc58b:-919123382,deb687d27df12300836758da275489cf:-70749277,a7a8625aea7123003d9ebdcacb2e9e23:-855300430,c6786e1a2f712300c65df025480ed866:-1378730260,580f8df5a7316300e592f3588f4c9661:2079855065,c0336f4975b1230028827e2fe6467804:845634007,96cb73caec612300e3d28fc47863930c:716908997,a593c7286ae123000e06f9f05b60b64e:-2062390295,4ed24fe438e12300bced055c163955d0:1479593537,15c18ba45be12300c57306c5d291df60:-1001719712,aa1bb00893e1230089f0239d6ef4a2f9:1941858089</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_documentation_x_nuta2_nutanix_ca_nutanix_marketplaceitems_bp_type_en</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_documentation element="bp_type" label="BP Type" language="en" table="x_nuta2_nutanix_ca_nutanix_marketplaceitems"><sys_documentation action="INSERT_OR_UPDATE"><element>bp_type</element><help/><hint/><label>BP Type</label><language>en</language><name>x_nuta2_nutanix_ca_nutanix_marketplaceitems</name><plural>BP Types</plural><sys_class_name>sys_documentation</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-02-18 13:43:08</sys_created_on><sys_id>026026d32fdee010962a877cf699b61f</sys_id><sys_mod_count>0</sys_mod_count><sys_name>BP Type</sys_name><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_documentation_x_nuta2_nutanix_ca_nutanix_marketplaceitems_bp_type_en</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-18 13:43:08</sys_updated_on><url/><url_target/></sys_documentation></sys_documentation></record_update>]]></payload>
<payload_hash>1379596079</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c958cb25dbcc7c103e3c6a5b8a96199c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d0f0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_nutanix_marketplaceitems</table>
<target_name>Marketplace Items.bp_type</target_name>
<type>Field Label</type>
<update_domain>global</update_domain>
<update_guid>966026d3e5dee0107ce02b30690b612a</update_guid>
<update_guid_history>966026d3e5dee0107ce02b30690b612a:1379596079</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_client_5225b64ddb003300bfa82a9a48961900</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script_client"&gt;&lt;sys_script_client action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;applies_extended&gt;false&lt;/applies_extended&gt;&lt;condition/&gt;&lt;description/&gt;&lt;field&gt;show_help_text&lt;/field&gt;&lt;global&gt;true&lt;/global&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;messages/&gt;&lt;name&gt;Show annotations on field&lt;/name&gt;&lt;order/&gt;&lt;script&gt;&lt;![CDATA[function onChange(control, oldValue, newValue, isLoading, isTemplate) {
   if (isLoading || newValue === '') 
   {
      return;
   }//staus of the field message.
	if(newValue=='true') {
		g_form.showFieldMsg('service_catalog','Name of the Catalog in which all Calm specific catalog items would be configured','info');
		g_form.showFieldMsg('mid_server','Choose the MID server to connect with your Calm instance','info');
		g_form.showFieldMsg('mid_application','Select mid server application','info');
		g_form.showFieldMsg('calm_instance','Enter the Calm URL including protocol, FQDN/IP address and the port number.  Example: https://mycalm.mydomain.com:9440','info');
		g_form.showFieldMsg('use_external_credential_system','Enabling this option allows you to connect to Calm using ServiceNow credential store object with CyberArk as the external storage','info');
		g_form.showFieldMsg('credential','Select credentials stored in Credential Store','info');
		g_form.showFieldMsg('calm_admin_username','Username using which this plugin will connect to Calm as using the Calm REST API.  This needs to be a user configured in Calm with the admin role','info');
		g_form.showFieldMsg('calm_admin_password','Password to connect','info');
		g_form.showFieldMsg('workflow','Choose a workflow to be triggered on ordering any catalog item under Nutanix Calm catalog created as a part of this plugin','info');
		g_form.showFieldMsg('assignment_group','Choose an assignment group to which all incidents created from this plugin will be assigned to by default','info');
		g_form.showFieldMsg('support_url','Nutanix support portal to raise cases for any issues','info');
		g_form.showFieldMsg('show_published_blueprints','Enabling this will pull all blueprints (draft till un-published) into SNOW CMDB on which catalog items can be created','info');
		g_form.showFieldMsg('create_alerts','Enabling this will allow this plugin to create incidents on blueprint/MPI launch errors','info');
		g_form.showFieldMsg('log_verbosity','Set the verbosity for logging statements added by this plugin','info');
		g_form.showFieldMsg('calm_version','Version of the above mentioned Calm instance','info');
		
		g_form.showFieldMsg('actions_approval_workflow',' You can enable or disable workflow for all Apps managed through Calm and hence ServiceNow','info');
		g_form.showFieldMsg('system_actions','You can enable or disable workflow for system actions on all Apps','info');
		g_form.showFieldMsg('workflows_for_system_actions','ServiceNow will trigger this workflow on any system action triggered by the user','info');
		g_form.showFieldMsg('user_actions','You can enable or disable workflow for user (custom) actions on all Apps','info');
		g_form.showFieldMsg('workflows_for_user_actions','ServiceNow will trigger this workflow on any user (custom) action triggered by the user','info');
		g_form.showFieldMsg('use_local_groups','Enabling this will allow this plugin to assign the catalog item to the local ServiceNow along with LDAP AD Groups.');
		g_form.showFieldMsg('calm_saas_and_servicenow','Connect to Calm on Public Cloud.');
	}
	else {
		g_form.hideFieldMsg('service_catalog',true);
		g_form.hideFieldMsg('mid_server',true);
		g_form.hideFieldMsg('mid_application',true);
		g_form.hideFieldMsg('calm_instance',true);
		g_form.hideFieldMsg('use_external_credential_system',true);
		g_form.hideFieldMsg('credential',true);
		g_form.hideFieldMsg('calm_admin_username',true);
		g_form.hideFieldMsg('calm_admin_password',true);
		g_form.hideFieldMsg('workflow',true);
		g_form.hideFieldMsg('assignment_group',true);
		g_form.hideFieldMsg('support_url',true);
		g_form.hideFieldMsg('show_published_blueprints',true);
		g_form.hideFieldMsg('create_alerts',true);
		g_form.hideFieldMsg('log_verbosity',true);
		g_form.hideFieldMsg('calm_version',true);
		g_form.hideFieldMsg('use_local_groups', true);
		g_form.hideFieldMsg('actions_approval_workflow',true);
		g_form.hideFieldMsg('system_actions',true);
		g_form.hideFieldMsg('workflows_for_system_actions',true);
		g_form.hideFieldMsg('user_actions',true);
		g_form.hideFieldMsg('workflows_for_user_actions',true);
		g_form.hideFieldMsg('calm_saas_and_servicenow',true);
	}
		
   
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_client&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-03-06 06:33:54&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;5225b64ddb003300bfa82a9a48961900&lt;/sys_id&gt;&lt;sys_mod_count&gt;30&lt;/sys_mod_count&gt;&lt;sys_name&gt;Show annotations on field&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_client_5225b64ddb003300bfa82a9a48961900&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-10 11:51:55&lt;/sys_updated_on&gt;&lt;table&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/table&gt;&lt;type&gt;onChange&lt;/type&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;view/&gt;&lt;/sys_script_client&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1408001497</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>c958cb25dbcc7c103e3c6a5b8a96199f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d600000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Show annotations on field</target_name>
<type>Client Script</type>
<update_domain>global</update_domain>
<update_guid>0f3af87cb7d22c10c28def51f817af55</update_guid>
<update_guid_history>0f3af87cb7d22c10c28def51f817af55:-1408001497,5962b0cafdc16810075b65270e7c5ecf:65965805,058e12de679fc010d5872f16389a1468:-112515638,e20eda9ada9fc01059ee5e795636a44d:548626606,36fd561ea49fc010a8faf6e29d3bf46a:-1061384519,7c9c96dac59fc010560c48ca25297745:1366558772,44d21e12fb9fc01088a3d42804992f2d:630307125,59fcf88236db8010fc990d3be2ae9c40:-472489009,75db30c218db8010e50b7dc1c6a4754b:54714566,a8cfa4fb0a47c410cdbf5235eed1528b:1485685404,d62c4dad0547401079cb13d47775f89a:-1073194662,8c9ff065054740107e47b2287d357b72:-121874111,8f620af39ee4c050639d9567b1c6ee1b:1583070383,70c4a93f0964c050dfab47a66836e77a:-1749597328,0ef369bba864c050fbca33a2cd5ea92c:-369753621,a75a66676789330096dfd84bf45eb015:546936244,066a8a5ba79c330098b3b23aea7cc763:-509543924,ed3aca5f449c3300a232c60f4771700f:-1734340833,1cb14785614033008287913c8974f57e:1813513968,9d91c385fd4033000a1d657d7b1c5c2f:-584501374,b4714b45ad403300c6638618f05ee733:286044276,c0514bc1f4403300e965365c4c19f503:-722978990,7cef7e8105403300eeaa921278fde77b:-762813464,b8aff6c1bc403300a8f79710e798d136:739237918,b7fe3205d94033002fd0963e19ff382c:-2124256815,1a1e36c13340330078f2a6d4a1a7a11d:-1448854962,38cd3a81334033009d2521f4e5e5f95b:-1824290682,c21c3281274033006dd2643b899e5959:1707030971,7f99fecd8100330066a5ca06d045049c:-893227159,fe29fecd0e003300faa590c502312976:-1563068486,f0e5be4d77003300991f8203acb5d06b:-287114152,63953a4d30003300393cad4017c31b6a:358160304,e7653a4d3d0033009b489f09cbe14165:1966130555</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_include_b234e44937c26b00fdfc097973990e72</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_nuta2_nutanix_ca.Nutanix_ImportEnvironment&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;Nutanix_ImportEnvironment&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var Nutanix_ImportEnvironment = Class.create();
Nutanix_ImportEnvironment.prototype = {
    initialize: function() {
		this.appUtil = new Nutanix_Calm_Utils();
		this.logger = new Nutanix_Calm_Logger();
    },
	startImportEnvironment : function(current){
		var envUUID = '';
		try{
			this.logger.debug("Inside Nutanix_ImportEnvironment.startImportEnvironment");
			envUUID = current.payload+'';
			var response = this.appUtil.makeCalmApiCall("GET", this.appUtil.configuration.api.getEnvironment+envUUID+"","");
			if(response.getStatusCode() == '200' || response.getStatusCode() == '201'){
				this.logger.info("Connection established to "+this.appUtil.configuration.api.getEnvironment+envUUID+"");
				//this.appUtil.insertIntoQueue("processImportedEnvironment", "", current.parameter+'', response.getBody());
				//TO GET PROJECT NAME
				var projectTable = new GlideRecord(this.appUtil.configuration.table.Project+"");
				projectTable.addQuery('sys_id',current.parameter);
				projectTable.query();
				var projectName = '';
				while(projectTable.next()){
					projectName = projectTable.name;
				}
				//////
				this.appUtil.insertIntoQueue("processImportedEnvironment", "", current.parameter+','+ projectName, response.getBody(), 'Process environment data', 'This job processes the imported environment data.');
				this.logger.info("Successfully imported Environment of Project :- "+projectName);
			}
			else{
				this.logger.debug("Nutanix_ImportEnvironment.startImportEnvironment :- Connection to environment/"+envUUID+ " not established :- "+response.haveError()+" Status code :- "+response.getStatusCode());
			}
		}
		catch(e){
			this.logger.debug("Nutanix_ImportEnvironment.startImportEnvironment :- Exception caught during retrieval of environment/"+ envUUID +". Error: "+e);
			this.logger.error("Exception caught during retrieval of environment/"+ envUUID +". Error: "+e);
		}
	},
	processImportedEnvironment: function(current){
		var envUUID = '';
		try{
			this.logger.debug("Inside Nutanix_ImportEnvironment.processImportedEnvironment");
			var insertData = new GlideRecord(this.appUtil.configuration.table.stagingEnvironment+"");
			var projectSysId = current.parameter.split(',')[0]+'';
			var entity = this.appUtil.parse(current.payload);
			var status = entity.status;
			var resource = entity.status.resources;
			var metadata = entity.metadata;
			envUUID = metadata.uuid;
			insertData.initialize();
			var field;
			//insertData.name = current.parameter.split(',')[1]+''+" Environment";
			insertData.name = metadata.name + "";
			//To insert status data
			for(var key in status){
				
				field = status[key];
				if( key != 'resources' &amp;&amp; key != 'name') {
					insertData[key] = (field.constructor === Object || field.constructor === Array ) ? JSON.stringify(field) : field+'';
				}
			}
			//To insert resources data
			for(var key in resource){
				field = resource[key];
				insertData[key] = (field.constructor === Object || field.constructor === Array ) ? JSON.stringify(field) : field+'';
			}
			//To insert metadata
			for(var key in metadata){
				if(key != 'name') {
				field = metadata[key];
				insertData[key] = (field.constructor === Object || field.constructor === Array ) ? JSON.stringify(field) : field+'';
			}
			}
			insertData['project'] = projectSysId;
			insertData.insert();
		}
		catch(e){
			this.logger.debug("Nutanix_ImportEnvironment.processImportedEnvironment :- Exception caught during processing of environment/"+envUUID+". Error :- "+e);
			this.logger.error("Exception caught during processing of environment/"+envUUID+". Error :- "+e);
		}
	},
    type: 'Nutanix_ImportEnvironment'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;nikita.kumari&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-26 09:54:06&lt;/sys_created_on&gt;&lt;sys_id&gt;b234e44937c26b00fdfc097973990e72&lt;/sys_id&gt;&lt;sys_mod_count&gt;29&lt;/sys_mod_count&gt;&lt;sys_name&gt;Nutanix_ImportEnvironment&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;protected&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_b234e44937c26b00fdfc097973990e72&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-18 09:05:51&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>1536741593</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>cd5887e5dbcc7c103e3c6a5b8a961955</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e680000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Nutanix_ImportEnvironment</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>bd7dad509903a410167beb20f87884ea</update_guid>
<update_guid_history>bd7dad509903a410167beb20f87884ea:1536741593,a1b5054cb32223008a49c201ce0a7a1d:-897369004,3718c5b1dc5ee300fbe3c7814d5cec2b:-419352612,0cc70571425ee300c3fabfbdd3a8c6d9:907983201,b347cdfd851ee300749fa740e233a2d0:-637323615,f856c5fd711ee300541e7fcf9cb8b59a:1996363804,cae40131b95ee300ce784ba1c0763320:-1455997238,7df389bdf01ee300e784c19c7a99bb3c:-646224290,3742497d641ee300ec5b0e3dc8e10b66:-161754787,eb3049f9761ee3004f571b2209ba5f81:300240693,cf3f303db21ee3004a64b3a9f569a1ea:931958029,e07cc5d575ce6b0004371684d3a30146:-360522391,650cc1d52bce6b00f380c00e45c15e70:1802202839,a87bc995abce6b007e6994251e434d16:-360522391,9af8491551ce6b00d0c32a33f4f08135:-718761129,31b5855186ce6b004d975c080954e6ed:-1436652677,5a454151e0ce6b0099c0377f211f7ea4:-1617191045,dee83419868e6b0017529eb209365fdf:-1303154084,d158f4911b8e6b003e8a7411a6d51ce6:-2036054066,70c99ecd220a6b00a6e55838084da825:311904074,9e1781c174466b00a380f8465ca804c8:820876823,aad6c5c173466b008f7355c7423998f1:1727459944,43564d8188466b0076a43cb48af43fe8:-367043521,1c75cd4130466b002bf2d7c44ae5b077:753027296,aff4c941c5466b008b3651f02cc23710:617317864,39b30141c6466b008d394e97d00c4f95:-385424906,d322cdcdf9066b0097d6910364644eed:613450710,326178c1c9066b0097b508bb53c7c01f:-1227076965,21c0fc4162066b00e22fe3996f63941b:-1476567939,4944644968c26b0099a8848a70cb4a15:632038972</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_policy_48918ffe1b1ecc50ac43877ddc4bcb96</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_policy"><sys_ui_policy action="INSERT_OR_UPDATE"><active>true</active><conditions table="x_nuta2_nutanix_ca_calm_plugin_configuration">use_external_credential_system=true^EQ<item endquery="false" field="use_external_credential_system" goto="false" newquery="false" operator="=" or="false" value="true"/><item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/></conditions><description/><global>true</global><inherit>false</inherit><isolate_script>true</isolate_script><model_id/><model_table/><on_load>true</on_load><order>200</order><reverse_if_false>true</reverse_if_false><run_scripts>true</run_scripts><script_false/><script_true/><set_values/><short_description>Toggle credential system</short_description><sys_class_name>sys_ui_policy</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-01-16 10:32:33</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>48918ffe1b1ecc50ac43877ddc4bcb96</sys_id><sys_mod_count>16</sys_mod_count><sys_name>Toggle credential system</sys_name><sys_overrides/><sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca">3b7631654f452b001200e5201310c76b</sys_package><sys_policy/><sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope><sys_update_name>sys_ui_policy_48918ffe1b1ecc50ac43877ddc4bcb96</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-03-17 17:12:56</sys_updated_on><table>x_nuta2_nutanix_ca_calm_plugin_configuration</table><ui_type>0</ui_type><view/></sys_ui_policy></record_update>]]></payload>
<payload_hash>-1605554128</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>cd5887e5dbcc7c103e3c6a5b8a961958</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e250000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Toggle credential system</target_name>
<type>UI Policy</type>
<update_domain>global</update_domain>
<update_guid>f25356c813c7e0107007c75127e7ccd1</update_guid>
<update_guid_history>f25356c813c7e0107007c75127e7ccd1:-1605554128,cb5c3297527e68108d77afd1942a00cb:-1148061649,13db76174a7e6810aa2185df8d26e337:1233255738,d0abfa139d7e6810b45d148f464dcea0:-1666893246,cab776535c3e68108712f9a6ea04ba70:1602879213,dc47fe13473e6810a9a8d9c36b3c5d7e:1833492008,dcd5fa97b2fa68102da0dff8150b1733:575038823,3b517257fdba6810a8d1fc031164eb54:2139078873,b34d6e93b9ba681030e51b548e6cdeda:876475374,4c148ea3f0d66c50c8ffe3cd5abbb891:1604784174,fdef05f869162c10083b0e951c599c2a:-571937745,9359cd7045162c1037830cf2f72f5ce7:-1394958854,21705f8a790a641008327f73e04a08d9:979738396,8aeb2c496916e0101b9df540adaf8bf1:-720208465,4c4650e6de8700907d1ad27c315cf7d3:162655324,9cb5d4a6888700900efb797eb773557b:1298531888,e9f3d0e281870090a62de1d18c536ea0:1041951148,cb92cb32905ecc50c7c3b04f53749915:-1752715561,49824ffe201ecc50a0baba294fc1cc64:1707055992,14728b325b5ecc50c2ee19f46e35d01a:-1752715561</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_ui_script_db9441c237212300fdfc097973990e67</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_script"&gt;&lt;sys_ui_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;description/&gt;&lt;global&gt;false&lt;/global&gt;&lt;name&gt;x_nuta2_nutanix_ca.Calm_Catalog_Service_&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var $j = jQuery.noConflict();
var loader_count = 0;
var trigger_json = {};


function triggerChange(id, value) {
	var service_field = g_form.getValue('service_data') + '';
	var service_json_full= (service_field != '') ? JSON.parse(service_field) : [];
	for(var prof = 0; prof &lt; service_json_full.length; prof++) {
		var service_data = service_json_full[prof].service_configuration;
	for(var i in service_data) {
		for(var j in service_data[i]) {
			for(var k in service_data[i][j]) {
				if(k == id) {
					service_data[i][j][k].value = value + '';
				//	console.log(i + j + id + value);
				}
			}
		}
	}
	}
	g_form.setValue('service_data', JSON.stringify(service_json_full));
}
//---------diskApp module----------------
// Created an angular application with the name 'diskApp' to be used in HTML rendering

var app = angular.module('configApp', []);

app.filter('capitalize', function(){
	return function(category, title) {
		if(title)
			category = category.replace(title,'');
		category = category.toLowerCase().split('_');
		for (var i = 0; i &lt; category.length; i++) {
			category[i] = category[i].charAt(0).toUpperCase() + category[i].slice(1);
		}
		return category.join(' ').replace(/(os|vm|ssh|api|gcp|aws)/igm, function(match) {
				return match.toUpperCase();
			}).replace(/Vdisks/igm, 'vDisks').replace(/Management Optional/igm, 'Management (Optional)');
		//"$1".toUpperCase());
	};
});

// renderConfiguration = function(JSONString) {
// // 	$scope.JSONdata = JSON.parse(JSONString);

// };

app.controller('configController', function($scope) {

	$scope.togglePassword =  function(sysid) {
		var input = $j('#' + sysid);

		if (input.attr("type") == "password") {
			input.attr("type", "text");
		} else {
			input.attr("type", "password");
		}
	};

	$scope.selectCategory = function(category) {
		$scope.selectedCategory = category;
	};

	$scope.checkUiPage = function(category, type, title) {

		if(type &amp;&amp; type+''=='2')
			return false;
		
		var keys = Object.keys(category);

		if(category[keys[0]].name)	
			return true;	
		
		return false;

		//return (category.includes("storage") != true) &amp;&amp; (category.includes('port') != true);
	};
	
	
	
	
	
	
	
	$scope.checkGuestType = function(category, title, questionText){
		
		if((category+'').includes('guest_customization') &amp;&amp; questionText+''=='Install Type'){
			
			var guest = $scope.JSONdata[title][category];
			
			for(var i in guest)
				if(guest[i].question_text+'' == 'Type' &amp;&amp; guest[i].value+'' == 'Cloud-init')
					return false;			
		}
		
		return true;
	};
	
	$scope.disableRuntimeConfig = function(innerJSON) {
					if(innerJSON.data_type == 'EXEC_LOCAL' || innerJSON.data_type == 'HTTP_LOCAL' || innerJSON.data_type == 'EXEC_SECRET' || innerJSON.data_type == 'HTTP_SECRET') {
						return true;
					}
					else {
						return (innerJSON.isdisabled+'' == 'true');
					}
	};
	
	
	$scope.drsCheck = function(name, service) {
		
// 		var tmpJson = JSON.parse(g_form.getValue('service_data'))[service][service+'_vm_configuration'];
		
// 		var val = true;
		
// 		for(var i in tmpJson)
// 			if(tmpJson[i].name+'' == service+'_drs_mode'){
// 				val = (tmpJson[i].value)?tmpJson[i].value:false;
// 				break;
// 			}
				
		
// 		if((name+'' == service+'_host' || name+'' == service+'_datastore') &amp;&amp; val+'' == 'true'){
// 			return false;
// 		}else if((name+'' == service+'_cluster' || name+'' == service+'_storage_pod') &amp;&amp; val+'' == 'false'){
// 			return false;
// 		}
				
		return true;	
	};
	
	$scope.createTriggerArray = function() {
		var service_json_full = $scope.JSONdata;
		
		var var_json = {};
        for(var prof = 0; prof &lt; service_json_full.length; prof++) {
			var service_json = service_json_full[prof].service_configuration;
			var profile = service_json_full[prof].profile + "";
			
			for (var i in service_json) {
				if(service_json[i][i+"_variables"]) {
					var variables_json = service_json[i][i+"_variables"];
					var dep_array = [];
					for(var j in variables_json)
						dep_array = dep_array.concat(variables_json[j].field_json.all_dep);
					var_json[i] = dep_array;
				}
			}
		}
		trigger_json = var_json;
	};
	
	$scope.triggerEscript = function(profile, titleKey, name) {
		//console.log(profile + ":" + titleKey + " : " + name);
		//console.log(JSON.stringify(trigger_json));
		var var_name = name.replace(titleKey.replace(profile+"_","")+"_","");
		if(trigger_json[titleKey].indexOf(var_name) != -1)
			$scope.fetchEscriptHttp(titleKey);
	};
	
	$scope.fetchEscriptHttp = function(titleKey) {
		//return;
		var service_json_full = $scope.JSONdata;
		var continue_flag = false;
		
		if(service_json_full.length == 0)
			return;
		
        for(var prof = 0; prof &lt; service_json_full.length; prof++) {
			
			if(continue_flag)
				continue;
			
			var var_json = {};
			var service_json = service_json_full[prof].service_configuration;
			var profile = service_json_full[prof].profile + "";
			
			for (var i in service_json) {
				if(titleKey != "" &amp;&amp; i == titleKey) {
					if(service_json[i][i+"_variables"])
						var_json[i] = service_json[i][i+"_variables"];
					continue_flag = true;
					break;
				}
				else if(titleKey == "")
					if(service_json[i][i+"_variables"])
						var_json[i] = service_json[i][i+"_variables"];
			}
		jslog(JSON.stringify(var_json));
		
        for (var j in var_json) {
			var service_name = j.replace(profile+"_", "");
            var pre_map = _createDependencyJSON(var_json[j], service_name);

            /*if (!pre_map)
                return;*/

            var options = "";
            var type = g_form.getValue('type_of_blueprint');
            var blueprintSysId = g_form.getValue('blueprint');

            //		var loadingDialog = new GlideModal('loader', true);

			
            var loadingDialog1 = new GlideModal('variables_loader', true);
            loadingDialog1.setTitle('Fetching variable values....');
            loadingDialog1.renderWithContent('&lt;div class="loading-container"&gt;&lt;div class="loading-indicator icon-loading icon-lg"&gt;&lt;/div&gt;&lt;/div&gt;');
			loader_count++;
            
            var gajax = new GlideAjax('Nutanix_ClientServerScriptBridge');
            gajax.addParam('sysparm_name', 'getHttpValues');
            gajax.addParam('sysparm_type', type);
            gajax.addParam('sysparm_parentUuid', blueprintSysId + '');
            gajax.addParam('sysparm_preMap', JSON.stringify(pre_map) + '');
            gajax.getXML(setOptions);
        }
		}


        function _createDependencyJSON(var_data, j) {

            var pre_map = {};
            var extApiFlag;
            for (var i in var_data) {
				//console.log("Var data:"+JSON.stringify(var_data[i]));
				var var_name = (var_data[i].name + "").replace(j+'_','');
				var field = JSON.parse(var_data[i].field);
				var type = field.type + "";
				var value = (var_data[i].field_json.all_dep.length != 0) ? field.value + "" : var_data[i].value + "";
				
                pre_map[var_name + ""] = {
                    "depends_on": var_data[i].field_json,
                    "value": value, //var_data[i].value + "",
                    "uuid": var_data[i].uuid,
                    "type": field.type,
					"name": var_name + "",
					"data_type": field.data_type
                };
				
				if(type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') {
					pre_map[var_name + ""].requiresApiCall = true;
				} else {
					if(field.options &amp;&amp; field.options.choices) {
						pre_map[var_name + ""].options = field.options.choices;
						pre_map[var_name + ""].data_type = "LIST_SINGLE";
					}
					if(field.data_type + "" == 'LIST') {
						pre_map[var_name + ""].data_type = field.data_type;
					}
				}
            }
            //console.log(pre_map);
            //if (extApiFlag)
                return pre_map;
            //return false;
        }

        function setOptions(response) {
			
            var answer = response.responseXML.documentElement.getAttribute("answer");
			
			jslog(answer);
			
            var parsedAnswer = JSON.parse(answer);
            var service_field = g_form.getValue('service_data') + '';
			var service_data_full = (service_field != '') ? JSON.parse(service_field) : '';
			
			for(var p = 0; p &lt; service_data_full.length; p++) {
			var service_data = service_data_full[p].service_configuration;
			for (var i in service_data) {
				for (var j in service_data[i]) {
					for (var k in service_data[i][j]) {
						var uuid = service_data[i][j][k].uuid + "";
						for(var m in parsedAnswer) {
							if(uuid == parsedAnswer[m].uuid) {
								var type = parsedAnswer[m].type + "";
								var data_type = parsedAnswer[m].data_type + "";
								
								if(type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET') {
									if (parsedAnswer[m].state == 'SUCCESS') {
										//for (var a = 0; a &lt; parsedAnswer.values.length; a++)
										service_data[i][j][k].options = parsedAnswer[m].value;
										//service_data[i][j][k].value = parsedAnswer[m].default_value + '';
									}
									if (parsedAnswer[m].state == 'ERROR'){
										g_form.addErrorMessage("Failed fetching values for variable '" + service_data[i][j][k].question_text + "': " + parsedAnswer[m].error[0]);
									}
								}
								
								if(type == "LOCAL"  &amp;&amp; data_type == "BASE")
									service_data[i][j][k].value = parsedAnswer[m].value + '';
								
								if((data_type == "LIST_SINGLE" || data_type == "LIST") &amp;&amp; (type + "" == "LOCAL" || type + "" == "PREDEFINED")) {
									service_data[i][j][k].options = parsedAnswer[m].options;
									service_data[i][j][k].value = parsedAnswer[m].value;
								}
								
							}
						}
					}
				}
			}
			}
			
            $scope.JSONdata = service_data_full;
            /*g_form.setValue('service_data', JSON.stringify($scope.JSONdata));*/
			//g_form.setValue('service_data', JSON.stringify($scope.JSONdata));
			g_form.setValue('service_data', JSON.stringify(service_data_full));
			loader_count--;
			jslog(loader_count);
			if(loader_count == 0) {
				$scope.$apply();
				new GlideModal().get('variables_loader').destroy();
			}
        }
	};
	
	$scope.updateData = function() {
		g_form.setValue('service_data', JSON.stringify($scope.JSONdata));
	};
	
	$scope.GwtDTPicker = function(input_id, format, showTime) {
		new GwtDateTimePicker(input_id, format, showTime);
	};

	/*$scope.updateDisableStatus = function() {
		for (var title in $scope.JSONdata) {
			for (var cat in $scope.JSONdata[title]) {
				for (var sys in $scope.JSONdata[title][cat]) {
					if ($scope.JSONdata[title][cat][sys].value &amp;&amp; $scope.JSONdata[title][cat][sys].value.includes('@@')) {
						$scope.JSONdata[title][cat][sys].isdisabled = true;
						$scope.JSONdata[title][cat][sys].runtime_config = false;
					}
				}
			}
		}
	};*/

	$scope.hideFields = function (variables) {
		/*var variableArray = variables.split(",");
		for (var title in $scope.JSONdata) {
			for (var cat in $scope.JSONdata[title]) {
				for (var sys in $scope.JSONdata[title][cat]) {
					var question_text = $scope.JSONdata[title][cat][sys].question_text+'';
					var converted = question_text.toLowerCase().replace(/ /g,"");
					var newcat = cat.replace(title,'');
					newcat = newcat.toUpperCase().split('_');
					for (var i = 0; i &lt; newcat.length; i++) {
						newcat[i] = newcat[i].charAt(0).toUpperCase() + newcat[i].slice(1);
					}
					newcat = newcat.join(' ').replace(/ /g,"");
					console.log(newcat+'ere'+variableArray.includes(newcat));

					if (variableArray.includes(converted)||variableArray.includes(newcat)) {
						$scope.JSONdata[title][cat][sys].ishide = true;
					} else {
						$scope.JSONdata[title][cat][sys].ishide = false;
					}
				}
			}
		}*/
	};

	function renderConfiguration (JSONString) {
		/*var variableArray = '';
		var gax = new GlideAjax('Nutanix_ClientServerScriptBridge');
		gax.addParam('sysparm_name','getVariablesProperty');
		gax.getXMLWait();
		variableArray = gax.getAnswer();*/

		//console.log("parsed string :: "+JSONString);
		new GlideModal().get('loader').destroy();

	
		
		var parsedJson = JSON.parse(JSONString);
				
 		$scope.JSONdata = parsedJson;
	//	$scope.responseJSON = parsedJson.profile;
		$scope.nicOptions = parsedJson[0].subnet_list;
 		$scope.showMessage = (Object.keys(parsedJson[0].service_configuration).length==0);
		
		g_form.setValue('service_data', JSON.stringify(parsedJson));
		
		$scope.createTriggerArray();
		$scope.fetchEscriptHttp("");
		//$scope.updateDisableStatus();
		//$scope.hideFields(variableArray);
	}

	var responseParse = function(response) {

		var answer = response;
	//	jslog("responseParse "+answer);
		renderConfiguration(answer+'');
		
	};	

	$scope.$on('updateEvent', function(event, data){
		$scope.JSONdata = data;
	});


	$scope.getProfileVariableData = function(){

		var val = g_form.getValue('service_data');

		var type = g_form.getValue('type');
		var bpType =g_form.getValue('type_of_blueprint') ;
		var project = g_form.getValue('multiple_project');
		var blueprint = g_form.getValue('blueprint');
		var application_profile = g_form.getValue('multiple_application_profile');
		var cat_item = g_form.getValue('cat_item');
		var delta_profiles = g_form.getValue('delta_profiles');

		var loadingDialog = new GlideModal('loader', true);
		loadingDialog.setTitle('Fetching service data...'); 
		loadingDialog.renderWithContent('&lt;div class="loading-container"&gt;&lt;div class="loading-indicator icon-loading icon-lg"&gt;&lt;/div&gt;&lt;/div&gt;');
		
		var ga = new GlideAjax('Nutanix_ClientServerScriptBridge');
		ga.addParam('sysparm_name', 'getServiceVariableDetails');
		ga.addParam('sysparm_project', project);
		ga.addParam('sysparm_blueprint', blueprint);
		ga.addParam('sysparm_application_profile', application_profile);
		ga.addParam('sysparm_type', type);
		ga.addParam('sysparm_bpType', bpType);
		ga.addParam('sysparm_cat_item', cat_item);
		ga.addParam('sysparm_delta_profiles', delta_profiles);

		ga.getXMLWait();
		
		var answr = ga.getAnswer();
		
		if(val){
			answr = JSON.parse(answr);
		//	answr.service_configuration = JSON.parse(val);
			answr = val;
		}
	
		responseParse(answr);
	};

	_toTitleCase= function (str) {
		/*str = str.toLowerCase().split(' ');
		for (var i = 0; i &lt; str.length; i++) {
			str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
		}
		return str.join(' ');*/ return str;
	};
});


//---------runtimeSvg directive----------
//Created an angular custom directive containing the runtime SVG from Nutanix
// To be used as &lt;runtime-svg&gt;
app.directive('diskUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "diskController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="disk_main-container"&gt;&lt;table class="table"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Name&lt;/th&gt;&lt;th class="padded-fields"&gt;Device&lt;/th&gt;&lt;th class="padded-fields"&gt;&lt;span class="disk_right-indent"&gt;Size (GB)&lt;/span&gt;&lt;/th&gt;&lt;th class="padded-fields" ng-show="global_configuration"&gt;Runtime&lt;/th&gt;&lt;th class="padded-fields"&gt;Volume Type&lt;/th&gt;&lt;th class="padded-fields"&gt;Delete on termination&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-if="JSONdata.root_disk"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="disk_initializeEditModal($index, JSONdata.root_disk, true);"&gt;&lt;i id="rootDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;ROOT&lt;/td&gt;&lt;td class="padded-fields"&gt;{{JSONdata.root_disk.device_name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;&lt;span class="disk_right-indent"&gt;{{JSONdata.root_disk.size_gb}}&lt;/span&gt;&lt;/td&gt;&lt;td class="padded-fields" ng-show="global_configuration"&gt;{{JSONdata.root_disk.runtime}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{diskMapping[JSONdata.root_disk.volume_type]}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{JSONdata.root_disk.delete_on_termination}}&lt;/td&gt;&lt;/tr&gt;&lt;tr ng-if="JSONdata.data_disk_list" ng-repeat="data in JSONdata.data_disk_list"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="disk_initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;EBS&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.device_name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;&lt;span class="disk_right-indent"&gt;{{data.size_gb}}&lt;/span&gt;&lt;/td&gt;&lt;td class="padded-fields" ng-show="global_configuration"&gt;{{data.runtime}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{diskMapping[data.volume_type]}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.delete_on_termination}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="{{modalid}}_editModal" class="modal fade" role="dialog" ng-if="false"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Device&lt;/label&gt; &lt;select ng-model="edit.device_name" class="form-control" ng-disabled="!global_configuration || edit.root_flag" required=""&gt;&lt;option ng-class="{\'disk_disabled-option\': value.disabled}" ng-repeat="(device, value) in device_list" ng-disabled="value.disabled"&gt;{{device}}&lt;/option&gt; &lt;/select&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Volume Type&lt;/label&gt; &lt;select ng-model="edit.volume_type" class="form-control" ng-disabled="true"&gt;&lt;option value="GP2"&gt;General Purpose SSD&lt;/option&gt;&lt;option value="IO1"&gt;Provisioned IOPS SSD&lt;/option&gt;&lt;option value="ST1"&gt;Throughput Optimized HDD&lt;/option&gt;&lt;option value="SC1"&gt;Cold HDD&lt;/option&gt;&lt;option value="STANDARD"&gt;EBS Magnetic HDD&lt;/option&gt; &lt;/select&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="size"&gt;Size (GB)&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt;&lt;input ng-model="edit.runtime" type="checkbox" ng-true-value="\'true\'" ng-false-value="\'false\'" ng-disabled="edit.disabled"/&gt;Runtime&lt;/div&gt; &lt;input ng-if="edit.runtime" ng-model="edit.size_gb" class="form-control" type="number" ng-disabled="edit.disabled"/&gt;&lt;input ng-if="!edit.runtime" ng-model="edit.size_gb" class="form-control" type="number" ng-disabled="edit.disabled"/&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt;&lt;div class="form-group"&gt;&lt;input ng-model="edit.delete_on_termination" type="checkbox" ng-disabled="!global_configuration"/&gt;Delete On Termination&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;button type="button" class="btn btn-primary disk_btn-modal" data-dismiss="modal" ng-click="disk_editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="{{modalid}}_editModal" class="modal fade" role="dialog"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});


//--------diskController controller--------------
//Created a controller for controlling the flow to data of diskApp application
app.controller('diskController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedJSON) {
		$scope.JSONdata = JSON.parse(passedJSON);
		//$scope.
		$scope.disk_checkDeviceList();

		$scope.diskMapping = {
			'GP2': 'General Purpose SSD',
			'IO1': 'Provisioned IOPS SSD',
			'ST1': 'Throughput Optimized HDD',
			'SC1': 'Cold HDD',
			'STANDARD': 'EBS Magnetic HDD',
		};

	};

	$scope.disk_getVariableData = function(passedJSON) {
		$scope.JSONdata = passedJSON;
		$scope.disk_checkDeviceList();
	};


	//$scope.device_list --&gt; contains the hardcoded dropdown list for device name in the form
	//key --&gt; provides the name of the device
	//key.disabled --&gt; provides the status of specific device whether it is added or not
	//    disabled = true  --&gt; added
	//    disabled = false --&gt; not added
	$scope.device_list = {
		"/dev/sda1": { "disabled" : true},
		"/dev/sdb": {"disabled" : false},
		"/dev/sdc": {"disabled" : false},
		"/dev/sdd": {"disabled" : false},
		"/dev/sde": {"disabled" : false},
		"/dev/sdf": {"disabled" : false},
		"/dev/sdg": {"disabled" : false},
		"/dev/sdh": {"disabled" : false},
		"/dev/sdj": {"disabled" : false},
		"/dev/sdk": {"disabled" : false},
		"/dev/sdl": {"disabled" : false}
	};

	//$scope.checkDeviceList --&gt; set the value of $scope.device_list array key.disabled to true or false on basis of JSONdata
	$scope.disk_checkDeviceList = function() {
		$scope.global_configuration = true;
		for (var i = 0;i &lt; $scope.JSONdata.data_disk_list.length; i++) {
			$scope.device_list[$scope.JSONdata.data_disk_list[i].device_name].disabled = true;
		}
	};



	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.disk_initializeEditModal = function (index, editJSON, rootFlag) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.root_flag = rootFlag;
		$scope.edit.index = index;
		$scope.edit.device_name = editJSON.device_name;
		$scope.edit.size_gb = editJSON.size_gb;
		$scope.edit.volume_type = editJSON.volume_type;

		$scope.edit.runtime = editJSON.runtime;
		$scope.edit.disabled = (editJSON.disabled+''=='true')?false:true;

		$scope.edit.delete_on_termination = editJSON.delete_on_termination;
		$scope.edit.previous_device_name = editJSON.device_name;
	};



	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.disk_editEntry = function (editJSON) {
		$scope.device_list[editJSON.previous_device_name].disabled = false;
		$scope.device_list[editJSON.device_name].disabled = true;
		var createdJSON = {
			"device_name": editJSON.device_name,
			"size_gb": editJSON.size_gb,
			"volume_type": editJSON.volume_type,
			"delete_on_termination": editJSON.delete_on_termination,
			"runtime": editJSON.runtime,
			"snapshot_id": "",
			"iops": "",
			"type" : ""
		};

		if (editJSON.root_flag) {
			createdJSON.snapshot_id = $scope.JSONdata.root_disk.snapshot_id;
			createdJSON.type = $scope.JSONdata.root_disk.type;
			createdJSON.iops = $scope.JSONdata.root_disk.iops;
			$scope.JSONdata.root_disk = createdJSON;
		} else {
			createdJSON.snapshot_id = $scope.JSONdata.data_disk_list[editJSON.index].snapshot_id;
			createdJSON.type = $scope.JSONdata.data_disk_list[editJSON.index].type;
			createdJSON.iops = $scope.JSONdata.data_disk_list[editJSON.index].iops;
			$scope.JSONdata.data_disk_list[editJSON.index] = createdJSON;
		}

		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});




app.directive('portlistUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "portlistController",
		template : '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table"&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class="padded-fields" ng-show="global_configuration"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Name&lt;/th&gt;&lt;th class="padded-fields"&gt;Protocol&lt;/th&gt;&lt;th class="padded-fields"&gt;Port&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields" ng-show="global_configuration"&gt;&lt;a href="#" data-toggle="" data-target="#_editModal" ng-click="portlist_initializeEditModal($index, data);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.endpoint_name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.protocol}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.target_port}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt;&lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt;&lt;label for="device"&gt;Name&lt;/label&gt;&lt;input class="form-control" type="text" ng-model="edit.endpoint_name" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt;&lt;label for="volume_type"&gt;Protocol&lt;/label&gt;&lt;input class="form-control" type="text" ng-model="edit.protocol" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt;&lt;label for="size"&gt;Port&lt;/label&gt;&lt;input class="form-control" type="text" ng-model="edit.target_port" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="portlist_editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};

});

//--------portlistController controller--------------
//Created a controller for controlling the flow to data of diskApp application
app.controller('portlistController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		$scope.JSONdata = JSON.parse(passedjson);

		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.portlist_initializeEditModal = function (index, editJSON) {
		
		alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;
		$scope.edit.endpoint_name = editJSON.endpoint_name;
		$scope.edit.target_port = editJSON.target_port;
		$scope.edit.protocol = editJSON.protocol;
	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.portlist_editEntry = function (editJSON) {
		var createdJSON = {
			"protocol": editJSON.protocol,
			"target_port": editJSON.target_port,
			"endpoint_name": editJSON.endpoint_name,
			"type": $scope.JSONdata[editJSON.index].type
		};
		$scope.JSONdata[editJSON.index] = createdJSON;

		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});




app.directive('vdisklistUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "vdisklistController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table" ng-if="provider==\'nutanix\'"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Device Type&lt;/th&gt;&lt;th class="padded-fields"&gt;Device Bus&lt;/th&gt;&lt;th class="padded-fields"&gt;&lt;span class="disk_right-indent"&gt;Size (MB)&lt;/span&gt;&lt;/th&gt;&lt;th class="padded-fields" ng-show="global_configuration"&gt;Runtime&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-if="data.data_source_reference==null" ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.device_properties.device_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.device_properties.disk_address.adapter_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;&lt;span class="disk_right-indent"&gt;{{data.disk_size_mib}}&lt;/span&gt;&lt;/td&gt;&lt;td class="padded-fields" ng-show="global_configuration"&gt;{{(data.runtime.disk_size_mib)?data.runtime.disk_size_mib:false}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class="table" ng-if="provider==\'vmware\'"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Adapter Type&lt;/th&gt;&lt;th class="padded-fields"&gt;Device Type&lt;/th&gt;&lt;th class="padded-fields"&gt;&lt;span class="disk_right-indent"&gt;Size (MB)&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.adapter_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.disk_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;&lt;span class="disk_right-indent"&gt;{{data.disk_size_mb}}&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="false"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm" ng-if="provider==\'nutanix\'"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt;&lt;label for="device"&gt;Device Type&lt;/label&gt;&lt;input class="form-control" type="text" ng-model="edit.device_type"/&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt;&lt;label for="volume_type"&gt;Device Bus&lt;/label&gt;&lt;input class="form-control" type="text" ng-model="edit.device_bus"/&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="size"&gt;Size&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt;&lt;input ng-model="edit.runtime" type="checkbox" ng-disabled="edit.disabled"/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.size" ng-disabled="edit.disabled"/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;form name="editForm" ng-if="provider==\'vmware\'"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Adapter Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt;&lt;input ng-model="edit.runtime.adapter_type" type="checkbox" ng-disabled="edit.disabled.adapter_type"/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.adapter_type" ng-disabled="edit.disabled.adapter_type"/&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Device Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt;&lt;input ng-model="edit.runtime.disk_type" type="checkbox" ng-disabled="edit.disabled.disk_type"/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.disk_type" ng-disabled="edit.disabled.disk_type"/&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="size"&gt;Size&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt;&lt;input ng-model="edit.runtime.size" type="checkbox" ng-disabled="edit.disabled.size"/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.size" ng-disabled="edit.disabled.size"/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('vdisklistController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		var parsed =JSON.parse(passedjson);
		$scope.JSONdata = parsed;

		var provider='';

		for(var i in parsed)
			if(parsed[i].adapter_type){
				provider = 'vmware';
				break;
			}else{
				provider = 'nutanix';
				break;
			}

		$scope.provider = provider;

		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;

		if($scope.provider == 'nutanix'){

			$scope.edit.device_type = editJSON.device_properties.device_type;
			$scope.edit.device_bus = editJSON.device_properties.disk_address.adapter_type;
			$scope.edit.size = editJSON.disk_size_mib;
			$scope.edit.runtime = (editJSON.runtime.disk_size_mib==true)?editJSON.runtime.disk_size_mib:false;	
			$scope.edit.disabled = (editJSON.disabled.disk_size_mib+''=='true')?false:true;	

		}else if($scope.provider == 'vmware'){

			$scope.edit.adapter_type = editJSON.adapter_type;
			$scope.edit.disk_type = editJSON.disk_type;
			$scope.edit.size = editJSON.disk_size_mb;

			$scope.edit.runtime = {};
			$scope.edit.runtime.adapter_type = (editJSON.runtime.adapter_type==true)?editJSON.runtime.adapter_type:false;
			$scope.edit.runtime.disk_type = (editJSON.runtime.disk_type==true)?editJSON.runtime.disk_type:false;
			$scope.edit.runtime.size = (editJSON.runtime.disk_size_mb==true)?editJSON.runtime.disk_size_mb:false;

			$scope.edit.disabled = {};
			$scope.edit.disabled.adapter_type = (editJSON.disabled.adapter_type+''=='true')?false:true;
			$scope.edit.disabled.disk_type = (editJSON.disabled.disk_type+''=='true')?false:true;
			$scope.edit.disabled.size = (editJSON.disabled.disk_size_mb+''=='true')?false:true;
		}

	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		if($scope.provider == 'nutanix'){

			$scope.JSONdata[editJSON.index].device_properties.device_type = editJSON.device_type;
			$scope.JSONdata[editJSON.index].device_properties.disk_address.adapter_type = editJSON.device_bus;
			$scope.JSONdata[editJSON.index].disk_size_mib = editJSON.size;
			$scope.JSONdata[editJSON.index].runtime.disk_size_mib = editJSON.runtime;	

		}else{

			$scope.JSONdata[editJSON.index].adapter_type = editJSON.adapter_type;
			$scope.JSONdata[editJSON.index].disk_type = editJSON.disk_type;
			$scope.JSONdata[editJSON.index].disk_size_mb = editJSON.size;

			$scope.JSONdata[editJSON.index].runtime.adapter_type = editJSON.runtime.adapter_type;
			$scope.JSONdata[editJSON.index].runtime.disk_type = editJSON.runtime.disk_type;
			$scope.JSONdata[editJSON.index].runtime.disk_size_mb = editJSON.runtime.size;

		}

		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});



app.directive('imagesUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "imagesController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Image&lt;/th&gt;&lt;th class="padded-fields"&gt;Device Type&lt;/th&gt;&lt;th class="padded-fields"&gt;Device Bus&lt;/th&gt;&lt;th class="padded-fields"&gt;Bootable&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-if="data.data_source_reference" ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.data_source_reference.name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.device_properties.device_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.device_properties.disk_address.adapter_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{(data.bootable)?data.bootable:false}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="false"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Image&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input type="checkbox" disabled/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" style="font-style: italic;" value="Use Calm to set/edit this field" disabled/&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Device Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.device_type" type="checkbox" ng-disabled="edit.disabled.device_type" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.device_type" ng-disabled="edit.disabled.device_type" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="size"&gt;Device Bus&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.adapter_type" type="checkbox" ng-disabled="edit.disabled.adapter_type" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.adapter_type" ng-disabled="edit.disabled.adapter_type" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt;&lt;div class="form-group"&gt; &lt;input ng-model="edit.bootable" type="checkbox" /&gt;Bootable&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt; &lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt; &lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('imagesController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		$scope.JSONdata = JSON.parse(passedjson);
		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;
		$scope.edit.image = editJSON.data_source_reference.name;
		$scope.edit.device_type = editJSON.device_properties.device_type;
		$scope.edit.adapter_type = editJSON.device_properties.disk_address.adapter_type;
		$scope.edit.bootable = (editJSON.bootable==true)?editJSON.bootable:false;

		$scope.edit.runtime = {};
		$scope.edit.runtime.image = false;//(editJSON.runtime.data_source_reference==true)?editJSON.runtime.data_source_reference:false;
		$scope.edit.runtime.device_type = (editJSON.runtime.device_properties &amp;&amp; editJSON.runtime.device_properties.device_type==true)?editJSON.runtime.device_properties.device_type:false;
		$scope.edit.runtime.adapter_type = (editJSON.runtime.device_properties &amp;&amp; editJSON.runtime.device_properties.adapter_type==true)?editJSON.runtime.device_properties.adapter_type:false;

		$scope.edit.disabled = {};
		$scope.edit.disabled.image = true;//(editJSON.runtime.data_source_reference==true)?editJSON.runtime.data_source_reference:false;
		$scope.edit.disabled.device_type = (editJSON.disabled.device_properties &amp;&amp; editJSON.disabled.device_properties.device_type+''=='true')?false:true;
		$scope.edit.disabled.adapter_type = (editJSON.disabled.device_properties &amp;&amp; editJSON.disabled.device_properties.adapter_type+''=='true')?false:true;
	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		$scope.JSONdata[editJSON.index].data_source_reference.name = editJSON.image;
		$scope.JSONdata[editJSON.index].device_properties.device_type = editJSON.device_type;
		$scope.JSONdata[editJSON.index].device_properties.disk_address.adapter_type = editJSON.adapter_type;
		$scope.JSONdata[editJSON.index].bootable = editJSON.bootable;

		$scope.JSONdata[editJSON.index].runtime.data_source_reference = editJSON.runtime.image;
		$scope.JSONdata[editJSON.index].runtime.device_properties.device_type = editJSON.runtime.device_type;
		$scope.JSONdata[editJSON.index].runtime.device_properties.adapter_type = editJSON.runtime.adapter_type;


		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});


app.directive('networkAdapterUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@',
			passedOptions: '@'
		},
		controller: "networkAdapterController",
		template: '&lt;div ng-init="parsingJSON(passedJson, passedOptions);"&gt;&lt;div class="cluster" &gt;Cluster Name : {{clusterName}}&lt;/div&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table" ng-if="provider==\'nutanix\'"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Name&lt;/th&gt;&lt;th class="padded-fields"&gt;Value&lt;/th&gt;&lt;th class="padded-fields"&gt;Runtime&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;NIC-{{$index+1}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{options[data.subnet_reference.uuid].name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{(data.runtime.subnet_reference.name)?data.runtime.subnet_reference.name:(data.runtime.subnet_reference)?data.runtime.subnet_reference:false}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class="table" ng-if="provider==\'vmware\'"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Adapter Type&lt;/th&gt;&lt;th class="padded-fields"&gt;Network Type&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.nic_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.net_name}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="provider==\'nutanix\'"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm" ng-if="provider==\'nutanix\'"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;{{edit.name}}&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt;&lt;input ng-model="edit.runtime" type="checkbox" ng-disabled="edit.disabled"/&gt;Runtime&lt;/div&gt; &lt;select class="form-control" ng-model="edit.value" ng-disabled="edit.disabled"&gt;&lt;option ng-repeat="(key, value)  in options" value="{{key}}"&gt; {{value.name}} | {{value.cluster_name}}&lt;/option&gt; &lt;/select&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;form name="editForm" ng-if="provider==\'vmware\'"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Adapter Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt;&lt;input ng-model="edit.runtime.nic_type" type="checkbox" ng-disabled="edit.disabled.nic_type"/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.nic_type" ng-disabled="edit.disabled.nic_type"/&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Network Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt;&lt;input ng-model="edit.runtime.net_name" type="checkbox" ng-disabled="edit.disabled.net_name"/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.net_name" ng-disabled="edit.disabled.net_name"/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="provider==\'vmware\'"&gt; &gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('networkAdapterController', function($scope) {

	$scope.JSONdata = {};
	
	
	$scope.parsingJSON = function(passedjson, passedOptions) {

		var options = JSON.parse(passedOptions);
		var parsed = JSON.parse(passedjson);
		var clusterName='';var clusterUUID='';
		
		$scope.options = options;
		$scope.JSONdata = parsed;
		
		for (var i in parsed){
			var parsedElement = parsed[i];
			if(parsedElement.subnet_reference &amp;&amp; parsedElement.subnet_reference.uuid){
				for(var j in options ){
					if( j == parsedElement.subnet_reference.uuid){
						clusterName = options[j].cluster_name;
						clusterUUID = options[j].cluster_uuid;
					}
				}
			}
		}
		
		$scope.clusterName = clusterName;
		$scope.clusterUUID = clusterUUID;
		
		
		
		
		
		
		$scope.global_configuration = true;

		var provider='';

		for(var i in parsed)
			if(parsed[i].net_name){
				provider = 'vmware';
				break;
			}else{
				provider = 'nutanix';
				break;
			}

		$scope.provider = provider;

	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		$scope.edit ={};
		$scope.edit.index = index;

		if($scope.provider == 'nutanix'){
			$scope.edit.name = 'NIC-'+(index+1);
			$scope.edit.value = (editJSON &amp;&amp; editJSON.subnet_reference)?editJSON.subnet_reference.uuid:'';

			$scope.edit.runtime = (editJSON &amp;&amp; editJSON.runtime &amp;&amp; editJSON.runtime.subnet_reference &amp;&amp; editJSON.runtime.subnet_reference.name)?editJSON.runtime.subnet_reference.name:(editJSON &amp;&amp; editJSON.runtime &amp;&amp; editJSON.runtime.subnet_reference)?editJSON.runtime.subnet_reference:false;	

			$scope.edit.disabled = (editJSON &amp;&amp; editJSON.disabled &amp;&amp; editJSON.disabled.subnet_reference &amp;&amp; editJSON.disabled.subnet_reference.name &amp;&amp; editJSON.disabled.subnet_reference.name+''=='true')?false:(editJSON &amp;&amp; editJSON.disabled &amp;&amp; editJSON.disabled.subnet_reference &amp;&amp; editJSON.disabled.subnet_reference+''=='true')?false:true;	
			
		}else{
			
			//alert('You can set or edit this field in Calm GUI.');
			return;
			
			$scope.edit.nic_type = editJSON.nic_type;
			$scope.edit.net_name = editJSON.net_name;

			$scope.edit.runtime = {};
			$scope.edit.runtime.nic_type = (editJSON.runtime.nic_type)?editJSON.runtime.nic_type:false;
			$scope.edit.runtime.net_name = (editJSON.runtime.net_name)?editJSON.runtime.net_name:false;

			$scope.edit.disabled = {};
			$scope.edit.disabled.nic_type = (editJSON.disabled.nic_type+''=='true')?false:true;
			$scope.edit.disabled.net_name = (editJSON.disabled.net_name+''=='true')?false:true;
		}
	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		if($scope.provider == 'nutanix'){

			
			if(!$scope.JSONdata[editJSON.index])
				$scope.JSONdata[editJSON.index] = {};
				
			if(!$scope.JSONdata[editJSON.index].subnet_reference){
				$scope.JSONdata[editJSON.index].subnet_reference = {
					"kind": "subnet",
					"type": "",
					"name": "",
					"uuid": ""
				};
			}
			$scope.JSONdata[editJSON.index].subnet_reference.uuid = editJSON.value;
			
			if(!$scope.JSONdata[editJSON.index].runtime)
				$scope.JSONdata[editJSON.index].runtime = {};
			
			$scope.JSONdata[editJSON.index].runtime.subnet_reference = editJSON.runtime;	
			
			if(editJSON.value){
				$scope.clusterName = $scope.options[editJSON.value].cluster_name;
				$scope.clusterUUID = $scope.options[editJSON.value].cluster_uuid;	
			}
			
		}else{

			$scope.JSONdata[editJSON.index].nic_type = editJSON.nic_type;
			$scope.JSONdata[editJSON.index].net_name = editJSON.net_name;

			$scope.JSONdata[editJSON.index].runtime = {};

			$scope.JSONdata[editJSON.index].runtime.nic_type = editJSON.runtime.nic_type;
			$scope.JSONdata[editJSON.index].runtime.net_name = editJSON.runtime.net_name;

		}


		var service_data = JSON.parse(g_form.getValue('service_data'));
		for (var i in service_data) {
		    for (var j in service_data[i]) {
		        if ((j).localeCompare("service_configuration") == 0) {
		              for (var k in service_data[i][j]) {
		                var categary = $scope.passedTitle;
		                if (((k.trim()).localeCompare(categary.trim())) == 0){
							service_data[i][j][k][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
						}		                    
		            }
		        }
		    }
		}
//		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});


app.directive('networkProfilesUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "networkProfilesController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Nic Name&lt;/th&gt;&lt;th class="padded-fields"&gt;Security Group&lt;/th&gt;&lt;th class="padded-fields"&gt;Virtual Network&lt;/th&gt;&lt;th class="padded-fields"&gt;Subnet&lt;/th&gt;&lt;th class="padded-fields"&gt;Public IP Config Name&lt;/th&gt;&lt;th class="padded-fields"&gt;Public IP Config Allocation Method&lt;/th&gt;&lt;th class="padded-fields"&gt;Public IP Config DNS Label&lt;/th&gt;&lt;th class="padded-fields"&gt;Private IP Config Allocation Method&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-if="data.data_source_reference==null" ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.nic_name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.nsg_name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.vnet_name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.subnet_name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.public_ip_info.ip_name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.public_ip_info.ip_allocation_method}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.public_ip_info.dns_label}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.private_ip_info.ip_allocation_method}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="false"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Nic Name&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.nic_name" type="checkbox" ng-disabled="edit.disabled.nic_name" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.nic_name" ng-disabled="edit.disabled.nic_name" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Security Group&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input type="checkbox" disabled/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" style="font-style: italic;" value="Use Calm to set/edit this field" disabled/&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Virtual Network&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input type="checkbox" disabled/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" style="font-style: italic;" value="Use Calm to set/edit this field" disabled/&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Subnet&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input type="checkbox" disabled/&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" style="font-style: italic;" value="Use Calm to set/edit this field" disabled/&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Public IP Config Name&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.ip_name" type="checkbox" ng-disabled="edit.disabled.ip_name" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.ip_name" ng-disabled="edit.disabled.ip_name" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Public IP Config Allocation Method&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.public_ip_allocation_method" type="checkbox" ng-disabled="edit.disabled.public_ip_allocation_method" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.public_ip_allocation_method" ng-disabled="edit.disabled.public_ip_allocation_method" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Public IP Config DNS Label&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.dns_label" type="checkbox" ng-disabled="edit.disabled.dns_label" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.dns_label" ng-disabled="edit.disabled.dns_label" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Private IP Config Allocation Method&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.private_ip_allocation_method" type="checkbox" ng-disabled="edit.disabled.private_ip_allocation_method" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.private_ip_allocation_method" ng-disabled="edit.disabled.private_ip_allocation_method" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt; &lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt; &lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('networkProfilesController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		$scope.JSONdata = JSON.parse(passedjson);
		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;
		$scope.edit.nic_name = editJSON.nic_name;
		$scope.edit.nsg_name = editJSON.nsg_name;
		$scope.edit.vnet_name = editJSON.vnet_name;
		$scope.edit.subnet_name = editJSON.subnet_name;
		$scope.edit.ip_name = editJSON.public_ip_info.ip_name;
		$scope.edit.public_ip_allocation_method = editJSON.public_ip_info.ip_allocation_method;
		$scope.edit.dns_label = editJSON.public_ip_info.dns_label;
		$scope.edit.private_ip_allocation_method = editJSON.private_ip_info.ip_allocation_method;

		$scope.edit.runtime = {};
		$scope.edit.runtime.nic_name = (editJSON.runtime.nic_name)?editJSON.runtime.nic_name:false;
		$scope.edit.runtime.nsg_name = false;//(editJSON.runtime.nsg_name)?editJSON.runtime.nsg_name:false;
		$scope.edit.runtime.vnet_name = false;//(editJSON.runtime.vnet_name)?editJSON.runtime.vnet_name:false;
		$scope.edit.runtime.subnet_name = false;//(editJSON.runtime.subnet_name)?editJSON.runtime.subnet_name:false;
		$scope.edit.runtime.ip_name = (editJSON.runtime.public_ip_info &amp;&amp; editJSON.runtime.public_ip_info.ip_name)?editJSON.runtime.public_ip_info.ip_name:false;
		$scope.edit.runtime.public_ip_allocation_method = (editJSON.runtime.public_ip_info &amp;&amp; editJSON.runtime.public_ip_info.ip_allocation_method)?editJSON.runtime.public_ip_info.ip_allocation_method:false;
		$scope.edit.runtime.dns_label = (editJSON.runtime.public_ip_info &amp;&amp; editJSON.runtime.public_ip_info.dns_label)?editJSON.runtime.public_ip_info.dns_label:false;
		$scope.edit.runtime.private_ip_allocation_method = (editJSON.runtime.private_ip_info &amp;&amp; editJSON.runtime.private_ip_info.ip_allocation_method)?editJSON.runtime.private_ip_info.ip_allocation_method:false;

		$scope.edit.disabled = {};
		$scope.edit.disabled.nic_name = (editJSON.disabled.nic_name+''=='true')?false:true;
		$scope.edit.disabled.nsg_name = true;//(editJSON.disabled.nsg_name+''=='true')?false:true;
		$scope.edit.disabled.vnet_name = true;//(editJSON.disabled.vnet_name+''=='true')?false:true;
		$scope.edit.disabled.subnet_name = true;//(editJSON.disabled.subnet_name+''=='true')?false:true;
		$scope.edit.disabled.ip_name = (editJSON.disabled.public_ip_info &amp;&amp; editJSON.disabled.public_ip_info.ip_name+''=='true')?false:true;
		$scope.edit.disabled.public_ip_allocation_method = (editJSON.disabled.public_ip_info &amp;&amp; editJSON.disabled.public_ip_info.ip_allocation_method+''=='true')?false:true;
		$scope.edit.disabled.dns_label = (editJSON.disabled.public_ip_info &amp;&amp; editJSON.disabled.public_ip_info.dns_label+''=='true')?false:true;
		$scope.edit.disabled.private_ip_allocation_method = (editJSON.disabled.private_ip_info &amp;&amp; editJSON.disabled.private_ip_info.ip_allocation_method+''=='true')?false:true;

	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		$scope.JSONdata[editJSON.index].nic_name = editJSON.nic_name;
		$scope.JSONdata[editJSON.index].nsg_name = editJSON.nsg_name;
		$scope.JSONdata[editJSON.index].vnet_name = editJSON.vnet_name;
		$scope.JSONdata[editJSON.index].subnet_name = editJSON.subnet_name;
		$scope.JSONdata[editJSON.index].public_ip_info.ip_name = editJSON.ip_name;
		$scope.JSONdata[editJSON.index].public_ip_info.ip_allocation_method = editJSON.public_ip_allocation_method;
		$scope.JSONdata[editJSON.index].public_ip_info.dns_label = editJSON.dns_label;
		$scope.JSONdata[editJSON.index].private_ip_info.ip_allocation_method = editJSON.private_ip_allocation_method;


		$scope.JSONdata[editJSON.index].runtime.nic_name = editJSON.runtime.nic_name;
		$scope.JSONdata[editJSON.index].runtime.nsg_name = editJSON.runtime.nsg_name;
		$scope.JSONdata[editJSON.index].runtime.vnet_name = editJSON.runtime.vnet_name;
		$scope.JSONdata[editJSON.index].runtime.subnet_name = editJSON.runtime.subnet_name;

		$scope.JSONdata[editJSON.index].runtime.public_ip_info = {};
		$scope.JSONdata[editJSON.index].runtime.private_ip_info  = {};

		$scope.JSONdata[editJSON.index].runtime.public_ip_info.ip_name = editJSON.runtime.ip_name;
		$scope.JSONdata[editJSON.index].runtime.public_ip_info.ip_allocation_method = editJSON.runtime.public_ip_allocation_method;
		$scope.JSONdata[editJSON.index].runtime.public_ip_info.dns_label = editJSON.runtime.dns_label;
		$scope.JSONdata[editJSON.index].runtime.private_ip_info.ip_allocation_method = editJSON.runtime.private_ip_allocation_method;

		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});



app.directive('simpleDiskUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "simpleDiskController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Name&lt;/th&gt;&lt;th class="padded-fields"&gt;Use existing disk&lt;/th&gt;&lt;th class="padded-fields"&gt;Disk&lt;/th&gt;&lt;th class="padded-fields"&gt;Storage Type&lt;/th&gt;&lt;th class="padded-fields"&gt;Source Image&lt;/th&gt;&lt;th class="padded-fields"&gt;Size in GB&lt;/th&gt;&lt;th class="padded-fields"&gt;Delete when instance is deleted&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-if="data.data_source_reference==null" ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{(data.boot)?\'BOOT DISK\':\'ADDITIONAL DISK\'}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{(data.source)?true:false}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.source}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.initializeParams.diskType}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.initializeParams.sourceImage}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.initializeParams.diskSizeGb}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.autoDelete}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="false"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;{{(edit.boot)?\'BOOT DISK\':\'ADDITIONAL DISK\'}}&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt;&lt;div class="form-group"&gt; &lt;input ng-model="edit.useExisting" type="checkbox" /&gt;Use existing disk&lt;/div&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Disk&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.source" type="checkbox" ng-disabled="edit.disabled.source" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.source" ng-disabled="edit.disabled.source" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Storage Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.diskType" type="checkbox" ng-disabled="edit.disabled.diskType" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.diskType" ng-disabled="edit.disabled.diskType" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Source Image&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.sourceImage" type="checkbox" ng-disabled="edit.disabled.sourceImage" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.sourceImage" ng-disabled="edit.disabled.sourceImage" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Size in GB&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.diskSizeGb" type="checkbox" ng-disabled="edit.disabled.diskSizeGb" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.diskSizeGb" ng-disabled="edit.disabled.diskSizeGb" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt;&lt;div class="form-group"&gt; &lt;input ng-model="edit.autoDelete" type="checkbox" ng-disabled="edit.disabled.autoDelete" /&gt;Delete when instance is deleted&lt;/div&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.autoDelete" type="checkbox" ng-disabled="edit.disabled.autoDelete" /&gt;Runtime&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt; &lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt; &lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('simpleDiskController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		$scope.JSONdata = JSON.parse(passedjson);
		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;
		$scope.edit.boot = editJSON.boot;
		$scope.edit.diskType = editJSON.initializeParams.diskType;
		$scope.edit.sourceImage = editJSON.initializeParams.sourceImage;
		$scope.edit.diskSizeGb = editJSON.initializeParams.diskSizeGb;
		$scope.edit.autoDelete = editJSON.autoDelete;

		$scope.edit.useExisting = (editJSON.source)?true:false;
		$scope.edit.source = editJSON.source;

		$scope.edit.runtime = {};
		$scope.edit.runtime.diskType = (editJSON.runtime.initializeParams &amp;&amp; editJSON.runtime.initializeParams.diskType)?editJSON.runtime.initializeParams.diskType:false;
		$scope.edit.runtime.sourceImage = (editJSON.runtime.initializeParams &amp;&amp; editJSON.runtime.initializeParams.sourceImage)?editJSON.runtime.initializeParams.sourceImage:false;
		$scope.edit.runtime.diskSizeGb = (editJSON.runtime.initializeParams &amp;&amp; editJSON.runtime.initializeParams.diskSizeGb)?editJSON.runtime.initializeParams.diskSizeGb:false;
		$scope.edit.runtime.autoDelete = (editJSON.runtime.autoDelete)?editJSON.runtime.autoDelete:false;		
		$scope.edit.runtime.source = (editJSON.runtime.source)?editJSON.runtime.source:false;		


		$scope.edit.disabled = {};
		$scope.edit.disabled.diskType = (editJSON.disabled.initializeParams &amp;&amp; editJSON.disabled.initializeParams.diskType+''=='true')?false:true;
		$scope.edit.disabled.sourceImage = (editJSON.disabled.initializeParams &amp;&amp; editJSON.disabled.initializeParams.sourceImage+''=='true')?false:true;
		$scope.edit.disabled.diskSizeGb = (editJSON.disabled.initializeParams &amp;&amp; editJSON.disabled.initializeParams.diskSizeGb+''=='true')?false:true;
		$scope.edit.disabled.autoDelete = (editJSON.disabled.autoDelete+''=='true')?false:true;
		$scope.edit.disabled.source = (editJSON.disabled.source+''=='true')?false:true;	
	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		$scope.JSONdata[editJSON.index].initializeParams.diskType = editJSON.diskType;
		$scope.JSONdata[editJSON.index].initializeParams.sourceImage = editJSON.sourceImage;
		$scope.JSONdata[editJSON.index].initializeParams.diskSizeGb = editJSON.diskSizeGb;
		$scope.JSONdata[editJSON.index].autoDelete = editJSON.autoDelete;

		$scope.JSONdata[editJSON.index].source = editJSON.source;

		$scope.JSONdata[editJSON.index].runtime.initializeParams = {};

		$scope.JSONdata[editJSON.index].runtime.initializeParams.diskType = editJSON.runtime.diskType;
		$scope.JSONdata[editJSON.index].runtime.initializeParams.sourceImage = editJSON.runtime.sourceImage;
		$scope.JSONdata[editJSON.index].runtime.initializeParams.diskSizeGb = editJSON.runtime.diskSizeGb;
		$scope.JSONdata[editJSON.index].runtime.autoDelete = editJSON.runtime.autoDelete;
		$scope.JSONdata[editJSON.index].runtime.source = editJSON.runtime.source;


		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});




app.directive('blankDisksUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "blankDisksController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Disk Type&lt;/th&gt;&lt;th class="padded-fields"&gt;Disk Name&lt;/th&gt;&lt;th class="padded-fields"&gt;Size in GB&lt;/th&gt;&lt;th class="padded-fields"&gt;Delete when instance is deleted&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.disk_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.sizeGb}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.autoDelete}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="false"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Disk Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.disk_type" type="checkbox" ng-disabled="edit.disabled.disk_type" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.disk_type" ng-disabled="edit.disabled.disk_type" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Disk Name&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.name" type="checkbox" ng-disabled="edit.disabled.name" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.name" ng-disabled="edit.disabled.name" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Size in GB&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.sizeGb" type="checkbox" ng-disabled="edit.disabled.sizeGb" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.sizeGb" ng-disabled="edit.disabled.sizeGb" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt;&lt;div class="form-group"&gt; &lt;input ng-model="edit.autoDelete" type="checkbox" ng-disabled="!global_configuration" ng-disabled="edit.disabled.autoDelete" /&gt;Delete when instance is deleted&lt;/div&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.autoDelete" type="checkbox" ng-disabled="edit.disabled.autoDelete" /&gt;Runtime&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt; &lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt; &lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('blankDisksController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		$scope.JSONdata = JSON.parse(passedjson);
		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;
		$scope.edit.disk_type = editJSON.disk_type;
		$scope.edit.name = editJSON.name;
		$scope.edit.sizeGb = editJSON.sizeGb;
		$scope.edit.autoDelete = editJSON.autoDelete;

		$scope.edit.runtime = {};
		$scope.edit.runtime.disk_type = (editJSON.runtime.disk_type)?editJSON.runtime.disk_type:false;
		$scope.edit.runtime.name = (editJSON.runtime.name)?editJSON.runtime.name:false;
		$scope.edit.runtime.sizeGb = (editJSON.runtime.sizeGb)?editJSON.runtime.sizeGb:false;
		$scope.edit.runtime.autoDelete = (editJSON.runtime.autoDelete)?editJSON.runtime.autoDelete:false;		

		$scope.edit.disabled = {};
		$scope.edit.disabled.disk_type = (editJSON.disabled.disk_type+''=='true')?false:true;	
		$scope.edit.disabled.name = (editJSON.disabled.name+''=='true')?false:true;	
		$scope.edit.disabled.sizeGb = (editJSON.disabled.sizeGb+''=='true')?false:true;	
		$scope.edit.disabled.autoDelete = (editJSON.disabled.autoDelete+''=='true')?false:true;	
	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		$scope.JSONdata[editJSON.index].disk_type = editJSON.disk_type;
		$scope.JSONdata[editJSON.index].name = editJSON.name;
		$scope.JSONdata[editJSON.index].sizeGb = editJSON.sizeGb;
		$scope.JSONdata[editJSON.index].autoDelete = editJSON.autoDelete;

		$scope.JSONdata[editJSON.index].runtime = {};

		$scope.JSONdata[editJSON.index].runtime.disk_type = editJSON.runtime.disk_type;
		$scope.JSONdata[editJSON.index].runtime.name = editJSON.runtime.name;
		$scope.JSONdata[editJSON.index].runtime.sizeGb = editJSON.runtime.sizeGb;
		$scope.JSONdata[editJSON.index].runtime.autoDelete = editJSON.runtime.autoDelete;

		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});


app.directive('networkingUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "networkingController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Network&lt;/th&gt;&lt;th class="padded-fields"&gt;Subnetwork&lt;/th&gt;&lt;th class="padded-fields"&gt;Access Configuration Name&lt;/th&gt;&lt;th class="padded-fields"&gt;Access Configuration Type&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.network}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.subnetwork}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.accessConfigs[0].name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.accessConfigs[0].config_type}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="false"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Network&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.network" type="checkbox" ng-disabled="edit.disabled.network" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.network" ng-disabled="edit.disabled.network" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Subnetwork&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.subnetwork" type="checkbox" ng-disabled="edit.disabled.subnetwork" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.subnetwork" ng-disabled="edit.disabled.subnetwork" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Access Configuration Name&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.name" type="checkbox" ng-disabled="edit.disabled.name" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.name" ng-disabled="edit.disabled.name" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Access Configuration Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.config_type" type="checkbox" ng-disabled="edit.disabled.config_type" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.config_type" ng-disabled="edit.disabled.config_type" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt; &lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt; &lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('networkingController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		$scope.JSONdata = JSON.parse(passedjson);
		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;
		$scope.edit.network = editJSON.network;
		$scope.edit.subnetwork = editJSON.subnetwork;
		$scope.edit.name = editJSON.accessConfigs[0].name;
		$scope.edit.config_type = editJSON.accessConfigs[0].config_type;

		$scope.edit.runtime = {};
		$scope.edit.runtime.network = (editJSON.runtime.network)?editJSON.runtime.network:false;
		$scope.edit.runtime.subnetwork = (editJSON.runtime.subnetwork)?editJSON.runtime.subnetwork:false;
		$scope.edit.runtime.name = (editJSON.runtime.accessConfigs[0].name)?editJSON.runtime.accessConfigs[0].name:false;
		$scope.edit.runtime.config_type = (editJSON.runtime.accessConfigs[0].config_type)?editJSON.runtime.accessConfigs[0].config_type:false;		

		$scope.edit.disabled = {};
		$scope.edit.disabled.network = (editJSON.disabled.network+''=='true')?false:true;	
		$scope.edit.disabled.subnetwork = (editJSON.disabled.subnetwork+''=='true')?false:true;	
		$scope.edit.disabled.name = (editJSON.disabled.accessConfigs[0].name+''=='true')?false:true;	
		$scope.edit.disabled.config_type = (editJSON.disabled.accessConfigs[0].config_type+''=='true')?false:true;	

	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		$scope.JSONdata[editJSON.index].network = editJSON.network;
		$scope.JSONdata[editJSON.index].subnetwork = editJSON.subnetwork;
		$scope.JSONdata[editJSON.index].accessConfigs[0].name = editJSON.name;
		$scope.JSONdata[editJSON.index].accessConfigs[0].config_type = editJSON.config_type;

		$scope.JSONdata[editJSON.index].runtime = {};

		$scope.JSONdata[editJSON.index].runtime.network = editJSON.runtime.network;
		$scope.JSONdata[editJSON.index].runtime.subnetwork = editJSON.runtime.subnetwork;

		$scope.JSONdata[editJSON.index].runtime.accessConfigs = [];
		$scope.JSONdata[editJSON.index].runtime.accessConfigs[0] = {};

		$scope.JSONdata[editJSON.index].runtime.accessConfigs[0].name = editJSON.runtime.name;
		$scope.JSONdata[editJSON.index].runtime.accessConfigs[0].config_type = editJSON.runtime.config_type;

		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});




app.directive('storageProfileDataDisksUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "storageProfileDataDisksController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Disk Name&lt;/th&gt;&lt;th class="padded-fields"&gt;Storage Type&lt;/th&gt;&lt;th class="padded-fields"&gt;Disk Caching Type&lt;/th&gt;&lt;th class="padded-fields"&gt;Size (GB)&lt;/th&gt;&lt;th class="padded-fields"&gt;Disk LUN&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.name}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.storage_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.caching_type}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.size_in_gb}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.lun}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="false"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Disk Name&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.name" type="checkbox" ng-disabled="edit.disabled.name" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.name" ng-disabled="edit.disabled.name" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="volume_type"&gt;Storage Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.storage_type" type="checkbox" ng-disabled="edit.disabled.storage_type" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.storage_type" ng-disabled="edit.disabled.storage_type" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Disk Caching Type&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.caching_type" type="checkbox" ng-disabled="edit.disabled.caching_type" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.caching_type" ng-disabled="edit.disabled.caching_type" /&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Size (GB)&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.size_in_gb" type="checkbox" ng-disabled="edit.disabled.size_in_gb" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.size_in_gb" ng-disabled="edit.disabled.size_in_gb" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Disk LUN&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.lun" type="checkbox" ng-disabled="edit.disabled.lun" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.lun" ng-disabled="edit.disabled.lun" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt; &lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt; &lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('storageProfileDataDisksController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		$scope.JSONdata = JSON.parse(passedjson);
		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;
		$scope.edit.name = editJSON.name;
		$scope.edit.storage_type = editJSON.storage_type;
		$scope.edit.caching_type = editJSON.caching_type;
		$scope.edit.size_in_gb = editJSON.size_in_gb;
		$scope.edit.lun = editJSON.lun;

		$scope.edit.runtime = {};
		$scope.edit.runtime.name = (editJSON.runtime.name)?editJSON.runtime.name:false;
		$scope.edit.runtime.storage_type = (editJSON.runtime.storage_type)?editJSON.runtime.storage_type:false;
		$scope.edit.runtime.caching_type = (editJSON.runtime.caching_type)?editJSON.runtime.caching_type:false;
		$scope.edit.runtime.size_in_gb = (editJSON.runtime.size_in_gb)?editJSON.runtime.size_in_gb:false;
		$scope.edit.runtime.lun = (editJSON.runtime.lun)?editJSON.runtime.lun:false;

		$scope.edit.disabled = {};
		$scope.edit.disabled.name = (editJSON.disabled.name+''=='true')?false:true;	
		$scope.edit.disabled.storage_type = (editJSON.disabled.storage_type+''=='true')?false:true;	
		$scope.edit.disabled.caching_type = (editJSON.disabled.caching_type+''=='true')?false:true;	
		$scope.edit.disabled.size_in_gb = (editJSON.disabled.size_in_gb+''=='true')?false:true;	
		$scope.edit.disabled.lun = (editJSON.disabled.lun+''=='true')?false:true;	

	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		$scope.JSONdata[editJSON.index].name = editJSON.name;
		$scope.JSONdata[editJSON.index].storage_type = editJSON.storage_type;
		$scope.JSONdata[editJSON.index].caching_type = editJSON.caching_type;
		$scope.JSONdata[editJSON.index].size_in_gb = editJSON.size_in_gb;
		$scope.JSONdata[editJSON.index].lun = editJSON.lun;


		$scope.JSONdata[editJSON.index].runtime = {};

		$scope.JSONdata[editJSON.index].runtime.name = editJSON.runtime.name;
		$scope.JSONdata[editJSON.index].runtime.storage_type = editJSON.runtime.storage_type;
		$scope.JSONdata[editJSON.index].runtime.caching_type = editJSON.runtime.caching_type;
		$scope.JSONdata[editJSON.index].runtime.size_in_gb = editJSON.runtime.size_in_gb;
		$scope.JSONdata[editJSON.index].runtime.lun = editJSON.runtime.lun;

		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});





app.directive('osProfileUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "osProfileController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt;&lt;table class="table"&gt;&lt;thead&gt;&lt;tr class="padded-row"&gt;&lt;th class="padded-fields"&gt;Actions&lt;/th&gt;&lt;th class="padded-fields"&gt;Secrets&lt;/th&gt;&lt;th class="padded-fields"&gt;Vault ID&lt;/th&gt;&lt;th class="padded-fields"&gt;Certificate Count&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr ng-if="JSONdata.length!=0" ng-repeat="data in JSONdata"&gt;&lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{$index+1}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.source_vault_id}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.vault_certificates.length}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="false"&gt;&lt;div class="modal-dialog"&gt;&lt;div class="modal-content"&gt;&lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt;&lt;h4 class="modal-title"&gt;Secrets&lt;/h4&gt;&lt;/div&gt;&lt;div class="modal-body"&gt;&lt;form name="editForm"&gt;&lt;div class="row"&gt;&lt;div class="col-md-6"&gt; &lt;label for="device"&gt;Vault ID&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.source_vault_id" type="checkbox" ng-disabled="edit.disabled.source_vault_id" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="edit.source_vault_id" ng-disabled="edit.disabled.source_vault_id" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="row" ng-repeat="(i, data) in edit.vault_certificates"&gt;&lt;div class="col-md-12"&gt; &lt;label for="device"&gt;Certificate Config URL&lt;/label&gt;&lt;div ng-show="global_configuration" class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime.vault_certificates[i].certificate_url" type="checkbox" ng-disabled="edit.disabled.vault_certificates[i].certificate_url" /&gt;Runtime&lt;/div&gt; &lt;input class="form-control" type="text" ng-model="data.certificate_url" ng-disabled="edit.disabled.vault_certificates[i].certificate_url" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt; &lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt; &lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('osProfileController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		$scope.JSONdata = JSON.parse(passedjson);
		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;
		$scope.edit.source_vault_id = editJSON.source_vault_id;
		$scope.edit.vault_certificates = editJSON.vault_certificates;

		$scope.edit.runtime = {};
		$scope.edit.runtime.source_vault_id = (editJSON.runtime.source_vault_id)?editJSON.runtime.source_vault_id:false;

		$scope.edit.disabled = {};
		$scope.edit.disabled.source_vault_id = (editJSON.disabled.source_vault_id+''=='true')?false:true;	

		for(var i in editJSON.vault_certificates){

			if(!$scope.edit.runtime.vault_certificates)
				$scope.edit.runtime.vault_certificates = {};

			if(!$scope.edit.runtime.vault_certificates[i])
				$scope.edit.runtime.vault_certificates[i]={};


			$scope.edit.runtime.vault_certificates[i].certificate_url = (editJSON.runtime.vault_certificates &amp;&amp; editJSON.runtime.vault_certificates[i] &amp;&amp; editJSON.runtime.vault_certificates[i].certificate_url)?editJSON.runtime.vault_certificates[i].certificate_url:false;	

			if(!$scope.edit.disabled.vault_certificates)
				$scope.edit.disabled.vault_certificates = {};

			if(!$scope.edit.disabled.vault_certificates[i])
				$scope.edit.disabled.vault_certificates[i]={};


			$scope.edit.disabled.vault_certificates[i].certificate_url = (editJSON.disabled.vault_certificates &amp;&amp; editJSON.disabled.vault_certificates[i] &amp;&amp; editJSON.disabled.vault_certificates[i].certificate_url+''=='true')?false:true;	
		}

	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		$scope.JSONdata[editJSON.index].source_vault_id = editJSON.source_vault_id;
		$scope.JSONdata[editJSON.index].vault_certificates = editJSON.vault_certificates;

		$scope.JSONdata[editJSON.index].runtime = editJSON.runtime;

		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});






app.directive('guestCustomizationDhcpUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@'
		},
		controller: "guestCustomizationDhcpController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div class="portlist_main-container"&gt; &lt;table class="table"&gt; &lt;thead&gt; &lt;tr class="padded-row"&gt; &lt;th class="padded-fields"&gt;Actions&lt;/th&gt; &lt;th class="padded-fields"&gt;SNo.&lt;/th&gt; &lt;th class="padded-fields"&gt;Use DHCP&lt;/th&gt; &lt;th class="padded-fields"&gt;Runtime&lt;/th&gt; &lt;/tr&gt;&lt;/thead&gt; &lt;tbody&gt; &lt;tr ng-if="JSONdata.length!=0" ng-repeat="data in JSONdata"&gt; &lt;td class="padded-fields"&gt;&lt;a href="#" data-toggle="modal" data-target="#_editModal" ng-click="initializeEditModal($index, data, false);"&gt;&lt;i id="ebsDataIcon" class="icon-edit"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="padded-fields"&gt;{{$index+1}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{data.is_dhcp}}&lt;/td&gt;&lt;td class="padded-fields"&gt;{{(data.runtime.is_dhcp)?data.runtime.is_dhcp:false}}&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog" ng-if="false"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;form name="editForm"&gt; &lt;div class="row"&gt; &lt;div class="col-md-6"&gt; &lt;div class="form-group"&gt; &lt;input ng-model="edit.is_dhcp" type="checkbox" ng-disabled="edit.disabled"/&gt;Use DHCP&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;div class="disk_runtime-checkbox"&gt; &lt;input ng-model="edit.runtime" type="checkbox" ng-disabled="edit.disabled"/&gt;Runtime&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt; &lt;/div&gt;&lt;div class="modal-footer"&gt; &lt;button type="button" class="btn btn-default portlist_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt; &lt;button type="button" class="btn btn-primary portlist_btn-modal" data-dismiss="modal" ng-click="editEntry(edit);"&gt;Save&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="_editModal" class="modal fade" role="dialog"&gt; &lt;div class="modal-dialog"&gt; &lt;div class="modal-content"&gt; &lt;div class="modal-header"&gt; &lt;a data-dismiss="modal" class="close" href="#"&gt;&lt;i class="icon-cross"&gt;&lt;/i&gt;&lt;/a&gt; &lt;h4 class="modal-title"&gt;Edit Row&lt;/h4&gt; &lt;/div&gt;&lt;div class="modal-body"&gt; &lt;p style="text-align: center;font-size: medium;"&gt;You can set or edit this field in Calm GUI.&lt;/p&gt;&lt;/div&gt;&lt;div class="modal-footer"&gt;&lt;button type="button" class="btn btn-default disk_btn-modal" data-dismiss="modal"&gt;Close&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'
	};
});

app.controller('guestCustomizationDhcpController', function($scope) {

	$scope.JSONdata = {};

	$scope.parsingJSON = function(passedjson) {
		$scope.JSONdata = JSON.parse(passedjson);
		$scope.global_configuration = true;
	};

	//$scope.initializedEditModal --&gt; initialize all the variables with values from editJSON to render it into editModal
	//PARAMS : index    --&gt; provide the index value to selected entry from the table
	//         editJSON --&gt; contains the JSON of selected entry
	//         rootFlag --&gt; states whether entry is root entry or ebs entry
	$scope.initializeEditModal = function (index, editJSON) {
		
		//alert('You can set or edit this field in Calm GUI.');
		return;
		
		$scope.edit ={};
		$scope.edit.index = index;
		$scope.edit.is_dhcp = editJSON.is_dhcp;

		$scope.edit.runtime = (editJSON.runtime.is_dhcp)?editJSON.runtime.is_dhcp:false;
		$scope.edit.disabled = (editJSON.disabled.is_dhcp+''=='true')?false:true;	

	};

	//$scope.editEntry --&gt; edit the specific entry from the main JSON
	$scope.editEntry = function (editJSON) {

		$scope.JSONdata[editJSON.index].is_dhcp = editJSON.is_dhcp;

		$scope.JSONdata[editJSON.index].runtime.is_dhcp = editJSON.runtime;

		var service_data = JSON.parse(g_form.getValue('service_data'));
		service_data[$scope.passedTitle][$scope.passedCategory][$scope.passedSysId] = $scope.JSONdata;
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
});










app.directive('multiSelectUiPage', function() {
	return {
		restrict: 'A',
		scope: {
			passedTitle: '@',
			passedCategory: '@',
			passedSysId: '@',
			passedJson: '@',
			passedProfile: '@'
		},
		controller: "multiSelectController",
		template: '&lt;div ng-init="parsingJSON(passedJson);"&gt;&lt;div style="display: -webkit-inline-box; margin: 3px;" &gt;&lt;div ng-repeat="(option, selection) in options" ng-if="selection==true"&gt;&lt;span style="margin: 3px; padding: 5px; border: 1px solid rgba(0, 126, 255, 0.24); line-height: 13px; font-size: 12px; display: inline-block; border-radius: 2px; background-color: rgba(0, 126, 255, 0.08); color: #007eff;"&gt;{{option}}&lt;a href="#" ng-click="unselectOption(option)"&gt;&lt;i class="icon-cross" style="padding-left: 7px;font-size: 11px;margin-top: -4px;"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;select class="form-control" ng-disabled="JSONData.isdisabled+\'\'==\'true\'" ng-change="selectOption()" ng-model="valueAt"&gt;&lt;option ng-repeat="(option, selection) in options" ng-if="selection==false" value="{{option}}" &gt;{{option}}&lt;/option&gt; &lt;/select&gt;&lt;/div&gt;'
	};
});

app.controller('multiSelectController', function($scope) {
	
	$scope.finalArr = [];
	
	$scope.parsingJSON = function(passedJson){
		var parsedJson = JSON.parse(passedJson);
		
		var options = parsedJson.options;
		var value = (parsedJson.value+'').split(',');
		var tmp = {};
		
		for(var i=0; i&lt;options.length; i++){
			
			if(!options[i])
				continue;
			
			tmp[options[i]] = false;
		}
		
		for(var i=0; i&lt;value.length; i++){
			
			if(!value[i])
				continue;
			
			$scope.finalArr.push(value[i]);
			tmp[value[i]] = true;	
		}
	
	//	console.log(JSON.stringify(tmp));
		
		$scope.options = tmp;
	};
	
	$scope.selectOption = function(prof){
		
		if(!$scope.valueAt)
			return;
		
		$scope.options[$scope.valueAt] = true;
		$scope.finalArr.push($scope.valueAt);
		var service_data = JSON.parse(g_form.getValue('service_data'));
		for(var i = 0; i &lt; service_data.length; i++) {
			if(service_data[i].profile + "" == $scope.passedProfile + "") {
				service_data[i]["service_configuration"][$scope.passedTitle][$scope.passedCategory][$scope.passedSysId].value = $scope.finalArr.toString();
				break;
			}
		}
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};
	
	$scope.unselectOption = function(val){
		
		$scope.options[val] = false;
		
		var arr = $scope.finalArr;
		var index = arr.indexOf(val);
		if (index &gt; -1) {
			arr.splice(index, 1);
		}
		$scope.finalArr = arr;
		
		var service_data = JSON.parse(g_form.getValue('service_data'));
		for(var i = 0; i &lt; service_data.length; i++) {
			if(service_data[i].profile + "" == $scope.passedProfile + "") {
				service_data[i]["service_configuration"][$scope.passedTitle][$scope.passedCategory][$scope.passedSysId].value = $scope.finalArr.toString();
				break;
			}
		}
		$scope.$emit('updateEvent', service_data);
		g_form.setValue('service_data', JSON.stringify(service_data));
	};	
	
});
]]&gt;&lt;/script&gt;&lt;script_name&gt;Calm_Catalog_Service_Config_Script&lt;/script_name&gt;&lt;sys_class_name&gt;sys_ui_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;girishgyani&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-04 20:08:14&lt;/sys_created_on&gt;&lt;sys_id&gt;db9441c237212300fdfc097973990e67&lt;/sys_id&gt;&lt;sys_mod_count&gt;753&lt;/sys_mod_count&gt;&lt;sys_name&gt;x_nuta2_nutanix_ca.Calm_Catalog_Service_&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_script_db9441c237212300fdfc097973990e67&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;priyanka.more&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-15 06:28:17&lt;/sys_updated_on&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;use_scoped_format&gt;false&lt;/use_scoped_format&gt;&lt;/sys_ui_script&gt;&lt;/record_update&gt;</payload>
<payload_hash>-835124005</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>cd5887e5dbcc7c103e3c6a5b8a96195b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98ed80000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>x_nuta2_nutanix_ca.Calm_Catalog_Service_</target_name>
<type>UI Script</type>
<update_domain>global</update_domain>
<update_guid>66e51915eae7a850d8b6abc02c3a5f52</update_guid>
<update_guid_history>66e51915eae7a850d8b6abc02c3a5f52:-835124005,9f176a93a553e050729950acf234da56:232693249,f5f469323997605091e3131350e4e829:-286937192,b21d597e63576050e8648e55fe17de2c:-543839925,52a3cd703c17e010e61fe4239ce5176e:994703595,3f6381bc8613e010ef79632a8051b836:270554027,607a612490d7a0102b12b5329720fbfb:1806947322,94e9a1649ad7a01091ab37f668ef6046:533134160,983929e0e1d7a01011baf82abc41a50b:1454109492,0808eda01fd7a0108bb3b7a6cb1b5a28:-304264966,fd876560f3d7a010ea349b9b946f47e8:1806947322,1c26e12021d7a0101d3c80b4482fb6f9:1478319491,e81525e85b97a01061abd9349c22f8ca:2028741381,7c142daced97a0109196ed55983a497a:-874218811,95726d688597a010c9edae68573c3d53:-1451464577,236061682597a010aed899addb5d9020:-596473119,4dae19283397a01008ef346e949a64ca:703727431,a50b45ec3b17a010c7f9c1c2208a4d6c:1690448569,d21a05ac9b17a010feb51c71cf5aef39:45926763,59f705ac1617a010d161c2d7a5cdbb32:-2013706751,78b5052cfc17a01024d563bda2c69b9d:453832083,4e140924e017a010b78252ebb861d36c:-1508475450,ef6db0a06f17a0109b2c9fd08d39b3a7:1364406432,88dbb460aa17a0100a36269d0f7fe811:-1666651089,18b8880d4204a01088c41287d5e350e6:246116453,4001b9930c231410417f8ab2ea23caf8:1767434771,453e6553d2231410ca1da03cdf865eaf:825901171,066d65df13efd0100ea59083700da2e8:1643924948,2ebaa9d759afd0107d813b3bdb8bc56c:-1494678267,b5418d5388afd0101cee4e2756962885:1732416772,8666709b5f6fd0109312b4df880ae430:-1346398271,72e7e7c3c2abd01059e36bc09eb7bb0e:-1684032790,bc13ab0fac6bd0109bcf4e1f6a281e2e:-1187775007,14b79b50d7eb5850e4ac7dd48b5ccaff:-297630690,372ed5cf7f5754505d9184643349ac8c:1751867310,1ad9b5f9db97141035cd34b70b9239a0:-1178534172,746042a47b1b1c104c12902e975bfee6:1294871344,11cebd64861b1c10ebd19b5899365602:-861225798,fc6bb920b61b1c10f508c7d694b19086:-470153584,b62b55e89b971c10701cc3653d2efe80:833119490,ed869f00fe97d8109f77b435469b3b8b:2078304810,3ab9870c3657d8104a4416741440a7c8:169806781,59248f488157d8103f48082defb8a426:1082902511,1a5dc2847ed3d8105c40267a86820d3e:1070983823,5a3bc648aa93d8102f7c645d98d3abb0:-599813286,f3dacb10a71f1010fde64bc8710b279f:1483677380,47372623e64b14d00603be1b22a9a005:1207972165,613919a73f4714d0bb8bff393c818936:-178128522,6e4a3ca3e40714d0188ac98ace57148c:-270649826,78f201def5329490eb49a63970e7bd42:-178128522,1f019a9d757ad0904524e544ab15a7b6:1734213370,e2d4db09a7b2d090064c965edb991c93:-1461006110,ce84134960b2d090b9d21e2d33068296:1734213370,bbf29bc500b2d090a9f82fe995c0b778:1191389125,0b02938576b2d090049d32f049591f76:-1744599707,986f0b05c2b2d090500afadd7ff0ce8d:-1867850108,66ae07c1a0b2d090a17854870b4e53c6:94811044,67adc3c1ceb2d090fe9f3c8190986fcd:1734213370,dcd6a689df32d0909e42f07e5fd66c8a:-1397289451,9bb52249dd32d090cd8aca447ae47c9f:-593556491,e6f4ea09ef32d0901fbf03f40f07e8a2:-754183921,be746a094232d0902583874248013b22:-809043005,c05a5ecdf6fe9090d25357d673b52a30:543359535,709b354d79be9090f0d6420fffe383c1:695471405,dedaf9c9d9be90905b230e309ddf888c:-1956543231,d1197d89e2be9090d06de2bdf919572d:-107136696,2d57358910be9090f77855c4af58804f:890227838,18d3f14595be9090a4a7ff9b9a47fbe1:336611294,1d61f505c7be90903e5f9a370368bdd4:-1943831536,e380b905adbe90900bd34cebfbf8d55e:-391155984,e6ef6d41aebe90902396aa2be4f11661:531034376,c4a91cb84b7610901cab15ec0bc1d795:1734213370,12cd1fe8d67a5c50c6d30100543939a4:-192600108,2b988e84f9fad8506fa837e8ebe527ce:1734213370,7305868483fad850bed8690fc6cff16c:1567337331,1f9098d3bd6a18502f3293e0e4ef7a5b:1652222679,0e260e227d6e9450d7f197b621ffa53a:-819200622,38854eeedd2e9450c5ee3695ddce0557:-436979822,9c2486eee72e9450073ad98a60718d04:1102520626,93520a2e152e9450a3396a231f8a12bb:-1141342446,ef61c26ee92e9450a32c786110faff54:-618451054,bc3979a66d2e94505e6436a12486fdd2:-266094126,d7c2925d8f3e9010c2d93f23c99580bf:-82494624,5d041265bda2d050aabe263db4978f6f:905186290,a01f17f4c36e1050514acd9aba441f18:-819200622,a3be97b45a6e10503f8af615ed62edc3:-1151893866,a41b4ff4f12e1050e79bbf51c6954a89:-1980941514,db6f6634cbea1050b9fba9b40233b49e:-1151893866,69b7a7391a96d4106f5d4b8b213b7efd:1249780560,978a5b7d4756d410f8d649eb0d1bf005:1970777982,9319dff9e256d410ef4522c82b3927f9:462237429,620f433d1e16d4103123a740125c6482:1709956878,a5e3a8b5765a941016c96ac792a6d865:-196782839,d78160758d5a9410cf4dc2cf9a0fc287:1535480701,c5006035955a9410b90f4d4d25b9600e:-1711644659,d358d8fd501a941003ffde342f4d2005:-82960582,96f5187dd61a94109fcbe9f093ee598c:-2142979804,9b90d0391e1a94107f4376ba11b675b2:366082948,235fbf69fcda5410c11f6519b50d3673:938363492,4b3fff692ada54105efb0c788deda951:1088897028,47c6532962965410d5920189d464a54c:1400352789,450e43a1fb96541077dbb975a909b151:-1101333874,3e4c0721a4965410c211a1d888741609:-886552607,da6ef6a512565410bc4d1d45bac31ecd:-804748579,7adcb2a58a56541058c718cde447f082:1181455100,66abf6a1ce565410951e9a75765c5f4e:-1361067728,b815f661b2565410a7b826fbea1dde14:1657652454,0c02f2ed5f1654103fdb743ba9e26f4f:-1793419166,7a60be2d7616541048c06934004ffb38:1866460047,834e262d91165410c6e462a9e2ea94e5:855860207,71ecee6960165410d81357c68e56297a:1842475669,fc1962296116541039f142280c7a7042:2102346355,c437a6e59816541047a490eb8da92a1e:29699666,6ad42a6576165410f093c6f10c7e9ebe:1756225823,97442e2548165410561610499aae7a91:-1540032851,9ab22ea9ded254100ee89f711be67921:-2135041522,d3b2122922d254108b3048e7ef3460fd:194453756,c5cc4225fbd25410ab1bbd24b0aab3ea:-1367987025,5ea90e6143d25410c5c08b858e3b253b:339309881,81f50a2141d25410f5c9afd848de35ed:950879051,87b4c62de09254105f9ca9e8ffffa7bc:574571,a59eb1e9ab92541046de84e54ad58d3e:-1732626329,d237271d661e14108e2749814ac336a2:1877196325,324dd3952d1e141027dfa8909ce51b1b:-1643776281,28e044cd8bd6d010c4c5716054341028:-492819395,1ef4fb38c3d6d0108e735653a39bded0:-1346583153,80997ab0b93010107ab53500786fc273:-824638093,91bbbaece3bc50105580ff9af1b38af6:-824638093,a6cabeac1dbc5010e1b6948364bdc039:-2039579104,02d79c05708c5c1066b40112bf4bad0e:1737653246,88771cc16a8c5c10c99da9d7b554e7e2:679039966,2d9554c1908c5c10c2099f2662d1f3a4:-873098818,a3159881ba8c5c108202f02197a15187:734937726,82a49481af8c5c1070a80fac5a35fe0f:-1567352386,f232dccd114c5c10f424f29e82614a14:-1717880384,b8001c0d184c5c10a2a5e35c85e00130:286045440,e6dec8c9ee4c5c107f61c7fe7d2fa346:-232711584,a6a04481124c5c1098cf2b4f1da56f20:-2067744671,c245f7b4aa0c5c1099060992c712d591:1908451675,6f19d9a4b53f4010f25b7050719f8930:-861419333,e6939f6fd3ce449012e5e38c9529be07:1908451675,97d412f8cfcc33009548fd247eedade2:-1431915761,529392b8e3cc3300a093d45dd188c3ef:-589527608,3bb21ef478cc33005cd5b75850d6efd1:-801963142,3e2256380dcc3300de8ef1c592fadd36:1092752787,43705674dfcc3300e06ad476c824a7a1:855820526,76dcbd24c50433001592da757a610cc8:545347597,2b3cfd24c90433007a77c7fe844b6eeb:2009474843,674afda07004330050d36577cbb51c91:545347597,8a58f9a0500433005ca6cccd6fbf74e4:-992094261,f60731a0b70433005795dc0405c55cc5:1579140894,9a4631a05b04330003b7d7d6bb954790:647942130,22753120ea043300cf5855f383d0d947:-1612744334,3744b520620433006f881b848808514a:1585317422,15d37120c0043300b1ef0f02f69e5934:748363634,2473fdac44c0330075f9c352b67029d9:-108338589,2e02f9ace5c0330062d2642474ec892b:-1982890284,aa81b1ac6ec03300055372f7a292febb:1488394879,8266e524e0c033000d724484364547dd:1099059551,2e34ede04bc033005d2b29640e635f13:-297108577,d9e32d60cdc0330037a4e66af691a776:-2109123476,4ec36de01bc033008f1a0fd6e1b7866e:2144499577,aa3ac1ac7b4033002353b1c80f7f389b:2085147135,e20e78a0f94033001472ad9062bc1fb3:-117929350,a5dd78a089403300a5f64c7406366caf:-1748347026,34c860a4df003300342a13995ee80018:-1799966414,4118a064ed0033007923b2f0a261bdf1:-912143918,5c8439a752bf2300fab27a2847ea789c:-1799966414,2b4cc56f603f23001c33284e62b3d964:-1142318777,473acdebb13f2300f8a1b6ade47987d6:322336713,a6b1398879b7230091b9e4ab252156d7:-162248238,821b3a90b4222300868c95f746aa868b:-1964749064,683c2100ad622300cb91d871879af888:-1683450280,cc93812ec8d2630049f59667d087606f:1630276649,c07dd6c753826300a893970eff47bae4:423890997,e85d1ac73082630055d9db66b024bd12:1760520153,0246399a338ea300d73c1432b9526be4:423890997,6206f5129ecea30030b7dc2a76cb3993:261511307,929531de398ea30076cdaf2f5782f202:-314292382,44c6d635f00a63009968565d2e9d9761:-501876213,ecad94bdd8c26300e85526adb1bb6c25:1820963679,60ac5831c1066300c47dc71b3d393e05:68997323,cf7bd8bd62c263008f5e9ee019759d3f:-294119870,114bd8bd7bc263002f7ba2ee06d0d3ce:-152280491,be49903d39c26300efff847e505d5b13:289862433,fba8943d7bc26300cd058846f5e572d0:529087331,2d481879e8c26300e9e59f5576bb8255:651187334,0667503d8ec263006c3c3ae1714091e5:-444004130,978498f9cdc2630095b990cfa90337c8:1643805839,a4e35879c5c2630086efa7b2ce5fb102:482306599,cfb2d8395ac26300a5ebe48e1ca4971d:-1426255984,badfc8394fc2630016d383c37e61f542:1297902004,81fec8399bc263005a515c143c5d4c18:-308594361,236e88f50ac26300a2b8f80b3c2f5eed:-502869701,f3bc88b55bc2630034c4f76202b22fe9:1152770812,c59c88f51bc26300870fd4e03733d685:1233708474,7efb00358fc26300cfa54a574497f371:1758977364,6b8b00f56bc26300470a0ec093b012e5:600965492,6bda007547c26300dd29766dab8eeab6:-1992371162,d1e7887179c26300cfd48d2b6665595d:1931670243,1d07083514c26300051caea5b9fd1093:-40972797,9bc44871afc2630092ddca5c6e1c3d31:-275644943,4314c8b109c263008a5349e25cfbb245:804908593,ed30732952826300da30765308d4af21:-359776069,a5103be559826300237df6a1384f90b1:812276184,0abea7a54f82630094bf865325776ae3:-359776069,d06e6b65b4826300ca0c11ec8c3da15c:-1014399151,619d2b65ba826300f3c32c924a793b3f:-132391791,138b2365ca826300f1d1b4fc189566bf:-150317108,842b6b25cc8263007f10f913a57a7cdb:-1103409994,f2cae725c68263007756e7181fff7b91:1274341228,1088a721b3826300569bc9c73f7909e5:5560923,3767a7a1b882630049c3909351f465b9:-697249986,f0b2a7ed93426300bf5b713cd6f0eab8:-494204128,d104d0a48e8200500b235b24238be690:1156528091,32425b901ccecc10f7762343045571e2:1891700713,fac8125201ff7300d4ad46115de91ec8:-864059845,855b44dd4c3b3300decec60d89c36ec1:872815447,f26e4ec41fff330061ef88b7d6a96e4f:905768446,2cdaba1cfbf373004a87279fa629e684:-369800677,1bf63ad43cf373005514f4d8e2b7597d:-1706832671,f1bce658ecb3730096544bd92c4c8048:1795324476,b36e6e0816bf730035c5bc0cedcbb5b5:1980911416,4b3ea6c434bf7300a58123d3f070fcef:1880773507,ff844e00807f73007110e6c004768b62:-363887976,1e14ceccf13f73001909af9c97751c2b:-1479339910,8163c68c533f7300c8a4da7d56dd2c8d:46151046,87238e4c163f73009fa0e4fc35b1bc7a:1099001884,f1e0420cce3f73009f7e694b85f1aa26:-434349723,719f31c8673f7300ab84e837b54a97ff:1099001884,2a5fb1c8983f730026d15e1ab580eaae:46151046,1b9bbd44053f7300c1cd1e32fe35696a:-1761445183,ceaa39c0823f73005c605b7c6c408862:1109367705,9ab97144043f73006b065a8c41155aad:-857792399,144ba5c8c1fb73008055774fd5a451f4:1691362612,7dc96984affb7300ecdefdbf95133145:272346575,2ca6e1c41cfb730090c50a9041b8ffed:1691362612,1c156d8072fb7300e787ff10fcc848bf:2059170102,7d92e940b7fb730031360a49a1762df6:1691362612,0d71e98090fb730005a3befb0ae6f46e:1630886574,954974d2a4a7f30048b6d3243875f5e6:1442339271,6fa8f4d66aa7f30083eaa6bf5a12ea40:2031417170,1be1b892a4a7f300aecdddbca46fcc47:-1462736450,05a174d219a7f300bae2f9ce0cc1fb79:-1537896416,50417c9216a7f30042acea787a924367:1443802611,d501349203a7f300476bc4cc9984e906:470040613,8f9034924ea7f3009004492387ee7301:1551364701,46307892fda7f3002ccc8707ba412664:1527497040,6befe092d4a7f300dcab750017746ed0:1843777612,fa0ca09e4f67f3002580b07216978fab:-1712254407,82dae8da8567f30075c6712aa0ba455c:545395961,2b5a60dace67f3003ca42da7a709d92a:1868482493,b548281e5067f300ad127f2e3f706274:-1191390793,9987ecda9e67f30053a8ab9802183118:-412632523,da86a81a7467f30077ba92995ae58251:-1310269035,8e26e8daf367f30057af018684caa057:-1792929615,74e5a49ace67f300ee2346aa6dc9281a:1802101333,5f65a89ac067f3005e379091473a9af0:1212616961,3d2524d67267f300347c8bb2de896473:-1862005645,36ce5c96ea67f30015f6bc685a8bf797:1212616961,effd9096ea67f300cdcbcb1f4fcd0fe2:-3963708,c17f6bca0ce3f30062e4a85e399e3654:1645169393,9cae6f8a17e3f300b90de082d3a8a92a:-95450270,7722a6c29523f300ceadbd6a05ecaf74:1010710111,2521ae42ab23f3001e454610692b25e0:-729817642,ac9f5ac28123f3008746bc86702bf32d:-1232322930,5e5e9e42ac23f300bba4d241ccffb0f0:2034890521,55612f1e4aa337006a957b85134da86b:-1782959649,5cd99f86482bf3008189cb66d88002ca:2081398751,aef81706512bf300f24cff719254021c:-353008248,16459b82882bf3002681bae67175d337:-871809540,092453027b2bf300f4e29f2ac3fe4340:1132041635,26d113ced1e7f3005bc1ae5faa459129:-1568975281,d48f8b4e57e7f300503315901d956fee:1576580410,c45f8b4e0be7f300513a10ffb48cceac:563879992,8aed8f4a5fe7f300c1db82b5bdc8cbc8:-583761212,c05a8f8a85e7f30061aa44a2bba3ae41:-1724656148,5ff8c34a82e7f3009c34e5dea5899534:-888772668,1a66cf4679e7f300355003379754e45d:1676776655,d335830690e7f3007312701981509af0:-1574140542,8cfe57156caf33002e0e81bc63552052:1882374621,adb3b7c5cd273300091366748842fd2b:30331230,54d077051027330097d2a6ccf904b342:1608500991,e8cf19117ee77300efba0c81c0181723:-58426942,b28f91112de77300f5c15fa264dd315d:683298488,45fe9d9d73a773003c00706774605130:-1597509034,07ae9d5dd6a7730036534d6e130b1dd4:1153075132,f56b9d5d51a773009d06be377a6cb73c:1008386012,0b2b2f4d65a3730092eaca9b47564ef0:-1590341781,527e5b85f2a37300c3ea5429a6a5aaac:1008386012,d93e9b45f7a37300dd208a4931a2c033:-196245695,0e995701baa3730033efc11e1f76fc08:16416134,9908f1a31c9f33008657fb492f4c3370:-1859093595,0b16b1a3349f33000ccfcc513ff46a33:2119377325,70c5712fc85f3300baed43bfc5d458e3:-326713781,5270392f385f3300501ebccb614be27a:-1796477561,bf5c616fba1f3300e9434da83298161b:-1317971764,07ebedeb895f3300c2ba292f233a704c:-485684187,f241e84d165f7300d82106165a869c65:1760905029,a509eb1cf497330094bf784d91da52cd:-269343621,9517af5887973300367c358be0cee578:-928620908,13756318ec973300bb67d6aaae0ec908:612110085,31b2a314f2973300aff6854e285dd232:-819001053,556397542e5733004fd7e48cde997a5d:-928620908,5f700354fe173300d0f28d9c7a9c5362:-387955778,7f300b54d91733004985f8f2fcf9bdf0:-653988709,217f3a54b9173300407fd57bd415b0ed:2107630462,d45f3654041733008937a73f54c2fd53:-1058306351,3f3b361051173300a2c9ccca1de4a011:-1299263595,feda3e506a17330035c91276314b1aa1:-2107978398,10ee8a03228fb300bcca4bf17c3c45be:-928620908,ff3e8acf094fb300ae6cffb791920b22:-579721247,216af14fd10fb300c21daff6e5868f4d:896658375,2d293dcb9a0fb300e96d7ef54a879a25:-121295058,502d6d8f64cbb3008b2290d9334df5ae:180900655,0db7658b2ccbb30017864b5505439f9f:1672486095,7537254b56cbb300e56f53317d9767d2:2107526492,1496218b7fcbb3008a4d85bba20f31fe:-767841612,d256a14bcfcbb3002bc6d160c50c4a7b:746825524,3a45614b4fcbb300af9e13c59038e6b0:-1011514623,fd152dc798cbb300a0a1eb791c494379:-137343033,202265c328cbb300c9f1ed9c59ffd573:1235331319,d6e06983cdcbb3000cf8caf9026dfb76:-780521520,622ec1faaccf7300ef3c4dc10986cbb4:24669704,1a615c3a010f7300b71b504c17b62468:-1835561705,48713062ff07730038588387c8cf8be2:-423750907,437ea86e7fc3730049b6304231bcc1d7:2033044287,ebfda8ae35c37300a342f4c873e5b223:1166979482,baad20aeddc37300bd63435395a5df54:-1103156076,c00da02e6dc37300116b3e15128365be:934503892,0bdce46e28c37300468e2c302fca791f:932901480,799ba4aac0c373003e678c629e565e69:-1103156076,525b2cea27c3730056c1190557e27f5b:1166979482,dfcaec6abec37300db2b6ad2577daf9c:-448223913,4399286a08c373004a3ebf2c50dab1c4:608100588,15692caa1cc37300ed2264e41d1db0d9:-1836053966,1d19a86ac1c37300ad6e9cdd87e271e8:-872548470,13f8a86a1ec37300f7e5ec29e2e494e4:1328228725,9cd8e466cfc373006fea4aa40400bf45:-718452280,4b98ec6a71c373004f20298f49624f97:1264431464,ca58e86a44c37300bb6110bcf762fa9a:1167263052,ec38a866c8c37300568cff2167ab4b97:-1369276498,5e1864e6cec37300bea97039c218e13d:445221350,c684282699c373003a4151b6813c4002:47605535,7eb1ac2669c37300286a95cd2f89f29c:58027673,b391242689c37300b17529d27c90cd93:-1247369647,a0f028267cc37300d7491d70e20fe97c:2089981402,4b80e42e6b8373007ab23914a9cc4a82:-479074413,be40686e618373007cc6f54cfb76b168:-1555193091,e7a4d8ea358373004fee931863bd8e3a:-633942217,3094186e1e83730049a163cfe70f7c0f:1749755455,9123d42e9c837300115b1944b57c637c:1473928033,ec031cea12837300e7678e5389451b9f:-1389893161,42721cea87837300263503601972a720:-1166912437,b722d86a5d837300469d08b9adc97487:1534134295,cbf1d86aa98373000f3c5d8811e4fd66:85876481,5291546aaf837300abcc6cc98147815b:-851472386,5571906691837300031bf9d6bb4cb723:1519404939,ad2f8ce6c1837300257786cf37362f1e:2132670442,4bfec8e6d5837300fc276b6512243942:-1308402462,61ed886615837300197aaeeb26048298:-1593514022,28bd0ca6ff8373008248d980de760054:462380449,34ccc06617837300a0d859207f796210:737718300,9dbc00a60e837300a977c80d55f5d00e:-1447818679,b38c40660b837300d7fc2712a52930e4:1336705564,ea4cc06612837300d455dead3911baea:-1345876004,8e0c4c26a6837300727a686fd68671a5:1303215595,1acb8cee354373005cdac4a8561066e9:-1519292002,809bc426df8373001dd0668d85efdf40:-295615377,dd2bc4aec9437300975ae363a6a7f168:1151235799,491bc426178373000a7fa99aa931913a:2137284623,4d8a88ae33437300dd4704363778128f:1206782183,c7738cee8d437300b2e7cf3cfc729fe1:421134460,220304ae784373001833f166d1af71d4:590254410,1f91c42e904373002aeb3eff304d5561:1186765824,f171c4ae3d437300f3ba8e27f78c6e51:-421974536,6c51482e53437300b1fb449ab3aafe17:1853875756,bb400c2e1f437300122550a599deae86:-179192158,0310806ea1437300026de1e695cf7f29:-766654429,55df771ec5437300937c7595fc938e16:2013222217,697f3f1e32437300dce0b9f1f4394f81:-1220531655,eefe371e60437300bad202d53721a6f2:-68489711,6f9d77dac74373009b8c76ee59765a91:221271851,cd5a7b1ab04373001d4e2583cd9fb4c6:-134319881,20de63124743730064b2b34105f9c72c:1495335156,ff4e2312f6437300596b0b61fc968241:-983920227,f48caf1e9403730083dbe929c2f7b60d:-270928724,463cab5ecb0373009b32f90094576838:-577903714,302c6f5ea10373007811bc9893946b6e:1223379988,f4ea6f1e47037300a38f6bc7b050a5c8:-984478399,09385712d6cf3300722af8db65c53898:1092032258,ed779f1231cf33005e9abef920d0915e:1872385450,26e6d35ece8f3300dee031a878b6a9dc:-1413547193,0a8347cab6073300dffd9dedad0aa985:-581693348,d332c34a8b073300f095a0d8eed44057:1897772797,f65eb2c600073300ab64ad2dfa383733:-2069395803,21fdba86e7073300c7ce0dbe6926514a:-1155415216,f0ac3ac2c7073300adc7a66b48d2d243:1115535893,de7cf206a80733005c1b6d62e38d313c:-833162795,3a1bfa4269073300cb8b3765239ffcd9:619527577,2de93ececac33300e933db5c495dc3ac:-1220294951,04983a0e30c333000c81670aeff6017f:1869264271,e1e0a7cd908373001d55692a57543e55:813141420,2170a7cdba83730090c811f2f1331c4c:2121407220,ebdf978db8837300404b955609ac3b58:-619851447,4e6a9389ce837300429793d99a723ea5:813141420,9c58530982837300e3bea0a3d6183ad3:238566526,625b2efca7473300c67a1b1a60eaf186:-947913691,a32aeabcf94733003098c6596ecd0e48:586058503,2059ea3c9f473300e6b166581cd32ce6:883400698,6aaebb5b60eab3002eee2ded554f6af4:30713791,d7cab357a7eab3001c1fe5a793b17085:108327538,f5b9bf13b2eab3009a3559f09492c06d:-1876501173,4897b313deeab3001bee522a57da462a:703894886,82f4775f7daab30025ace0d7daaede2d:1715009537,f2e3f3dbebaab300eb97204d0656be8e:-487913799,002f2357e9aab300171fa574c37ed918:-1185236153,835e23d3d4aab300113d127a96ae777b:-31956723,914c6d13bc66b3006efc64577e8af2d7:1667265865,39fbaddf1626b3006de84cc047a30009:-594548496,9630a80b5a2a73007f040799c3c685ef:1667265865,b4bf50c7152a7300bd6fc04228cc5ff3:-284046753,241f54c7952a7300943582efece17369:1334268614,eb7b1847922a73006e03068499031f3a:-1581618661,67eb0bd2bee233009413b0c9777c249c:-1259399487,11db0bd2bae23300620a85b7f0cae497:-1577590819,de3b879288e233004f2161ef3bea6120:-16841823,c05a87923de23300532598e9b8631387:-807659663,24b9879273e2330014fd26d436052d32:-1626679599,4f788712e9e23300741f3a425ac26396:-732440036,1571b94637ee330086ad4665fe58b5b5:-1577590819,362465424cae330020294404dcaf3043:1334268614,4203a546066e3300f2922e053a5cdb35:-1956450477,51364d8e442e33004fdaa2eb188c2ef0:-1524129608,a2d5898e4e2e3300338fd91d7c4b4756:115330682,0f95810e5d2e33000b4be981c474086d:1966009679,73f4410e6e2e33002029e53d7d7d544f:-789084165,4e93810ec62e330020cee7d3febc51f1:-1284547600,d791c94a132e330071854ddf4db7ae55:-1323686185,1990098a202e33006ce1cbf0ffb8b4b0:-187025370,b5761eb91ea633005e073aaec58095a8:-1738949289,9ed416b591a63300c15be87723e57792:1038559758,cc24def5caa633002bc1b30ad4a0d362:1310681001,e9b35279d2a6330054d48c7515580d28:713636128,97b19eb5e4a63300244b6225d4d2481e:1038559758,d7e096f510a6330038d204fdd68e39eb:1628625586,a8ff0e356da63300c539ade421228a02:-406393117,d84f027508a633003fcba70a7e8eff91:594452033,64ae0af135a63300158f44bb3473fd2c:837392857,ac0251f909e2330088077001deab89e8:-1930473061,2fba4139c6e23300b74f5ee47cde769f:-1748243032,909a4979e7e23300a90bb71a14a8a23a:-1930473061,ed8909b99ce233009731b4d71b594b44:-1202888609,9ce70979d9e23300d5b396a35312416d:-801478021,ce86493909e23300f30e4780c2344616:1300291744,53664db5bbe23300a2ad4d3d32526840:-1365407091,d62605fd4ea23300db82aa8b52463d91:1713725401,ab7505bd98a23300c5fd8d99d422b768:-1074608722,f94345bd23a23300e6330e840e265d61:-1923522917,ecada47960a2330069b8a3e1439967f4:-460495822,9d6d647907a23300930c76cac3776090:999586634,61fb2c39e0a2330006b5143aa70a93fd:1551738318,746b2c3919a23300b6ece3794b638819:-209978696,5e2becf55ba23300f1c2e6307565780a:695893000,a3d96cf5e2a23300aa7c39087a50a717:1084473641,ffd1ba950b823300ff037fea3352ea95:1551738318,f59b8830834e7300e23d03d18bab3d93:-231096615,4232c478050e7300175306417cc00aa3:263263649,97f4a0a08d067300b65a10182b61fef7:-1201750972,48b7e244bb25730035abb760fd351281:-683399795,cd95e204f9257300d0656511d32463d5:-1211562104,df55e6c019257300d7b22395fd34b87a:1506054987,1dc42e8039257300640b74afabf989f2:394381569,704466c0302573006164a0329eb3b18c:-966002214,3aa36e403be1730079877e12635f1b83:1396278778,2d236280c0257300cf6060ea8bfbf26a:-670387066,2816ce404fe173006ab521d0478da2c4:1604855507,30b5ca0054e17300303319d79cf79fd3:912891168,8465c6409ce1730047d845209e5ddb29:816315178,1a054e0020e17300bd283784868751ac:-251188576,e8df5d049c617300d9197da9613dcc13:611533619,ac6e9104a9617300e27fc779bbda618f:373241168,a502154c285d3300c1e529c4d2b95bf4:-883987387,f648208c66d93300600d778d4b3a84a8:8326053,74a76c0cdad933002e8aabf0e2d68643:1769878270,13372c4caad933009dba081b394c7867:8326053,6ab6200cedd933009655d3e2fc60c8c6:138296093,bcb56c0c54d933002d60d36dff21373e:513373885,65431ff3a68533003a970426b4fc2444:138296093,8f92dbf37f853300affee7f390d68da3:1740679189,9560247a3ec53300a4464084955ce1dc:1645393934,f07f103270493300d00e15db908b8452:1879052505,a1cb96ee75c1330038a6609728ede7ad:568292242,235296ee66c1330052a024d1e448caa5:671845020,6b5156ae22c133007569a6cee83a320e:444610499,4d115eea1fc1330040cd92a084c41f84:-1403101369,bcf0de6e88c133005d4e323e45d35d49:-349629649,30a0de6e40c133005b70d4d8debea146:1572538786,72009eea9ac13300139c171a07293276:-1403101369,7139556ab8413300f28dd430139fb662:-1043610575,e429556a31413300e1838cca72005b48:-575069165</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>catalog_script_client_cdd265f84f833300d8494ebf9310c77c</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="catalog_script_client"&gt;&lt;catalog_script_client action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;applies_catalog&gt;true&lt;/applies_catalog&gt;&lt;applies_extended&gt;false&lt;/applies_extended&gt;&lt;applies_req_item&gt;false&lt;/applies_req_item&gt;&lt;applies_sc_task&gt;false&lt;/applies_sc_task&gt;&lt;applies_target_record&gt;false&lt;/applies_target_record&gt;&lt;applies_to&gt;item&lt;/applies_to&gt;&lt;cat_item display_value="Variables"&gt;dae4cbd637512300fdfc097973990e0d&lt;/cat_item&gt;&lt;cat_variable/&gt;&lt;condition/&gt;&lt;description/&gt;&lt;field/&gt;&lt;global&gt;true&lt;/global&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;messages/&gt;&lt;name&gt;Check before Submit&lt;/name&gt;&lt;order/&gt;&lt;script&gt;&lt;![CDATA[function onSubmit() {
	
	if(g_form.getValue('patching_status') === 'false')
		return false;
	
	g_form.clearMessages();
	
	var prof_json_up = g_form.getValue('variable_data') + '';
	var var_data = (prof_json_up != '') ? JSON.parse(prof_json_up) : {};
	
	var submit_flag = true;
	
	for(var i in var_data) {
		if(var_data[i].isdisabled + '' != 'true')
			if(!(_validateField(var_data[i])))
				submit_flag = false;
	}
	
	return submit_flag;
}

function _validateField(field_json) {
	
	//var variable_data = JSON.parse(g_form.getValue('variable_data'));
	var var_name = field_json.question_text + '';
	var reg_exp_str = field_json.regex + '';
	var is_mandatory = field_json.mandatory + '';
	
	var single_run_flag = true;
	
	if((field_json.type == "21" || field_json.type == "5") &amp;&amp; (field_json.options.length != 0 || field_json.value != '')) {
		var field_val_arr = field_json.value.split(',');
		for(var i = 0 ; i &lt; field_val_arr.length; i++) {
			if(!(_checkAll(field_val_arr[i], field_json)))
				single_run_flag = false;
		}
	}
	else {
		if(!(_checkAll(field_json.value, field_json)))
			single_run_flag = false;
	}
	
	return single_run_flag;
}

function _checkAll(value, field_json) {
	var var_name = field_json.question_text + '';
	var reg_exp_str = field_json.regex + '';
	var is_mandatory = field_json.mandatory + '';
	
	var single_run_flag = true;
	
	var reg_exp = new RegExp(reg_exp_str);
	
	while(value.indexOf("\n") != -1){
		value = value.replace('\n','');
	}
	
	if(value != '' &amp;&amp; !reg_exp.test(value)) {
		var msg = var_name+"'s value "+value+" doesn't match with specified regex '"+reg_exp_str+"'";
		g_form.addErrorMessage(msg);
		single_run_flag = false;
	}
	
// 	if(is_mandatory == 'true' &amp;&amp; value == '')  {
// 		var mandatory_msg =  "Variable '"+var_name+"' is marked as mandatory. Assign a value to it";
// 		g_form.addErrorMessage(mandatory_msg);
// 		single_run_flag = false;
// 	}
	
	return single_run_flag;
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;catalog_script_client&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-08-01 09:20:14&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;cdd265f84f833300d8494ebf9310c77c&lt;/sys_id&gt;&lt;sys_mod_count&gt;38&lt;/sys_mod_count&gt;&lt;sys_name&gt;Check before Submit&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;catalog_script_client_cdd265f84f833300d8494ebf9310c77c&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-04-15 07:00:28&lt;/sys_updated_on&gt;&lt;table/&gt;&lt;type&gt;onSubmit&lt;/type&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;variable_set/&gt;&lt;view/&gt;&lt;/catalog_script_client&gt;&lt;/record_update&gt;</payload>
<payload_hash>1888650617</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>cd58cb25dbcc7c103e3c6a5b8a961999</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98eeb0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table/>
<target_name>Check before Submit</target_name>
<type>Catalog Client Scripts</type>
<update_domain>global</update_domain>
<update_guid>3d4d1995c7e7e410ced13248e82537b6</update_guid>
<update_guid_history>3d4d1995c7e7e410ced13248e82537b6:1888650617,d5acb0c043134010a264f3a050df7fae:-1044520751,33ab0153dbd33300e0c69cd27d25b4fd:310764571,b34a0ddf859333004fa8ece0dbfdd9d4:2126265219,4bf98113a7d33300bc7306b044eb79b1:-550012202,907df8d7369333004241417f4bb3037c:217189636,f8b59318815733006e24db142ad84bd7:-550012202,a6a253943f573300e6c2522e4e5d044f:1454861275,07729354be5733002e43887f7074472b:-550012202,68a6c798bc173300c8a911256dad3d1d:577109338,441e62d4cad33300cf8b9b6ddad482de:1410844887,9b996254e8d3330022372b6c924245fc:-1948268181,a859e214c0d333000961d87f70bab1ad:-863944346,b448eed01ad333003cb85ca811d7ee48:-1455574568,1fe76ad0a2d33300cfaa85d6f249167d:-452433709,5f676e900ed333008a85eeea3d212c39:919734045,e3f5ee5044d3330080b9d3f5d954ac67:1895356633,f4e0e7d7030737005b5371157f079f15:-550012202,8ebb53d3b5073700f58f3626c2b42c7f:1454861275,c0e97e9722433700433084e54b16501d:1033733945,2d49f29723433700f022e7e3f697effa:-1887521466,42e07e9f0d03370030466c569d3e8d20:-761566156,2f747ecb1283f3006903750d72248fb8:1754357670,069d524fc68fb300296c1251e1b1060d:1470235565,f51c964b778fb300120d7c11f74067c6:445940302,fefb964b098fb30071667b3c7cc24dc0:1470235565,59cb1a4b258fb3004a8a9430ab0f53f8:377843528,01fa964bb78fb30098214456b3365132:-381972142,cf5a964b708fb300f1ff1b00f58e565c:-220865463,570a164b408fb300edf59dbea1aca75c:-466922902,9eeaca4fe84fb300ddfb4bce08304c9b:-380259862,ae1a064fb74fb300dc18eb4230ba8ccd:768477219,d0a806cbe54fb300d33e5d2248613ba9:2112564117,90688acb0d4fb300a7f75e318374e669:-231785611,46f70e8bee4fb30039f856293d2e0638:-1463054050,8e974a8b5a4fb300d7be9af0f3075e0b:-1910167685,bda68e4b534fb3003712e3d8e64f0bfa:1662227510,30b38687d54fb30008549e5aa5ecf0b9:-1715770573,a065b5c7c60fb300ee995994408246d8:1662227510,cef47d87930fb300e7addec38138bb68:-1715770573,5e1e91cf318bb3005a35f7d05445f316:1662227510,df8dd18f5e8bb300721f3ee9e39500cf:-1715770573,e40dd10b4b8bb300b3e4a054f3e3da30:1759948701,f108d907f08bb300c16d0bfe4e69cab7:1740126395,2d66910b648bb3007a9f56558ab8bdf5:642102918,a8d1253ef503b30070a0f5bccc9ff8fa:-100461082,264046f06907330095c95330c82ce41d:-1638788439,a9cb3dfcc1c333003498ee3898804fa0:-100461082,ad29fd3ca0c333002cd71515185f1d86:-631605843,4fc62d7c6b83330067aef7f0b1eb3f7a:1358658090</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_show_help_text</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="show_help_text" table="x_nuta2_nutanix_ca_calm_plugin_configuration"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes&gt;edge_encryption_enabled=true&lt;/attributes&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;Show Help Text&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;show_help_text&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value=""&gt;boolean&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;40&lt;/max_length&gt;&lt;name&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-03-06 06:10:39&lt;/sys_created_on&gt;&lt;sys_id&gt;20ff2249db003300bfa82a9a4896193c&lt;/sys_id&gt;&lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;&lt;sys_name&gt;Show Help Text&lt;/sys_name&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_x_nuta2_nutanix_ca_calm_plugin_configuration_show_help_text&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-19 04:50:20&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>1365868286</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>cd58cb25dbcc7c103e3c6a5b8a96199b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98d710000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Plugin Configuration.Show Help Text</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>e700f12fdd5a2410252945736f4b9e84</update_guid>
<update_guid_history>e700f12fdd5a2410252945736f4b9e84:1365868286,b5a3296ed884a41069afbe47e2fc130b:475592667,7460add6aa0c64108d2c5ed028575fb7:1365868286,84fe91d66a0c6410a2f5736be33c2d3c:475592667,c44e5196110c641052251cc058e39175:-239924229,d71ed196570c641059d0f6d99a73f45c:475592667,80fad9dee9c86410f8c75f690d6ebdda:1365868286,8710f6491e0033008e70f21578c26fda:2143545391</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</application>
<category>customer</category>
<comments/>
<name>sys_script_51bf7445370ea300d27b8cf6c3990e4f</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;false&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;false&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;x_nuta2_nutanix_ca_calm_plugin_configuration&lt;/collection&gt;&lt;condition&gt;(gs.hasRole("admin") || gs.hasRole("x_nuta2_nutanix_ca.calm_admin") ) &amp;amp;&amp;amp; (current.mid_server!="" || current.mid_application!="" || current.calm_saas_and_servicenow!="false")&lt;/condition&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;Show/hide Authentication Status&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
	// Add your code here
	g_scratchpad.calmInstance = current.calm_instance;
	g_scratchpad.blueprint_name = gs.getProperty('x_nuta2_nutanix_ca.1_4_3_bp');
	//current.show_help_text = true; //changed value
	
	var mid_status = "";
	var mid_validated = "";
	
	if(gs.getProperty("x_nuta2_nutanix_ca.use_external_credential_system") + "" == "false") {
		mid_status = current.mid_server.status + "";
		mid_validated = current.mid_server.validated + "";
	}
	else {
		mid_status = current.mid_application.default_mid_server.status + "";
		mid_validated = current.mid_application.default_mid_server.validated + "";
	}
	
	try{
		var logger = new Nutanix_Calm_Logger();
		var utils = new Nutanix_Calm_Utils();
		if((mid_status == 'Up' &amp;&amp; mid_validated == 'true') &amp;&amp; (gs.getProperty('x_nuta2_nutanix_ca.check.authentication') == 'true')){
			
			gs.addInfoMessage("Authentication Successful.");
			logger.info("Authentication Successful.");
			
			utils.showHideSyncUiAction('true');
			utils.showHideSaveUiAction('true');
			
		} else if((mid_status == 'Up' &amp;&amp; mid_validated == 'true') &amp;&amp; (gs.getProperty('x_nuta2_nutanix_ca.check.authentication') == 'false')){
			
			gs.addErrorMessage("Authentication failed.");
			logger.info("Authentication failed.");
			
			utils.showHideSyncUiAction('false');
			utils.showHideSaveUiAction('true');
			
		} else {
			if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow")+"" == "false"){
				if(mid_status == 'Paused' || mid_status == 'Down' || mid_status == 'false' || mid_status == 'validating' || mid_status == 'validation_failed' || mid_status == 'rekey'){				
					gs.addErrorMessage("MID Server is Down/Not validated. Please verify if a mid server is up and validated before proceeding.");
					logger.error("MID Server is Down/Not validated.");
					/*
					var mid_flag;
					var gr = new GlideRecord('ecc_agent');
					gr.query();
					while(gr.next()) {
						if(gr.status == 'Up' &amp;&amp; gr.validated == 'true') {
							mid_flag=1;
							break;
						}
						else 
							mid_flag=0;
					}

					if(mid_flag)
						utils.showHideSaveUiAction('true');
					else {
						utils.showHideSaveUiAction('false');
					}*/
					utils.showHideSyncUiAction('false');		
				}
			}
			if(gs.getProperty("x_nuta2_nutanix_ca.Calm_SaaS_and_ServiceNow")+"" == "true" &amp;&amp; (gs.getProperty('x_nuta2_nutanix_ca.check.authentication') == 'true')){
				gs.addInfoMessage("Authentication Successful.");
				logger.info("Authentication Successful.");
				
				utils.showHideSaveUiAction('true');
				utils.showHideSyncUiAction('true');
			}
			
		}
	} catch(e){
		logger.error("Error inside Business Rule[Show/hide Authentication Status], Error: "+e);
	}
	
})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;mumtaz.ansari&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-26 11:57:38&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;51bf7445370ea300d27b8cf6c3990e4f&lt;/sys_id&gt;&lt;sys_mod_count&gt;93&lt;/sys_mod_count&gt;&lt;sys_name&gt;Show/hide Authentication Status&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Nutanix Calm" source="x_nuta2_nutanix_ca"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_package&gt;&lt;sys_policy&gt;protected&lt;/sys_policy&gt;&lt;sys_scope display_value="Nutanix Calm"&gt;3b7631654f452b001200e5201310c76b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_51bf7445370ea300d27b8cf6c3990e4f&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-23 09:16:04&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before_display&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=51bf7445370ea300d27b8cf6c3990e4f"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>-896723215</payload_hash>
<remote_update_set display_value="Nutanix Calm v1.4.4 ">4958cb25dbcc7c103e3c6a5b8a961999</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-05-11 05:58:04</sys_created_on>
<sys_id>cd58cb25dbcc7c103e3c6a5b8a96199e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17927c98e7a0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-05-11 05:58:04</sys_updated_on>
<table>x_nuta2_nutanix_ca_calm_plugin_configuration</table>
<target_name>Show/hide Authentication Status</target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>37bf9b3d0ccf68106adfc6437f887baa</update_guid>
<update_guid_history>37bf9b3d0ccf68106adfc6437f887baa:-896723215,d0e4fe7dce876810ed23e7a36e31d315:432522848,0b043e7daa8768103fddc567c7dcc841:1423092496,5ea3b63d3587681013f29ca5646a88bd:516823009,67427ab96387681084836102f17377a7:2109818254,e8e1323dc0876810e56cb0a3003c6080:-56675992,7bc4d24c6ec7e0102250b5219264ddf7:-1035197250,a1841e0c63c7e0105c2bc473d99a1dbd:580361226,7c153adff0ba6810f992f6a7f6917734:-557525705,bd3de5f6c606e410ea5cbca0ea1a0f2a:580361226,85ba853e4682e410f51b862c6d892f9e:-271968972,b427e8726742e41022255ca36ba8fe35:-1718979638,84bec41ae2ca6410c56fa22f6a5e7f5d:-2057947920,2b7a8016f1ca64106090b4e38bde4d2b:1260916581,99399342e34a6410e6cf153cf7f20a00:637312365,2da85f0e840a6410b35521f15b9aa651:-952123230,c372fba280c96c5060702c0b589e0b11:-1935177706,5381b3b9eb4da850f6ee420e41e85308:1073038167,d774ee39a589a850ac562276cade3620:-375144848,528366f5d189a850b2f84158e02c887d:2079153778,7e426ef1ea89a850623cd59551699d95:-1579336791,dbe0e6bdc849a850db9c125dbfe8f257:1303460399,a70022f12889a850661b093664c1bc5f:-1026358001,ef6f99d6120c6410a75bbea02a1274bb:1432361824,b1be1996ad0c64105883fdba90fdffb0:363844288,76ba19dedec86410fdc9009ef7a73d31:-969842273,6a252fc17b934010729eb5344cf68c9e:265852479,15742f05b1934010190a0e318f52f79f:258324732,c7f3a305929340106fcb887a9703df55:-1466770050,40c3e3c11393401082d0f8690ef342a1:881683629,90136f41929340106cf21dbb2649b7de:-162252840,a2622341bb9340107dd850f8cbc9e303:2024141583,76a1e30165934010db21e67c9f866b6b:1673952409,3f51eb8d0e53401061e0d4583e481eac:2137229325,6811a78dcc53401005dca70cdc46b57c:-1314488655,d3602f0df053401089fa56763d78f0ef:1015583992,927ed78df9534010b7d126c46dd991a6:-1314488655,ba8c1f0d69534010777b12117010e3e8:100690641,5b6b3ec105134010a8ce7d2b3e389f2e:-1294032867,8a297e41fe13401009fb7135fd50cdc4:-539550712,fca8ae455a1f0010bf6e2752d75b6549:-1234418988,d9f7a245281f00105aceeb02bf2eac23:-1307637412,9e6726c1831f001053ac3aa4a2f080e5:1379706737,2783a63c9d713300e724a28cf402511f:1950265048,82d2d207af4073006ef4f1ac3bd7c9c9:-1136173682,08d6c02dc74c3300ec74e74167d4a5de:-2135046550,01fcc19de1843300f7ad312e45d7f1b0:-1047730220,00ec5c4cf393a300cf0f05d4df9a5155:-2085390783,56cb14c88493a3003bfaf851512dd910:1283045470,f56ad8c86c93a300076c16038d5d2dfd:-1329984877,c90a5c88de93a3000be6a371e3157e8b:-1909533041,4dc994c81893a3002a4c837811af8d0f:-1329984877,fd79d0c8f393a30030be109c94122c4c:917092854,399f37bb1243a30003eb7e02b214ca77:-279405916,05ee77bb3843a3003dec11cfb10a78e6:1121807599,d5ce73bb0543a300e977455c2200d8e3:-658698267,017e7f3b4c43a300e0af8a46528a7b65:2065568429,246e3b7bda43a300e2a02f342d4a7945:1150642080,750ef77b8e43a3003b9df534f51d22d6:2065568429,c67df77b4f43a300f3a896aabdc5c290:-996512168,f31d7f3b2943a300d3e6fe30275ed900:984820154,177c7b3b8343a300f0aa168b31355b5a:-1707625316,1d4c733b8743a300fb3494b7cc6cb116:-2042933394,580c7b3b1f43a3005e4e85c78c61df3a:1158784964,257bb7b7ad43a3008daa9bfe95619e60:284472060,10bab7b77343a3005dae099edc9a5715:-177662503,9f7abf773d43a3004b39fc4a54e6ce5e:-166185419,252abf775143a300f62696a8851a26fc:-586115679,b2a9f3f77743a30095117fb3ea948c9c:-1973983507,a717ff373f43a3004576c089e554f3dd:206019981,87d53337b143a300c9554331779a1ed6:-196922925,2a1337b32343a30002910e1a4b5970e2:1066938808,a7e277bf3b03a300bdb3d34f95eadbbb:-741946732,e8b2b7bfbe03a300437c664ad767c703:1563191214,e9da63bf0103a3001cbea3f6c2a85d23:1066938808,ca2aeb7f1003a3002013e4cad9f41501:1697556176,c1e8e33fee03a300c514e7d62a492a3f:-1485094551,07c8e33f9803a300b25042a588bf68dc:-520996396,58a8eb3f8503a300a3813ab98f82453b:-585600758,e1a7233f4d03a300595002253de4f313:-2076977646,9177af373203a300f9e84757a36a1ef5:1628789725,97782b2f780b6300b378a1d049dc5da4:642731088,82c4bdceab832300e06b3e48b19cf861:-1733951157,46843dce2883230036bb3b78e2500ec3:-1063566233,92b375cef68323006d803897d87f0293:1500246789,007331ce98832300f7dcaf958456e401:-1019058783,92237d8e07832300fb9b20c3e0b7da79:1669462964,8bd2f98eaa832300f3801cb34e9f2a88:-207355271,a9a2b14a90832300341b45ef65d75fb0:1773813535,058f9b10f6e223001718de1e74815595:2009254140,feacd3102ae22300a0bedb5769accf72:773964175,083b175c5da223008570e83075781305:-804383039,0b650573e55ea3000a7615d439970490:352918281,f60a11b203522300a7e5c2e13a919a8b:-562884937,fee4e024169a23009c1d65e1e3ba8642:-137694805,04a468e0d89a230093d3f04fb677ab01:-861998437,fcf3a4e0ef9a230069741abb099eed8f:-1651685200,42c32c60e19a2300abab5f02ba094e99:2025701823,260128209c9a2300594deadfe86d7a8f:1520704093,7d2cdc6c3f5a2300ad3fed18639e6263:-1092419328,378554e4655a2300b74205aaad9e1840:1388894697,f9c4d8a4025a2300d1fd24be5440fc55:-82362182,ec8db12f7f06230040a9882b37936451:-1380209993,b39b2019c5022300ecd9ffbac49d2ef7:335854766,f6c28149b50ea3003620a7aae799574e:902008532,dd320dc5e00ea3003bc5d2df1d7cab12:-362020151,18128109ad0ea3002356d2cbe9c0eca9:-1405346068,3a808185580ea30041b90eaf44452f64:-1972954076</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
